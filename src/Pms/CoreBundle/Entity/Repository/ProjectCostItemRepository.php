<?php

namespace Pms\CoreBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectCostItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectCostItemRepository extends EntityRepository
{
    public function getAll()
    {
        return $this->findAll();
    }

    public function create($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
    }

    public function delete($data)
    {
        $this->_em->remove($data);
        $this->_em->flush();
    }

    public function update($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
        return $this->_em;
    }

    public function projectReport($em, $start, $end)
    {

        if (($start != 0) && ($end != 0)) {

            $projectCostsQuery        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->groupBy('p.id')
                ->orderBy('p.id', 'DESC');
            $projectCosts = $projectCostsQuery->getQuery()->getResult();

            $forPieChart = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('p.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen      = $forPieChart->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();

        } else {
            $projectCostsQuery        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->groupBy('p.id')
                ->orderBy('p.id', 'DESC');
            $projectCosts = $projectCostsQuery->getQuery()->getResult();

            $forPieChart = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('p.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen      = $forPieChart->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();
        }

        $costQuery = $em->getRepository('PmsCoreBundle:ProjectCostItem')
            ->createQueryBuilder('p')
            ->Select('SUM(p.lineTotal) as total')
            ->where('p.status = 1')
            ->getQuery();
        $cost   = $costQuery->getResult();


        $sum        = 0;
        foreach ($projectCosts as $projectCost) {
            $sum        = $sum + $projectCost['total'];
        }

        $reportData = array();
        foreach ($topTen as $key => $projectCost) {
            $data                             = array();
            $data['data']                     = ($projectCost['total'] * 100) / $cost[0]['total'];
            $data['label']                    = $projectCost['projectName'];
            $reportData[]                     = $data;
            $projectCosts[$key]['percentage'] = ($projectCost['total'] * 100) / $cost[0]['total'];
        }

        $reportData1 = array();
        foreach ($topTen1 as $projectCost) {
            $data1                             = array();
            $data1['data']                     = ($projectCost['total'] * 100) / $cost[0]['total'];
            $data1['label']                    = $projectCost['categoryName'];
            $reportData1[]                     = $data1;
        }

        $sumOfTopTen        = 0;
        $totalProjectForPic = 0;
        foreach ($topTen as $topTens) {
            $totalProjectForPic = $totalProjectForPic + 1;
            $sumOfTopTen        = $sumOfTopTen + $topTens['total'];
        }

        $totalProjectForPicCategory = 0;
        foreach ($topTen1 as $toptens1) {
            $totalProjectForPicCategory = $totalProjectForPicCategory + 1;
        }

        return array($projectCosts, $cost, $reportData, $sumOfTopTen, $totalProjectForPic, $reportData1, $totalProjectForPicCategory, $sum);
    }

    public function projectDetails($id, $em, $start, $end)
    {

        if (($start != 0) && ($end != 0)) {

            $projectItemsQuery        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('i.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.quantity) as quantities')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->addSelect('i.itemUnit')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $projectItems = $projectItemsQuery->getQuery()->getResult();

            $projectItemsQuery2        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i');
            $projectItems2 = $projectItemsQuery2->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();
        } else {
            $projectItemsQuery        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('i.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.quantity) as quantities')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->addSelect('i.itemUnit')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->setParameter('1', $id)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $projectItems = $projectItemsQuery->getQuery()->getResult();

            $projectItemsQuery2        = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->setParameter('1', $id)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i');
            $projectItems2 = $projectItemsQuery2->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.project = ?1')
                ->setParameter('1', $id)
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();

        }

        $reportData1 = array();
        foreach ($topTen1 as $projectCost) {
            $data1                             = array();
            $data1['data']                     = ($projectCost['total'] * 100) / $projectItems2[0]['total'];
            $data1['label']                    = $projectCost['categoryName'];
            $reportData1[]                     = $data1;
        }

        $reportData = array();
        foreach ($projectItems as $key => $projectItem) {
            $data                             = array();
            $data['data']                     = ($projectItem['total'] * 100) / $projectItems2[0]['total'];
            $data['label']                    = $projectItem['itemName'];
            $reportData[]                     = $data;
            $projectItems[$key]['percentage'] = ($projectItem['total'] * 100) / $projectItems2[0]['total'];
        }

        return array($projectItems, $projectItems2, $reportData, $reportData1);
    }

    public function itemReport($em, $start, $end, $item)
    {

        if (($start != 0) && ($end != 0)) {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $forPieChart = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen      = $forPieChart->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();
        }else if($item != 0){
            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->setParameter('1', $item)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $forPieChart = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->setParameter('1', $item)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen      = $forPieChart->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->setParameter('1', $item)
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();
        } else {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('i.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $forPieChart = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen      = $forPieChart->getQuery()->getResult();

            $forPieChart1 = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->select('ca.categoryName')
                ->addSelect('ca.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.category', 'ca')
                ->groupBy('ca.id')
                ->orderBy('pc.lineTotal', 'DESC')
                ->setMaxResults('10');
            $topTen1      = $forPieChart1->getQuery()->getResult();
        }

        $itemTotalQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
            ->createQueryBuilder('pc')
            ->Select('SUM(pc.lineTotal) as total')
            ->where('pc.status = 1')
            ->join('pc.item', 'p');
        $itemTotal = $itemTotalQuery->getQuery()->getResult();

        $reportData1 = array();
        foreach ($topTen1 as $projectCost) {
            $data1                             = array();
            $data1['data']                     = ($projectCost['total'] * 100) / $itemTotal[0]['total'];
            $data1['label']                    = $projectCost['categoryName'];
            $reportData1[]                     = $data1;
        }

        $totalCategoryForPic = 0;
        foreach ($topTen1 as $topTens1) {
            $totalCategoryForPic = $totalCategoryForPic + 1;
        }

        $sum        = 0;
        foreach ($itemUses as $projectCost) {
            $sum        = $sum + $projectCost['total'];
        }

        $reportData = array();
        foreach ($topTen as $key => $itemUse) {
            $data                             = array();
            $data['data']                     = ($itemUse['total'] * 100) / $itemTotal[0]['total'];
            $data['label']                    = $itemUse['itemName'];
            $reportData[]                     = $data;
            $projectItems[$key]['percentage'] = ($itemUse['total'] * 100) / $itemTotal[0]['total'];
        }

        $sumOfTopTen     = 0;
        $totalItemForPie = 0;
        foreach ($topTen as $topTens) {
            $totalItemForPie = $totalItemForPie + 1;
            $sumOfTopTen     = $sumOfTopTen + $topTens['total'];
        }

        return array($itemUses, $itemTotal, $reportData, $sumOfTopTen, $totalItemForPie, $sum, $reportData1, $totalCategoryForPic);
    }

    public function itemDetails($id, $em, $start, $end)
    {

        if (($start != 0) && ($end != 0)) {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('p.id')
                ->orderBy('p.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $itemTotalQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->join('pc.item', 'p');
            $itemTotal = $itemTotalQuery->getQuery()->getResult();
        } else {
            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('p.id')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.status) as totalUsed')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->setParameter('1', $id)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('p.id')
                ->orderBy('p.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $itemTotalQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->setParameter('1', $id)
                ->join('pc.item', 'p');
            $itemTotal = $itemTotalQuery->getQuery()->getResult();
        }

        $reportData = array();

        foreach ($itemUses as $key => $itemUse) {
            $data                             = array();
            $data['data']                     = ($itemUse['total'] * 100) / $itemTotal[0]['total'];
            $data['label']                    = $itemUse['projectName'];
            $reportData[]                     = $data;
            $projectItems[$key]['percentage'] = ($itemUse['total'] * 100) / $itemTotal[0]['total'];
        }

        return array($itemUses, $itemTotal, $reportData);
    }

    public function byItemDetails($id, $em, $start, $end, $project)
    {

        if (($start != 0) && ($end != 0)) {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('i.itemName')
                ->addSelect('pc.lineTotal')
                ->addSelect('pc.dateOfCost')
                ->addSelect('pc.quantity')
                ->addSelect('pc.unitPrice')
                ->addSelect('i.itemUnit')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->andWhere('p.projectName = ?4')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->setParameter('4', $project)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $itemTotalQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('pc.dateOfCost >= ?2')
                ->andWhere('pc.dateOfCost <= ?3')
                ->andWhere('p.projectName = ?4')
                ->setParameter('1', $id)
                ->setParameter('2', $start)
                ->setParameter('3', $end)
                ->setParameter('4', $project)
                ->join('pc.project', 'p');
            $itemTotal = $itemTotalQuery->getQuery()->getResult();
        } else {
            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('i.itemName')
                ->addSelect('pc.lineTotal')
                ->addSelect('pc.dateOfCost')
                ->addSelect('pc.quantity')
                ->addSelect('pc.unitPrice')
                ->addSelect('i.itemUnit')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('p.projectName = ?2')
                ->setParameter('1', $id)
                ->setParameter('2', $project)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i');
            $itemUses = $itemUsesQuery->getQuery()->getResult();

            $itemTotalQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->Select('SUM(pc.lineTotal) as total')
                ->where('pc.status = 1')
                ->andWhere('pc.item = ?1')
                ->andWhere('p.projectName = ?2')
                ->setParameter('1', $id)
                ->setParameter('2', $project)
                ->join('pc.project', 'p');
            $itemTotal = $itemTotalQuery->getQuery()->getResult();
        }

        $reportData = array();

        foreach ($itemUses as $key => $itemUse) {
            $data                             = array();
            $data['data']                     = ($itemUse['lineTotal'] * 100) / $itemTotal[0]['total'];
            $data['label']                    = $itemUse['itemName'];
            $reportData[]                     = $data;
            $projectItems[$key]['percentage'] = ($itemUse['lineTotal'] * 100) / $itemTotal[0]['total'];
        }

        return array($itemUses, $itemTotal, $reportData);
    }

    public function overView($em, $start, $end)
    {

        $connection = $em->getConnection();

        if (($start != 0) && ($end != 0)) {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('i.id')
                ->addSelect('i.itemUnit')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.quantity) as quantity')
                ->where('pc.status = 1')
                ->andWhere('pc.dateOfCost >= ?1')
                ->andWhere('pc.dateOfCost <= ?2')
                ->setParameter('1', $start)
                ->setParameter('2', $end)
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();
        } else {

            $itemUsesQuery    = $em->getRepository('PmsCoreBundle:ProjectCostItem')
                ->createQueryBuilder('pc')
                ->select('p.projectName')
                ->addSelect('i.itemName')
                ->addSelect('i.id')
                ->addSelect('i.itemUnit')
                ->addSelect('SUM(pc.lineTotal) as total')
                ->addSelect('SUM(pc.quantity) as quantity')
                ->where('pc.status = 1')
                ->join('pc.project', 'p')
                ->join('pc.item', 'i')
                ->groupBy('i.id')
                ->orderBy('i.id', 'DESC');
            $itemUses = $itemUsesQuery->getQuery()->getResult();
        }

        foreach ($itemUses as $key => $item) {

            $statement = $connection->prepare("SELECT projects.projects_name,
                                                MAX(project_cost_items.unit_prices) as projectHighest,
                                                MIN(project_cost_items.unit_prices) as projectLowest, project_cost_items.items
                                                FROM project_cost_items
                                                JOIN projects ON projects.id = project_cost_items.projects
                                                WHERE project_cost_items.items = :itemId AND project_cost_items.status = 1
                                                GROUP BY project_cost_items.projects
                                              ");
            $statement->bindValue('itemId', $item['id']);
            $statement->execute();
            $itemUses[$key]['projectSummary'] = $statement->fetchAll();
        }

        return $itemUses;
    }
}
