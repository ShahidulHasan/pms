/*! Respond.js: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */
(function (e, h) {
    e.respond = {};
    respond.update = function () {
    };
    respond.mediaQueriesSupported = h;
    if (h) {
        return
    }
    var u = e.document, r = u.documentElement, i = [], k = [], p = [], o = {}, g = 30, f = u.getElementsByTagName("head")[0] || r, b = f.getElementsByTagName("link"), d = [], a = function () {
        var B = b, w = B.length, z = 0, y, x, A, v;
        for (; z < w; z++) {
            y = B[z], x = y.href, A = y.media, v = y.rel && y.rel.toLowerCase() === "stylesheet";
            if (!!x && v && !o[x]) {
                if (!/^([a-zA-Z]+?:(\/\/)?(www\.)?)/.test(x) || x.replace(RegExp.$1, "").split("/")[0] === e.location.host) {
                    d.push({href: x, media: A})
                } else {
                    o[x] = true
                }
            }
        }
        t()
    }, t = function () {
        if (d.length) {
            var v = d.shift();
            n(v.href, function (w) {
                m(w, v.href, v.media);
                o[v.href] = true;
                t()
            })
        }
    }, m = function (G, v, x) {
        var E = G.match(/@media[^\{]+\{([^\{\}]+\{[^\}\{]+\})+/gi), H = E && E.length || 0, v = v.substring(0, v.lastIndexOf("/")), w = function (I) {
            return I.replace(/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g, "$1" + v + "$2$3")
        }, y = !H && x, B = 0, A, C, D, z, F;
        if (v.length) {
            v += "/"
        }
        if (y) {
            H = 1
        }
        for (; B < H; B++) {
            A = 0;
            if (y) {
                C = x;
                k.push(w(G))
            } else {
                C = E[B].match(/@media ([^\{]+)\{([\S\s]+?)$/) && RegExp.$1;
                k.push(RegExp.$2 && w(RegExp.$2))
            }
            z = C.split(",");
            F = z.length;
            for (; A < F; A++) {
                D = z[A];
                i.push({media: D.match(/(only\s+)?([a-zA-Z]+)(\sand)?/) && RegExp.$2, rules: k.length - 1, minw: D.match(/\(min\-width:[\s]*([\s]*[0-9]+)px[\s]*\)/) && parseFloat(RegExp.$1), maxw: D.match(/\(max\-width:[\s]*([\s]*[0-9]+)px[\s]*\)/) && parseFloat(RegExp.$1)})
            }
        }
        j()
    }, l, q, j = function (E) {
        var v = "clientWidth", x = r[v], D = u.compatMode === "CSS1Compat" && x || u.body[v] || x, z = {}, C = u.createDocumentFragment(), B = b[b.length - 1], w = (new Date()).getTime();
        if (E && l && w - l < g) {
            clearTimeout(q);
            q = setTimeout(j, g);
            return
        } else {
            l = w
        }
        for (var y in i) {
            var F = i[y];
            if (!F.minw && !F.maxw || (!F.minw || F.minw && D >= F.minw) && (!F.maxw || F.maxw && D <= F.maxw)) {
                if (!z[F.media]) {
                    z[F.media] = []
                }
                z[F.media].push(k[F.rules])
            }
        }
        for (var y in p) {
            if (p[y] && p[y].parentNode === f) {
                f.removeChild(p[y])
            }
        }
        for (var y in z) {
            var G = u.createElement("style"), A = z[y].join("\n");
            G.type = "text/css";
            G.media = y;
            if (G.styleSheet) {
                G.styleSheet.cssText = A
            } else {
                G.appendChild(u.createTextNode(A))
            }
            C.appendChild(G);
            p.push(G)
        }
        f.insertBefore(C, B.nextSibling)
    }, n = function (v, x) {
        var w = c();
        if (!w) {
            return
        }
        w.open("GET", v, true);
        w.onreadystatechange = function () {
            if (w.readyState != 4 || w.status != 200 && w.status != 304) {
                return
            }
            x(w.responseText)
        };
        if (w.readyState == 4) {
            return
        }
        w.send()
    }, c = (function () {
        var v = false, w = [function () {
            return new ActiveXObject("Microsoft.XMLHTTP")
        }, function () {
            return new XMLHttpRequest()
        }], y = w.length;
        while (y--) {
            try {
                v = w[y]()
            } catch (x) {
                continue
            }
            break
        }
        return function () {
            return v
        }
    })();
    a();
    respond.update = a;
    function s() {
        j(true)
    }

    if (e.addEventListener) {
        e.addEventListener("resize", s, false)
    } else {
        if (e.attachEvent) {
            e.attachEvent("onresize", s)
        }
    }
})(this, (function (f) {
    if (f.matchMedia) {
        return true
    }
    var e, i = document, c = i.documentElement, g = c.firstElementChild || c.firstChild, h = !i.body, d = i.body || i.createElement("body"), b = i.createElement("div"), a = "only all";
    b.id = "mq-test-1";
    b.style.cssText = "position:absolute;top:-99em";
    d.appendChild(b);
    b.innerHTML = '_<style media="' + a + '"> #mq-test-1 { width: 9px; }</style>';
    if (h) {
        c.insertBefore(d, g)
    }
    b.removeChild(b.firstChild);
    e = b.offsetWidth == 9;
    if (h) {
        c.removeChild(d)
    } else {
        d.removeChild(b)
    }
    return e
})(this));
if (!document.createElement("canvas").getContext) {
    (function () {
        var S = Math;
        var T = S.round;
        var P = S.sin;
        var c = S.cos;
        var K = S.abs;
        var b = S.sqrt;
        var A = 10;
        var L = A / 2;

        function H() {
            return this.context_ || (this.context_ = new N(this))
        }

        var R = Array.prototype.slice;

        function d(e, g, h) {
            var Z = R.call(arguments, 2);
            return function () {
                return e.apply(g, Z.concat(R.call(arguments)))
            }
        }

        var I = {init: function (Z) {
            if (/MSIE/.test(navigator.userAgent) && !window.opera) {
                var e = Z || document;
                e.createElement("canvas");
                e.attachEvent("onreadystatechange", d(this.init_, this, e))
            }
        }, init_: function (g) {
            if (!g.namespaces.g_vml_) {
                g.namespaces.add("g_vml_", "urn:schemas-microsoft-com:vml", "#default#VML")
            }
            if (!g.namespaces.g_o_) {
                g.namespaces.add("g_o_", "urn:schemas-microsoft-com:office:office", "#default#VML")
            }
            if (!g.styleSheets.ex_canvas_) {
                var f = g.createStyleSheet();
                f.owningElement.id = "ex_canvas_";
                f.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}g_vml_\\:*{behavior:url(#default#VML)}g_o_\\:*{behavior:url(#default#VML)}"
            }
            var e = g.getElementsByTagName("canvas");
            for (var Z = 0; Z < e.length; Z++) {
                this.initElement(e[Z])
            }
        }, initElement: function (e) {
            if (!e.getContext) {
                e.getContext = H;
                e.innerHTML = "";
                e.attachEvent("onpropertychange", a);
                e.attachEvent("onresize", B);
                var Z = e.attributes;
                if (Z.width && Z.width.specified) {
                    e.style.width = Z.width.nodeValue + "px"
                } else {
                    e.width = e.clientWidth
                }
                if (Z.height && Z.height.specified) {
                    e.style.height = Z.height.nodeValue + "px"
                } else {
                    e.height = e.clientHeight
                }
            }
            return e
        }};

        function a(f) {
            var Z = f.srcElement;
            switch (f.propertyName) {
                case"width":
                    Z.style.width = Z.attributes.width.nodeValue + "px";
                    Z.getContext().clearRect();
                    break;
                case"height":
                    Z.style.height = Z.attributes.height.nodeValue + "px";
                    Z.getContext().clearRect();
                    break
            }
        }

        function B(f) {
            var Z = f.srcElement;
            if (Z.firstChild) {
                Z.firstChild.style.width = Z.clientWidth + "px";
                Z.firstChild.style.height = Z.clientHeight + "px"
            }
        }

        I.init();
        var E = [];
        for (var W = 0; W < 16; W++) {
            for (var V = 0; V < 16; V++) {
                E[W * 16 + V] = W.toString(16) + V.toString(16)
            }
        }
        function O() {
            return[
                [1, 0, 0],
                [0, 1, 0],
                [0, 0, 1]
            ]
        }

        function D(g, f) {
            var e = O();
            for (var Z = 0; Z < 3; Z++) {
                for (var j = 0; j < 3; j++) {
                    var h = 0;
                    for (var i = 0; i < 3; i++) {
                        h += g[Z][i] * f[i][j]
                    }
                    e[Z][j] = h
                }
            }
            return e
        }

        function U(e, Z) {
            Z.fillStyle = e.fillStyle;
            Z.lineCap = e.lineCap;
            Z.lineJoin = e.lineJoin;
            Z.lineWidth = e.lineWidth;
            Z.miterLimit = e.miterLimit;
            Z.shadowBlur = e.shadowBlur;
            Z.shadowColor = e.shadowColor;
            Z.shadowOffsetX = e.shadowOffsetX;
            Z.shadowOffsetY = e.shadowOffsetY;
            Z.strokeStyle = e.strokeStyle;
            Z.globalAlpha = e.globalAlpha;
            Z.arcScaleX_ = e.arcScaleX_;
            Z.arcScaleY_ = e.arcScaleY_;
            Z.lineScale_ = e.lineScale_
        }

        function C(e) {
            var h, g = 1;
            e = String(e);
            if (e.substring(0, 3) == "rgb") {
                var k = e.indexOf("(", 3);
                var Z = e.indexOf(")", k + 1);
                var j = e.substring(k + 1, Z).split(",");
                h = "#";
                for (var f = 0; f < 3; f++) {
                    h += E[Number(j[f])]
                }
                if (j.length == 4 && e.substr(3, 1) == "a") {
                    g = j[3]
                }
            } else {
                h = e
            }
            return{color: h, alpha: g}
        }

        function Q(Z) {
            switch (Z) {
                case"butt":
                    return"flat";
                case"round":
                    return"round";
                case"square":
                default:
                    return"square"
            }
        }

        function N(e) {
            this.m_ = O();
            this.mStack_ = [];
            this.aStack_ = [];
            this.currentPath_ = [];
            this.strokeStyle = "#000";
            this.fillStyle = "#000";
            this.lineWidth = 1;
            this.lineJoin = "miter";
            this.lineCap = "butt";
            this.miterLimit = A * 1;
            this.globalAlpha = 1;
            this.canvas = e;
            var Z = e.ownerDocument.createElement("div");
            Z.style.width = e.clientWidth + "px";
            Z.style.height = e.clientHeight + "px";
            Z.style.overflow = "hidden";
            Z.style.position = "absolute";
            e.appendChild(Z);
            this.element_ = Z;
            this.arcScaleX_ = 1;
            this.arcScaleY_ = 1;
            this.lineScale_ = 1
        }

        var J = N.prototype;
        J.clearRect = function () {
            this.element_.innerHTML = ""
        };
        J.beginPath = function () {
            this.currentPath_ = []
        };
        J.moveTo = function (e, Z) {
            var f = this.getCoords_(e, Z);
            this.currentPath_.push({type: "moveTo", x: f.x, y: f.y});
            this.currentX_ = f.x;
            this.currentY_ = f.y
        };
        J.lineTo = function (e, Z) {
            var f = this.getCoords_(e, Z);
            this.currentPath_.push({type: "lineTo", x: f.x, y: f.y});
            this.currentX_ = f.x;
            this.currentY_ = f.y
        };
        J.bezierCurveTo = function (f, e, l, k, j, h) {
            var Z = this.getCoords_(j, h);
            var i = this.getCoords_(f, e);
            var g = this.getCoords_(l, k);
            M(this, i, g, Z)
        };
        function M(Z, g, f, e) {
            Z.currentPath_.push({type: "bezierCurveTo", cp1x: g.x, cp1y: g.y, cp2x: f.x, cp2y: f.y, x: e.x, y: e.y});
            Z.currentX_ = e.x;
            Z.currentY_ = e.y
        }

        J.quadraticCurveTo = function (j, f, e, Z) {
            var i = this.getCoords_(j, f);
            var h = this.getCoords_(e, Z);
            var k = {x: this.currentX_ + 2 / 3 * (i.x - this.currentX_), y: this.currentY_ + 2 / 3 * (i.y - this.currentY_)};
            var g = {x: k.x + (h.x - this.currentX_) / 3, y: k.y + (h.y - this.currentY_) / 3};
            M(this, k, g, h)
        };
        J.arc = function (m, k, l, h, e, f) {
            l *= A;
            var r = f ? "at" : "wa";
            var n = m + c(h) * l - L;
            var q = k + P(h) * l - L;
            var Z = m + c(e) * l - L;
            var o = k + P(e) * l - L;
            if (n == Z && !f) {
                n += 0.125
            }
            var g = this.getCoords_(m, k);
            var j = this.getCoords_(n, q);
            var i = this.getCoords_(Z, o);
            this.currentPath_.push({type: r, x: g.x, y: g.y, radius: l, xStart: j.x, yStart: j.y, xEnd: i.x, yEnd: i.y})
        };
        J.rect = function (f, e, Z, g) {
            this.moveTo(f, e);
            this.lineTo(f + Z, e);
            this.lineTo(f + Z, e + g);
            this.lineTo(f, e + g);
            this.closePath()
        };
        J.strokeRect = function (f, e, Z, g) {
            var h = this.currentPath_;
            this.beginPath();
            this.moveTo(f, e);
            this.lineTo(f + Z, e);
            this.lineTo(f + Z, e + g);
            this.lineTo(f, e + g);
            this.closePath();
            this.stroke();
            this.currentPath_ = h
        };
        J.fillRect = function (f, e, Z, g) {
            var h = this.currentPath_;
            this.beginPath();
            this.moveTo(f, e);
            this.lineTo(f + Z, e);
            this.lineTo(f + Z, e + g);
            this.lineTo(f, e + g);
            this.closePath();
            this.fill();
            this.currentPath_ = h
        };
        J.createLinearGradient = function (e, g, Z, f) {
            var h = new X("gradient");
            h.x0_ = e;
            h.y0_ = g;
            h.x1_ = Z;
            h.y1_ = f;
            return h
        };
        J.createRadialGradient = function (g, i, f, e, h, Z) {
            var j = new X("gradientradial");
            j.x0_ = g;
            j.y0_ = i;
            j.r0_ = f;
            j.x1_ = e;
            j.y1_ = h;
            j.r1_ = Z;
            return j
        };
        J.drawImage = function (t, f) {
            var m, k, o, AB, r, p, v, AD;
            var n = t.runtimeStyle.width;
            var s = t.runtimeStyle.height;
            t.runtimeStyle.width = "auto";
            t.runtimeStyle.height = "auto";
            var l = t.width;
            var z = t.height;
            t.runtimeStyle.width = n;
            t.runtimeStyle.height = s;
            if (arguments.length == 3) {
                m = arguments[1];
                k = arguments[2];
                r = p = 0;
                v = o = l;
                AD = AB = z
            } else {
                if (arguments.length == 5) {
                    m = arguments[1];
                    k = arguments[2];
                    o = arguments[3];
                    AB = arguments[4];
                    r = p = 0;
                    v = l;
                    AD = z
                } else {
                    if (arguments.length == 9) {
                        r = arguments[1];
                        p = arguments[2];
                        v = arguments[3];
                        AD = arguments[4];
                        m = arguments[5];
                        k = arguments[6];
                        o = arguments[7];
                        AB = arguments[8]
                    } else {
                        throw Error("Invalid number of arguments")
                    }
                }
            }
            var AC = this.getCoords_(m, k);
            var g = v / 2;
            var e = AD / 2;
            var AA = [];
            var Z = 10;
            var j = 10;
            AA.push(" <g_vml_:group", ' coordsize="', A * Z, ",", A * j, '"', ' coordorigin="0,0"', ' style="width:', Z, "px;height:", j, "px;position:absolute;");
            if (this.m_[0][0] != 1 || this.m_[0][1]) {
                var i = [];
                i.push("M11=", this.m_[0][0], ",", "M12=", this.m_[1][0], ",", "M21=", this.m_[0][1], ",", "M22=", this.m_[1][1], ",", "Dx=", T(AC.x / A), ",", "Dy=", T(AC.y / A), "");
                var y = AC;
                var x = this.getCoords_(m + o, k);
                var u = this.getCoords_(m, k + AB);
                var q = this.getCoords_(m + o, k + AB);
                y.x = S.max(y.x, x.x, u.x, q.x);
                y.y = S.max(y.y, x.y, u.y, q.y);
                AA.push("padding:0 ", T(y.x / A), "px ", T(y.y / A), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", i.join(""), ", sizingmethod='clip');")
            } else {
                AA.push("top:", T(AC.y / A), "px;left:", T(AC.x / A), "px;")
            }
            AA.push(' ">', '<g_vml_:image src="', t.src, '"', ' style="width:', A * o, "px;", " height:", A * AB, 'px;"', ' cropleft="', r / l, '"', ' croptop="', p / z, '"', ' cropright="', (l - r - v) / l, '"', ' cropbottom="', (z - p - AD) / z, '"', " />", "</g_vml_:group>");
            this.element_.insertAdjacentHTML("BeforeEnd", AA.join(""))
        };
        J.stroke = function (AF) {
            var k = [];
            var l = false;
            var AQ = C(AF ? this.fillStyle : this.strokeStyle);
            var AB = AQ.color;
            var AL = AQ.alpha * this.globalAlpha;
            var g = 10;
            var n = 10;
            k.push("<g_vml_:shape", ' filled="', !!AF, '"', ' style="position:absolute;width:', g, "px;height:", n, 'px;"', ' coordorigin="0 0" coordsize="', A * g, " ", A * n, '"', ' stroked="', !AF, '"', ' path="');
            var m = false;
            var AP = {x: null, y: null};
            var x = {x: null, y: null};
            for (var AK = 0; AK < this.currentPath_.length; AK++) {
                var AJ = this.currentPath_[AK];
                var AO;
                switch (AJ.type) {
                    case"moveTo":
                        AO = AJ;
                        k.push(" m ", T(AJ.x), ",", T(AJ.y));
                        break;
                    case"lineTo":
                        k.push(" l ", T(AJ.x), ",", T(AJ.y));
                        break;
                    case"close":
                        k.push(" x ");
                        AJ = null;
                        break;
                    case"bezierCurveTo":
                        k.push(" c ", T(AJ.cp1x), ",", T(AJ.cp1y), ",", T(AJ.cp2x), ",", T(AJ.cp2y), ",", T(AJ.x), ",", T(AJ.y));
                        break;
                    case"at":
                    case"wa":
                        k.push(" ", AJ.type, " ", T(AJ.x - this.arcScaleX_ * AJ.radius), ",", T(AJ.y - this.arcScaleY_ * AJ.radius), " ", T(AJ.x + this.arcScaleX_ * AJ.radius), ",", T(AJ.y + this.arcScaleY_ * AJ.radius), " ", T(AJ.xStart), ",", T(AJ.yStart), " ", T(AJ.xEnd), ",", T(AJ.yEnd));
                        break
                }
                if (AJ) {
                    if (AP.x == null || AJ.x < AP.x) {
                        AP.x = AJ.x
                    }
                    if (x.x == null || AJ.x > x.x) {
                        x.x = AJ.x
                    }
                    if (AP.y == null || AJ.y < AP.y) {
                        AP.y = AJ.y
                    }
                    if (x.y == null || AJ.y > x.y) {
                        x.y = AJ.y
                    }
                }
            }
            k.push(' ">');
            if (!AF) {
                var w = this.lineScale_ * this.lineWidth;
                if (w < 1) {
                    AL *= w
                }
                k.push("<g_vml_:stroke", ' opacity="', AL, '"', ' joinstyle="', this.lineJoin, '"', ' miterlimit="', this.miterLimit, '"', ' endcap="', Q(this.lineCap), '"', ' weight="', w, 'px"', ' color="', AB, '" />')
            } else {
                if (typeof this.fillStyle == "object") {
                    var o = this.fillStyle;
                    var u = 0;
                    var AI = {x: 0, y: 0};
                    var AC = 0;
                    var s = 1;
                    if (o.type_ == "gradient") {
                        var r = o.x0_ / this.arcScaleX_;
                        var e = o.y0_ / this.arcScaleY_;
                        var q = o.x1_ / this.arcScaleX_;
                        var AR = o.y1_ / this.arcScaleY_;
                        var AN = this.getCoords_(r, e);
                        var AM = this.getCoords_(q, AR);
                        var j = AM.x - AN.x;
                        var h = AM.y - AN.y;
                        u = Math.atan2(j, h) * 180 / Math.PI;
                        if (u < 0) {
                            u += 360
                        }
                        if (u < 0.000001) {
                            u = 0
                        }
                    } else {
                        var AN = this.getCoords_(o.x0_, o.y0_);
                        var Z = x.x - AP.x;
                        var f = x.y - AP.y;
                        AI = {x: (AN.x - AP.x) / Z, y: (AN.y - AP.y) / f};
                        Z /= this.arcScaleX_ * A;
                        f /= this.arcScaleY_ * A;
                        var AH = S.max(Z, f);
                        AC = 2 * o.r0_ / AH;
                        s = 2 * o.r1_ / AH - AC
                    }
                    var AA = o.colors_;
                    AA.sort(function (p, i) {
                        return p.offset - i.offset
                    });
                    var v = AA.length;
                    var z = AA[0].color;
                    var y = AA[v - 1].color;
                    var AE = AA[0].alpha * this.globalAlpha;
                    var AD = AA[v - 1].alpha * this.globalAlpha;
                    var AG = [];
                    for (var AK = 0; AK < v; AK++) {
                        var t = AA[AK];
                        AG.push(t.offset * s + AC + " " + t.color)
                    }
                    k.push('<g_vml_:fill type="', o.type_, '"', ' method="none" focus="100%"', ' color="', z, '"', ' color2="', y, '"', ' colors="', AG.join(","), '"', ' opacity="', AD, '"', ' g_o_:opacity2="', AE, '"', ' angle="', u, '"', ' focusposition="', AI.x, ",", AI.y, '" />')
                } else {
                    k.push('<g_vml_:fill color="', AB, '" opacity="', AL, '" />')
                }
            }
            k.push("</g_vml_:shape>");
            this.element_.insertAdjacentHTML("beforeEnd", k.join(""))
        };
        J.fill = function () {
            this.stroke(true)
        };
        J.closePath = function () {
            this.currentPath_.push({type: "close"})
        };
        J.getCoords_ = function (f, e) {
            var Z = this.m_;
            return{x: A * (f * Z[0][0] + e * Z[1][0] + Z[2][0]) - L, y: A * (f * Z[0][1] + e * Z[1][1] + Z[2][1]) - L}
        };
        J.save = function () {
            var Z = {};
            U(this, Z);
            this.aStack_.push(Z);
            this.mStack_.push(this.m_);
            this.m_ = D(O(), this.m_)
        };
        J.restore = function () {
            U(this.aStack_.pop(), this);
            this.m_ = this.mStack_.pop()
        };
        function G(Z) {
            for (var f = 0; f < 3; f++) {
                for (var e = 0; e < 2; e++) {
                    if (!isFinite(Z[f][e]) || isNaN(Z[f][e])) {
                        return false
                    }
                }
            }
            return true
        }

        function Y(e, Z, f) {
            if (!G(Z)) {
                return
            }
            e.m_ = Z;
            if (f) {
                var g = Z[0][0] * Z[1][1] - Z[0][1] * Z[1][0];
                e.lineScale_ = b(K(g))
            }
        }

        J.translate = function (f, e) {
            var Z = [
                [1, 0, 0],
                [0, 1, 0],
                [f, e, 1]
            ];
            Y(this, D(Z, this.m_), false)
        };
        J.rotate = function (e) {
            var g = c(e);
            var f = P(e);
            var Z = [
                [g, f, 0],
                [-f, g, 0],
                [0, 0, 1]
            ];
            Y(this, D(Z, this.m_), false)
        };
        J.scale = function (f, e) {
            this.arcScaleX_ *= f;
            this.arcScaleY_ *= e;
            var Z = [
                [f, 0, 0],
                [0, e, 0],
                [0, 0, 1]
            ];
            Y(this, D(Z, this.m_), true)
        };
        J.transform = function (h, g, j, i, e, Z) {
            var f = [
                [h, g, 0],
                [j, i, 0],
                [e, Z, 1]
            ];
            Y(this, D(f, this.m_), true)
        };
        J.setTransform = function (h, g, j, i, f, e) {
            var Z = [
                [h, g, 0],
                [j, i, 0],
                [f, e, 1]
            ];
            Y(this, Z, true)
        };
        J.clip = function () {
        };
        J.arcTo = function () {
        };
        J.createPattern = function () {
            return new F
        };
        function X(Z) {
            this.type_ = Z;
            this.x0_ = 0;
            this.y0_ = 0;
            this.r0_ = 0;
            this.x1_ = 0;
            this.y1_ = 0;
            this.r1_ = 0;
            this.colors_ = []
        }

        X.prototype.addColorStop = function (e, Z) {
            Z = C(Z);
            this.colors_.push({offset: e, color: Z.color, alpha: Z.alpha})
        };
        function F() {
        }

        G_vmlCanvasManager = I;
        CanvasRenderingContext2D = N;
        CanvasGradient = X;
        CanvasPattern = F
    })()
}
;


/*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
 //@ sourceMappingURL=jquery-1.10.2.min.map
 */
(function (e, t) {
    var n, r, i = typeof t, o = e.location, a = e.document, s = a.documentElement, l = e.jQuery, u = e.$, c = {}, p = [], f = "1.10.2", d = p.concat, h = p.push, g = p.slice, m = p.indexOf, y = c.toString, v = c.hasOwnProperty, b = f.trim, x = function (e, t) {
        return new x.fn.init(e, t, r)
    }, w = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, T = /\S+/g, C = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, N = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, k = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, E = /^[\],:{}\s]*$/, S = /(?:^|:|,)(?:\s*\[)+/g, A = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, j = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g, D = /^-ms-/, L = /-([\da-z])/gi, H = function (e, t) {
        return t.toUpperCase()
    }, q = function (e) {
        (a.addEventListener || "load" === e.type || "complete" === a.readyState) && (_(), x.ready())
    }, _ = function () {
        a.addEventListener ? (a.removeEventListener("DOMContentLoaded", q, !1), e.removeEventListener("load", q, !1)) : (a.detachEvent("onreadystatechange", q), e.detachEvent("onload", q))
    };
    x.fn = x.prototype = {jquery: f, constructor: x, init: function (e, n, r) {
        var i, o;
        if (!e)return this;
        if ("string" == typeof e) {
            if (i = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : N.exec(e), !i || !i[1] && n)return!n || n.jquery ? (n || r).find(e) : this.constructor(n).find(e);
            if (i[1]) {
                if (n = n instanceof x ? n[0] : n, x.merge(this, x.parseHTML(i[1], n && n.nodeType ? n.ownerDocument || n : a, !0)), k.test(i[1]) && x.isPlainObject(n))for (i in n)x.isFunction(this[i]) ? this[i](n[i]) : this.attr(i, n[i]);
                return this
            }
            if (o = a.getElementById(i[2]), o && o.parentNode) {
                if (o.id !== i[2])return r.find(e);
                this.length = 1, this[0] = o
            }
            return this.context = a, this.selector = e, this
        }
        return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : x.isFunction(e) ? r.ready(e) : (e.selector !== t && (this.selector = e.selector, this.context = e.context), x.makeArray(e, this))
    }, selector: "", length: 0, toArray: function () {
        return g.call(this)
    }, get: function (e) {
        return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e]
    }, pushStack: function (e) {
        var t = x.merge(this.constructor(), e);
        return t.prevObject = this, t.context = this.context, t
    }, each: function (e, t) {
        return x.each(this, e, t)
    }, ready: function (e) {
        return x.ready.promise().done(e), this
    }, slice: function () {
        return this.pushStack(g.apply(this, arguments))
    }, first: function () {
        return this.eq(0)
    }, last: function () {
        return this.eq(-1)
    }, eq: function (e) {
        var t = this.length, n = +e + (0 > e ? t : 0);
        return this.pushStack(n >= 0 && t > n ? [this[n]] : [])
    }, map: function (e) {
        return this.pushStack(x.map(this, function (t, n) {
            return e.call(t, n, t)
        }))
    }, end: function () {
        return this.prevObject || this.constructor(null)
    }, push: h, sort: [].sort, splice: [].splice}, x.fn.init.prototype = x.fn, x.extend = x.fn.extend = function () {
        var e, n, r, i, o, a, s = arguments[0] || {}, l = 1, u = arguments.length, c = !1;
        for ("boolean" == typeof s && (c = s, s = arguments[1] || {}, l = 2), "object" == typeof s || x.isFunction(s) || (s = {}), u === l && (s = this, --l); u > l; l++)if (null != (o = arguments[l]))for (i in o)e = s[i], r = o[i], s !== r && (c && r && (x.isPlainObject(r) || (n = x.isArray(r))) ? (n ? (n = !1, a = e && x.isArray(e) ? e : []) : a = e && x.isPlainObject(e) ? e : {}, s[i] = x.extend(c, a, r)) : r !== t && (s[i] = r));
        return s
    }, x.extend({expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), noConflict: function (t) {
        return e.$ === x && (e.$ = u), t && e.jQuery === x && (e.jQuery = l), x
    }, isReady: !1, readyWait: 1, holdReady: function (e) {
        e ? x.readyWait++ : x.ready(!0)
    }, ready: function (e) {
        if (e === !0 ? !--x.readyWait : !x.isReady) {
            if (!a.body)return setTimeout(x.ready);
            x.isReady = !0, e !== !0 && --x.readyWait > 0 || (n.resolveWith(a, [x]), x.fn.trigger && x(a).trigger("ready").off("ready"))
        }
    }, isFunction: function (e) {
        return"function" === x.type(e)
    }, isArray: Array.isArray || function (e) {
        return"array" === x.type(e)
    }, isWindow: function (e) {
        return null != e && e == e.window
    }, isNumeric: function (e) {
        return!isNaN(parseFloat(e)) && isFinite(e)
    }, type: function (e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? c[y.call(e)] || "object" : typeof e
    }, isPlainObject: function (e) {
        var n;
        if (!e || "object" !== x.type(e) || e.nodeType || x.isWindow(e))return!1;
        try {
            if (e.constructor && !v.call(e, "constructor") && !v.call(e.constructor.prototype, "isPrototypeOf"))return!1
        } catch (r) {
            return!1
        }
        if (x.support.ownLast)for (n in e)return v.call(e, n);
        for (n in e);
        return n === t || v.call(e, n)
    }, isEmptyObject: function (e) {
        var t;
        for (t in e)return!1;
        return!0
    }, error: function (e) {
        throw Error(e)
    }, parseHTML: function (e, t, n) {
        if (!e || "string" != typeof e)return null;
        "boolean" == typeof t && (n = t, t = !1), t = t || a;
        var r = k.exec(e), i = !n && [];
        return r ? [t.createElement(r[1])] : (r = x.buildFragment([e], t, i), i && x(i).remove(), x.merge([], r.childNodes))
    }, parseJSON: function (n) {
        return e.JSON && e.JSON.parse ? e.JSON.parse(n) : null === n ? n : "string" == typeof n && (n = x.trim(n), n && E.test(n.replace(A, "@").replace(j, "]").replace(S, ""))) ? Function("return " + n)() : (x.error("Invalid JSON: " + n), t)
    }, parseXML: function (n) {
        var r, i;
        if (!n || "string" != typeof n)return null;
        try {
            e.DOMParser ? (i = new DOMParser, r = i.parseFromString(n, "text/xml")) : (r = new ActiveXObject("Microsoft.XMLDOM"), r.async = "false", r.loadXML(n))
        } catch (o) {
            r = t
        }
        return r && r.documentElement && !r.getElementsByTagName("parsererror").length || x.error("Invalid XML: " + n), r
    }, noop: function () {
    }, globalEval: function (t) {
        t && x.trim(t) && (e.execScript || function (t) {
            e.eval.call(e, t)
        })(t)
    }, camelCase: function (e) {
        return e.replace(D, "ms-").replace(L, H)
    }, nodeName: function (e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
    }, each: function (e, t, n) {
        var r, i = 0, o = e.length, a = M(e);
        if (n) {
            if (a) {
                for (; o > i; i++)if (r = t.apply(e[i], n), r === !1)break
            } else for (i in e)if (r = t.apply(e[i], n), r === !1)break
        } else if (a) {
            for (; o > i; i++)if (r = t.call(e[i], i, e[i]), r === !1)break
        } else for (i in e)if (r = t.call(e[i], i, e[i]), r === !1)break;
        return e
    }, trim: b && !b.call("\ufeff\u00a0") ? function (e) {
        return null == e ? "" : b.call(e)
    } : function (e) {
        return null == e ? "" : (e + "").replace(C, "")
    }, makeArray: function (e, t) {
        var n = t || [];
        return null != e && (M(Object(e)) ? x.merge(n, "string" == typeof e ? [e] : e) : h.call(n, e)), n
    }, inArray: function (e, t, n) {
        var r;
        if (t) {
            if (m)return m.call(t, e, n);
            for (r = t.length, n = n ? 0 > n ? Math.max(0, r + n) : n : 0; r > n; n++)if (n in t && t[n] === e)return n
        }
        return-1
    }, merge: function (e, n) {
        var r = n.length, i = e.length, o = 0;
        if ("number" == typeof r)for (; r > o; o++)e[i++] = n[o]; else while (n[o] !== t)e[i++] = n[o++];
        return e.length = i, e
    }, grep: function (e, t, n) {
        var r, i = [], o = 0, a = e.length;
        for (n = !!n; a > o; o++)r = !!t(e[o], o), n !== r && i.push(e[o]);
        return i
    }, map: function (e, t, n) {
        var r, i = 0, o = e.length, a = M(e), s = [];
        if (a)for (; o > i; i++)r = t(e[i], i, n), null != r && (s[s.length] = r); else for (i in e)r = t(e[i], i, n), null != r && (s[s.length] = r);
        return d.apply([], s)
    }, guid: 1, proxy: function (e, n) {
        var r, i, o;
        return"string" == typeof n && (o = e[n], n = e, e = o), x.isFunction(e) ? (r = g.call(arguments, 2), i = function () {
            return e.apply(n || this, r.concat(g.call(arguments)))
        }, i.guid = e.guid = e.guid || x.guid++, i) : t
    }, access: function (e, n, r, i, o, a, s) {
        var l = 0, u = e.length, c = null == r;
        if ("object" === x.type(r)) {
            o = !0;
            for (l in r)x.access(e, n, l, r[l], !0, a, s)
        } else if (i !== t && (o = !0, x.isFunction(i) || (s = !0), c && (s ? (n.call(e, i), n = null) : (c = n, n = function (e, t, n) {
            return c.call(x(e), n)
        })), n))for (; u > l; l++)n(e[l], r, s ? i : i.call(e[l], l, n(e[l], r)));
        return o ? e : c ? n.call(e) : u ? n(e[0], r) : a
    }, now: function () {
        return(new Date).getTime()
    }, swap: function (e, t, n, r) {
        var i, o, a = {};
        for (o in t)a[o] = e.style[o], e.style[o] = t[o];
        i = n.apply(e, r || []);
        for (o in t)e.style[o] = a[o];
        return i
    }}), x.ready.promise = function (t) {
        if (!n)if (n = x.Deferred(), "complete" === a.readyState)setTimeout(x.ready); else if (a.addEventListener)a.addEventListener("DOMContentLoaded", q, !1), e.addEventListener("load", q, !1); else {
            a.attachEvent("onreadystatechange", q), e.attachEvent("onload", q);
            var r = !1;
            try {
                r = null == e.frameElement && a.documentElement
            } catch (i) {
            }
            r && r.doScroll && function o() {
                if (!x.isReady) {
                    try {
                        r.doScroll("left")
                    } catch (e) {
                        return setTimeout(o, 50)
                    }
                    _(), x.ready()
                }
            }()
        }
        return n.promise(t)
    }, x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) {
        c["[object " + t + "]"] = t.toLowerCase()
    });
    function M(e) {
        var t = e.length, n = x.type(e);
        return x.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === n || "function" !== n && (0 === t || "number" == typeof t && t > 0 && t - 1 in e)
    }

    r = x(a), function (e, t) {
        var n, r, i, o, a, s, l, u, c, p, f, d, h, g, m, y, v, b = "sizzle" + -new Date, w = e.document, T = 0, C = 0, N = st(), k = st(), E = st(), S = !1, A = function (e, t) {
            return e === t ? (S = !0, 0) : 0
        }, j = typeof t, D = 1 << 31, L = {}.hasOwnProperty, H = [], q = H.pop, _ = H.push, M = H.push, O = H.slice, F = H.indexOf || function (e) {
            var t = 0, n = this.length;
            for (; n > t; t++)if (this[t] === e)return t;
            return-1
        }, B = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", P = "[\\x20\\t\\r\\n\\f]", R = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", W = R.replace("w", "w#"), $ = "\\[" + P + "*(" + R + ")" + P + "*(?:([*^$|!~]?=)" + P + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + W + ")|)|)" + P + "*\\]", I = ":(" + R + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + $.replace(3, 8) + ")*)|.*)\\)|)", z = RegExp("^" + P + "+|((?:^|[^\\\\])(?:\\\\.)*)" + P + "+$", "g"), X = RegExp("^" + P + "*," + P + "*"), U = RegExp("^" + P + "*([>+~]|" + P + ")" + P + "*"), V = RegExp(P + "*[+~]"), Y = RegExp("=" + P + "*([^\\]'\"]*)" + P + "*\\]", "g"), J = RegExp(I), G = RegExp("^" + W + "$"), Q = {ID: RegExp("^#(" + R + ")"), CLASS: RegExp("^\\.(" + R + ")"), TAG: RegExp("^(" + R.replace("w", "w*") + ")"), ATTR: RegExp("^" + $), PSEUDO: RegExp("^" + I), CHILD: RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + P + "*(even|odd|(([+-]|)(\\d*)n|)" + P + "*(?:([+-]|)" + P + "*(\\d+)|))" + P + "*\\)|)", "i"), bool: RegExp("^(?:" + B + ")$", "i"), needsContext: RegExp("^" + P + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + P + "*((?:-\\d)?\\d*)" + P + "*\\)|)(?=[^-]|$)", "i")}, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, et = /^(?:input|select|textarea|button)$/i, tt = /^h\d$/i, nt = /'|\\/g, rt = RegExp("\\\\([\\da-f]{1,6}" + P + "?|(" + P + ")|.)", "ig"), it = function (e, t, n) {
            var r = "0x" + t - 65536;
            return r !== r || n ? t : 0 > r ? String.fromCharCode(r + 65536) : String.fromCharCode(55296 | r >> 10, 56320 | 1023 & r)
        };
        try {
            M.apply(H = O.call(w.childNodes), w.childNodes), H[w.childNodes.length].nodeType
        } catch (ot) {
            M = {apply: H.length ? function (e, t) {
                _.apply(e, O.call(t))
            } : function (e, t) {
                var n = e.length, r = 0;
                while (e[n++] = t[r++]);
                e.length = n - 1
            }}
        }
        function at(e, t, n, i) {
            var o, a, s, l, u, c, d, m, y, x;
            if ((t ? t.ownerDocument || t : w) !== f && p(t), t = t || f, n = n || [], !e || "string" != typeof e)return n;
            if (1 !== (l = t.nodeType) && 9 !== l)return[];
            if (h && !i) {
                if (o = Z.exec(e))if (s = o[1]) {
                    if (9 === l) {
                        if (a = t.getElementById(s), !a || !a.parentNode)return n;
                        if (a.id === s)return n.push(a), n
                    } else if (t.ownerDocument && (a = t.ownerDocument.getElementById(s)) && v(t, a) && a.id === s)return n.push(a), n
                } else {
                    if (o[2])return M.apply(n, t.getElementsByTagName(e)), n;
                    if ((s = o[3]) && r.getElementsByClassName && t.getElementsByClassName)return M.apply(n, t.getElementsByClassName(s)), n
                }
                if (r.qsa && (!g || !g.test(e))) {
                    if (m = d = b, y = t, x = 9 === l && e, 1 === l && "object" !== t.nodeName.toLowerCase()) {
                        c = mt(e), (d = t.getAttribute("id")) ? m = d.replace(nt, "\\$&") : t.setAttribute("id", m), m = "[id='" + m + "'] ", u = c.length;
                        while (u--)c[u] = m + yt(c[u]);
                        y = V.test(e) && t.parentNode || t, x = c.join(",")
                    }
                    if (x)try {
                        return M.apply(n, y.querySelectorAll(x)), n
                    } catch (T) {
                    } finally {
                        d || t.removeAttribute("id")
                    }
                }
            }
            return kt(e.replace(z, "$1"), t, n, i)
        }

        function st() {
            var e = [];

            function t(n, r) {
                return e.push(n += " ") > o.cacheLength && delete t[e.shift()], t[n] = r
            }

            return t
        }

        function lt(e) {
            return e[b] = !0, e
        }

        function ut(e) {
            var t = f.createElement("div");
            try {
                return!!e(t)
            } catch (n) {
                return!1
            } finally {
                t.parentNode && t.parentNode.removeChild(t), t = null
            }
        }

        function ct(e, t) {
            var n = e.split("|"), r = e.length;
            while (r--)o.attrHandle[n[r]] = t
        }

        function pt(e, t) {
            var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || D) - (~e.sourceIndex || D);
            if (r)return r;
            if (n)while (n = n.nextSibling)if (n === t)return-1;
            return e ? 1 : -1
        }

        function ft(e) {
            return function (t) {
                var n = t.nodeName.toLowerCase();
                return"input" === n && t.type === e
            }
        }

        function dt(e) {
            return function (t) {
                var n = t.nodeName.toLowerCase();
                return("input" === n || "button" === n) && t.type === e
            }
        }

        function ht(e) {
            return lt(function (t) {
                return t = +t, lt(function (n, r) {
                    var i, o = e([], n.length, t), a = o.length;
                    while (a--)n[i = o[a]] && (n[i] = !(r[i] = n[i]))
                })
            })
        }

        s = at.isXML = function (e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return t ? "HTML" !== t.nodeName : !1
        }, r = at.support = {}, p = at.setDocument = function (e) {
            var n = e ? e.ownerDocument || e : w, i = n.defaultView;
            return n !== f && 9 === n.nodeType && n.documentElement ? (f = n, d = n.documentElement, h = !s(n), i && i.attachEvent && i !== i.top && i.attachEvent("onbeforeunload", function () {
                p()
            }), r.attributes = ut(function (e) {
                return e.className = "i", !e.getAttribute("className")
            }), r.getElementsByTagName = ut(function (e) {
                return e.appendChild(n.createComment("")), !e.getElementsByTagName("*").length
            }), r.getElementsByClassName = ut(function (e) {
                return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length
            }), r.getById = ut(function (e) {
                return d.appendChild(e).id = b, !n.getElementsByName || !n.getElementsByName(b).length
            }), r.getById ? (o.find.ID = function (e, t) {
                if (typeof t.getElementById !== j && h) {
                    var n = t.getElementById(e);
                    return n && n.parentNode ? [n] : []
                }
            }, o.filter.ID = function (e) {
                var t = e.replace(rt, it);
                return function (e) {
                    return e.getAttribute("id") === t
                }
            }) : (delete o.find.ID, o.filter.ID = function (e) {
                var t = e.replace(rt, it);
                return function (e) {
                    var n = typeof e.getAttributeNode !== j && e.getAttributeNode("id");
                    return n && n.value === t
                }
            }), o.find.TAG = r.getElementsByTagName ? function (e, n) {
                return typeof n.getElementsByTagName !== j ? n.getElementsByTagName(e) : t
            } : function (e, t) {
                var n, r = [], i = 0, o = t.getElementsByTagName(e);
                if ("*" === e) {
                    while (n = o[i++])1 === n.nodeType && r.push(n);
                    return r
                }
                return o
            }, o.find.CLASS = r.getElementsByClassName && function (e, n) {
                return typeof n.getElementsByClassName !== j && h ? n.getElementsByClassName(e) : t
            }, m = [], g = [], (r.qsa = K.test(n.querySelectorAll)) && (ut(function (e) {
                e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || g.push("\\[" + P + "*(?:value|" + B + ")"), e.querySelectorAll(":checked").length || g.push(":checked")
            }), ut(function (e) {
                var t = n.createElement("input");
                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("t", ""), e.querySelectorAll("[t^='']").length && g.push("[*^$]=" + P + "*(?:''|\"\")"), e.querySelectorAll(":enabled").length || g.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), g.push(",.*:")
            })), (r.matchesSelector = K.test(y = d.webkitMatchesSelector || d.mozMatchesSelector || d.oMatchesSelector || d.msMatchesSelector)) && ut(function (e) {
                r.disconnectedMatch = y.call(e, "div"), y.call(e, "[s!='']:x"), m.push("!=", I)
            }), g = g.length && RegExp(g.join("|")), m = m.length && RegExp(m.join("|")), v = K.test(d.contains) || d.compareDocumentPosition ? function (e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode;
                return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)))
            } : function (e, t) {
                if (t)while (t = t.parentNode)if (t === e)return!0;
                return!1
            }, A = d.compareDocumentPosition ? function (e, t) {
                if (e === t)return S = !0, 0;
                var i = t.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(t);
                return i ? 1 & i || !r.sortDetached && t.compareDocumentPosition(e) === i ? e === n || v(w, e) ? -1 : t === n || v(w, t) ? 1 : c ? F.call(c, e) - F.call(c, t) : 0 : 4 & i ? -1 : 1 : e.compareDocumentPosition ? -1 : 1
            } : function (e, t) {
                var r, i = 0, o = e.parentNode, a = t.parentNode, s = [e], l = [t];
                if (e === t)return S = !0, 0;
                if (!o || !a)return e === n ? -1 : t === n ? 1 : o ? -1 : a ? 1 : c ? F.call(c, e) - F.call(c, t) : 0;
                if (o === a)return pt(e, t);
                r = e;
                while (r = r.parentNode)s.unshift(r);
                r = t;
                while (r = r.parentNode)l.unshift(r);
                while (s[i] === l[i])i++;
                return i ? pt(s[i], l[i]) : s[i] === w ? -1 : l[i] === w ? 1 : 0
            }, n) : f
        }, at.matches = function (e, t) {
            return at(e, null, null, t)
        }, at.matchesSelector = function (e, t) {
            if ((e.ownerDocument || e) !== f && p(e), t = t.replace(Y, "='$1']"), !(!r.matchesSelector || !h || m && m.test(t) || g && g.test(t)))try {
                var n = y.call(e, t);
                if (n || r.disconnectedMatch || e.document && 11 !== e.document.nodeType)return n
            } catch (i) {
            }
            return at(t, f, null, [e]).length > 0
        }, at.contains = function (e, t) {
            return(e.ownerDocument || e) !== f && p(e), v(e, t)
        }, at.attr = function (e, n) {
            (e.ownerDocument || e) !== f && p(e);
            var i = o.attrHandle[n.toLowerCase()], a = i && L.call(o.attrHandle, n.toLowerCase()) ? i(e, n, !h) : t;
            return a === t ? r.attributes || !h ? e.getAttribute(n) : (a = e.getAttributeNode(n)) && a.specified ? a.value : null : a
        }, at.error = function (e) {
            throw Error("Syntax error, unrecognized expression: " + e)
        }, at.uniqueSort = function (e) {
            var t, n = [], i = 0, o = 0;
            if (S = !r.detectDuplicates, c = !r.sortStable && e.slice(0), e.sort(A), S) {
                while (t = e[o++])t === e[o] && (i = n.push(o));
                while (i--)e.splice(n[i], 1)
            }
            return e
        }, a = at.getText = function (e) {
            var t, n = "", r = 0, i = e.nodeType;
            if (i) {
                if (1 === i || 9 === i || 11 === i) {
                    if ("string" == typeof e.textContent)return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling)n += a(e)
                } else if (3 === i || 4 === i)return e.nodeValue
            } else for (; t = e[r]; r++)n += a(t);
            return n
        }, o = at.selectors = {cacheLength: 50, createPseudo: lt, match: Q, attrHandle: {}, find: {}, relative: {">": {dir: "parentNode", first: !0}, " ": {dir: "parentNode"}, "+": {dir: "previousSibling", first: !0}, "~": {dir: "previousSibling"}}, preFilter: {ATTR: function (e) {
            return e[1] = e[1].replace(rt, it), e[3] = (e[4] || e[5] || "").replace(rt, it), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
        }, CHILD: function (e) {
            return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || at.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && at.error(e[0]), e
        }, PSEUDO: function (e) {
            var n, r = !e[5] && e[2];
            return Q.CHILD.test(e[0]) ? null : (e[3] && e[4] !== t ? e[2] = e[4] : r && J.test(r) && (n = mt(r, !0)) && (n = r.indexOf(")", r.length - n) - r.length) && (e[0] = e[0].slice(0, n), e[2] = r.slice(0, n)), e.slice(0, 3))
        }}, filter: {TAG: function (e) {
            var t = e.replace(rt, it).toLowerCase();
            return"*" === e ? function () {
                return!0
            } : function (e) {
                return e.nodeName && e.nodeName.toLowerCase() === t
            }
        }, CLASS: function (e) {
            var t = N[e + " "];
            return t || (t = RegExp("(^|" + P + ")" + e + "(" + P + "|$)")) && N(e, function (e) {
                return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== j && e.getAttribute("class") || "")
            })
        }, ATTR: function (e, t, n) {
            return function (r) {
                var i = at.attr(r, e);
                return null == i ? "!=" === t : t ? (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i + " ").indexOf(n) > -1 : "|=" === t ? i === n || i.slice(0, n.length + 1) === n + "-" : !1) : !0
            }
        }, CHILD: function (e, t, n, r, i) {
            var o = "nth" !== e.slice(0, 3), a = "last" !== e.slice(-4), s = "of-type" === t;
            return 1 === r && 0 === i ? function (e) {
                return!!e.parentNode
            } : function (t, n, l) {
                var u, c, p, f, d, h, g = o !== a ? "nextSibling" : "previousSibling", m = t.parentNode, y = s && t.nodeName.toLowerCase(), v = !l && !s;
                if (m) {
                    if (o) {
                        while (g) {
                            p = t;
                            while (p = p[g])if (s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType)return!1;
                            h = g = "only" === e && !h && "nextSibling"
                        }
                        return!0
                    }
                    if (h = [a ? m.firstChild : m.lastChild], a && v) {
                        c = m[b] || (m[b] = {}), u = c[e] || [], d = u[0] === T && u[1], f = u[0] === T && u[2], p = d && m.childNodes[d];
                        while (p = ++d && p && p[g] || (f = d = 0) || h.pop())if (1 === p.nodeType && ++f && p === t) {
                            c[e] = [T, d, f];
                            break
                        }
                    } else if (v && (u = (t[b] || (t[b] = {}))[e]) && u[0] === T)f = u[1]; else while (p = ++d && p && p[g] || (f = d = 0) || h.pop())if ((s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType) && ++f && (v && ((p[b] || (p[b] = {}))[e] = [T, f]), p === t))break;
                    return f -= i, f === r || 0 === f % r && f / r >= 0
                }
            }
        }, PSEUDO: function (e, t) {
            var n, r = o.pseudos[e] || o.setFilters[e.toLowerCase()] || at.error("unsupported pseudo: " + e);
            return r[b] ? r(t) : r.length > 1 ? (n = [e, e, "", t], o.setFilters.hasOwnProperty(e.toLowerCase()) ? lt(function (e, n) {
                var i, o = r(e, t), a = o.length;
                while (a--)i = F.call(e, o[a]), e[i] = !(n[i] = o[a])
            }) : function (e) {
                return r(e, 0, n)
            }) : r
        }}, pseudos: {not: lt(function (e) {
            var t = [], n = [], r = l(e.replace(z, "$1"));
            return r[b] ? lt(function (e, t, n, i) {
                var o, a = r(e, null, i, []), s = e.length;
                while (s--)(o = a[s]) && (e[s] = !(t[s] = o))
            }) : function (e, i, o) {
                return t[0] = e, r(t, null, o, n), !n.pop()
            }
        }), has: lt(function (e) {
            return function (t) {
                return at(e, t).length > 0
            }
        }), contains: lt(function (e) {
            return function (t) {
                return(t.textContent || t.innerText || a(t)).indexOf(e) > -1
            }
        }), lang: lt(function (e) {
            return G.test(e || "") || at.error("unsupported lang: " + e), e = e.replace(rt, it).toLowerCase(), function (t) {
                var n;
                do if (n = h ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang"))return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-"); while ((t = t.parentNode) && 1 === t.nodeType);
                return!1
            }
        }), target: function (t) {
            var n = e.location && e.location.hash;
            return n && n.slice(1) === t.id
        }, root: function (e) {
            return e === d
        }, focus: function (e) {
            return e === f.activeElement && (!f.hasFocus || f.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
        }, enabled: function (e) {
            return e.disabled === !1
        }, disabled: function (e) {
            return e.disabled === !0
        }, checked: function (e) {
            var t = e.nodeName.toLowerCase();
            return"input" === t && !!e.checked || "option" === t && !!e.selected
        }, selected: function (e) {
            return e.parentNode && e.parentNode.selectedIndex, e.selected === !0
        }, empty: function (e) {
            for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeName > "@" || 3 === e.nodeType || 4 === e.nodeType)return!1;
            return!0
        }, parent: function (e) {
            return!o.pseudos.empty(e)
        }, header: function (e) {
            return tt.test(e.nodeName)
        }, input: function (e) {
            return et.test(e.nodeName)
        }, button: function (e) {
            var t = e.nodeName.toLowerCase();
            return"input" === t && "button" === e.type || "button" === t
        }, text: function (e) {
            var t;
            return"input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || t.toLowerCase() === e.type)
        }, first: ht(function () {
            return[0]
        }), last: ht(function (e, t) {
            return[t - 1]
        }), eq: ht(function (e, t, n) {
            return[0 > n ? n + t : n]
        }), even: ht(function (e, t) {
            var n = 0;
            for (; t > n; n += 2)e.push(n);
            return e
        }), odd: ht(function (e, t) {
            var n = 1;
            for (; t > n; n += 2)e.push(n);
            return e
        }), lt: ht(function (e, t, n) {
            var r = 0 > n ? n + t : n;
            for (; --r >= 0;)e.push(r);
            return e
        }), gt: ht(function (e, t, n) {
            var r = 0 > n ? n + t : n;
            for (; t > ++r;)e.push(r);
            return e
        })}}, o.pseudos.nth = o.pseudos.eq;
        for (n in{radio: !0, checkbox: !0, file: !0, password: !0, image: !0})o.pseudos[n] = ft(n);
        for (n in{submit: !0, reset: !0})o.pseudos[n] = dt(n);
        function gt() {
        }

        gt.prototype = o.filters = o.pseudos, o.setFilters = new gt;
        function mt(e, t) {
            var n, r, i, a, s, l, u, c = k[e + " "];
            if (c)return t ? 0 : c.slice(0);
            s = e, l = [], u = o.preFilter;
            while (s) {
                (!n || (r = X.exec(s))) && (r && (s = s.slice(r[0].length) || s), l.push(i = [])), n = !1, (r = U.exec(s)) && (n = r.shift(), i.push({value: n, type: r[0].replace(z, " ")}), s = s.slice(n.length));
                for (a in o.filter)!(r = Q[a].exec(s)) || u[a] && !(r = u[a](r)) || (n = r.shift(), i.push({value: n, type: a, matches: r}), s = s.slice(n.length));
                if (!n)break
            }
            return t ? s.length : s ? at.error(e) : k(e, l).slice(0)
        }

        function yt(e) {
            var t = 0, n = e.length, r = "";
            for (; n > t; t++)r += e[t].value;
            return r
        }

        function vt(e, t, n) {
            var r = t.dir, o = n && "parentNode" === r, a = C++;
            return t.first ? function (t, n, i) {
                while (t = t[r])if (1 === t.nodeType || o)return e(t, n, i)
            } : function (t, n, s) {
                var l, u, c, p = T + " " + a;
                if (s) {
                    while (t = t[r])if ((1 === t.nodeType || o) && e(t, n, s))return!0
                } else while (t = t[r])if (1 === t.nodeType || o)if (c = t[b] || (t[b] = {}), (u = c[r]) && u[0] === p) {
                    if ((l = u[1]) === !0 || l === i)return l === !0
                } else if (u = c[r] = [p], u[1] = e(t, n, s) || i, u[1] === !0)return!0
            }
        }

        function bt(e) {
            return e.length > 1 ? function (t, n, r) {
                var i = e.length;
                while (i--)if (!e[i](t, n, r))return!1;
                return!0
            } : e[0]
        }

        function xt(e, t, n, r, i) {
            var o, a = [], s = 0, l = e.length, u = null != t;
            for (; l > s; s++)(o = e[s]) && (!n || n(o, r, i)) && (a.push(o), u && t.push(s));
            return a
        }

        function wt(e, t, n, r, i, o) {
            return r && !r[b] && (r = wt(r)), i && !i[b] && (i = wt(i, o)), lt(function (o, a, s, l) {
                var u, c, p, f = [], d = [], h = a.length, g = o || Nt(t || "*", s.nodeType ? [s] : s, []), m = !e || !o && t ? g : xt(g, f, e, s, l), y = n ? i || (o ? e : h || r) ? [] : a : m;
                if (n && n(m, y, s, l), r) {
                    u = xt(y, d), r(u, [], s, l), c = u.length;
                    while (c--)(p = u[c]) && (y[d[c]] = !(m[d[c]] = p))
                }
                if (o) {
                    if (i || e) {
                        if (i) {
                            u = [], c = y.length;
                            while (c--)(p = y[c]) && u.push(m[c] = p);
                            i(null, y = [], u, l)
                        }
                        c = y.length;
                        while (c--)(p = y[c]) && (u = i ? F.call(o, p) : f[c]) > -1 && (o[u] = !(a[u] = p))
                    }
                } else y = xt(y === a ? y.splice(h, y.length) : y), i ? i(null, a, y, l) : M.apply(a, y)
            })
        }

        function Tt(e) {
            var t, n, r, i = e.length, a = o.relative[e[0].type], s = a || o.relative[" "], l = a ? 1 : 0, c = vt(function (e) {
                return e === t
            }, s, !0), p = vt(function (e) {
                return F.call(t, e) > -1
            }, s, !0), f = [function (e, n, r) {
                return!a && (r || n !== u) || ((t = n).nodeType ? c(e, n, r) : p(e, n, r))
            }];
            for (; i > l; l++)if (n = o.relative[e[l].type])f = [vt(bt(f), n)]; else {
                if (n = o.filter[e[l].type].apply(null, e[l].matches), n[b]) {
                    for (r = ++l; i > r; r++)if (o.relative[e[r].type])break;
                    return wt(l > 1 && bt(f), l > 1 && yt(e.slice(0, l - 1).concat({value: " " === e[l - 2].type ? "*" : ""})).replace(z, "$1"), n, r > l && Tt(e.slice(l, r)), i > r && Tt(e = e.slice(r)), i > r && yt(e))
                }
                f.push(n)
            }
            return bt(f)
        }

        function Ct(e, t) {
            var n = 0, r = t.length > 0, a = e.length > 0, s = function (s, l, c, p, d) {
                var h, g, m, y = [], v = 0, b = "0", x = s && [], w = null != d, C = u, N = s || a && o.find.TAG("*", d && l.parentNode || l), k = T += null == C ? 1 : Math.random() || .1;
                for (w && (u = l !== f && l, i = n); null != (h = N[b]); b++) {
                    if (a && h) {
                        g = 0;
                        while (m = e[g++])if (m(h, l, c)) {
                            p.push(h);
                            break
                        }
                        w && (T = k, i = ++n)
                    }
                    r && ((h = !m && h) && v--, s && x.push(h))
                }
                if (v += b, r && b !== v) {
                    g = 0;
                    while (m = t[g++])m(x, y, l, c);
                    if (s) {
                        if (v > 0)while (b--)x[b] || y[b] || (y[b] = q.call(p));
                        y = xt(y)
                    }
                    M.apply(p, y), w && !s && y.length > 0 && v + t.length > 1 && at.uniqueSort(p)
                }
                return w && (T = k, u = C), x
            };
            return r ? lt(s) : s
        }

        l = at.compile = function (e, t) {
            var n, r = [], i = [], o = E[e + " "];
            if (!o) {
                t || (t = mt(e)), n = t.length;
                while (n--)o = Tt(t[n]), o[b] ? r.push(o) : i.push(o);
                o = E(e, Ct(i, r))
            }
            return o
        };
        function Nt(e, t, n) {
            var r = 0, i = t.length;
            for (; i > r; r++)at(e, t[r], n);
            return n
        }

        function kt(e, t, n, i) {
            var a, s, u, c, p, f = mt(e);
            if (!i && 1 === f.length) {
                if (s = f[0] = f[0].slice(0), s.length > 2 && "ID" === (u = s[0]).type && r.getById && 9 === t.nodeType && h && o.relative[s[1].type]) {
                    if (t = (o.find.ID(u.matches[0].replace(rt, it), t) || [])[0], !t)return n;
                    e = e.slice(s.shift().value.length)
                }
                a = Q.needsContext.test(e) ? 0 : s.length;
                while (a--) {
                    if (u = s[a], o.relative[c = u.type])break;
                    if ((p = o.find[c]) && (i = p(u.matches[0].replace(rt, it), V.test(s[0].type) && t.parentNode || t))) {
                        if (s.splice(a, 1), e = i.length && yt(s), !e)return M.apply(n, i), n;
                        break
                    }
                }
            }
            return l(e, f)(i, t, !h, n, V.test(e)), n
        }

        r.sortStable = b.split("").sort(A).join("") === b, r.detectDuplicates = S, p(), r.sortDetached = ut(function (e) {
            return 1 & e.compareDocumentPosition(f.createElement("div"))
        }), ut(function (e) {
            return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
        }) || ct("type|href|height|width", function (e, n, r) {
            return r ? t : e.getAttribute(n, "type" === n.toLowerCase() ? 1 : 2)
        }), r.attributes && ut(function (e) {
            return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
        }) || ct("value", function (e, n, r) {
            return r || "input" !== e.nodeName.toLowerCase() ? t : e.defaultValue
        }), ut(function (e) {
            return null == e.getAttribute("disabled")
        }) || ct(B, function (e, n, r) {
            var i;
            return r ? t : (i = e.getAttributeNode(n)) && i.specified ? i.value : e[n] === !0 ? n.toLowerCase() : null
        }), x.find = at, x.expr = at.selectors, x.expr[":"] = x.expr.pseudos, x.unique = at.uniqueSort, x.text = at.getText, x.isXMLDoc = at.isXML, x.contains = at.contains
    }(e);
    var O = {};

    function F(e) {
        var t = O[e] = {};
        return x.each(e.match(T) || [], function (e, n) {
            t[n] = !0
        }), t
    }

    x.Callbacks = function (e) {
        e = "string" == typeof e ? O[e] || F(e) : x.extend({}, e);
        var n, r, i, o, a, s, l = [], u = !e.once && [], c = function (t) {
            for (r = e.memory && t, i = !0, a = s || 0, s = 0, o = l.length, n = !0; l && o > a; a++)if (l[a].apply(t[0], t[1]) === !1 && e.stopOnFalse) {
                r = !1;
                break
            }
            n = !1, l && (u ? u.length && c(u.shift()) : r ? l = [] : p.disable())
        }, p = {add: function () {
            if (l) {
                var t = l.length;
                (function i(t) {
                    x.each(t, function (t, n) {
                        var r = x.type(n);
                        "function" === r ? e.unique && p.has(n) || l.push(n) : n && n.length && "string" !== r && i(n)
                    })
                })(arguments), n ? o = l.length : r && (s = t, c(r))
            }
            return this
        }, remove: function () {
            return l && x.each(arguments, function (e, t) {
                var r;
                while ((r = x.inArray(t, l, r)) > -1)l.splice(r, 1), n && (o >= r && o--, a >= r && a--)
            }), this
        }, has: function (e) {
            return e ? x.inArray(e, l) > -1 : !(!l || !l.length)
        }, empty: function () {
            return l = [], o = 0, this
        }, disable: function () {
            return l = u = r = t, this
        }, disabled: function () {
            return!l
        }, lock: function () {
            return u = t, r || p.disable(), this
        }, locked: function () {
            return!u
        }, fireWith: function (e, t) {
            return!l || i && !u || (t = t || [], t = [e, t.slice ? t.slice() : t], n ? u.push(t) : c(t)), this
        }, fire: function () {
            return p.fireWith(this, arguments), this
        }, fired: function () {
            return!!i
        }};
        return p
    }, x.extend({Deferred: function (e) {
        var t = [
            ["resolve", "done", x.Callbacks("once memory"), "resolved"],
            ["reject", "fail", x.Callbacks("once memory"), "rejected"],
            ["notify", "progress", x.Callbacks("memory")]
        ], n = "pending", r = {state: function () {
            return n
        }, always: function () {
            return i.done(arguments).fail(arguments), this
        }, then: function () {
            var e = arguments;
            return x.Deferred(function (n) {
                x.each(t, function (t, o) {
                    var a = o[0], s = x.isFunction(e[t]) && e[t];
                    i[o[1]](function () {
                        var e = s && s.apply(this, arguments);
                        e && x.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[a + "With"](this === r ? n.promise() : this, s ? [e] : arguments)
                    })
                }), e = null
            }).promise()
        }, promise: function (e) {
            return null != e ? x.extend(e, r) : r
        }}, i = {};
        return r.pipe = r.then, x.each(t, function (e, o) {
            var a = o[2], s = o[3];
            r[o[1]] = a.add, s && a.add(function () {
                n = s
            }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function () {
                return i[o[0] + "With"](this === i ? r : this, arguments), this
            }, i[o[0] + "With"] = a.fireWith
        }), r.promise(i), e && e.call(i, i), i
    }, when: function (e) {
        var t = 0, n = g.call(arguments), r = n.length, i = 1 !== r || e && x.isFunction(e.promise) ? r : 0, o = 1 === i ? e : x.Deferred(), a = function (e, t, n) {
            return function (r) {
                t[e] = this, n[e] = arguments.length > 1 ? g.call(arguments) : r, n === s ? o.notifyWith(t, n) : --i || o.resolveWith(t, n)
            }
        }, s, l, u;
        if (r > 1)for (s = Array(r), l = Array(r), u = Array(r); r > t; t++)n[t] && x.isFunction(n[t].promise) ? n[t].promise().done(a(t, u, n)).fail(o.reject).progress(a(t, l, s)) : --i;
        return i || o.resolveWith(u, n), o.promise()
    }}), x.support = function (t) {
        var n, r, o, s, l, u, c, p, f, d = a.createElement("div");
        if (d.setAttribute("className", "t"), d.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", n = d.getElementsByTagName("*") || [], r = d.getElementsByTagName("a")[0], !r || !r.style || !n.length)return t;
        s = a.createElement("select"), u = s.appendChild(a.createElement("option")), o = d.getElementsByTagName("input")[0], r.style.cssText = "top:1px;float:left;opacity:.5", t.getSetAttribute = "t" !== d.className, t.leadingWhitespace = 3 === d.firstChild.nodeType, t.tbody = !d.getElementsByTagName("tbody").length, t.htmlSerialize = !!d.getElementsByTagName("link").length, t.style = /top/.test(r.getAttribute("style")), t.hrefNormalized = "/a" === r.getAttribute("href"), t.opacity = /^0.5/.test(r.style.opacity), t.cssFloat = !!r.style.cssFloat, t.checkOn = !!o.value, t.optSelected = u.selected, t.enctype = !!a.createElement("form").enctype, t.html5Clone = "<:nav></:nav>" !== a.createElement("nav").cloneNode(!0).outerHTML, t.inlineBlockNeedsLayout = !1, t.shrinkWrapBlocks = !1, t.pixelPosition = !1, t.deleteExpando = !0, t.noCloneEvent = !0, t.reliableMarginRight = !0, t.boxSizingReliable = !0, o.checked = !0, t.noCloneChecked = o.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !u.disabled;
        try {
            delete d.test
        } catch (h) {
            t.deleteExpando = !1
        }
        o = a.createElement("input"), o.setAttribute("value", ""), t.input = "" === o.getAttribute("value"), o.value = "t", o.setAttribute("type", "radio"), t.radioValue = "t" === o.value, o.setAttribute("checked", "t"), o.setAttribute("name", "t"), l = a.createDocumentFragment(), l.appendChild(o), t.appendChecked = o.checked, t.checkClone = l.cloneNode(!0).cloneNode(!0).lastChild.checked, d.attachEvent && (d.attachEvent("onclick", function () {
            t.noCloneEvent = !1
        }), d.cloneNode(!0).click());
        for (f in{submit: !0, change: !0, focusin: !0})d.setAttribute(c = "on" + f, "t"), t[f + "Bubbles"] = c in e || d.attributes[c].expando === !1;
        d.style.backgroundClip = "content-box", d.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === d.style.backgroundClip;
        for (f in x(t))break;
        return t.ownLast = "0" !== f, x(function () {
            var n, r, o, s = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;", l = a.getElementsByTagName("body")[0];
            l && (n = a.createElement("div"), n.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", l.appendChild(n).appendChild(d), d.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", o = d.getElementsByTagName("td"), o[0].style.cssText = "padding:0;margin:0;border:0;display:none", p = 0 === o[0].offsetHeight, o[0].style.display = "", o[1].style.display = "none", t.reliableHiddenOffsets = p && 0 === o[0].offsetHeight, d.innerHTML = "", d.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", x.swap(l, null != l.style.zoom ? {zoom: 1} : {}, function () {
                t.boxSizing = 4 === d.offsetWidth
            }), e.getComputedStyle && (t.pixelPosition = "1%" !== (e.getComputedStyle(d, null) || {}).top, t.boxSizingReliable = "4px" === (e.getComputedStyle(d, null) || {width: "4px"}).width, r = d.appendChild(a.createElement("div")), r.style.cssText = d.style.cssText = s, r.style.marginRight = r.style.width = "0", d.style.width = "1px", t.reliableMarginRight = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight)), typeof d.style.zoom !== i && (d.innerHTML = "", d.style.cssText = s + "width:1px;padding:1px;display:inline;zoom:1", t.inlineBlockNeedsLayout = 3 === d.offsetWidth, d.style.display = "block", d.innerHTML = "<div></div>", d.firstChild.style.width = "5px", t.shrinkWrapBlocks = 3 !== d.offsetWidth, t.inlineBlockNeedsLayout && (l.style.zoom = 1)), l.removeChild(n), n = d = o = r = null)
        }), n = s = l = u = r = o = null, t
    }({});
    var B = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, P = /([A-Z])/g;

    function R(e, n, r, i) {
        if (x.acceptData(e)) {
            var o, a, s = x.expando, l = e.nodeType, u = l ? x.cache : e, c = l ? e[s] : e[s] && s;
            if (c && u[c] && (i || u[c].data) || r !== t || "string" != typeof n)return c || (c = l ? e[s] = p.pop() || x.guid++ : s), u[c] || (u[c] = l ? {} : {toJSON: x.noop}), ("object" == typeof n || "function" == typeof n) && (i ? u[c] = x.extend(u[c], n) : u[c].data = x.extend(u[c].data, n)), a = u[c], i || (a.data || (a.data = {}), a = a.data), r !== t && (a[x.camelCase(n)] = r), "string" == typeof n ? (o = a[n], null == o && (o = a[x.camelCase(n)])) : o = a, o
        }
    }

    function W(e, t, n) {
        if (x.acceptData(e)) {
            var r, i, o = e.nodeType, a = o ? x.cache : e, s = o ? e[x.expando] : x.expando;
            if (a[s]) {
                if (t && (r = n ? a[s] : a[s].data)) {
                    x.isArray(t) ? t = t.concat(x.map(t, x.camelCase)) : t in r ? t = [t] : (t = x.camelCase(t), t = t in r ? [t] : t.split(" ")), i = t.length;
                    while (i--)delete r[t[i]];
                    if (n ? !I(r) : !x.isEmptyObject(r))return
                }
                (n || (delete a[s].data, I(a[s]))) && (o ? x.cleanData([e], !0) : x.support.deleteExpando || a != a.window ? delete a[s] : a[s] = null)
            }
        }
    }

    x.extend({cache: {}, noData: {applet: !0, embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"}, hasData: function (e) {
        return e = e.nodeType ? x.cache[e[x.expando]] : e[x.expando], !!e && !I(e)
    }, data: function (e, t, n) {
        return R(e, t, n)
    }, removeData: function (e, t) {
        return W(e, t)
    }, _data: function (e, t, n) {
        return R(e, t, n, !0)
    }, _removeData: function (e, t) {
        return W(e, t, !0)
    }, acceptData: function (e) {
        if (e.nodeType && 1 !== e.nodeType && 9 !== e.nodeType)return!1;
        var t = e.nodeName && x.noData[e.nodeName.toLowerCase()];
        return!t || t !== !0 && e.getAttribute("classid") === t
    }}), x.fn.extend({data: function (e, n) {
        var r, i, o = null, a = 0, s = this[0];
        if (e === t) {
            if (this.length && (o = x.data(s), 1 === s.nodeType && !x._data(s, "parsedAttrs"))) {
                for (r = s.attributes; r.length > a; a++)i = r[a].name, 0 === i.indexOf("data-") && (i = x.camelCase(i.slice(5)), $(s, i, o[i]));
                x._data(s, "parsedAttrs", !0)
            }
            return o
        }
        return"object" == typeof e ? this.each(function () {
            x.data(this, e)
        }) : arguments.length > 1 ? this.each(function () {
            x.data(this, e, n)
        }) : s ? $(s, e, x.data(s, e)) : null
    }, removeData: function (e) {
        return this.each(function () {
            x.removeData(this, e)
        })
    }});
    function $(e, n, r) {
        if (r === t && 1 === e.nodeType) {
            var i = "data-" + n.replace(P, "-$1").toLowerCase();
            if (r = e.getAttribute(i), "string" == typeof r) {
                try {
                    r = "true" === r ? !0 : "false" === r ? !1 : "null" === r ? null : +r + "" === r ? +r : B.test(r) ? x.parseJSON(r) : r
                } catch (o) {
                }
                x.data(e, n, r)
            } else r = t
        }
        return r
    }

    function I(e) {
        var t;
        for (t in e)if (("data" !== t || !x.isEmptyObject(e[t])) && "toJSON" !== t)return!1;
        return!0
    }

    x.extend({queue: function (e, n, r) {
        var i;
        return e ? (n = (n || "fx") + "queue", i = x._data(e, n), r && (!i || x.isArray(r) ? i = x._data(e, n, x.makeArray(r)) : i.push(r)), i || []) : t
    }, dequeue: function (e, t) {
        t = t || "fx";
        var n = x.queue(e, t), r = n.length, i = n.shift(), o = x._queueHooks(e, t), a = function () {
            x.dequeue(e, t)
        };
        "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, a, o)), !r && o && o.empty.fire()
    }, _queueHooks: function (e, t) {
        var n = t + "queueHooks";
        return x._data(e, n) || x._data(e, n, {empty: x.Callbacks("once memory").add(function () {
            x._removeData(e, t + "queue"), x._removeData(e, n)
        })})
    }}), x.fn.extend({queue: function (e, n) {
        var r = 2;
        return"string" != typeof e && (n = e, e = "fx", r--), r > arguments.length ? x.queue(this[0], e) : n === t ? this : this.each(function () {
            var t = x.queue(this, e, n);
            x._queueHooks(this, e), "fx" === e && "inprogress" !== t[0] && x.dequeue(this, e)
        })
    }, dequeue: function (e) {
        return this.each(function () {
            x.dequeue(this, e)
        })
    }, delay: function (e, t) {
        return e = x.fx ? x.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) {
            var r = setTimeout(t, e);
            n.stop = function () {
                clearTimeout(r)
            }
        })
    }, clearQueue: function (e) {
        return this.queue(e || "fx", [])
    }, promise: function (e, n) {
        var r, i = 1, o = x.Deferred(), a = this, s = this.length, l = function () {
            --i || o.resolveWith(a, [a])
        };
        "string" != typeof e && (n = e, e = t), e = e || "fx";
        while (s--)r = x._data(a[s], e + "queueHooks"), r && r.empty && (i++, r.empty.add(l));
        return l(), o.promise(n)
    }});
    var z, X, U = /[\t\r\n\f]/g, V = /\r/g, Y = /^(?:input|select|textarea|button|object)$/i, J = /^(?:a|area)$/i, G = /^(?:checked|selected)$/i, Q = x.support.getSetAttribute, K = x.support.input;
    x.fn.extend({attr: function (e, t) {
        return x.access(this, x.attr, e, t, arguments.length > 1)
    }, removeAttr: function (e) {
        return this.each(function () {
            x.removeAttr(this, e)
        })
    }, prop: function (e, t) {
        return x.access(this, x.prop, e, t, arguments.length > 1)
    }, removeProp: function (e) {
        return e = x.propFix[e] || e, this.each(function () {
            try {
                this[e] = t, delete this[e]
            } catch (n) {
            }
        })
    }, addClass: function (e) {
        var t, n, r, i, o, a = 0, s = this.length, l = "string" == typeof e && e;
        if (x.isFunction(e))return this.each(function (t) {
            x(this).addClass(e.call(this, t, this.className))
        });
        if (l)for (t = (e || "").match(T) || []; s > a; a++)if (n = this[a], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(U, " ") : " ")) {
            o = 0;
            while (i = t[o++])0 > r.indexOf(" " + i + " ") && (r += i + " ");
            n.className = x.trim(r)
        }
        return this
    }, removeClass: function (e) {
        var t, n, r, i, o, a = 0, s = this.length, l = 0 === arguments.length || "string" == typeof e && e;
        if (x.isFunction(e))return this.each(function (t) {
            x(this).removeClass(e.call(this, t, this.className))
        });
        if (l)for (t = (e || "").match(T) || []; s > a; a++)if (n = this[a], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(U, " ") : "")) {
            o = 0;
            while (i = t[o++])while (r.indexOf(" " + i + " ") >= 0)r = r.replace(" " + i + " ", " ");
            n.className = e ? x.trim(r) : ""
        }
        return this
    }, toggleClass: function (e, t) {
        var n = typeof e;
        return"boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : x.isFunction(e) ? this.each(function (n) {
            x(this).toggleClass(e.call(this, n, this.className, t), t)
        }) : this.each(function () {
            if ("string" === n) {
                var t, r = 0, o = x(this), a = e.match(T) || [];
                while (t = a[r++])o.hasClass(t) ? o.removeClass(t) : o.addClass(t)
            } else(n === i || "boolean" === n) && (this.className && x._data(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : x._data(this, "__className__") || "")
        })
    }, hasClass: function (e) {
        var t = " " + e + " ", n = 0, r = this.length;
        for (; r > n; n++)if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(U, " ").indexOf(t) >= 0)return!0;
        return!1
    }, val: function (e) {
        var n, r, i, o = this[0];
        {
            if (arguments.length)return i = x.isFunction(e), this.each(function (n) {
                var o;
                1 === this.nodeType && (o = i ? e.call(this, n, x(this).val()) : e, null == o ? o = "" : "number" == typeof o ? o += "" : x.isArray(o) && (o = x.map(o, function (e) {
                    return null == e ? "" : e + ""
                })), r = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()], r && "set"in r && r.set(this, o, "value") !== t || (this.value = o))
            });
            if (o)return r = x.valHooks[o.type] || x.valHooks[o.nodeName.toLowerCase()], r && "get"in r && (n = r.get(o, "value")) !== t ? n : (n = o.value, "string" == typeof n ? n.replace(V, "") : null == n ? "" : n)
        }
    }}), x.extend({valHooks: {option: {get: function (e) {
        var t = x.find.attr(e, "value");
        return null != t ? t : e.text
    }}, select: {get: function (e) {
        var t, n, r = e.options, i = e.selectedIndex, o = "select-one" === e.type || 0 > i, a = o ? null : [], s = o ? i + 1 : r.length, l = 0 > i ? s : o ? i : 0;
        for (; s > l; l++)if (n = r[l], !(!n.selected && l !== i || (x.support.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && x.nodeName(n.parentNode, "optgroup"))) {
            if (t = x(n).val(), o)return t;
            a.push(t)
        }
        return a
    }, set: function (e, t) {
        var n, r, i = e.options, o = x.makeArray(t), a = i.length;
        while (a--)r = i[a], (r.selected = x.inArray(x(r).val(), o) >= 0) && (n = !0);
        return n || (e.selectedIndex = -1), o
    }}}, attr: function (e, n, r) {
        var o, a, s = e.nodeType;
        if (e && 3 !== s && 8 !== s && 2 !== s)return typeof e.getAttribute === i ? x.prop(e, n, r) : (1 === s && x.isXMLDoc(e) || (n = n.toLowerCase(), o = x.attrHooks[n] || (x.expr.match.bool.test(n) ? X : z)), r === t ? o && "get"in o && null !== (a = o.get(e, n)) ? a : (a = x.find.attr(e, n), null == a ? t : a) : null !== r ? o && "set"in o && (a = o.set(e, r, n)) !== t ? a : (e.setAttribute(n, r + ""), r) : (x.removeAttr(e, n), t))
    }, removeAttr: function (e, t) {
        var n, r, i = 0, o = t && t.match(T);
        if (o && 1 === e.nodeType)while (n = o[i++])r = x.propFix[n] || n, x.expr.match.bool.test(n) ? K && Q || !G.test(n) ? e[r] = !1 : e[x.camelCase("default-" + n)] = e[r] = !1 : x.attr(e, n, ""), e.removeAttribute(Q ? n : r)
    }, attrHooks: {type: {set: function (e, t) {
        if (!x.support.radioValue && "radio" === t && x.nodeName(e, "input")) {
            var n = e.value;
            return e.setAttribute("type", t), n && (e.value = n), t
        }
    }}}, propFix: {"for": "htmlFor", "class": "className"}, prop: function (e, n, r) {
        var i, o, a, s = e.nodeType;
        if (e && 3 !== s && 8 !== s && 2 !== s)return a = 1 !== s || !x.isXMLDoc(e), a && (n = x.propFix[n] || n, o = x.propHooks[n]), r !== t ? o && "set"in o && (i = o.set(e, r, n)) !== t ? i : e[n] = r : o && "get"in o && null !== (i = o.get(e, n)) ? i : e[n]
    }, propHooks: {tabIndex: {get: function (e) {
        var t = x.find.attr(e, "tabindex");
        return t ? parseInt(t, 10) : Y.test(e.nodeName) || J.test(e.nodeName) && e.href ? 0 : -1
    }}}}), X = {set: function (e, t, n) {
        return t === !1 ? x.removeAttr(e, n) : K && Q || !G.test(n) ? e.setAttribute(!Q && x.propFix[n] || n, n) : e[x.camelCase("default-" + n)] = e[n] = !0, n
    }}, x.each(x.expr.match.bool.source.match(/\w+/g), function (e, n) {
        var r = x.expr.attrHandle[n] || x.find.attr;
        x.expr.attrHandle[n] = K && Q || !G.test(n) ? function (e, n, i) {
            var o = x.expr.attrHandle[n], a = i ? t : (x.expr.attrHandle[n] = t) != r(e, n, i) ? n.toLowerCase() : null;
            return x.expr.attrHandle[n] = o, a
        } : function (e, n, r) {
            return r ? t : e[x.camelCase("default-" + n)] ? n.toLowerCase() : null
        }
    }), K && Q || (x.attrHooks.value = {set: function (e, n, r) {
        return x.nodeName(e, "input") ? (e.defaultValue = n, t) : z && z.set(e, n, r)
    }}), Q || (z = {set: function (e, n, r) {
        var i = e.getAttributeNode(r);
        return i || e.setAttributeNode(i = e.ownerDocument.createAttribute(r)), i.value = n += "", "value" === r || n === e.getAttribute(r) ? n : t
    }}, x.expr.attrHandle.id = x.expr.attrHandle.name = x.expr.attrHandle.coords = function (e, n, r) {
        var i;
        return r ? t : (i = e.getAttributeNode(n)) && "" !== i.value ? i.value : null
    }, x.valHooks.button = {get: function (e, n) {
        var r = e.getAttributeNode(n);
        return r && r.specified ? r.value : t
    }, set: z.set}, x.attrHooks.contenteditable = {set: function (e, t, n) {
        z.set(e, "" === t ? !1 : t, n)
    }}, x.each(["width", "height"], function (e, n) {
        x.attrHooks[n] = {set: function (e, r) {
            return"" === r ? (e.setAttribute(n, "auto"), r) : t
        }}
    })), x.support.hrefNormalized || x.each(["href", "src"], function (e, t) {
        x.propHooks[t] = {get: function (e) {
            return e.getAttribute(t, 4)
        }}
    }), x.support.style || (x.attrHooks.style = {get: function (e) {
        return e.style.cssText || t
    }, set: function (e, t) {
        return e.style.cssText = t + ""
    }}), x.support.optSelected || (x.propHooks.selected = {get: function (e) {
        var t = e.parentNode;
        return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null
    }}), x.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        x.propFix[this.toLowerCase()] = this
    }), x.support.enctype || (x.propFix.enctype = "encoding"), x.each(["radio", "checkbox"], function () {
        x.valHooks[this] = {set: function (e, n) {
            return x.isArray(n) ? e.checked = x.inArray(x(e).val(), n) >= 0 : t
        }}, x.support.checkOn || (x.valHooks[this].get = function (e) {
            return null === e.getAttribute("value") ? "on" : e.value
        })
    });
    var Z = /^(?:input|select|textarea)$/i, et = /^key/, tt = /^(?:mouse|contextmenu)|click/, nt = /^(?:focusinfocus|focusoutblur)$/, rt = /^([^.]*)(?:\.(.+)|)$/;

    function it() {
        return!0
    }

    function ot() {
        return!1
    }

    function at() {
        try {
            return a.activeElement
        } catch (e) {
        }
    }

    x.event = {global: {}, add: function (e, n, r, o, a) {
        var s, l, u, c, p, f, d, h, g, m, y, v = x._data(e);
        if (v) {
            r.handler && (c = r, r = c.handler, a = c.selector), r.guid || (r.guid = x.guid++), (l = v.events) || (l = v.events = {}), (f = v.handle) || (f = v.handle = function (e) {
                return typeof x === i || e && x.event.triggered === e.type ? t : x.event.dispatch.apply(f.elem, arguments)
            }, f.elem = e), n = (n || "").match(T) || [""], u = n.length;
            while (u--)s = rt.exec(n[u]) || [], g = y = s[1], m = (s[2] || "").split(".").sort(), g && (p = x.event.special[g] || {}, g = (a ? p.delegateType : p.bindType) || g, p = x.event.special[g] || {}, d = x.extend({type: g, origType: y, data: o, handler: r, guid: r.guid, selector: a, needsContext: a && x.expr.match.needsContext.test(a), namespace: m.join(".")}, c), (h = l[g]) || (h = l[g] = [], h.delegateCount = 0, p.setup && p.setup.call(e, o, m, f) !== !1 || (e.addEventListener ? e.addEventListener(g, f, !1) : e.attachEvent && e.attachEvent("on" + g, f))), p.add && (p.add.call(e, d), d.handler.guid || (d.handler.guid = r.guid)), a ? h.splice(h.delegateCount++, 0, d) : h.push(d), x.event.global[g] = !0);
            e = null
        }
    }, remove: function (e, t, n, r, i) {
        var o, a, s, l, u, c, p, f, d, h, g, m = x.hasData(e) && x._data(e);
        if (m && (c = m.events)) {
            t = (t || "").match(T) || [""], u = t.length;
            while (u--)if (s = rt.exec(t[u]) || [], d = g = s[1], h = (s[2] || "").split(".").sort(), d) {
                p = x.event.special[d] || {}, d = (r ? p.delegateType : p.bindType) || d, f = c[d] || [], s = s[2] && RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), l = o = f.length;
                while (o--)a = f[o], !i && g !== a.origType || n && n.guid !== a.guid || s && !s.test(a.namespace) || r && r !== a.selector && ("**" !== r || !a.selector) || (f.splice(o, 1), a.selector && f.delegateCount--, p.remove && p.remove.call(e, a));
                l && !f.length && (p.teardown && p.teardown.call(e, h, m.handle) !== !1 || x.removeEvent(e, d, m.handle), delete c[d])
            } else for (d in c)x.event.remove(e, d + t[u], n, r, !0);
            x.isEmptyObject(c) && (delete m.handle, x._removeData(e, "events"))
        }
    }, trigger: function (n, r, i, o) {
        var s, l, u, c, p, f, d, h = [i || a], g = v.call(n, "type") ? n.type : n, m = v.call(n, "namespace") ? n.namespace.split(".") : [];
        if (u = f = i = i || a, 3 !== i.nodeType && 8 !== i.nodeType && !nt.test(g + x.event.triggered) && (g.indexOf(".") >= 0 && (m = g.split("."), g = m.shift(), m.sort()), l = 0 > g.indexOf(":") && "on" + g, n = n[x.expando] ? n : new x.Event(g, "object" == typeof n && n), n.isTrigger = o ? 2 : 3, n.namespace = m.join("."), n.namespace_re = n.namespace ? RegExp("(^|\\.)" + m.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, n.result = t, n.target || (n.target = i), r = null == r ? [n] : x.makeArray(r, [n]), p = x.event.special[g] || {}, o || !p.trigger || p.trigger.apply(i, r) !== !1)) {
            if (!o && !p.noBubble && !x.isWindow(i)) {
                for (c = p.delegateType || g, nt.test(c + g) || (u = u.parentNode); u; u = u.parentNode)h.push(u), f = u;
                f === (i.ownerDocument || a) && h.push(f.defaultView || f.parentWindow || e)
            }
            d = 0;
            while ((u = h[d++]) && !n.isPropagationStopped())n.type = d > 1 ? c : p.bindType || g, s = (x._data(u, "events") || {})[n.type] && x._data(u, "handle"), s && s.apply(u, r), s = l && u[l], s && x.acceptData(u) && s.apply && s.apply(u, r) === !1 && n.preventDefault();
            if (n.type = g, !o && !n.isDefaultPrevented() && (!p._default || p._default.apply(h.pop(), r) === !1) && x.acceptData(i) && l && i[g] && !x.isWindow(i)) {
                f = i[l], f && (i[l] = null), x.event.triggered = g;
                try {
                    i[g]()
                } catch (y) {
                }
                x.event.triggered = t, f && (i[l] = f)
            }
            return n.result
        }
    }, dispatch: function (e) {
        e = x.event.fix(e);
        var n, r, i, o, a, s = [], l = g.call(arguments), u = (x._data(this, "events") || {})[e.type] || [], c = x.event.special[e.type] || {};
        if (l[0] = e, e.delegateTarget = this, !c.preDispatch || c.preDispatch.call(this, e) !== !1) {
            s = x.event.handlers.call(this, e, u), n = 0;
            while ((o = s[n++]) && !e.isPropagationStopped()) {
                e.currentTarget = o.elem, a = 0;
                while ((i = o.handlers[a++]) && !e.isImmediatePropagationStopped())(!e.namespace_re || e.namespace_re.test(i.namespace)) && (e.handleObj = i, e.data = i.data, r = ((x.event.special[i.origType] || {}).handle || i.handler).apply(o.elem, l), r !== t && (e.result = r) === !1 && (e.preventDefault(), e.stopPropagation()))
            }
            return c.postDispatch && c.postDispatch.call(this, e), e.result
        }
    }, handlers: function (e, n) {
        var r, i, o, a, s = [], l = n.delegateCount, u = e.target;
        if (l && u.nodeType && (!e.button || "click" !== e.type))for (; u != this; u = u.parentNode || this)if (1 === u.nodeType && (u.disabled !== !0 || "click" !== e.type)) {
            for (o = [], a = 0; l > a; a++)i = n[a], r = i.selector + " ", o[r] === t && (o[r] = i.needsContext ? x(r, this).index(u) >= 0 : x.find(r, this, null, [u]).length), o[r] && o.push(i);
            o.length && s.push({elem: u, handlers: o})
        }
        return n.length > l && s.push({elem: this, handlers: n.slice(l)}), s
    }, fix: function (e) {
        if (e[x.expando])return e;
        var t, n, r, i = e.type, o = e, s = this.fixHooks[i];
        s || (this.fixHooks[i] = s = tt.test(i) ? this.mouseHooks : et.test(i) ? this.keyHooks : {}), r = s.props ? this.props.concat(s.props) : this.props, e = new x.Event(o), t = r.length;
        while (t--)n = r[t], e[n] = o[n];
        return e.target || (e.target = o.srcElement || a), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, s.filter ? s.filter(e, o) : e
    }, props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: {props: "char charCode key keyCode".split(" "), filter: function (e, t) {
        return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e
    }}, mouseHooks: {props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (e, n) {
        var r, i, o, s = n.button, l = n.fromElement;
        return null == e.pageX && null != n.clientX && (i = e.target.ownerDocument || a, o = i.documentElement, r = i.body, e.pageX = n.clientX + (o && o.scrollLeft || r && r.scrollLeft || 0) - (o && o.clientLeft || r && r.clientLeft || 0), e.pageY = n.clientY + (o && o.scrollTop || r && r.scrollTop || 0) - (o && o.clientTop || r && r.clientTop || 0)), !e.relatedTarget && l && (e.relatedTarget = l === e.target ? n.toElement : l), e.which || s === t || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), e
    }}, special: {load: {noBubble: !0}, focus: {trigger: function () {
        if (this !== at() && this.focus)try {
            return this.focus(), !1
        } catch (e) {
        }
    }, delegateType: "focusin"}, blur: {trigger: function () {
        return this === at() && this.blur ? (this.blur(), !1) : t
    }, delegateType: "focusout"}, click: {trigger: function () {
        return x.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : t
    }, _default: function (e) {
        return x.nodeName(e.target, "a")
    }}, beforeunload: {postDispatch: function (e) {
        e.result !== t && (e.originalEvent.returnValue = e.result)
    }}}, simulate: function (e, t, n, r) {
        var i = x.extend(new x.Event, n, {type: e, isSimulated: !0, originalEvent: {}});
        r ? x.event.trigger(i, null, t) : x.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault()
    }}, x.removeEvent = a.removeEventListener ? function (e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1)
    } : function (e, t, n) {
        var r = "on" + t;
        e.detachEvent && (typeof e[r] === i && (e[r] = null), e.detachEvent(r, n))
    }, x.Event = function (e, n) {
        return this instanceof x.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.returnValue === !1 || e.getPreventDefault && e.getPreventDefault() ? it : ot) : this.type = e, n && x.extend(this, n), this.timeStamp = e && e.timeStamp || x.now(), this[x.expando] = !0, t) : new x.Event(e, n)
    }, x.Event.prototype = {isDefaultPrevented: ot, isPropagationStopped: ot, isImmediatePropagationStopped: ot, preventDefault: function () {
        var e = this.originalEvent;
        this.isDefaultPrevented = it, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
    }, stopPropagation: function () {
        var e = this.originalEvent;
        this.isPropagationStopped = it, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
    }, stopImmediatePropagation: function () {
        this.isImmediatePropagationStopped = it, this.stopPropagation()
    }}, x.each({mouseenter: "mouseover", mouseleave: "mouseout"}, function (e, t) {
        x.event.special[e] = {delegateType: t, bindType: t, handle: function (e) {
            var n, r = this, i = e.relatedTarget, o = e.handleObj;
            return(!i || i !== r && !x.contains(r, i)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n
        }}
    }), x.support.submitBubbles || (x.event.special.submit = {setup: function () {
        return x.nodeName(this, "form") ? !1 : (x.event.add(this, "click._submit keypress._submit", function (e) {
            var n = e.target, r = x.nodeName(n, "input") || x.nodeName(n, "button") ? n.form : t;
            r && !x._data(r, "submitBubbles") && (x.event.add(r, "submit._submit", function (e) {
                e._submit_bubble = !0
            }), x._data(r, "submitBubbles", !0))
        }), t)
    }, postDispatch: function (e) {
        e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && x.event.simulate("submit", this.parentNode, e, !0))
    }, teardown: function () {
        return x.nodeName(this, "form") ? !1 : (x.event.remove(this, "._submit"), t)
    }}), x.support.changeBubbles || (x.event.special.change = {setup: function () {
        return Z.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (x.event.add(this, "propertychange._change", function (e) {
            "checked" === e.originalEvent.propertyName && (this._just_changed = !0)
        }), x.event.add(this, "click._change", function (e) {
            this._just_changed && !e.isTrigger && (this._just_changed = !1), x.event.simulate("change", this, e, !0)
        })), !1) : (x.event.add(this, "beforeactivate._change", function (e) {
            var t = e.target;
            Z.test(t.nodeName) && !x._data(t, "changeBubbles") && (x.event.add(t, "change._change", function (e) {
                !this.parentNode || e.isSimulated || e.isTrigger || x.event.simulate("change", this.parentNode, e, !0)
            }), x._data(t, "changeBubbles", !0))
        }), t)
    }, handle: function (e) {
        var n = e.target;
        return this !== n || e.isSimulated || e.isTrigger || "radio" !== n.type && "checkbox" !== n.type ? e.handleObj.handler.apply(this, arguments) : t
    }, teardown: function () {
        return x.event.remove(this, "._change"), !Z.test(this.nodeName)
    }}), x.support.focusinBubbles || x.each({focus: "focusin", blur: "focusout"}, function (e, t) {
        var n = 0, r = function (e) {
            x.event.simulate(t, e.target, x.event.fix(e), !0)
        };
        x.event.special[t] = {setup: function () {
            0 === n++ && a.addEventListener(e, r, !0)
        }, teardown: function () {
            0 === --n && a.removeEventListener(e, r, !0)
        }}
    }), x.fn.extend({on: function (e, n, r, i, o) {
        var a, s;
        if ("object" == typeof e) {
            "string" != typeof n && (r = r || n, n = t);
            for (a in e)this.on(a, n, r, e[a], o);
            return this
        }
        if (null == r && null == i ? (i = n, r = n = t) : null == i && ("string" == typeof n ? (i = r, r = t) : (i = r, r = n, n = t)), i === !1)i = ot; else if (!i)return this;
        return 1 === o && (s = i, i = function (e) {
            return x().off(e), s.apply(this, arguments)
        }, i.guid = s.guid || (s.guid = x.guid++)), this.each(function () {
            x.event.add(this, e, i, r, n)
        })
    }, one: function (e, t, n, r) {
        return this.on(e, t, n, r, 1)
    }, off: function (e, n, r) {
        var i, o;
        if (e && e.preventDefault && e.handleObj)return i = e.handleObj, x(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this;
        if ("object" == typeof e) {
            for (o in e)this.off(o, n, e[o]);
            return this
        }
        return(n === !1 || "function" == typeof n) && (r = n, n = t), r === !1 && (r = ot), this.each(function () {
            x.event.remove(this, e, r, n)
        })
    }, trigger: function (e, t) {
        return this.each(function () {
            x.event.trigger(e, t, this)
        })
    }, triggerHandler: function (e, n) {
        var r = this[0];
        return r ? x.event.trigger(e, n, r, !0) : t
    }});
    var st = /^.[^:#\[\.,]*$/, lt = /^(?:parents|prev(?:Until|All))/, ut = x.expr.match.needsContext, ct = {children: !0, contents: !0, next: !0, prev: !0};
    x.fn.extend({find: function (e) {
        var t, n = [], r = this, i = r.length;
        if ("string" != typeof e)return this.pushStack(x(e).filter(function () {
            for (t = 0; i > t; t++)if (x.contains(r[t], this))return!0
        }));
        for (t = 0; i > t; t++)x.find(e, r[t], n);
        return n = this.pushStack(i > 1 ? x.unique(n) : n), n.selector = this.selector ? this.selector + " " + e : e, n
    }, has: function (e) {
        var t, n = x(e, this), r = n.length;
        return this.filter(function () {
            for (t = 0; r > t; t++)if (x.contains(this, n[t]))return!0
        })
    }, not: function (e) {
        return this.pushStack(ft(this, e || [], !0))
    }, filter: function (e) {
        return this.pushStack(ft(this, e || [], !1))
    }, is: function (e) {
        return!!ft(this, "string" == typeof e && ut.test(e) ? x(e) : e || [], !1).length
    }, closest: function (e, t) {
        var n, r = 0, i = this.length, o = [], a = ut.test(e) || "string" != typeof e ? x(e, t || this.context) : 0;
        for (; i > r; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (11 > n.nodeType && (a ? a.index(n) > -1 : 1 === n.nodeType && x.find.matchesSelector(n, e))) {
            n = o.push(n);
            break
        }
        return this.pushStack(o.length > 1 ? x.unique(o) : o)
    }, index: function (e) {
        return e ? "string" == typeof e ? x.inArray(this[0], x(e)) : x.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
    }, add: function (e, t) {
        var n = "string" == typeof e ? x(e, t) : x.makeArray(e && e.nodeType ? [e] : e), r = x.merge(this.get(), n);
        return this.pushStack(x.unique(r))
    }, addBack: function (e) {
        return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
    }});
    function pt(e, t) {
        do e = e[t]; while (e && 1 !== e.nodeType);
        return e
    }

    x.each({parent: function (e) {
        var t = e.parentNode;
        return t && 11 !== t.nodeType ? t : null
    }, parents: function (e) {
        return x.dir(e, "parentNode")
    }, parentsUntil: function (e, t, n) {
        return x.dir(e, "parentNode", n)
    }, next: function (e) {
        return pt(e, "nextSibling")
    }, prev: function (e) {
        return pt(e, "previousSibling")
    }, nextAll: function (e) {
        return x.dir(e, "nextSibling")
    }, prevAll: function (e) {
        return x.dir(e, "previousSibling")
    }, nextUntil: function (e, t, n) {
        return x.dir(e, "nextSibling", n)
    }, prevUntil: function (e, t, n) {
        return x.dir(e, "previousSibling", n)
    }, siblings: function (e) {
        return x.sibling((e.parentNode || {}).firstChild, e)
    }, children: function (e) {
        return x.sibling(e.firstChild)
    }, contents: function (e) {
        return x.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : x.merge([], e.childNodes)
    }}, function (e, t) {
        x.fn[e] = function (n, r) {
            var i = x.map(this, t, n);
            return"Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = x.filter(r, i)), this.length > 1 && (ct[e] || (i = x.unique(i)), lt.test(e) && (i = i.reverse())), this.pushStack(i)
        }
    }), x.extend({filter: function (e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? x.find.matchesSelector(r, e) ? [r] : [] : x.find.matches(e, x.grep(t, function (e) {
            return 1 === e.nodeType
        }))
    }, dir: function (e, n, r) {
        var i = [], o = e[n];
        while (o && 9 !== o.nodeType && (r === t || 1 !== o.nodeType || !x(o).is(r)))1 === o.nodeType && i.push(o), o = o[n];
        return i
    }, sibling: function (e, t) {
        var n = [];
        for (; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e);
        return n
    }});
    function ft(e, t, n) {
        if (x.isFunction(t))return x.grep(e, function (e, r) {
            return!!t.call(e, r, e) !== n
        });
        if (t.nodeType)return x.grep(e, function (e) {
            return e === t !== n
        });
        if ("string" == typeof t) {
            if (st.test(t))return x.filter(t, e, n);
            t = x.filter(t, e)
        }
        return x.grep(e, function (e) {
            return x.inArray(e, t) >= 0 !== n
        })
    }

    function dt(e) {
        var t = ht.split("|"), n = e.createDocumentFragment();
        if (n.createElement)while (t.length)n.createElement(t.pop());
        return n
    }

    var ht = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", gt = / jQuery\d+="(?:null|\d+)"/g, mt = RegExp("<(?:" + ht + ")[\\s/>]", "i"), yt = /^\s+/, vt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, bt = /<([\w:]+)/, xt = /<tbody/i, wt = /<|&#?\w+;/, Tt = /<(?:script|style|link)/i, Ct = /^(?:checkbox|radio)$/i, Nt = /checked\s*(?:[^=]|=\s*.checked.)/i, kt = /^$|\/(?:java|ecma)script/i, Et = /^true\/(.*)/, St = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, At = {option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], area: [1, "<map>", "</map>"], param: [1, "<object>", "</object>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: x.support.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]}, jt = dt(a), Dt = jt.appendChild(a.createElement("div"));
    At.optgroup = At.option, At.tbody = At.tfoot = At.colgroup = At.caption = At.thead, At.th = At.td, x.fn.extend({text: function (e) {
        return x.access(this, function (e) {
            return e === t ? x.text(this) : this.empty().append((this[0] && this[0].ownerDocument || a).createTextNode(e))
        }, null, e, arguments.length)
    }, append: function () {
        return this.domManip(arguments, function (e) {
            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                var t = Lt(this, e);
                t.appendChild(e)
            }
        })
    }, prepend: function () {
        return this.domManip(arguments, function (e) {
            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                var t = Lt(this, e);
                t.insertBefore(e, t.firstChild)
            }
        })
    }, before: function () {
        return this.domManip(arguments, function (e) {
            this.parentNode && this.parentNode.insertBefore(e, this)
        })
    }, after: function () {
        return this.domManip(arguments, function (e) {
            this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
        })
    }, remove: function (e, t) {
        var n, r = e ? x.filter(e, this) : this, i = 0;
        for (; null != (n = r[i]); i++)t || 1 !== n.nodeType || x.cleanData(Ft(n)), n.parentNode && (t && x.contains(n.ownerDocument, n) && _t(Ft(n, "script")), n.parentNode.removeChild(n));
        return this
    }, empty: function () {
        var e, t = 0;
        for (; null != (e = this[t]); t++) {
            1 === e.nodeType && x.cleanData(Ft(e, !1));
            while (e.firstChild)e.removeChild(e.firstChild);
            e.options && x.nodeName(e, "select") && (e.options.length = 0)
        }
        return this
    }, clone: function (e, t) {
        return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () {
            return x.clone(this, e, t)
        })
    }, html: function (e) {
        return x.access(this, function (e) {
            var n = this[0] || {}, r = 0, i = this.length;
            if (e === t)return 1 === n.nodeType ? n.innerHTML.replace(gt, "") : t;
            if (!("string" != typeof e || Tt.test(e) || !x.support.htmlSerialize && mt.test(e) || !x.support.leadingWhitespace && yt.test(e) || At[(bt.exec(e) || ["", ""])[1].toLowerCase()])) {
                e = e.replace(vt, "<$1></$2>");
                try {
                    for (; i > r; r++)n = this[r] || {}, 1 === n.nodeType && (x.cleanData(Ft(n, !1)), n.innerHTML = e);
                    n = 0
                } catch (o) {
                }
            }
            n && this.empty().append(e)
        }, null, e, arguments.length)
    }, replaceWith: function () {
        var e = x.map(this, function (e) {
            return[e.nextSibling, e.parentNode]
        }), t = 0;
        return this.domManip(arguments, function (n) {
            var r = e[t++], i = e[t++];
            i && (r && r.parentNode !== i && (r = this.nextSibling), x(this).remove(), i.insertBefore(n, r))
        }, !0), t ? this : this.remove()
    }, detach: function (e) {
        return this.remove(e, !0)
    }, domManip: function (e, t, n) {
        e = d.apply([], e);
        var r, i, o, a, s, l, u = 0, c = this.length, p = this, f = c - 1, h = e[0], g = x.isFunction(h);
        if (g || !(1 >= c || "string" != typeof h || x.support.checkClone) && Nt.test(h))return this.each(function (r) {
            var i = p.eq(r);
            g && (e[0] = h.call(this, r, i.html())), i.domManip(e, t, n)
        });
        if (c && (l = x.buildFragment(e, this[0].ownerDocument, !1, !n && this), r = l.firstChild, 1 === l.childNodes.length && (l = r), r)) {
            for (a = x.map(Ft(l, "script"), Ht), o = a.length; c > u; u++)i = l, u !== f && (i = x.clone(i, !0, !0), o && x.merge(a, Ft(i, "script"))), t.call(this[u], i, u);
            if (o)for (s = a[a.length - 1].ownerDocument, x.map(a, qt), u = 0; o > u; u++)i = a[u], kt.test(i.type || "") && !x._data(i, "globalEval") && x.contains(s, i) && (i.src ? x._evalUrl(i.src) : x.globalEval((i.text || i.textContent || i.innerHTML || "").replace(St, "")));
            l = r = null
        }
        return this
    }});
    function Lt(e, t) {
        return x.nodeName(e, "table") && x.nodeName(1 === t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e
    }

    function Ht(e) {
        return e.type = (null !== x.find.attr(e, "type")) + "/" + e.type, e
    }

    function qt(e) {
        var t = Et.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"), e
    }

    function _t(e, t) {
        var n, r = 0;
        for (; null != (n = e[r]); r++)x._data(n, "globalEval", !t || x._data(t[r], "globalEval"))
    }

    function Mt(e, t) {
        if (1 === t.nodeType && x.hasData(e)) {
            var n, r, i, o = x._data(e), a = x._data(t, o), s = o.events;
            if (s) {
                delete a.handle, a.events = {};
                for (n in s)for (r = 0, i = s[n].length; i > r; r++)x.event.add(t, n, s[n][r])
            }
            a.data && (a.data = x.extend({}, a.data))
        }
    }

    function Ot(e, t) {
        var n, r, i;
        if (1 === t.nodeType) {
            if (n = t.nodeName.toLowerCase(), !x.support.noCloneEvent && t[x.expando]) {
                i = x._data(t);
                for (r in i.events)x.removeEvent(t, r, i.handle);
                t.removeAttribute(x.expando)
            }
            "script" === n && t.text !== e.text ? (Ht(t).text = e.text, qt(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), x.support.html5Clone && e.innerHTML && !x.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && Ct.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue)
        }
    }

    x.each({appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith"}, function (e, t) {
        x.fn[e] = function (e) {
            var n, r = 0, i = [], o = x(e), a = o.length - 1;
            for (; a >= r; r++)n = r === a ? this : this.clone(!0), x(o[r])[t](n), h.apply(i, n.get());
            return this.pushStack(i)
        }
    });
    function Ft(e, n) {
        var r, o, a = 0, s = typeof e.getElementsByTagName !== i ? e.getElementsByTagName(n || "*") : typeof e.querySelectorAll !== i ? e.querySelectorAll(n || "*") : t;
        if (!s)for (s = [], r = e.childNodes || e; null != (o = r[a]); a++)!n || x.nodeName(o, n) ? s.push(o) : x.merge(s, Ft(o, n));
        return n === t || n && x.nodeName(e, n) ? x.merge([e], s) : s
    }

    function Bt(e) {
        Ct.test(e.type) && (e.defaultChecked = e.checked)
    }

    x.extend({clone: function (e, t, n) {
        var r, i, o, a, s, l = x.contains(e.ownerDocument, e);
        if (x.support.html5Clone || x.isXMLDoc(e) || !mt.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (Dt.innerHTML = e.outerHTML, Dt.removeChild(o = Dt.firstChild)), !(x.support.noCloneEvent && x.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || x.isXMLDoc(e)))for (r = Ft(o), s = Ft(e), a = 0; null != (i = s[a]); ++a)r[a] && Ot(i, r[a]);
        if (t)if (n)for (s = s || Ft(e), r = r || Ft(o), a = 0; null != (i = s[a]); a++)Mt(i, r[a]); else Mt(e, o);
        return r = Ft(o, "script"), r.length > 0 && _t(r, !l && Ft(e, "script")), r = s = i = null, o
    }, buildFragment: function (e, t, n, r) {
        var i, o, a, s, l, u, c, p = e.length, f = dt(t), d = [], h = 0;
        for (; p > h; h++)if (o = e[h], o || 0 === o)if ("object" === x.type(o))x.merge(d, o.nodeType ? [o] : o); else if (wt.test(o)) {
            s = s || f.appendChild(t.createElement("div")), l = (bt.exec(o) || ["", ""])[1].toLowerCase(), c = At[l] || At._default, s.innerHTML = c[1] + o.replace(vt, "<$1></$2>") + c[2], i = c[0];
            while (i--)s = s.lastChild;
            if (!x.support.leadingWhitespace && yt.test(o) && d.push(t.createTextNode(yt.exec(o)[0])), !x.support.tbody) {
                o = "table" !== l || xt.test(o) ? "<table>" !== c[1] || xt.test(o) ? 0 : s : s.firstChild, i = o && o.childNodes.length;
                while (i--)x.nodeName(u = o.childNodes[i], "tbody") && !u.childNodes.length && o.removeChild(u)
            }
            x.merge(d, s.childNodes), s.textContent = "";
            while (s.firstChild)s.removeChild(s.firstChild);
            s = f.lastChild
        } else d.push(t.createTextNode(o));
        s && f.removeChild(s), x.support.appendChecked || x.grep(Ft(d, "input"), Bt), h = 0;
        while (o = d[h++])if ((!r || -1 === x.inArray(o, r)) && (a = x.contains(o.ownerDocument, o), s = Ft(f.appendChild(o), "script"), a && _t(s), n)) {
            i = 0;
            while (o = s[i++])kt.test(o.type || "") && n.push(o)
        }
        return s = null, f
    }, cleanData: function (e, t) {
        var n, r, o, a, s = 0, l = x.expando, u = x.cache, c = x.support.deleteExpando, f = x.event.special;
        for (; null != (n = e[s]); s++)if ((t || x.acceptData(n)) && (o = n[l], a = o && u[o])) {
            if (a.events)for (r in a.events)f[r] ? x.event.remove(n, r) : x.removeEvent(n, r, a.handle);
            u[o] && (delete u[o], c ? delete n[l] : typeof n.removeAttribute !== i ? n.removeAttribute(l) : n[l] = null, p.push(o))
        }
    }, _evalUrl: function (e) {
        return x.ajax({url: e, type: "GET", dataType: "script", async: !1, global: !1, "throws": !0})
    }}), x.fn.extend({wrapAll: function (e) {
        if (x.isFunction(e))return this.each(function (t) {
            x(this).wrapAll(e.call(this, t))
        });
        if (this[0]) {
            var t = x(e, this[0].ownerDocument).eq(0).clone(!0);
            this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
                var e = this;
                while (e.firstChild && 1 === e.firstChild.nodeType)e = e.firstChild;
                return e
            }).append(this)
        }
        return this
    }, wrapInner: function (e) {
        return x.isFunction(e) ? this.each(function (t) {
            x(this).wrapInner(e.call(this, t))
        }) : this.each(function () {
            var t = x(this), n = t.contents();
            n.length ? n.wrapAll(e) : t.append(e)
        })
    }, wrap: function (e) {
        var t = x.isFunction(e);
        return this.each(function (n) {
            x(this).wrapAll(t ? e.call(this, n) : e)
        })
    }, unwrap: function () {
        return this.parent().each(function () {
            x.nodeName(this, "body") || x(this).replaceWith(this.childNodes)
        }).end()
    }});
    var Pt, Rt, Wt, $t = /alpha\([^)]*\)/i, It = /opacity\s*=\s*([^)]*)/, zt = /^(top|right|bottom|left)$/, Xt = /^(none|table(?!-c[ea]).+)/, Ut = /^margin/, Vt = RegExp("^(" + w + ")(.*)$", "i"), Yt = RegExp("^(" + w + ")(?!px)[a-z%]+$", "i"), Jt = RegExp("^([+-])=(" + w + ")", "i"), Gt = {BODY: "block"}, Qt = {position: "absolute", visibility: "hidden", display: "block"}, Kt = {letterSpacing: 0, fontWeight: 400}, Zt = ["Top", "Right", "Bottom", "Left"], en = ["Webkit", "O", "Moz", "ms"];

    function tn(e, t) {
        if (t in e)return t;
        var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = en.length;
        while (i--)if (t = en[i] + n, t in e)return t;
        return r
    }

    function nn(e, t) {
        return e = t || e, "none" === x.css(e, "display") || !x.contains(e.ownerDocument, e)
    }

    function rn(e, t) {
        var n, r, i, o = [], a = 0, s = e.length;
        for (; s > a; a++)r = e[a], r.style && (o[a] = x._data(r, "olddisplay"), n = r.style.display, t ? (o[a] || "none" !== n || (r.style.display = ""), "" === r.style.display && nn(r) && (o[a] = x._data(r, "olddisplay", ln(r.nodeName)))) : o[a] || (i = nn(r), (n && "none" !== n || !i) && x._data(r, "olddisplay", i ? n : x.css(r, "display"))));
        for (a = 0; s > a; a++)r = e[a], r.style && (t && "none" !== r.style.display && "" !== r.style.display || (r.style.display = t ? o[a] || "" : "none"));
        return e
    }

    x.fn.extend({css: function (e, n) {
        return x.access(this, function (e, n, r) {
            var i, o, a = {}, s = 0;
            if (x.isArray(n)) {
                for (o = Rt(e), i = n.length; i > s; s++)a[n[s]] = x.css(e, n[s], !1, o);
                return a
            }
            return r !== t ? x.style(e, n, r) : x.css(e, n)
        }, e, n, arguments.length > 1)
    }, show: function () {
        return rn(this, !0)
    }, hide: function () {
        return rn(this)
    }, toggle: function (e) {
        return"boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
            nn(this) ? x(this).show() : x(this).hide()
        })
    }}), x.extend({cssHooks: {opacity: {get: function (e, t) {
        if (t) {
            var n = Wt(e, "opacity");
            return"" === n ? "1" : n
        }
    }}}, cssNumber: {columnCount: !0, fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0}, cssProps: {"float": x.support.cssFloat ? "cssFloat" : "styleFloat"}, style: function (e, n, r, i) {
        if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
            var o, a, s, l = x.camelCase(n), u = e.style;
            if (n = x.cssProps[l] || (x.cssProps[l] = tn(u, l)), s = x.cssHooks[n] || x.cssHooks[l], r === t)return s && "get"in s && (o = s.get(e, !1, i)) !== t ? o : u[n];
            if (a = typeof r, "string" === a && (o = Jt.exec(r)) && (r = (o[1] + 1) * o[2] + parseFloat(x.css(e, n)), a = "number"), !(null == r || "number" === a && isNaN(r) || ("number" !== a || x.cssNumber[l] || (r += "px"), x.support.clearCloneStyle || "" !== r || 0 !== n.indexOf("background") || (u[n] = "inherit"), s && "set"in s && (r = s.set(e, r, i)) === t)))try {
                u[n] = r
            } catch (c) {
            }
        }
    }, css: function (e, n, r, i) {
        var o, a, s, l = x.camelCase(n);
        return n = x.cssProps[l] || (x.cssProps[l] = tn(e.style, l)), s = x.cssHooks[n] || x.cssHooks[l], s && "get"in s && (a = s.get(e, !0, r)), a === t && (a = Wt(e, n, i)), "normal" === a && n in Kt && (a = Kt[n]), "" === r || r ? (o = parseFloat(a), r === !0 || x.isNumeric(o) ? o || 0 : a) : a
    }}), e.getComputedStyle ? (Rt = function (t) {
        return e.getComputedStyle(t, null)
    }, Wt = function (e, n, r) {
        var i, o, a, s = r || Rt(e), l = s ? s.getPropertyValue(n) || s[n] : t, u = e.style;
        return s && ("" !== l || x.contains(e.ownerDocument, e) || (l = x.style(e, n)), Yt.test(l) && Ut.test(n) && (i = u.width, o = u.minWidth, a = u.maxWidth, u.minWidth = u.maxWidth = u.width = l, l = s.width, u.width = i, u.minWidth = o, u.maxWidth = a)), l
    }) : a.documentElement.currentStyle && (Rt = function (e) {
        return e.currentStyle
    }, Wt = function (e, n, r) {
        var i, o, a, s = r || Rt(e), l = s ? s[n] : t, u = e.style;
        return null == l && u && u[n] && (l = u[n]), Yt.test(l) && !zt.test(n) && (i = u.left, o = e.runtimeStyle, a = o && o.left, a && (o.left = e.currentStyle.left), u.left = "fontSize" === n ? "1em" : l, l = u.pixelLeft + "px", u.left = i, a && (o.left = a)), "" === l ? "auto" : l
    });
    function on(e, t, n) {
        var r = Vt.exec(t);
        return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t
    }

    function an(e, t, n, r, i) {
        var o = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, a = 0;
        for (; 4 > o; o += 2)"margin" === n && (a += x.css(e, n + Zt[o], !0, i)), r ? ("content" === n && (a -= x.css(e, "padding" + Zt[o], !0, i)), "margin" !== n && (a -= x.css(e, "border" + Zt[o] + "Width", !0, i))) : (a += x.css(e, "padding" + Zt[o], !0, i), "padding" !== n && (a += x.css(e, "border" + Zt[o] + "Width", !0, i)));
        return a
    }

    function sn(e, t, n) {
        var r = !0, i = "width" === t ? e.offsetWidth : e.offsetHeight, o = Rt(e), a = x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, o);
        if (0 >= i || null == i) {
            if (i = Wt(e, t, o), (0 > i || null == i) && (i = e.style[t]), Yt.test(i))return i;
            r = a && (x.support.boxSizingReliable || i === e.style[t]), i = parseFloat(i) || 0
        }
        return i + an(e, t, n || (a ? "border" : "content"), r, o) + "px"
    }

    function ln(e) {
        var t = a, n = Gt[e];
        return n || (n = un(e, t), "none" !== n && n || (Pt = (Pt || x("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement), t = (Pt[0].contentWindow || Pt[0].contentDocument).document, t.write("<!doctype html><html><body>"), t.close(), n = un(e, t), Pt.detach()), Gt[e] = n), n
    }

    function un(e, t) {
        var n = x(t.createElement(e)).appendTo(t.body), r = x.css(n[0], "display");
        return n.remove(), r
    }

    x.each(["height", "width"], function (e, n) {
        x.cssHooks[n] = {get: function (e, r, i) {
            return r ? 0 === e.offsetWidth && Xt.test(x.css(e, "display")) ? x.swap(e, Qt, function () {
                return sn(e, n, i)
            }) : sn(e, n, i) : t
        }, set: function (e, t, r) {
            var i = r && Rt(e);
            return on(e, t, r ? an(e, n, r, x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, i), i) : 0)
        }}
    }), x.support.opacity || (x.cssHooks.opacity = {get: function (e, t) {
        return It.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
    }, set: function (e, t) {
        var n = e.style, r = e.currentStyle, i = x.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "", o = r && r.filter || n.filter || "";
        n.zoom = 1, (t >= 1 || "" === t) && "" === x.trim(o.replace($t, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || r && !r.filter) || (n.filter = $t.test(o) ? o.replace($t, i) : o + " " + i)
    }}), x(function () {
        x.support.reliableMarginRight || (x.cssHooks.marginRight = {get: function (e, n) {
            return n ? x.swap(e, {display: "inline-block"}, Wt, [e, "marginRight"]) : t
        }}), !x.support.pixelPosition && x.fn.position && x.each(["top", "left"], function (e, n) {
            x.cssHooks[n] = {get: function (e, r) {
                return r ? (r = Wt(e, n), Yt.test(r) ? x(e).position()[n] + "px" : r) : t
            }}
        })
    }), x.expr && x.expr.filters && (x.expr.filters.hidden = function (e) {
        return 0 >= e.offsetWidth && 0 >= e.offsetHeight || !x.support.reliableHiddenOffsets && "none" === (e.style && e.style.display || x.css(e, "display"))
    }, x.expr.filters.visible = function (e) {
        return!x.expr.filters.hidden(e)
    }), x.each({margin: "", padding: "", border: "Width"}, function (e, t) {
        x.cssHooks[e + t] = {expand: function (n) {
            var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n];
            for (; 4 > r; r++)i[e + Zt[r] + t] = o[r] || o[r - 2] || o[0];
            return i
        }}, Ut.test(e) || (x.cssHooks[e + t].set = on)
    });
    var cn = /%20/g, pn = /\[\]$/, fn = /\r?\n/g, dn = /^(?:submit|button|image|reset|file)$/i, hn = /^(?:input|select|textarea|keygen)/i;
    x.fn.extend({serialize: function () {
        return x.param(this.serializeArray())
    }, serializeArray: function () {
        return this.map(function () {
            var e = x.prop(this, "elements");
            return e ? x.makeArray(e) : this
        }).filter(function () {
            var e = this.type;
            return this.name && !x(this).is(":disabled") && hn.test(this.nodeName) && !dn.test(e) && (this.checked || !Ct.test(e))
        }).map(function (e, t) {
            var n = x(this).val();
            return null == n ? null : x.isArray(n) ? x.map(n, function (e) {
                return{name: t.name, value: e.replace(fn, "\r\n")}
            }) : {name: t.name, value: n.replace(fn, "\r\n")}
        }).get()
    }}), x.param = function (e, n) {
        var r, i = [], o = function (e, t) {
            t = x.isFunction(t) ? t() : null == t ? "" : t, i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
        };
        if (n === t && (n = x.ajaxSettings && x.ajaxSettings.traditional), x.isArray(e) || e.jquery && !x.isPlainObject(e))x.each(e, function () {
            o(this.name, this.value)
        }); else for (r in e)gn(r, e[r], n, o);
        return i.join("&").replace(cn, "+")
    };
    function gn(e, t, n, r) {
        var i;
        if (x.isArray(t))x.each(t, function (t, i) {
            n || pn.test(e) ? r(e, i) : gn(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r)
        }); else if (n || "object" !== x.type(t))r(e, t); else for (i in t)gn(e + "[" + i + "]", t[i], n, r)
    }

    x.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) {
        x.fn[t] = function (e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
        }
    }), x.fn.extend({hover: function (e, t) {
        return this.mouseenter(e).mouseleave(t || e)
    }, bind: function (e, t, n) {
        return this.on(e, null, t, n)
    }, unbind: function (e, t) {
        return this.off(e, null, t)
    }, delegate: function (e, t, n, r) {
        return this.on(t, e, n, r)
    }, undelegate: function (e, t, n) {
        return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
    }});
    var mn, yn, vn = x.now(), bn = /\?/, xn = /#.*$/, wn = /([?&])_=[^&]*/, Tn = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, Cn = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Nn = /^(?:GET|HEAD)$/, kn = /^\/\//, En = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, Sn = x.fn.load, An = {}, jn = {}, Dn = "*/".concat("*");
    try {
        yn = o.href
    } catch (Ln) {
        yn = a.createElement("a"), yn.href = "", yn = yn.href
    }
    mn = En.exec(yn.toLowerCase()) || [];
    function Hn(e) {
        return function (t, n) {
            "string" != typeof t && (n = t, t = "*");
            var r, i = 0, o = t.toLowerCase().match(T) || [];
            if (x.isFunction(n))while (r = o[i++])"+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
        }
    }

    function qn(e, n, r, i) {
        var o = {}, a = e === jn;

        function s(l) {
            var u;
            return o[l] = !0, x.each(e[l] || [], function (e, l) {
                var c = l(n, r, i);
                return"string" != typeof c || a || o[c] ? a ? !(u = c) : t : (n.dataTypes.unshift(c), s(c), !1)
            }), u
        }

        return s(n.dataTypes[0]) || !o["*"] && s("*")
    }

    function _n(e, n) {
        var r, i, o = x.ajaxSettings.flatOptions || {};
        for (i in n)n[i] !== t && ((o[i] ? e : r || (r = {}))[i] = n[i]);
        return r && x.extend(!0, e, r), e
    }

    x.fn.load = function (e, n, r) {
        if ("string" != typeof e && Sn)return Sn.apply(this, arguments);
        var i, o, a, s = this, l = e.indexOf(" ");
        return l >= 0 && (i = e.slice(l, e.length), e = e.slice(0, l)), x.isFunction(n) ? (r = n, n = t) : n && "object" == typeof n && (a = "POST"), s.length > 0 && x.ajax({url: e, type: a, dataType: "html", data: n}).done(function (e) {
            o = arguments, s.html(i ? x("<div>").append(x.parseHTML(e)).find(i) : e)
        }).complete(r && function (e, t) {
            s.each(r, o || [e.responseText, t, e])
        }), this
    }, x.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
        x.fn[t] = function (e) {
            return this.on(t, e)
        }
    }), x.extend({active: 0, lastModified: {}, etag: {}, ajaxSettings: {url: yn, type: "GET", isLocal: Cn.test(mn[1]), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: {"*": Dn, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript"}, contents: {xml: /xml/, html: /html/, json: /json/}, responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"}, converters: {"* text": String, "text html": !0, "text json": x.parseJSON, "text xml": x.parseXML}, flatOptions: {url: !0, context: !0}}, ajaxSetup: function (e, t) {
        return t ? _n(_n(e, x.ajaxSettings), t) : _n(x.ajaxSettings, e)
    }, ajaxPrefilter: Hn(An), ajaxTransport: Hn(jn), ajax: function (e, n) {
        "object" == typeof e && (n = e, e = t), n = n || {};
        var r, i, o, a, s, l, u, c, p = x.ajaxSetup({}, n), f = p.context || p, d = p.context && (f.nodeType || f.jquery) ? x(f) : x.event, h = x.Deferred(), g = x.Callbacks("once memory"), m = p.statusCode || {}, y = {}, v = {}, b = 0, w = "canceled", C = {readyState: 0, getResponseHeader: function (e) {
            var t;
            if (2 === b) {
                if (!c) {
                    c = {};
                    while (t = Tn.exec(a))c[t[1].toLowerCase()] = t[2]
                }
                t = c[e.toLowerCase()]
            }
            return null == t ? null : t
        }, getAllResponseHeaders: function () {
            return 2 === b ? a : null
        }, setRequestHeader: function (e, t) {
            var n = e.toLowerCase();
            return b || (e = v[n] = v[n] || e, y[e] = t), this
        }, overrideMimeType: function (e) {
            return b || (p.mimeType = e), this
        }, statusCode: function (e) {
            var t;
            if (e)if (2 > b)for (t in e)m[t] = [m[t], e[t]]; else C.always(e[C.status]);
            return this
        }, abort: function (e) {
            var t = e || w;
            return u && u.abort(t), k(0, t), this
        }};
        if (h.promise(C).complete = g.add, C.success = C.done, C.error = C.fail, p.url = ((e || p.url || yn) + "").replace(xn, "").replace(kn, mn[1] + "//"), p.type = n.method || n.type || p.method || p.type, p.dataTypes = x.trim(p.dataType || "*").toLowerCase().match(T) || [""], null == p.crossDomain && (r = En.exec(p.url.toLowerCase()), p.crossDomain = !(!r || r[1] === mn[1] && r[2] === mn[2] && (r[3] || ("http:" === r[1] ? "80" : "443")) === (mn[3] || ("http:" === mn[1] ? "80" : "443")))), p.data && p.processData && "string" != typeof p.data && (p.data = x.param(p.data, p.traditional)), qn(An, p, n, C), 2 === b)return C;
        l = p.global, l && 0 === x.active++ && x.event.trigger("ajaxStart"), p.type = p.type.toUpperCase(), p.hasContent = !Nn.test(p.type), o = p.url, p.hasContent || (p.data && (o = p.url += (bn.test(o) ? "&" : "?") + p.data, delete p.data), p.cache === !1 && (p.url = wn.test(o) ? o.replace(wn, "$1_=" + vn++) : o + (bn.test(o) ? "&" : "?") + "_=" + vn++)), p.ifModified && (x.lastModified[o] && C.setRequestHeader("If-Modified-Since", x.lastModified[o]), x.etag[o] && C.setRequestHeader("If-None-Match", x.etag[o])), (p.data && p.hasContent && p.contentType !== !1 || n.contentType) && C.setRequestHeader("Content-Type", p.contentType), C.setRequestHeader("Accept", p.dataTypes[0] && p.accepts[p.dataTypes[0]] ? p.accepts[p.dataTypes[0]] + ("*" !== p.dataTypes[0] ? ", " + Dn + "; q=0.01" : "") : p.accepts["*"]);
        for (i in p.headers)C.setRequestHeader(i, p.headers[i]);
        if (p.beforeSend && (p.beforeSend.call(f, C, p) === !1 || 2 === b))return C.abort();
        w = "abort";
        for (i in{success: 1, error: 1, complete: 1})C[i](p[i]);
        if (u = qn(jn, p, n, C)) {
            C.readyState = 1, l && d.trigger("ajaxSend", [C, p]), p.async && p.timeout > 0 && (s = setTimeout(function () {
                C.abort("timeout")
            }, p.timeout));
            try {
                b = 1, u.send(y, k)
            } catch (N) {
                if (!(2 > b))throw N;
                k(-1, N)
            }
        } else k(-1, "No Transport");
        function k(e, n, r, i) {
            var c, y, v, w, T, N = n;
            2 !== b && (b = 2, s && clearTimeout(s), u = t, a = i || "", C.readyState = e > 0 ? 4 : 0, c = e >= 200 && 300 > e || 304 === e, r && (w = Mn(p, C, r)), w = On(p, w, C, c), c ? (p.ifModified && (T = C.getResponseHeader("Last-Modified"), T && (x.lastModified[o] = T), T = C.getResponseHeader("etag"), T && (x.etag[o] = T)), 204 === e || "HEAD" === p.type ? N = "nocontent" : 304 === e ? N = "notmodified" : (N = w.state, y = w.data, v = w.error, c = !v)) : (v = N, (e || !N) && (N = "error", 0 > e && (e = 0))), C.status = e, C.statusText = (n || N) + "", c ? h.resolveWith(f, [y, N, C]) : h.rejectWith(f, [C, N, v]), C.statusCode(m), m = t, l && d.trigger(c ? "ajaxSuccess" : "ajaxError", [C, p, c ? y : v]), g.fireWith(f, [C, N]), l && (d.trigger("ajaxComplete", [C, p]), --x.active || x.event.trigger("ajaxStop")))
        }

        return C
    }, getJSON: function (e, t, n) {
        return x.get(e, t, n, "json")
    }, getScript: function (e, n) {
        return x.get(e, t, n, "script")
    }}), x.each(["get", "post"], function (e, n) {
        x[n] = function (e, r, i, o) {
            return x.isFunction(r) && (o = o || i, i = r, r = t), x.ajax({url: e, type: n, dataType: o, data: r, success: i})
        }
    });
    function Mn(e, n, r) {
        var i, o, a, s, l = e.contents, u = e.dataTypes;
        while ("*" === u[0])u.shift(), o === t && (o = e.mimeType || n.getResponseHeader("Content-Type"));
        if (o)for (s in l)if (l[s] && l[s].test(o)) {
            u.unshift(s);
            break
        }
        if (u[0]in r)a = u[0]; else {
            for (s in r) {
                if (!u[0] || e.converters[s + " " + u[0]]) {
                    a = s;
                    break
                }
                i || (i = s)
            }
            a = a || i
        }
        return a ? (a !== u[0] && u.unshift(a), r[a]) : t
    }

    function On(e, t, n, r) {
        var i, o, a, s, l, u = {}, c = e.dataTypes.slice();
        if (c[1])for (a in e.converters)u[a.toLowerCase()] = e.converters[a];
        o = c.shift();
        while (o)if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = o, o = c.shift())if ("*" === o)o = l; else if ("*" !== l && l !== o) {
            if (a = u[l + " " + o] || u["* " + o], !a)for (i in u)if (s = i.split(" "), s[1] === o && (a = u[l + " " + s[0]] || u["* " + s[0]])) {
                a === !0 ? a = u[i] : u[i] !== !0 && (o = s[0], c.unshift(s[1]));
                break
            }
            if (a !== !0)if (a && e["throws"])t = a(t); else try {
                t = a(t)
            } catch (p) {
                return{state: "parsererror", error: a ? p : "No conversion from " + l + " to " + o}
            }
        }
        return{state: "success", data: t}
    }

    x.ajaxSetup({accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents: {script: /(?:java|ecma)script/}, converters: {"text script": function (e) {
        return x.globalEval(e), e
    }}}), x.ajaxPrefilter("script", function (e) {
        e.cache === t && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1)
    }), x.ajaxTransport("script", function (e) {
        if (e.crossDomain) {
            var n, r = a.head || x("head")[0] || a.documentElement;
            return{send: function (t, i) {
                n = a.createElement("script"), n.async = !0, e.scriptCharset && (n.charset = e.scriptCharset), n.src = e.url, n.onload = n.onreadystatechange = function (e, t) {
                    (t || !n.readyState || /loaded|complete/.test(n.readyState)) && (n.onload = n.onreadystatechange = null, n.parentNode && n.parentNode.removeChild(n), n = null, t || i(200, "success"))
                }, r.insertBefore(n, r.firstChild)
            }, abort: function () {
                n && n.onload(t, !0)
            }}
        }
    });
    var Fn = [], Bn = /(=)\?(?=&|$)|\?\?/;
    x.ajaxSetup({jsonp: "callback", jsonpCallback: function () {
        var e = Fn.pop() || x.expando + "_" + vn++;
        return this[e] = !0, e
    }}), x.ajaxPrefilter("json jsonp", function (n, r, i) {
        var o, a, s, l = n.jsonp !== !1 && (Bn.test(n.url) ? "url" : "string" == typeof n.data && !(n.contentType || "").indexOf("application/x-www-form-urlencoded") && Bn.test(n.data) && "data");
        return l || "jsonp" === n.dataTypes[0] ? (o = n.jsonpCallback = x.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback, l ? n[l] = n[l].replace(Bn, "$1" + o) : n.jsonp !== !1 && (n.url += (bn.test(n.url) ? "&" : "?") + n.jsonp + "=" + o), n.converters["script json"] = function () {
            return s || x.error(o + " was not called"), s[0]
        }, n.dataTypes[0] = "json", a = e[o], e[o] = function () {
            s = arguments
        }, i.always(function () {
            e[o] = a, n[o] && (n.jsonpCallback = r.jsonpCallback, Fn.push(o)), s && x.isFunction(a) && a(s[0]), s = a = t
        }), "script") : t
    });
    var Pn, Rn, Wn = 0, $n = e.ActiveXObject && function () {
        var e;
        for (e in Pn)Pn[e](t, !0)
    };

    function In() {
        try {
            return new e.XMLHttpRequest
        } catch (t) {
        }
    }

    function zn() {
        try {
            return new e.ActiveXObject("Microsoft.XMLHTTP")
        } catch (t) {
        }
    }

    x.ajaxSettings.xhr = e.ActiveXObject ? function () {
        return!this.isLocal && In() || zn()
    } : In, Rn = x.ajaxSettings.xhr(), x.support.cors = !!Rn && "withCredentials"in Rn, Rn = x.support.ajax = !!Rn, Rn && x.ajaxTransport(function (n) {
        if (!n.crossDomain || x.support.cors) {
            var r;
            return{send: function (i, o) {
                var a, s, l = n.xhr();
                if (n.username ? l.open(n.type, n.url, n.async, n.username, n.password) : l.open(n.type, n.url, n.async), n.xhrFields)for (s in n.xhrFields)l[s] = n.xhrFields[s];
                n.mimeType && l.overrideMimeType && l.overrideMimeType(n.mimeType), n.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest");
                try {
                    for (s in i)l.setRequestHeader(s, i[s])
                } catch (u) {
                }
                l.send(n.hasContent && n.data || null), r = function (e, i) {
                    var s, u, c, p;
                    try {
                        if (r && (i || 4 === l.readyState))if (r = t, a && (l.onreadystatechange = x.noop, $n && delete Pn[a]), i)4 !== l.readyState && l.abort(); else {
                            p = {}, s = l.status, u = l.getAllResponseHeaders(), "string" == typeof l.responseText && (p.text = l.responseText);
                            try {
                                c = l.statusText
                            } catch (f) {
                                c = ""
                            }
                            s || !n.isLocal || n.crossDomain ? 1223 === s && (s = 204) : s = p.text ? 200 : 404
                        }
                    } catch (d) {
                        i || o(-1, d)
                    }
                    p && o(s, c, p, u)
                }, n.async ? 4 === l.readyState ? setTimeout(r) : (a = ++Wn, $n && (Pn || (Pn = {}, x(e).unload($n)), Pn[a] = r), l.onreadystatechange = r) : r()
            }, abort: function () {
                r && r(t, !0)
            }}
        }
    });
    var Xn, Un, Vn = /^(?:toggle|show|hide)$/, Yn = RegExp("^(?:([+-])=|)(" + w + ")([a-z%]*)$", "i"), Jn = /queueHooks$/, Gn = [nr], Qn = {"*": [function (e, t) {
        var n = this.createTween(e, t), r = n.cur(), i = Yn.exec(t), o = i && i[3] || (x.cssNumber[e] ? "" : "px"), a = (x.cssNumber[e] || "px" !== o && +r) && Yn.exec(x.css(n.elem, e)), s = 1, l = 20;
        if (a && a[3] !== o) {
            o = o || a[3], i = i || [], a = +r || 1;
            do s = s || ".5", a /= s, x.style(n.elem, e, a + o); while (s !== (s = n.cur() / r) && 1 !== s && --l)
        }
        return i && (a = n.start = +a || +r || 0, n.unit = o, n.end = i[1] ? a + (i[1] + 1) * i[2] : +i[2]), n
    }]};

    function Kn() {
        return setTimeout(function () {
            Xn = t
        }), Xn = x.now()
    }

    function Zn(e, t, n) {
        var r, i = (Qn[t] || []).concat(Qn["*"]), o = 0, a = i.length;
        for (; a > o; o++)if (r = i[o].call(n, t, e))return r
    }

    function er(e, t, n) {
        var r, i, o = 0, a = Gn.length, s = x.Deferred().always(function () {
            delete l.elem
        }), l = function () {
            if (i)return!1;
            var t = Xn || Kn(), n = Math.max(0, u.startTime + u.duration - t), r = n / u.duration || 0, o = 1 - r, a = 0, l = u.tweens.length;
            for (; l > a; a++)u.tweens[a].run(o);
            return s.notifyWith(e, [u, o, n]), 1 > o && l ? n : (s.resolveWith(e, [u]), !1)
        }, u = s.promise({elem: e, props: x.extend({}, t), opts: x.extend(!0, {specialEasing: {}}, n), originalProperties: t, originalOptions: n, startTime: Xn || Kn(), duration: n.duration, tweens: [], createTween: function (t, n) {
            var r = x.Tween(e, u.opts, t, n, u.opts.specialEasing[t] || u.opts.easing);
            return u.tweens.push(r), r
        }, stop: function (t) {
            var n = 0, r = t ? u.tweens.length : 0;
            if (i)return this;
            for (i = !0; r > n; n++)u.tweens[n].run(1);
            return t ? s.resolveWith(e, [u, t]) : s.rejectWith(e, [u, t]), this
        }}), c = u.props;
        for (tr(c, u.opts.specialEasing); a > o; o++)if (r = Gn[o].call(u, e, c, u.opts))return r;
        return x.map(c, Zn, u), x.isFunction(u.opts.start) && u.opts.start.call(e, u), x.fx.timer(x.extend(l, {elem: e, anim: u, queue: u.opts.queue})), u.progress(u.opts.progress).done(u.opts.done, u.opts.complete).fail(u.opts.fail).always(u.opts.always)
    }

    function tr(e, t) {
        var n, r, i, o, a;
        for (n in e)if (r = x.camelCase(n), i = t[r], o = e[n], x.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), a = x.cssHooks[r], a && "expand"in a) {
            o = a.expand(o), delete e[r];
            for (n in o)n in e || (e[n] = o[n], t[n] = i)
        } else t[r] = i
    }

    x.Animation = x.extend(er, {tweener: function (e, t) {
        x.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" ");
        var n, r = 0, i = e.length;
        for (; i > r; r++)n = e[r], Qn[n] = Qn[n] || [], Qn[n].unshift(t)
    }, prefilter: function (e, t) {
        t ? Gn.unshift(e) : Gn.push(e)
    }});
    function nr(e, t, n) {
        var r, i, o, a, s, l, u = this, c = {}, p = e.style, f = e.nodeType && nn(e), d = x._data(e, "fxshow");
        n.queue || (s = x._queueHooks(e, "fx"), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () {
            s.unqueued || l()
        }), s.unqueued++, u.always(function () {
            u.always(function () {
                s.unqueued--, x.queue(e, "fx").length || s.empty.fire()
            })
        })), 1 === e.nodeType && ("height"in t || "width"in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY], "inline" === x.css(e, "display") && "none" === x.css(e, "float") && (x.support.inlineBlockNeedsLayout && "inline" !== ln(e.nodeName) ? p.zoom = 1 : p.display = "inline-block")), n.overflow && (p.overflow = "hidden", x.support.shrinkWrapBlocks || u.always(function () {
            p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2]
        }));
        for (r in t)if (i = t[r], Vn.exec(i)) {
            if (delete t[r], o = o || "toggle" === i, i === (f ? "hide" : "show"))continue;
            c[r] = d && d[r] || x.style(e, r)
        }
        if (!x.isEmptyObject(c)) {
            d ? "hidden"in d && (f = d.hidden) : d = x._data(e, "fxshow", {}), o && (d.hidden = !f), f ? x(e).show() : u.done(function () {
                x(e).hide()
            }), u.done(function () {
                var t;
                x._removeData(e, "fxshow");
                for (t in c)x.style(e, t, c[t])
            });
            for (r in c)a = Zn(f ? d[r] : 0, r, u), r in d || (d[r] = a.start, f && (a.end = a.start, a.start = "width" === r || "height" === r ? 1 : 0))
        }
    }

    function rr(e, t, n, r, i) {
        return new rr.prototype.init(e, t, n, r, i)
    }

    x.Tween = rr, rr.prototype = {constructor: rr, init: function (e, t, n, r, i, o) {
        this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (x.cssNumber[n] ? "" : "px")
    }, cur: function () {
        var e = rr.propHooks[this.prop];
        return e && e.get ? e.get(this) : rr.propHooks._default.get(this)
    }, run: function (e) {
        var t, n = rr.propHooks[this.prop];
        return this.pos = t = this.options.duration ? x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : rr.propHooks._default.set(this), this
    }}, rr.prototype.init.prototype = rr.prototype, rr.propHooks = {_default: {get: function (e) {
        var t;
        return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = x.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop]
    }, set: function (e) {
        x.fx.step[e.prop] ? x.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[x.cssProps[e.prop]] || x.cssHooks[e.prop]) ? x.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
    }}}, rr.propHooks.scrollTop = rr.propHooks.scrollLeft = {set: function (e) {
        e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
    }}, x.each(["toggle", "show", "hide"], function (e, t) {
        var n = x.fn[t];
        x.fn[t] = function (e, r, i) {
            return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(ir(t, !0), e, r, i)
        }
    }), x.fn.extend({fadeTo: function (e, t, n, r) {
        return this.filter(nn).css("opacity", 0).show().end().animate({opacity: t}, e, n, r)
    }, animate: function (e, t, n, r) {
        var i = x.isEmptyObject(e), o = x.speed(t, n, r), a = function () {
            var t = er(this, x.extend({}, e), o);
            (i || x._data(this, "finish")) && t.stop(!0)
        };
        return a.finish = a, i || o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
    }, stop: function (e, n, r) {
        var i = function (e) {
            var t = e.stop;
            delete e.stop, t(r)
        };
        return"string" != typeof e && (r = n, n = e, e = t), n && e !== !1 && this.queue(e || "fx", []), this.each(function () {
            var t = !0, n = null != e && e + "queueHooks", o = x.timers, a = x._data(this);
            if (n)a[n] && a[n].stop && i(a[n]); else for (n in a)a[n] && a[n].stop && Jn.test(n) && i(a[n]);
            for (n = o.length; n--;)o[n].elem !== this || null != e && o[n].queue !== e || (o[n].anim.stop(r), t = !1, o.splice(n, 1));
            (t || !r) && x.dequeue(this, e)
        })
    }, finish: function (e) {
        return e !== !1 && (e = e || "fx"), this.each(function () {
            var t, n = x._data(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = x.timers, a = r ? r.length : 0;
            for (n.finish = !0, x.queue(this, e, []), i && i.stop && i.stop.call(this, !0), t = o.length; t--;)o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1));
            for (t = 0; a > t; t++)r[t] && r[t].finish && r[t].finish.call(this);
            delete n.finish
        })
    }});
    function ir(e, t) {
        var n, r = {height: e}, i = 0;
        for (t = t ? 1 : 0; 4 > i; i += 2 - t)n = Zt[i], r["margin" + n] = r["padding" + n] = e;
        return t && (r.opacity = r.width = e), r
    }

    x.each({slideDown: ir("show"), slideUp: ir("hide"), slideToggle: ir("toggle"), fadeIn: {opacity: "show"}, fadeOut: {opacity: "hide"}, fadeToggle: {opacity: "toggle"}}, function (e, t) {
        x.fn[e] = function (e, n, r) {
            return this.animate(t, e, n, r)
        }
    }), x.speed = function (e, t, n) {
        var r = e && "object" == typeof e ? x.extend({}, e) : {complete: n || !n && t || x.isFunction(e) && e, duration: e, easing: n && t || t && !x.isFunction(t) && t};
        return r.duration = x.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in x.fx.speeds ? x.fx.speeds[r.duration] : x.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = "fx"), r.old = r.complete, r.complete = function () {
            x.isFunction(r.old) && r.old.call(this), r.queue && x.dequeue(this, r.queue)
        }, r
    }, x.easing = {linear: function (e) {
        return e
    }, swing: function (e) {
        return.5 - Math.cos(e * Math.PI) / 2
    }}, x.timers = [], x.fx = rr.prototype.init, x.fx.tick = function () {
        var e, n = x.timers, r = 0;
        for (Xn = x.now(); n.length > r; r++)e = n[r], e() || n[r] !== e || n.splice(r--, 1);
        n.length || x.fx.stop(), Xn = t
    }, x.fx.timer = function (e) {
        e() && x.timers.push(e) && x.fx.start()
    }, x.fx.interval = 13, x.fx.start = function () {
        Un || (Un = setInterval(x.fx.tick, x.fx.interval))
    }, x.fx.stop = function () {
        clearInterval(Un), Un = null
    }, x.fx.speeds = {slow: 600, fast: 200, _default: 400}, x.fx.step = {}, x.expr && x.expr.filters && (x.expr.filters.animated = function (e) {
        return x.grep(x.timers,function (t) {
            return e === t.elem
        }).length
    }), x.fn.offset = function (e) {
        if (arguments.length)return e === t ? this : this.each(function (t) {
            x.offset.setOffset(this, e, t)
        });
        var n, r, o = {top: 0, left: 0}, a = this[0], s = a && a.ownerDocument;
        if (s)return n = s.documentElement, x.contains(n, a) ? (typeof a.getBoundingClientRect !== i && (o = a.getBoundingClientRect()), r = or(s), {top: o.top + (r.pageYOffset || n.scrollTop) - (n.clientTop || 0), left: o.left + (r.pageXOffset || n.scrollLeft) - (n.clientLeft || 0)}) : o
    }, x.offset = {setOffset: function (e, t, n) {
        var r = x.css(e, "position");
        "static" === r && (e.style.position = "relative");
        var i = x(e), o = i.offset(), a = x.css(e, "top"), s = x.css(e, "left"), l = ("absolute" === r || "fixed" === r) && x.inArray("auto", [a, s]) > -1, u = {}, c = {}, p, f;
        l ? (c = i.position(), p = c.top, f = c.left) : (p = parseFloat(a) || 0, f = parseFloat(s) || 0), x.isFunction(t) && (t = t.call(e, n, o)), null != t.top && (u.top = t.top - o.top + p), null != t.left && (u.left = t.left - o.left + f), "using"in t ? t.using.call(e, u) : i.css(u)
    }}, x.fn.extend({position: function () {
        if (this[0]) {
            var e, t, n = {top: 0, left: 0}, r = this[0];
            return"fixed" === x.css(r, "position") ? t = r.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), x.nodeName(e[0], "html") || (n = e.offset()), n.top += x.css(e[0], "borderTopWidth", !0), n.left += x.css(e[0], "borderLeftWidth", !0)), {top: t.top - n.top - x.css(r, "marginTop", !0), left: t.left - n.left - x.css(r, "marginLeft", !0)}
        }
    }, offsetParent: function () {
        return this.map(function () {
            var e = this.offsetParent || s;
            while (e && !x.nodeName(e, "html") && "static" === x.css(e, "position"))e = e.offsetParent;
            return e || s
        })
    }}), x.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (e, n) {
        var r = /Y/.test(n);
        x.fn[e] = function (i) {
            return x.access(this, function (e, i, o) {
                var a = or(e);
                return o === t ? a ? n in a ? a[n] : a.document.documentElement[i] : e[i] : (a ? a.scrollTo(r ? x(a).scrollLeft() : o, r ? o : x(a).scrollTop()) : e[i] = o, t)
            }, e, i, arguments.length, null)
        }
    });
    function or(e) {
        return x.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1
    }

    x.each({Height: "height", Width: "width"}, function (e, n) {
        x.each({padding: "inner" + e, content: n, "": "outer" + e}, function (r, i) {
            x.fn[i] = function (i, o) {
                var a = arguments.length && (r || "boolean" != typeof i), s = r || (i === !0 || o === !0 ? "margin" : "border");
                return x.access(this, function (n, r, i) {
                    var o;
                    return x.isWindow(n) ? n.document.documentElement["client" + e] : 9 === n.nodeType ? (o = n.documentElement, Math.max(n.body["scroll" + e], o["scroll" + e], n.body["offset" + e], o["offset" + e], o["client" + e])) : i === t ? x.css(n, r, s) : x.style(n, r, i, s)
                }, n, a ? i : t, a, null)
            }
        })
    }), x.fn.size = function () {
        return this.length
    }, x.fn.andSelf = x.fn.addBack, "object" == typeof module && module && "object" == typeof module.exports ? module.exports = x : (e.jQuery = e.$ = x, "function" == typeof define && define.amd && define("jquery", [], function () {
        return x
    }))
})(window);
/*! jQuery Migrate v1.2.1 | (c) 2005, 2013 jQuery Foundation, Inc. and other contributors | jquery.org/license */
jQuery.migrateMute === void 0 && (jQuery.migrateMute = !0), function (e, t, n) {
    function r(n) {
        var r = t.console;
        i[n] || (i[n] = !0, e.migrateWarnings.push(n), r && r.warn && !e.migrateMute && (r.warn("JQMIGRATE: " + n), e.migrateTrace && r.trace && r.trace()))
    }

    function a(t, a, i, o) {
        if (Object.defineProperty)try {
            return Object.defineProperty(t, a, {configurable: !0, enumerable: !0, get: function () {
                return r(o), i
            }, set: function (e) {
                r(o), i = e
            }}), n
        } catch (s) {
        }
        e._definePropertyBroken = !0, t[a] = i
    }

    var i = {};
    e.migrateWarnings = [], !e.migrateMute && t.console && t.console.log && t.console.log("JQMIGRATE: Logging is active"), e.migrateTrace === n && (e.migrateTrace = !0), e.migrateReset = function () {
        i = {}, e.migrateWarnings.length = 0
    }, "BackCompat" === document.compatMode && r("jQuery is not compatible with Quirks Mode");
    var o = e("<input/>", {size: 1}).attr("size") && e.attrFn, s = e.attr, u = e.attrHooks.value && e.attrHooks.value.get || function () {
        return null
    }, c = e.attrHooks.value && e.attrHooks.value.set || function () {
        return n
    }, l = /^(?:input|button)$/i, d = /^[238]$/, p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, f = /^(?:checked|selected)$/i;
    a(e, "attrFn", o || {}, "jQuery.attrFn is deprecated"), e.attr = function (t, a, i, u) {
        var c = a.toLowerCase(), g = t && t.nodeType;
        return u && (4 > s.length && r("jQuery.fn.attr( props, pass ) is deprecated"), t && !d.test(g) && (o ? a in o : e.isFunction(e.fn[a]))) ? e(t)[a](i) : ("type" === a && i !== n && l.test(t.nodeName) && t.parentNode && r("Can't change the 'type' of an input or button in IE 6/7/8"), !e.attrHooks[c] && p.test(c) && (e.attrHooks[c] = {get: function (t, r) {
            var a, i = e.prop(t, r);
            return i === !0 || "boolean" != typeof i && (a = t.getAttributeNode(r)) && a.nodeValue !== !1 ? r.toLowerCase() : n
        }, set: function (t, n, r) {
            var a;
            return n === !1 ? e.removeAttr(t, r) : (a = e.propFix[r] || r, a in t && (t[a] = !0), t.setAttribute(r, r.toLowerCase())), r
        }}, f.test(c) && r("jQuery.fn.attr('" + c + "') may use property instead of attribute")), s.call(e, t, a, i))
    }, e.attrHooks.value = {get: function (e, t) {
        var n = (e.nodeName || "").toLowerCase();
        return"button" === n ? u.apply(this, arguments) : ("input" !== n && "option" !== n && r("jQuery.fn.attr('value') no longer gets properties"), t in e ? e.value : null)
    }, set: function (e, t) {
        var a = (e.nodeName || "").toLowerCase();
        return"button" === a ? c.apply(this, arguments) : ("input" !== a && "option" !== a && r("jQuery.fn.attr('value', val) no longer sets properties"), e.value = t, n)
    }};
    var g, h, v = e.fn.init, m = e.parseJSON, y = /^([^<]*)(<[\w\W]+>)([^>]*)$/;
    e.fn.init = function (t, n, a) {
        var i;
        return t && "string" == typeof t && !e.isPlainObject(n) && (i = y.exec(e.trim(t))) && i[0] && ("<" !== t.charAt(0) && r("$(html) HTML strings must start with '<' character"), i[3] && r("$(html) HTML text after last tag is ignored"), "#" === i[0].charAt(0) && (r("HTML string cannot start with a '#' character"), e.error("JQMIGRATE: Invalid selector string (XSS)")), n && n.context && (n = n.context), e.parseHTML) ? v.call(this, e.parseHTML(i[2], n, !0), n, a) : v.apply(this, arguments)
    }, e.fn.init.prototype = e.fn, e.parseJSON = function (e) {
        return e || null === e ? m.apply(this, arguments) : (r("jQuery.parseJSON requires a valid JSON string"), null)
    }, e.uaMatch = function (e) {
        e = e.toLowerCase();
        var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || 0 > e.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
        return{browser: t[1] || "", version: t[2] || "0"}
    }, e.browser || (g = e.uaMatch(navigator.userAgent), h = {}, g.browser && (h[g.browser] = !0, h.version = g.version), h.chrome ? h.webkit = !0 : h.webkit && (h.safari = !0), e.browser = h), a(e, "browser", e.browser, "jQuery.browser is deprecated"), e.sub = function () {
        function t(e, n) {
            return new t.fn.init(e, n)
        }

        e.extend(!0, t, this), t.superclass = this, t.fn = t.prototype = this(), t.fn.constructor = t, t.sub = this.sub, t.fn.init = function (r, a) {
            return a && a instanceof e && !(a instanceof t) && (a = t(a)), e.fn.init.call(this, r, a, n)
        }, t.fn.init.prototype = t.fn;
        var n = t(document);
        return r("jQuery.sub() is deprecated"), t
    }, e.ajaxSetup({converters: {"text json": e.parseJSON}});
    var b = e.fn.data;
    e.fn.data = function (t) {
        var a, i, o = this[0];
        return!o || "events" !== t || 1 !== arguments.length || (a = e.data(o, t), i = e._data(o, t), a !== n && a !== i || i === n) ? b.apply(this, arguments) : (r("Use of jQuery.fn.data('events') is deprecated"), i)
    };
    var j = /\/(java|ecma)script/i, w = e.fn.andSelf || e.fn.addBack;
    e.fn.andSelf = function () {
        return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), w.apply(this, arguments)
    }, e.clean || (e.clean = function (t, a, i, o) {
        a = a || document, a = !a.nodeType && a[0] || a, a = a.ownerDocument || a, r("jQuery.clean() is deprecated");
        var s, u, c, l, d = [];
        if (e.merge(d, e.buildFragment(t, a).childNodes), i)for (c = function (e) {
            return!e.type || j.test(e.type) ? o ? o.push(e.parentNode ? e.parentNode.removeChild(e) : e) : i.appendChild(e) : n
        }, s = 0; null != (u = d[s]); s++)e.nodeName(u, "script") && c(u) || (i.appendChild(u), u.getElementsByTagName !== n && (l = e.grep(e.merge([], u.getElementsByTagName("script")), c), d.splice.apply(d, [s + 1, 0].concat(l)), s += l.length));
        return d
    });
    var Q = e.event.add, x = e.event.remove, k = e.event.trigger, N = e.fn.toggle, T = e.fn.live, M = e.fn.die, S = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess", C = RegExp("\\b(?:" + S + ")\\b"), H = /(?:^|\s)hover(\.\S+|)\b/, A = function (t) {
        return"string" != typeof t || e.event.special.hover ? t : (H.test(t) && r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), t && t.replace(H, "mouseenter$1 mouseleave$1"))
    };
    e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), e.event.add = function (e, t, n, a, i) {
        e !== document && C.test(t) && r("AJAX events should be attached to document: " + t), Q.call(this, e, A(t || ""), n, a, i)
    }, e.event.remove = function (e, t, n, r, a) {
        x.call(this, e, A(t) || "", n, r, a)
    }, e.fn.error = function () {
        var e = Array.prototype.slice.call(arguments, 0);
        return r("jQuery.fn.error() is deprecated"), e.splice(0, 0, "error"), arguments.length ? this.bind.apply(this, e) : (this.triggerHandler.apply(this, e), this)
    }, e.fn.toggle = function (t, n) {
        if (!e.isFunction(t) || !e.isFunction(n))return N.apply(this, arguments);
        r("jQuery.fn.toggle(handler, handler...) is deprecated");
        var a = arguments, i = t.guid || e.guid++, o = 0, s = function (n) {
            var r = (e._data(this, "lastToggle" + t.guid) || 0) % o;
            return e._data(this, "lastToggle" + t.guid, r + 1), n.preventDefault(), a[r].apply(this, arguments) || !1
        };
        for (s.guid = i; a.length > o;)a[o++].guid = i;
        return this.click(s)
    }, e.fn.live = function (t, n, a) {
        return r("jQuery.fn.live() is deprecated"), T ? T.apply(this, arguments) : (e(this.context).on(t, this.selector, n, a), this)
    }, e.fn.die = function (t, n) {
        return r("jQuery.fn.die() is deprecated"), M ? M.apply(this, arguments) : (e(this.context).off(t, this.selector || "**", n), this)
    }, e.event.trigger = function (e, t, n, a) {
        return n || C.test(e) || r("Global events are undocumented and deprecated"), k.call(this, e, t, n || document, a)
    }, e.each(S.split("|"), function (t, n) {
        e.event.special[n] = {setup: function () {
            var t = this;
            return t !== document && (e.event.add(document, n + "." + e.guid, function () {
                e.event.trigger(n, null, t, !0)
            }), e._data(this, n, e.guid++)), !1
        }, teardown: function () {
            return this !== document && e.event.remove(document, n + "." + e._data(this, n)), !1
        }}
    })
}(jQuery, window);
/*! jQuery UI - v1.10.3 - 2013-09-14
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
 * Copyright 2013 jQuery Foundation and other contributors; Licensed MIT */

(function (e, t) {
    function i(t, i) {
        var s, n, r, o = t.nodeName.toLowerCase();
        return"area" === o ? (s = t.parentNode, n = s.name, t.href && n && "map" === s.nodeName.toLowerCase() ? (r = e("img[usemap=#" + n + "]")[0], !!r && a(r)) : !1) : (/input|select|textarea|button|object/.test(o) ? !t.disabled : "a" === o ? t.href || i : i) && a(t)
    }

    function a(t) {
        return e.expr.filters.visible(t) && !e(t).parents().addBack().filter(function () {
            return"hidden" === e.css(this, "visibility")
        }).length
    }

    var s = 0, n = /^ui-id-\d+$/;
    e.ui = e.ui || {}, e.extend(e.ui, {version: "1.10.3", keyCode: {BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38}}), e.fn.extend({focus: function (t) {
        return function (i, a) {
            return"number" == typeof i ? this.each(function () {
                var t = this;
                setTimeout(function () {
                    e(t).focus(), a && a.call(t)
                }, i)
            }) : t.apply(this, arguments)
        }
    }(e.fn.focus), scrollParent: function () {
        var t;
        return t = e.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
            return/(relative|absolute|fixed)/.test(e.css(this, "position")) && /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
        }).eq(0) : this.parents().filter(function () {
            return/(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
        }).eq(0), /fixed/.test(this.css("position")) || !t.length ? e(document) : t
    }, zIndex: function (i) {
        if (i !== t)return this.css("zIndex", i);
        if (this.length)for (var a, s, n = e(this[0]); n.length && n[0] !== document;) {
            if (a = n.css("position"), ("absolute" === a || "relative" === a || "fixed" === a) && (s = parseInt(n.css("zIndex"), 10), !isNaN(s) && 0 !== s))return s;
            n = n.parent()
        }
        return 0
    }, uniqueId: function () {
        return this.each(function () {
            this.id || (this.id = "ui-id-" + ++s)
        })
    }, removeUniqueId: function () {
        return this.each(function () {
            n.test(this.id) && e(this).removeAttr("id")
        })
    }}), e.extend(e.expr[":"], {data: e.expr.createPseudo ? e.expr.createPseudo(function (t) {
        return function (i) {
            return!!e.data(i, t)
        }
    }) : function (t, i, a) {
        return!!e.data(t, a[3])
    }, focusable: function (t) {
        return i(t, !isNaN(e.attr(t, "tabindex")))
    }, tabbable: function (t) {
        var a = e.attr(t, "tabindex"), s = isNaN(a);
        return(s || a >= 0) && i(t, !s)
    }}), e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function (i, a) {
        function s(t, i, a, s) {
            return e.each(n, function () {
                i -= parseFloat(e.css(t, "padding" + this)) || 0, a && (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0), s && (i -= parseFloat(e.css(t, "margin" + this)) || 0)
            }), i
        }

        var n = "Width" === a ? ["Left", "Right"] : ["Top", "Bottom"], r = a.toLowerCase(), o = {innerWidth: e.fn.innerWidth, innerHeight: e.fn.innerHeight, outerWidth: e.fn.outerWidth, outerHeight: e.fn.outerHeight};
        e.fn["inner" + a] = function (i) {
            return i === t ? o["inner" + a].call(this) : this.each(function () {
                e(this).css(r, s(this, i) + "px")
            })
        }, e.fn["outer" + a] = function (t, i) {
            return"number" != typeof t ? o["outer" + a].call(this, t) : this.each(function () {
                e(this).css(r, s(this, t, !0, i) + "px")
            })
        }
    }), e.fn.addBack || (e.fn.addBack = function (e) {
        return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
    }), e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function (t) {
        return function (i) {
            return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this)
        }
    }(e.fn.removeData)), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.support.selectstart = "onselectstart"in document.createElement("div"), e.fn.extend({disableSelection: function () {
        return this.bind((e.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (e) {
            e.preventDefault()
        })
    }, enableSelection: function () {
        return this.unbind(".ui-disableSelection")
    }}), e.extend(e.ui, {plugin: {add: function (t, i, a) {
        var s, n = e.ui[t].prototype;
        for (s in a)n.plugins[s] = n.plugins[s] || [], n.plugins[s].push([i, a[s]])
    }, call: function (e, t, i) {
        var a, s = e.plugins[t];
        if (s && e.element[0].parentNode && 11 !== e.element[0].parentNode.nodeType)for (a = 0; s.length > a; a++)e.options[s[a][0]] && s[a][1].apply(e.element, i)
    }}, hasScroll: function (t, i) {
        if ("hidden" === e(t).css("overflow"))return!1;
        var a = i && "left" === i ? "scrollLeft" : "scrollTop", s = !1;
        return t[a] > 0 ? !0 : (t[a] = 1, s = t[a] > 0, t[a] = 0, s)
    }})
})(jQuery);
(function (e, t) {
    var i = 0, s = Array.prototype.slice, a = e.cleanData;
    e.cleanData = function (t) {
        for (var i, s = 0; null != (i = t[s]); s++)try {
            e(i).triggerHandler("remove")
        } catch (n) {
        }
        a(t)
    }, e.widget = function (i, s, a) {
        var n, r, o, h, l = {}, u = i.split(".")[0];
        i = i.split(".")[1], n = u + "-" + i, a || (a = s, s = e.Widget), e.expr[":"][n.toLowerCase()] = function (t) {
            return!!e.data(t, n)
        }, e[u] = e[u] || {}, r = e[u][i], o = e[u][i] = function (e, i) {
            return this._createWidget ? (arguments.length && this._createWidget(e, i), t) : new o(e, i)
        }, e.extend(o, r, {version: a.version, _proto: e.extend({}, a), _childConstructors: []}), h = new s, h.options = e.widget.extend({}, h.options), e.each(a, function (i, a) {
            return e.isFunction(a) ? (l[i] = function () {
                var e = function () {
                    return s.prototype[i].apply(this, arguments)
                }, t = function (e) {
                    return s.prototype[i].apply(this, e)
                };
                return function () {
                    var i, s = this._super, n = this._superApply;
                    return this._super = e, this._superApply = t, i = a.apply(this, arguments), this._super = s, this._superApply = n, i
                }
            }(), t) : (l[i] = a, t)
        }), o.prototype = e.widget.extend(h, {widgetEventPrefix: r ? h.widgetEventPrefix : i}, l, {constructor: o, namespace: u, widgetName: i, widgetFullName: n}), r ? (e.each(r._childConstructors, function (t, i) {
            var s = i.prototype;
            e.widget(s.namespace + "." + s.widgetName, o, i._proto)
        }), delete r._childConstructors) : s._childConstructors.push(o), e.widget.bridge(i, o)
    }, e.widget.extend = function (i) {
        for (var a, n, r = s.call(arguments, 1), o = 0, h = r.length; h > o; o++)for (a in r[o])n = r[o][a], r[o].hasOwnProperty(a) && n !== t && (i[a] = e.isPlainObject(n) ? e.isPlainObject(i[a]) ? e.widget.extend({}, i[a], n) : e.widget.extend({}, n) : n);
        return i
    }, e.widget.bridge = function (i, a) {
        var n = a.prototype.widgetFullName || i;
        e.fn[i] = function (r) {
            var o = "string" == typeof r, h = s.call(arguments, 1), l = this;
            return r = !o && h.length ? e.widget.extend.apply(null, [r].concat(h)) : r, o ? this.each(function () {
                var s, a = e.data(this, n);
                return a ? e.isFunction(a[r]) && "_" !== r.charAt(0) ? (s = a[r].apply(a, h), s !== a && s !== t ? (l = s && s.jquery ? l.pushStack(s.get()) : s, !1) : t) : e.error("no such method '" + r + "' for " + i + " widget instance") : e.error("cannot call methods on " + i + " prior to initialization; " + "attempted to call method '" + r + "'")
            }) : this.each(function () {
                var t = e.data(this, n);
                t ? t.option(r || {})._init() : e.data(this, n, new a(r, this))
            }), l
        }
    }, e.Widget = function () {
    }, e.Widget._childConstructors = [], e.Widget.prototype = {widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: {disabled: !1, create: null}, _createWidget: function (t, s) {
        s = e(s || this.defaultElement || this)[0], this.element = e(s), this.uuid = i++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t), this.bindings = e(), this.hoverable = e(), this.focusable = e(), s !== this && (e.data(s, this.widgetFullName, this), this._on(!0, this.element, {remove: function (e) {
            e.target === s && this.destroy()
        }}), this.document = e(s.style ? s.ownerDocument : s.document || s), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
    }, _getCreateOptions: e.noop, _getCreateEventData: e.noop, _create: e.noop, _init: e.noop, destroy: function () {
        this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
    }, _destroy: e.noop, widget: function () {
        return this.element
    }, option: function (i, s) {
        var a, n, r, o = i;
        if (0 === arguments.length)return e.widget.extend({}, this.options);
        if ("string" == typeof i)if (o = {}, a = i.split("."), i = a.shift(), a.length) {
            for (n = o[i] = e.widget.extend({}, this.options[i]), r = 0; a.length - 1 > r; r++)n[a[r]] = n[a[r]] || {}, n = n[a[r]];
            if (i = a.pop(), s === t)return n[i] === t ? null : n[i];
            n[i] = s
        } else {
            if (s === t)return this.options[i] === t ? null : this.options[i];
            o[i] = s
        }
        return this._setOptions(o), this
    }, _setOptions: function (e) {
        var t;
        for (t in e)this._setOption(t, e[t]);
        return this
    }, _setOption: function (e, t) {
        return this.options[e] = t, "disabled" === e && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this
    }, enable: function () {
        return this._setOption("disabled", !1)
    }, disable: function () {
        return this._setOption("disabled", !0)
    }, _on: function (i, s, a) {
        var n, r = this;
        "boolean" != typeof i && (a = s, s = i, i = !1), a ? (s = n = e(s), this.bindings = this.bindings.add(s)) : (a = s, s = this.element, n = this.widget()), e.each(a, function (a, o) {
            function h() {
                return i || r.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof o ? r[o] : o).apply(r, arguments) : t
            }

            "string" != typeof o && (h.guid = o.guid = o.guid || h.guid || e.guid++);
            var l = a.match(/^(\w+)\s*(.*)$/), u = l[1] + r.eventNamespace, c = l[2];
            c ? n.delegate(c, u, h) : s.bind(u, h)
        })
    }, _off: function (e, t) {
        t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, e.unbind(t).undelegate(t)
    }, _delay: function (e, t) {
        function i() {
            return("string" == typeof e ? s[e] : e).apply(s, arguments)
        }

        var s = this;
        return setTimeout(i, t || 0)
    }, _hoverable: function (t) {
        this.hoverable = this.hoverable.add(t), this._on(t, {mouseenter: function (t) {
            e(t.currentTarget).addClass("ui-state-hover")
        }, mouseleave: function (t) {
            e(t.currentTarget).removeClass("ui-state-hover")
        }})
    }, _focusable: function (t) {
        this.focusable = this.focusable.add(t), this._on(t, {focusin: function (t) {
            e(t.currentTarget).addClass("ui-state-focus")
        }, focusout: function (t) {
            e(t.currentTarget).removeClass("ui-state-focus")
        }})
    }, _trigger: function (t, i, s) {
        var a, n, r = this.options[t];
        if (s = s || {}, i = e.Event(i), i.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), i.target = this.element[0], n = i.originalEvent)for (a in n)a in i || (i[a] = n[a]);
        return this.element.trigger(i, s), !(e.isFunction(r) && r.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented())
    }}, e.each({show: "fadeIn", hide: "fadeOut"}, function (t, i) {
        e.Widget.prototype["_" + t] = function (s, a, n) {
            "string" == typeof a && (a = {effect: a});
            var r, o = a ? a === !0 || "number" == typeof a ? i : a.effect || i : t;
            a = a || {}, "number" == typeof a && (a = {duration: a}), r = !e.isEmptyObject(a), a.complete = n, a.delay && s.delay(a.delay), r && e.effects && e.effects.effect[o] ? s[t](a) : o !== t && s[o] ? s[o](a.duration, a.easing, n) : s.queue(function (i) {
                e(this)[t](), n && n.call(s[0]), i()
            })
        }
    })
})(jQuery);
(function (e) {
    var t = !1;
    e(document).mouseup(function () {
        t = !1
    }), e.widget("ui.mouse", {version: "1.10.3", options: {cancel: "input,textarea,button,select,option", distance: 1, delay: 0}, _mouseInit: function () {
        var t = this;
        this.element.bind("mousedown." + this.widgetName,function (e) {
            return t._mouseDown(e)
        }).bind("click." + this.widgetName, function (i) {
            return!0 === e.data(i.target, t.widgetName + ".preventClickEvent") ? (e.removeData(i.target, t.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : undefined
        }), this.started = !1
    }, _mouseDestroy: function () {
        this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
    }, _mouseDown: function (i) {
        if (!t) {
            this._mouseStarted && this._mouseUp(i), this._mouseDownEvent = i;
            var s = this, a = 1 === i.which, n = "string" == typeof this.options.cancel && i.target.nodeName ? e(i.target).closest(this.options.cancel).length : !1;
            return a && !n && this._mouseCapture(i) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
                s.mouseDelayMet = !0
            }, this.options.delay)), this._mouseDistanceMet(i) && this._mouseDelayMet(i) && (this._mouseStarted = this._mouseStart(i) !== !1, !this._mouseStarted) ? (i.preventDefault(), !0) : (!0 === e.data(i.target, this.widgetName + ".preventClickEvent") && e.removeData(i.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (e) {
                return s._mouseMove(e)
            }, this._mouseUpDelegate = function (e) {
                return s._mouseUp(e)
            }, e(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), i.preventDefault(), t = !0, !0)) : !0
        }
    }, _mouseMove: function (t) {
        return e.ui.ie && (!document.documentMode || 9 > document.documentMode) && !t.button ? this._mouseUp(t) : this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1, this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted)
    }, _mouseUp: function (t) {
        return e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(t)), !1
    }, _mouseDistanceMet: function (e) {
        return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
    }, _mouseDelayMet: function () {
        return this.mouseDelayMet
    }, _mouseStart: function () {
    }, _mouseDrag: function () {
    }, _mouseStop: function () {
    }, _mouseCapture: function () {
        return!0
    }})
})(jQuery);
(function (e, t) {
    function i(e, t, i) {
        return[parseFloat(e[0]) * (p.test(e[0]) ? t / 100 : 1), parseFloat(e[1]) * (p.test(e[1]) ? i / 100 : 1)]
    }

    function s(t, i) {
        return parseInt(e.css(t, i), 10) || 0
    }

    function a(t) {
        var i = t[0];
        return 9 === i.nodeType ? {width: t.width(), height: t.height(), offset: {top: 0, left: 0}} : e.isWindow(i) ? {width: t.width(), height: t.height(), offset: {top: t.scrollTop(), left: t.scrollLeft()}} : i.preventDefault ? {width: 0, height: 0, offset: {top: i.pageY, left: i.pageX}} : {width: t.outerWidth(), height: t.outerHeight(), offset: t.offset()}
    }

    e.ui = e.ui || {};
    var n, r = Math.max, o = Math.abs, h = Math.round, l = /left|center|right/, u = /top|center|bottom/, c = /[\+\-]\d+(\.[\d]+)?%?/, d = /^\w+/, p = /%$/, f = e.fn.position;
    e.position = {scrollbarWidth: function () {
        if (n !== t)return n;
        var i, s, a = e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), r = a.children()[0];
        return e("body").append(a), i = r.offsetWidth, a.css("overflow", "scroll"), s = r.offsetWidth, i === s && (s = a[0].clientWidth), a.remove(), n = i - s
    }, getScrollInfo: function (t) {
        var i = t.isWindow ? "" : t.element.css("overflow-x"), s = t.isWindow ? "" : t.element.css("overflow-y"), a = "scroll" === i || "auto" === i && t.width < t.element[0].scrollWidth, n = "scroll" === s || "auto" === s && t.height < t.element[0].scrollHeight;
        return{width: n ? e.position.scrollbarWidth() : 0, height: a ? e.position.scrollbarWidth() : 0}
    }, getWithinInfo: function (t) {
        var i = e(t || window), s = e.isWindow(i[0]);
        return{element: i, isWindow: s, offset: i.offset() || {left: 0, top: 0}, scrollLeft: i.scrollLeft(), scrollTop: i.scrollTop(), width: s ? i.width() : i.outerWidth(), height: s ? i.height() : i.outerHeight()}
    }}, e.fn.position = function (t) {
        if (!t || !t.of)return f.apply(this, arguments);
        t = e.extend({}, t);
        var n, p, m, g, v, y, b = e(t.of), _ = e.position.getWithinInfo(t.within), x = e.position.getScrollInfo(_), k = (t.collision || "flip").split(" "), w = {};
        return y = a(b), b[0].preventDefault && (t.at = "left top"), p = y.width, m = y.height, g = y.offset, v = e.extend({}, g), e.each(["my", "at"], function () {
            var e, i, s = (t[this] || "").split(" ");
            1 === s.length && (s = l.test(s[0]) ? s.concat(["center"]) : u.test(s[0]) ? ["center"].concat(s) : ["center", "center"]), s[0] = l.test(s[0]) ? s[0] : "center", s[1] = u.test(s[1]) ? s[1] : "center", e = c.exec(s[0]), i = c.exec(s[1]), w[this] = [e ? e[0] : 0, i ? i[0] : 0], t[this] = [d.exec(s[0])[0], d.exec(s[1])[0]]
        }), 1 === k.length && (k[1] = k[0]), "right" === t.at[0] ? v.left += p : "center" === t.at[0] && (v.left += p / 2), "bottom" === t.at[1] ? v.top += m : "center" === t.at[1] && (v.top += m / 2), n = i(w.at, p, m), v.left += n[0], v.top += n[1], this.each(function () {
            var a, l, u = e(this), c = u.outerWidth(), d = u.outerHeight(), f = s(this, "marginLeft"), y = s(this, "marginTop"), D = c + f + s(this, "marginRight") + x.width, T = d + y + s(this, "marginBottom") + x.height, M = e.extend({}, v), S = i(w.my, u.outerWidth(), u.outerHeight());
            "right" === t.my[0] ? M.left -= c : "center" === t.my[0] && (M.left -= c / 2), "bottom" === t.my[1] ? M.top -= d : "center" === t.my[1] && (M.top -= d / 2), M.left += S[0], M.top += S[1], e.support.offsetFractions || (M.left = h(M.left), M.top = h(M.top)), a = {marginLeft: f, marginTop: y}, e.each(["left", "top"], function (i, s) {
                e.ui.position[k[i]] && e.ui.position[k[i]][s](M, {targetWidth: p, targetHeight: m, elemWidth: c, elemHeight: d, collisionPosition: a, collisionWidth: D, collisionHeight: T, offset: [n[0] + S[0], n[1] + S[1]], my: t.my, at: t.at, within: _, elem: u})
            }), t.using && (l = function (e) {
                var i = g.left - M.left, s = i + p - c, a = g.top - M.top, n = a + m - d, h = {target: {element: b, left: g.left, top: g.top, width: p, height: m}, element: {element: u, left: M.left, top: M.top, width: c, height: d}, horizontal: 0 > s ? "left" : i > 0 ? "right" : "center", vertical: 0 > n ? "top" : a > 0 ? "bottom" : "middle"};
                c > p && p > o(i + s) && (h.horizontal = "center"), d > m && m > o(a + n) && (h.vertical = "middle"), h.important = r(o(i), o(s)) > r(o(a), o(n)) ? "horizontal" : "vertical", t.using.call(this, e, h)
            }), u.offset(e.extend(M, {using: l}))
        })
    }, e.ui.position = {fit: {left: function (e, t) {
        var i, s = t.within, a = s.isWindow ? s.scrollLeft : s.offset.left, n = s.width, o = e.left - t.collisionPosition.marginLeft, h = a - o, l = o + t.collisionWidth - n - a;
        t.collisionWidth > n ? h > 0 && 0 >= l ? (i = e.left + h + t.collisionWidth - n - a, e.left += h - i) : e.left = l > 0 && 0 >= h ? a : h > l ? a + n - t.collisionWidth : a : h > 0 ? e.left += h : l > 0 ? e.left -= l : e.left = r(e.left - o, e.left)
    }, top: function (e, t) {
        var i, s = t.within, a = s.isWindow ? s.scrollTop : s.offset.top, n = t.within.height, o = e.top - t.collisionPosition.marginTop, h = a - o, l = o + t.collisionHeight - n - a;
        t.collisionHeight > n ? h > 0 && 0 >= l ? (i = e.top + h + t.collisionHeight - n - a, e.top += h - i) : e.top = l > 0 && 0 >= h ? a : h > l ? a + n - t.collisionHeight : a : h > 0 ? e.top += h : l > 0 ? e.top -= l : e.top = r(e.top - o, e.top)
    }}, flip: {left: function (e, t) {
        var i, s, a = t.within, n = a.offset.left + a.scrollLeft, r = a.width, h = a.isWindow ? a.scrollLeft : a.offset.left, l = e.left - t.collisionPosition.marginLeft, u = l - h, c = l + t.collisionWidth - r - h, d = "left" === t.my[0] ? -t.elemWidth : "right" === t.my[0] ? t.elemWidth : 0, p = "left" === t.at[0] ? t.targetWidth : "right" === t.at[0] ? -t.targetWidth : 0, f = -2 * t.offset[0];
        0 > u ? (i = e.left + d + p + f + t.collisionWidth - r - n, (0 > i || o(u) > i) && (e.left += d + p + f)) : c > 0 && (s = e.left - t.collisionPosition.marginLeft + d + p + f - h, (s > 0 || c > o(s)) && (e.left += d + p + f))
    }, top: function (e, t) {
        var i, s, a = t.within, n = a.offset.top + a.scrollTop, r = a.height, h = a.isWindow ? a.scrollTop : a.offset.top, l = e.top - t.collisionPosition.marginTop, u = l - h, c = l + t.collisionHeight - r - h, d = "top" === t.my[1], p = d ? -t.elemHeight : "bottom" === t.my[1] ? t.elemHeight : 0, f = "top" === t.at[1] ? t.targetHeight : "bottom" === t.at[1] ? -t.targetHeight : 0, m = -2 * t.offset[1];
        0 > u ? (s = e.top + p + f + m + t.collisionHeight - r - n, e.top + p + f + m > u && (0 > s || o(u) > s) && (e.top += p + f + m)) : c > 0 && (i = e.top - t.collisionPosition.marginTop + p + f + m - h, e.top + p + f + m > c && (i > 0 || c > o(i)) && (e.top += p + f + m))
    }}, flipfit: {left: function () {
        e.ui.position.flip.left.apply(this, arguments), e.ui.position.fit.left.apply(this, arguments)
    }, top: function () {
        e.ui.position.flip.top.apply(this, arguments), e.ui.position.fit.top.apply(this, arguments)
    }}}, function () {
        var t, i, s, a, n, r = document.getElementsByTagName("body")[0], o = document.createElement("div");
        t = document.createElement(r ? "div" : "body"), s = {visibility: "hidden", width: 0, height: 0, border: 0, margin: 0, background: "none"}, r && e.extend(s, {position: "absolute", left: "-1000px", top: "-1000px"});
        for (n in s)t.style[n] = s[n];
        t.appendChild(o), i = r || document.documentElement, i.insertBefore(t, i.firstChild), o.style.cssText = "position: absolute; left: 10.7432222px;", a = e(o).offset().left, e.support.offsetFractions = a > 10 && 11 > a, t.innerHTML = "", i.removeChild(t)
    }()
})(jQuery);
(function (e) {
    e.widget("ui.draggable", e.ui.mouse, {version: "1.10.3", widgetEventPrefix: "drag", options: {addClasses: !0, appendTo: "parent", axis: !1, connectToSortable: !1, containment: !1, cursor: "auto", cursorAt: !1, grid: !1, handle: !1, helper: "original", iframeFix: !1, opacity: !1, refreshPositions: !1, revert: !1, revertDuration: 500, scope: "default", scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, snap: !1, snapMode: "both", snapTolerance: 20, stack: !1, zIndex: !1, drag: null, start: null, stop: null}, _create: function () {
        "original" !== this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit()
    }, _destroy: function () {
        this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy()
    }, _mouseCapture: function (t) {
        var i = this.options;
        return this.helper || i.disabled || e(t.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(t), this.handle ? (e(i.iframeFix === !0 ? "iframe" : i.iframeFix).each(function () {
            e("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width: this.offsetWidth + "px", height: this.offsetHeight + "px", position: "absolute", opacity: "0.001", zIndex: 1e3}).css(e(this).offset()).appendTo("body")
        }), !0) : !1)
    }, _mouseStart: function (t) {
        var i = this.options;
        return this.helper = this._createHelper(t), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offsetParent = this.helper.offsetParent(), this.offsetParentCssPosition = this.offsetParent.css("position"), this.offset = this.positionAbs = this.element.offset(), this.offset = {top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left}, this.offset.scroll = !1, e.extend(this.offset, {click: {left: t.pageX - this.offset.left, top: t.pageY - this.offset.top}, parent: this._getParentOffset(), relative: this._getRelativeOffset()}), this.originalPosition = this.position = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), this._setContainment(), this._trigger("start", t) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this._mouseDrag(t, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0)
    }, _mouseDrag: function (t, i) {
        if ("fixed" === this.offsetParentCssPosition && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo("absolute"), !i) {
            var a = this._uiHash();
            if (this._trigger("drag", t, a) === !1)return this._mouseUp({}), !1;
            this.position = a.position
        }
        return this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1
    }, _mouseStop: function (t) {
        var i = this, a = !1;
        return e.ui.ddmanager && !this.options.dropBehaviour && (a = e.ui.ddmanager.drop(this, t)), this.dropped && (a = this.dropped, this.dropped = !1), "original" !== this.options.helper || e.contains(this.element[0].ownerDocument, this.element[0]) ? ("invalid" === this.options.revert && !a || "valid" === this.options.revert && a || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, a) ? e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
            i._trigger("stop", t) !== !1 && i._clear()
        }) : this._trigger("stop", t) !== !1 && this._clear(), !1) : !1
    }, _mouseUp: function (t) {
        return e("div.ui-draggable-iframeFix").each(function () {
            this.parentNode.removeChild(this)
        }), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t), e.ui.mouse.prototype._mouseUp.call(this, t)
    }, cancel: function () {
        return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
    }, _getHandle: function (t) {
        return this.options.handle ? !!e(t.target).closest(this.element.find(this.options.handle)).length : !0
    }, _createHelper: function (t) {
        var i = this.options, a = e.isFunction(i.helper) ? e(i.helper.apply(this.element[0], [t])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element;
        return a.parents("body").length || a.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo), a[0] === this.element[0] || /(fixed|absolute)/.test(a.css("position")) || a.css("position", "absolute"), a
    }, _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {left: +t[0], top: +t[1] || 0}), "left"in t && (this.offset.click.left = t.left + this.margins.left), "right"in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top"in t && (this.offset.click.top = t.top + this.margins.top), "bottom"in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
    }, _getParentOffset: function () {
        var t = this.offsetParent.offset();
        return"absolute" === this.cssPosition && this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (t = {top: 0, left: 0}), {top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)}
    }, _getRelativeOffset: function () {
        if ("relative" === this.cssPosition) {
            var e = this.element.position();
            return{top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()}
        }
        return{top: 0, left: 0}
    }, _cacheMargins: function () {
        this.margins = {left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0}
    }, _cacheHelperProportions: function () {
        this.helperProportions = {width: this.helper.outerWidth(), height: this.helper.outerHeight()}
    }, _setContainment: function () {
        var t, i, a, s = this.options;
        return s.containment ? "window" === s.containment ? (this.containment = [e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, e(window).scrollLeft() + e(window).width() - this.helperProportions.width - this.margins.left, e(window).scrollTop() + (e(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], undefined) : "document" === s.containment ? (this.containment = [0, 0, e(document).width() - this.helperProportions.width - this.margins.left, (e(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], undefined) : s.containment.constructor === Array ? (this.containment = s.containment, undefined) : ("parent" === s.containment && (s.containment = this.helper[0].parentNode), i = e(s.containment), a = i[0], a && (t = "hidden" !== i.css("overflow"), this.containment = [(parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0), (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0), (t ? Math.max(a.scrollWidth, a.offsetWidth) : a.offsetWidth) - (parseInt(i.css("borderRightWidth"), 10) || 0) - (parseInt(i.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t ? Math.max(a.scrollHeight, a.offsetHeight) : a.offsetHeight) - (parseInt(i.css("borderBottomWidth"), 10) || 0) - (parseInt(i.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = i), undefined) : (this.containment = null, undefined)
    }, _convertPositionTo: function (t, i) {
        i || (i = this.position);
        var a = "absolute" === t ? 1 : -1, s = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent;
        return this.offset.scroll || (this.offset.scroll = {top: s.scrollTop(), left: s.scrollLeft()}), {top: i.top + this.offset.relative.top * a + this.offset.parent.top * a - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * a, left: i.left + this.offset.relative.left * a + this.offset.parent.left * a - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * a}
    }, _generatePosition: function (t) {
        var i, a, s, n, r = this.options, o = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, l = t.pageX, h = t.pageY;
        return this.offset.scroll || (this.offset.scroll = {top: o.scrollTop(), left: o.scrollLeft()}), this.originalPosition && (this.containment && (this.relative_container ? (a = this.relative_container.offset(), i = [this.containment[0] + a.left, this.containment[1] + a.top, this.containment[2] + a.left, this.containment[3] + a.top]) : i = this.containment, t.pageX - this.offset.click.left < i[0] && (l = i[0] + this.offset.click.left), t.pageY - this.offset.click.top < i[1] && (h = i[1] + this.offset.click.top), t.pageX - this.offset.click.left > i[2] && (l = i[2] + this.offset.click.left), t.pageY - this.offset.click.top > i[3] && (h = i[3] + this.offset.click.top)), r.grid && (s = r.grid[1] ? this.originalPageY + Math.round((h - this.originalPageY) / r.grid[1]) * r.grid[1] : this.originalPageY, h = i ? s - this.offset.click.top >= i[1] || s - this.offset.click.top > i[3] ? s : s - this.offset.click.top >= i[1] ? s - r.grid[1] : s + r.grid[1] : s, n = r.grid[0] ? this.originalPageX + Math.round((l - this.originalPageX) / r.grid[0]) * r.grid[0] : this.originalPageX, l = i ? n - this.offset.click.left >= i[0] || n - this.offset.click.left > i[2] ? n : n - this.offset.click.left >= i[0] ? n - r.grid[0] : n + r.grid[0] : n)), {top: h - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top), left: l - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)}
    }, _clear: function () {
        this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1
    }, _trigger: function (t, i, a) {
        return a = a || this._uiHash(), e.ui.plugin.call(this, t, [i, a]), "drag" === t && (this.positionAbs = this._convertPositionTo("absolute")), e.Widget.prototype._trigger.call(this, t, i, a)
    }, plugins: {}, _uiHash: function () {
        return{helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs}
    }}), e.ui.plugin.add("draggable", "connectToSortable", {start: function (t, i) {
        var a = e(this).data("ui-draggable"), s = a.options, n = e.extend({}, i, {item: a.element});
        a.sortables = [], e(s.connectToSortable).each(function () {
            var i = e.data(this, "ui-sortable");
            i && !i.options.disabled && (a.sortables.push({instance: i, shouldRevert: i.options.revert}), i.refreshPositions(), i._trigger("activate", t, n))
        })
    }, stop: function (t, i) {
        var a = e(this).data("ui-draggable"), s = e.extend({}, i, {item: a.element});
        e.each(a.sortables, function () {
            this.instance.isOver ? (this.instance.isOver = 0, a.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = this.shouldRevert), this.instance._mouseStop(t), this.instance.options.helper = this.instance.options._helper, "original" === a.options.helper && this.instance.currentItem.css({top: "auto", left: "auto"})) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", t, s))
        })
    }, drag: function (t, i) {
        var a = e(this).data("ui-draggable"), s = this;
        e.each(a.sortables, function () {
            var n = !1, r = this;
            this.instance.positionAbs = a.positionAbs, this.instance.helperProportions = a.helperProportions, this.instance.offset.click = a.offset.click, this.instance._intersectsWith(this.instance.containerCache) && (n = !0, e.each(a.sortables, function () {
                return this.instance.positionAbs = a.positionAbs, this.instance.helperProportions = a.helperProportions, this.instance.offset.click = a.offset.click, this !== r && this.instance._intersectsWith(this.instance.containerCache) && e.contains(r.instance.element[0], this.instance.element[0]) && (n = !1), n
            })), n ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = e(s).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function () {
                return i.helper[0]
            }, t.target = this.instance.currentItem[0], this.instance._mouseCapture(t, !0), this.instance._mouseStart(t, !0, !0), this.instance.offset.click.top = a.offset.click.top, this.instance.offset.click.left = a.offset.click.left, this.instance.offset.parent.left -= a.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= a.offset.parent.top - this.instance.offset.parent.top, a._trigger("toSortable", t), a.dropped = this.instance.element, a.currentItem = a.element, this.instance.fromOutside = a), this.instance.currentItem && this.instance._mouseDrag(t)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", t, this.instance._uiHash(this.instance)), this.instance._mouseStop(t, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), a._trigger("fromSortable", t), a.dropped = !1)
        })
    }}), e.ui.plugin.add("draggable", "cursor", {start: function () {
        var t = e("body"), i = e(this).data("ui-draggable").options;
        t.css("cursor") && (i._cursor = t.css("cursor")), t.css("cursor", i.cursor)
    }, stop: function () {
        var t = e(this).data("ui-draggable").options;
        t._cursor && e("body").css("cursor", t._cursor)
    }}), e.ui.plugin.add("draggable", "opacity", {start: function (t, i) {
        var a = e(i.helper), s = e(this).data("ui-draggable").options;
        a.css("opacity") && (s._opacity = a.css("opacity")), a.css("opacity", s.opacity)
    }, stop: function (t, i) {
        var a = e(this).data("ui-draggable").options;
        a._opacity && e(i.helper).css("opacity", a._opacity)
    }}), e.ui.plugin.add("draggable", "scroll", {start: function () {
        var t = e(this).data("ui-draggable");
        t.scrollParent[0] !== document && "HTML" !== t.scrollParent[0].tagName && (t.overflowOffset = t.scrollParent.offset())
    }, drag: function (t) {
        var i = e(this).data("ui-draggable"), a = i.options, s = !1;
        i.scrollParent[0] !== document && "HTML" !== i.scrollParent[0].tagName ? (a.axis && "x" === a.axis || (i.overflowOffset.top + i.scrollParent[0].offsetHeight - t.pageY < a.scrollSensitivity ? i.scrollParent[0].scrollTop = s = i.scrollParent[0].scrollTop + a.scrollSpeed : t.pageY - i.overflowOffset.top < a.scrollSensitivity && (i.scrollParent[0].scrollTop = s = i.scrollParent[0].scrollTop - a.scrollSpeed)), a.axis && "y" === a.axis || (i.overflowOffset.left + i.scrollParent[0].offsetWidth - t.pageX < a.scrollSensitivity ? i.scrollParent[0].scrollLeft = s = i.scrollParent[0].scrollLeft + a.scrollSpeed : t.pageX - i.overflowOffset.left < a.scrollSensitivity && (i.scrollParent[0].scrollLeft = s = i.scrollParent[0].scrollLeft - a.scrollSpeed))) : (a.axis && "x" === a.axis || (t.pageY - e(document).scrollTop() < a.scrollSensitivity ? s = e(document).scrollTop(e(document).scrollTop() - a.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < a.scrollSensitivity && (s = e(document).scrollTop(e(document).scrollTop() + a.scrollSpeed))), a.axis && "y" === a.axis || (t.pageX - e(document).scrollLeft() < a.scrollSensitivity ? s = e(document).scrollLeft(e(document).scrollLeft() - a.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < a.scrollSensitivity && (s = e(document).scrollLeft(e(document).scrollLeft() + a.scrollSpeed)))), s !== !1 && e.ui.ddmanager && !a.dropBehaviour && e.ui.ddmanager.prepareOffsets(i, t)
    }}), e.ui.plugin.add("draggable", "snap", {start: function () {
        var t = e(this).data("ui-draggable"), i = t.options;
        t.snapElements = [], e(i.snap.constructor !== String ? i.snap.items || ":data(ui-draggable)" : i.snap).each(function () {
            var i = e(this), a = i.offset();
            this !== t.element[0] && t.snapElements.push({item: this, width: i.outerWidth(), height: i.outerHeight(), top: a.top, left: a.left})
        })
    }, drag: function (t, i) {
        var a, s, n, r, o, l, h, u, d, c, p = e(this).data("ui-draggable"), f = p.options, m = f.snapTolerance, g = i.offset.left, v = g + p.helperProportions.width, y = i.offset.top, b = y + p.helperProportions.height;
        for (d = p.snapElements.length - 1; d >= 0; d--)o = p.snapElements[d].left, l = o + p.snapElements[d].width, h = p.snapElements[d].top, u = h + p.snapElements[d].height, o - m > v || g > l + m || h - m > b || y > u + m || !e.contains(p.snapElements[d].item.ownerDocument, p.snapElements[d].item) ? (p.snapElements[d].snapping && p.options.snap.release && p.options.snap.release.call(p.element, t, e.extend(p._uiHash(), {snapItem: p.snapElements[d].item})), p.snapElements[d].snapping = !1) : ("inner" !== f.snapMode && (a = m >= Math.abs(h - b), s = m >= Math.abs(u - y), n = m >= Math.abs(o - v), r = m >= Math.abs(l - g), a && (i.position.top = p._convertPositionTo("relative", {top: h - p.helperProportions.height, left: 0}).top - p.margins.top), s && (i.position.top = p._convertPositionTo("relative", {top: u, left: 0}).top - p.margins.top), n && (i.position.left = p._convertPositionTo("relative", {top: 0, left: o - p.helperProportions.width}).left - p.margins.left), r && (i.position.left = p._convertPositionTo("relative", {top: 0, left: l}).left - p.margins.left)), c = a || s || n || r, "outer" !== f.snapMode && (a = m >= Math.abs(h - y), s = m >= Math.abs(u - b), n = m >= Math.abs(o - g), r = m >= Math.abs(l - v), a && (i.position.top = p._convertPositionTo("relative", {top: h, left: 0}).top - p.margins.top), s && (i.position.top = p._convertPositionTo("relative", {top: u - p.helperProportions.height, left: 0}).top - p.margins.top), n && (i.position.left = p._convertPositionTo("relative", {top: 0, left: o}).left - p.margins.left), r && (i.position.left = p._convertPositionTo("relative", {top: 0, left: l - p.helperProportions.width}).left - p.margins.left)), !p.snapElements[d].snapping && (a || s || n || r || c) && p.options.snap.snap && p.options.snap.snap.call(p.element, t, e.extend(p._uiHash(), {snapItem: p.snapElements[d].item})), p.snapElements[d].snapping = a || s || n || r || c)
    }}), e.ui.plugin.add("draggable", "stack", {start: function () {
        var t, i = this.data("ui-draggable").options, a = e.makeArray(e(i.stack)).sort(function (t, i) {
            return(parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(i).css("zIndex"), 10) || 0)
        });
        a.length && (t = parseInt(e(a[0]).css("zIndex"), 10) || 0, e(a).each(function (i) {
            e(this).css("zIndex", t + i)
        }), this.css("zIndex", t + a.length))
    }}), e.ui.plugin.add("draggable", "zIndex", {start: function (t, i) {
        var a = e(i.helper), s = e(this).data("ui-draggable").options;
        a.css("zIndex") && (s._zIndex = a.css("zIndex")), a.css("zIndex", s.zIndex)
    }, stop: function (t, i) {
        var a = e(this).data("ui-draggable").options;
        a._zIndex && e(i.helper).css("zIndex", a._zIndex)
    }})
})(jQuery);
(function (e) {
    function t(e, t, i) {
        return e > t && t + i > e
    }

    e.widget("ui.droppable", {version: "1.10.3", widgetEventPrefix: "drop", options: {accept: "*", activeClass: !1, addClasses: !0, greedy: !1, hoverClass: !1, scope: "default", tolerance: "intersect", activate: null, deactivate: null, drop: null, out: null, over: null}, _create: function () {
        var t = this.options, i = t.accept;
        this.isover = !1, this.isout = !0, this.accept = e.isFunction(i) ? i : function (e) {
            return e.is(i)
        }, this.proportions = {width: this.element[0].offsetWidth, height: this.element[0].offsetHeight}, e.ui.ddmanager.droppables[t.scope] = e.ui.ddmanager.droppables[t.scope] || [], e.ui.ddmanager.droppables[t.scope].push(this), t.addClasses && this.element.addClass("ui-droppable")
    }, _destroy: function () {
        for (var t = 0, i = e.ui.ddmanager.droppables[this.options.scope]; i.length > t; t++)i[t] === this && i.splice(t, 1);
        this.element.removeClass("ui-droppable ui-droppable-disabled")
    }, _setOption: function (t, i) {
        "accept" === t && (this.accept = e.isFunction(i) ? i : function (e) {
            return e.is(i)
        }), e.Widget.prototype._setOption.apply(this, arguments)
    }, _activate: function (t) {
        var i = e.ui.ddmanager.current;
        this.options.activeClass && this.element.addClass(this.options.activeClass), i && this._trigger("activate", t, this.ui(i))
    }, _deactivate: function (t) {
        var i = e.ui.ddmanager.current;
        this.options.activeClass && this.element.removeClass(this.options.activeClass), i && this._trigger("deactivate", t, this.ui(i))
    }, _over: function (t) {
        var i = e.ui.ddmanager.current;
        i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", t, this.ui(i)))
    }, _out: function (t) {
        var i = e.ui.ddmanager.current;
        i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", t, this.ui(i)))
    }, _drop: function (t, i) {
        var a = i || e.ui.ddmanager.current, s = !1;
        return a && (a.currentItem || a.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () {
            var t = e.data(this, "ui-droppable");
            return t.options.greedy && !t.options.disabled && t.options.scope === a.options.scope && t.accept.call(t.element[0], a.currentItem || a.element) && e.ui.intersect(a, e.extend(t, {offset: t.element.offset()}), t.options.tolerance) ? (s = !0, !1) : undefined
        }), s ? !1 : this.accept.call(this.element[0], a.currentItem || a.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", t, this.ui(a)), this.element) : !1) : !1
    }, ui: function (e) {
        return{draggable: e.currentItem || e.element, helper: e.helper, position: e.position, offset: e.positionAbs}
    }}), e.ui.intersect = function (e, i, a) {
        if (!i.offset)return!1;
        var s, n, r = (e.positionAbs || e.position.absolute).left, o = r + e.helperProportions.width, l = (e.positionAbs || e.position.absolute).top, h = l + e.helperProportions.height, u = i.offset.left, d = u + i.proportions.width, c = i.offset.top, p = c + i.proportions.height;
        switch (a) {
            case"fit":
                return r >= u && d >= o && l >= c && p >= h;
            case"intersect":
                return r + e.helperProportions.width / 2 > u && d > o - e.helperProportions.width / 2 && l + e.helperProportions.height / 2 > c && p > h - e.helperProportions.height / 2;
            case"pointer":
                return s = (e.positionAbs || e.position.absolute).left + (e.clickOffset || e.offset.click).left, n = (e.positionAbs || e.position.absolute).top + (e.clickOffset || e.offset.click).top, t(n, c, i.proportions.height) && t(s, u, i.proportions.width);
            case"touch":
                return(l >= c && p >= l || h >= c && p >= h || c > l && h > p) && (r >= u && d >= r || o >= u && d >= o || u > r && o > d);
            default:
                return!1
        }
    }, e.ui.ddmanager = {current: null, droppables: {"default": []}, prepareOffsets: function (t, i) {
        var a, s, n = e.ui.ddmanager.droppables[t.options.scope] || [], r = i ? i.type : null, o = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
        e:for (a = 0; n.length > a; a++)if (!(n[a].options.disabled || t && !n[a].accept.call(n[a].element[0], t.currentItem || t.element))) {
            for (s = 0; o.length > s; s++)if (o[s] === n[a].element[0]) {
                n[a].proportions.height = 0;
                continue e
            }
            n[a].visible = "none" !== n[a].element.css("display"), n[a].visible && ("mousedown" === r && n[a]._activate.call(n[a], i), n[a].offset = n[a].element.offset(), n[a].proportions = {width: n[a].element[0].offsetWidth, height: n[a].element[0].offsetHeight})
        }
    }, drop: function (t, i) {
        var a = !1;
        return e.each((e.ui.ddmanager.droppables[t.options.scope] || []).slice(), function () {
            this.options && (!this.options.disabled && this.visible && e.ui.intersect(t, this, this.options.tolerance) && (a = this._drop.call(this, i) || a), !this.options.disabled && this.visible && this.accept.call(this.element[0], t.currentItem || t.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, i)))
        }), a
    }, dragStart: function (t, i) {
        t.element.parentsUntil("body").bind("scroll.droppable", function () {
            t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i)
        })
    }, drag: function (t, i) {
        t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i), e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function () {
            if (!this.options.disabled && !this.greedyChild && this.visible) {
                var a, s, n, r = e.ui.intersect(t, this, this.options.tolerance), o = !r && this.isover ? "isout" : r && !this.isover ? "isover" : null;
                o && (this.options.greedy && (s = this.options.scope, n = this.element.parents(":data(ui-droppable)").filter(function () {
                    return e.data(this, "ui-droppable").options.scope === s
                }), n.length && (a = e.data(n[0], "ui-droppable"), a.greedyChild = "isover" === o)), a && "isover" === o && (a.isover = !1, a.isout = !0, a._out.call(a, i)), this[o] = !0, this["isout" === o ? "isover" : "isout"] = !1, this["isover" === o ? "_over" : "_out"].call(this, i), a && "isout" === o && (a.isout = !1, a.isover = !0, a._over.call(a, i)))
            }
        })
    }, dragStop: function (t, i) {
        t.element.parentsUntil("body").unbind("scroll.droppable"), t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i)
    }}
})(jQuery);
(function (e) {
    function t(e) {
        return parseInt(e, 10) || 0
    }

    function i(e) {
        return!isNaN(parseInt(e, 10))
    }

    e.widget("ui.resizable", e.ui.mouse, {version: "1.10.3", widgetEventPrefix: "resize", options: {alsoResize: !1, animate: !1, animateDuration: "slow", animateEasing: "swing", aspectRatio: !1, autoHide: !1, containment: !1, ghost: !1, grid: !1, handles: "e,s,se", helper: !1, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 90, resize: null, start: null, stop: null}, _create: function () {
        var t, i, s, a, n, r = this, o = this.options;
        if (this.element.addClass("ui-resizable"), e.extend(this, {_aspectRatio: !!o.aspectRatio, aspectRatio: o.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null}), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left")})), this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable")), this.elementIsWrapper = !0, this.element.css({marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom")}), this.originalElement.css({marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0}), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({position: "static", zoom: 1, display: "block"})), this.originalElement.css({margin: this.originalElement.css("margin")}), this._proportionallyResize()), this.handles = o.handles || (e(".ui-resizable-handle", this.element).length ? {n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw"} : "e,s,se"), this.handles.constructor === String)for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), t = this.handles.split(","), this.handles = {}, i = 0; t.length > i; i++)s = e.trim(t[i]), n = "ui-resizable-" + s, a = e("<div class='ui-resizable-handle " + n + "'></div>"), a.css({zIndex: o.zIndex}), "se" === s && a.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[s] = ".ui-resizable-" + s, this.element.append(a);
        this._renderAxis = function (t) {
            var i, s, a, n;
            t = t || this.element;
            for (i in this.handles)this.handles[i].constructor === String && (this.handles[i] = e(this.handles[i], this.element).show()), this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i) && (s = e(this.handles[i], this.element), n = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(), a = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""), t.css(a, n), this._proportionallyResize()), e(this.handles[i]).length
        }, this._renderAxis(this.element), this._handles = e(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function () {
            r.resizing || (this.className && (a = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), r.axis = a && a[1] ? a[1] : "se")
        }), o.autoHide && (this._handles.hide(), e(this.element).addClass("ui-resizable-autohide").mouseenter(function () {
            o.disabled || (e(this).removeClass("ui-resizable-autohide"), r._handles.show())
        }).mouseleave(function () {
            o.disabled || r.resizing || (e(this).addClass("ui-resizable-autohide"), r._handles.hide())
        })), this._mouseInit()
    }, _destroy: function () {
        this._mouseDestroy();
        var t, i = function (t) {
            e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
        };
        return this.elementIsWrapper && (i(this.element), t = this.element, this.originalElement.css({position: t.css("position"), width: t.outerWidth(), height: t.outerHeight(), top: t.css("top"), left: t.css("left")}).insertAfter(t), t.remove()), this.originalElement.css("resize", this.originalResizeStyle), i(this.originalElement), this
    }, _mouseCapture: function (t) {
        var i, s, a = !1;
        for (i in this.handles)s = e(this.handles[i])[0], (s === t.target || e.contains(s, t.target)) && (a = !0);
        return!this.options.disabled && a
    }, _mouseStart: function (i) {
        var s, a, n, r = this.options, o = this.element.position(), h = this.element;
        return this.resizing = !0, /absolute/.test(h.css("position")) ? h.css({position: "absolute", top: h.css("top"), left: h.css("left")}) : h.is(".ui-draggable") && h.css({position: "absolute", top: o.top, left: o.left}), this._renderProxy(), s = t(this.helper.css("left")), a = t(this.helper.css("top")), r.containment && (s += e(r.containment).scrollLeft() || 0, a += e(r.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {left: s, top: a}, this.size = this._helper ? {width: h.outerWidth(), height: h.outerHeight()} : {width: h.width(), height: h.height()}, this.originalSize = this._helper ? {width: h.outerWidth(), height: h.outerHeight()} : {width: h.width(), height: h.height()}, this.originalPosition = {left: s, top: a}, this.sizeDiff = {width: h.outerWidth() - h.width(), height: h.outerHeight() - h.height()}, this.originalMousePosition = {left: i.pageX, top: i.pageY}, this.aspectRatio = "number" == typeof r.aspectRatio ? r.aspectRatio : this.originalSize.width / this.originalSize.height || 1, n = e(".ui-resizable-" + this.axis).css("cursor"), e("body").css("cursor", "auto" === n ? this.axis + "-resize" : n), h.addClass("ui-resizable-resizing"), this._propagate("start", i), !0
    }, _mouseDrag: function (t) {
        var i, s = this.helper, a = {}, n = this.originalMousePosition, r = this.axis, o = this.position.top, h = this.position.left, l = this.size.width, u = this.size.height, c = t.pageX - n.left || 0, d = t.pageY - n.top || 0, p = this._change[r];
        return p ? (i = p.apply(this, [t, c, d]), this._updateVirtualBoundaries(t.shiftKey), (this._aspectRatio || t.shiftKey) && (i = this._updateRatio(i, t)), i = this._respectSize(i, t), this._updateCache(i), this._propagate("resize", t), this.position.top !== o && (a.top = this.position.top + "px"), this.position.left !== h && (a.left = this.position.left + "px"), this.size.width !== l && (a.width = this.size.width + "px"), this.size.height !== u && (a.height = this.size.height + "px"), s.css(a), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), e.isEmptyObject(a) || this._trigger("resize", t, this.ui()), !1) : !1
    }, _mouseStop: function (t) {
        this.resizing = !1;
        var i, s, a, n, r, o, h, l = this.options, u = this;
        return this._helper && (i = this._proportionallyResizeElements, s = i.length && /textarea/i.test(i[0].nodeName), a = s && e.ui.hasScroll(i[0], "left") ? 0 : u.sizeDiff.height, n = s ? 0 : u.sizeDiff.width, r = {width: u.helper.width() - n, height: u.helper.height() - a}, o = parseInt(u.element.css("left"), 10) + (u.position.left - u.originalPosition.left) || null, h = parseInt(u.element.css("top"), 10) + (u.position.top - u.originalPosition.top) || null, l.animate || this.element.css(e.extend(r, {top: h, left: o})), u.helper.height(u.size.height), u.helper.width(u.size.width), this._helper && !l.animate && this._proportionallyResize()), e("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", t), this._helper && this.helper.remove(), !1
    }, _updateVirtualBoundaries: function (e) {
        var t, s, a, n, r, o = this.options;
        r = {minWidth: i(o.minWidth) ? o.minWidth : 0, maxWidth: i(o.maxWidth) ? o.maxWidth : 1 / 0, minHeight: i(o.minHeight) ? o.minHeight : 0, maxHeight: i(o.maxHeight) ? o.maxHeight : 1 / 0}, (this._aspectRatio || e) && (t = r.minHeight * this.aspectRatio, a = r.minWidth / this.aspectRatio, s = r.maxHeight * this.aspectRatio, n = r.maxWidth / this.aspectRatio, t > r.minWidth && (r.minWidth = t), a > r.minHeight && (r.minHeight = a), r.maxWidth > s && (r.maxWidth = s), r.maxHeight > n && (r.maxHeight = n)), this._vBoundaries = r
    }, _updateCache: function (e) {
        this.offset = this.helper.offset(), i(e.left) && (this.position.left = e.left), i(e.top) && (this.position.top = e.top), i(e.height) && (this.size.height = e.height), i(e.width) && (this.size.width = e.width)
    }, _updateRatio: function (e) {
        var t = this.position, s = this.size, a = this.axis;
        return i(e.height) ? e.width = e.height * this.aspectRatio : i(e.width) && (e.height = e.width / this.aspectRatio), "sw" === a && (e.left = t.left + (s.width - e.width), e.top = null), "nw" === a && (e.top = t.top + (s.height - e.height), e.left = t.left + (s.width - e.width)), e
    }, _respectSize: function (e) {
        var t = this._vBoundaries, s = this.axis, a = i(e.width) && t.maxWidth && t.maxWidth < e.width, n = i(e.height) && t.maxHeight && t.maxHeight < e.height, r = i(e.width) && t.minWidth && t.minWidth > e.width, o = i(e.height) && t.minHeight && t.minHeight > e.height, h = this.originalPosition.left + this.originalSize.width, l = this.position.top + this.size.height, u = /sw|nw|w/.test(s), c = /nw|ne|n/.test(s);
        return r && (e.width = t.minWidth), o && (e.height = t.minHeight), a && (e.width = t.maxWidth), n && (e.height = t.maxHeight), r && u && (e.left = h - t.minWidth), a && u && (e.left = h - t.maxWidth), o && c && (e.top = l - t.minHeight), n && c && (e.top = l - t.maxHeight), e.width || e.height || e.left || !e.top ? e.width || e.height || e.top || !e.left || (e.left = null) : e.top = null, e
    }, _proportionallyResize: function () {
        if (this._proportionallyResizeElements.length) {
            var e, t, i, s, a, n = this.helper || this.element;
            for (e = 0; this._proportionallyResizeElements.length > e; e++) {
                if (a = this._proportionallyResizeElements[e], !this.borderDif)for (this.borderDif = [], i = [a.css("borderTopWidth"), a.css("borderRightWidth"), a.css("borderBottomWidth"), a.css("borderLeftWidth")], s = [a.css("paddingTop"), a.css("paddingRight"), a.css("paddingBottom"), a.css("paddingLeft")], t = 0; i.length > t; t++)this.borderDif[t] = (parseInt(i[t], 10) || 0) + (parseInt(s[t], 10) || 0);
                a.css({height: n.height() - this.borderDif[0] - this.borderDif[2] || 0, width: n.width() - this.borderDif[1] - this.borderDif[3] || 0})
            }
        }
    }, _renderProxy: function () {
        var t = this.element, i = this.options;
        this.elementOffset = t.offset(), this._helper ? (this.helper = this.helper || e("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({width: this.element.outerWidth() - 1, height: this.element.outerHeight() - 1, position: "absolute", left: this.elementOffset.left + "px", top: this.elementOffset.top + "px", zIndex: ++i.zIndex}), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
    }, _change: {e: function (e, t) {
        return{width: this.originalSize.width + t}
    }, w: function (e, t) {
        var i = this.originalSize, s = this.originalPosition;
        return{left: s.left + t, width: i.width - t}
    }, n: function (e, t, i) {
        var s = this.originalSize, a = this.originalPosition;
        return{top: a.top + i, height: s.height - i}
    }, s: function (e, t, i) {
        return{height: this.originalSize.height + i}
    }, se: function (t, i, s) {
        return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t, i, s]))
    }, sw: function (t, i, s) {
        return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t, i, s]))
    }, ne: function (t, i, s) {
        return e.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t, i, s]))
    }, nw: function (t, i, s) {
        return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t, i, s]))
    }}, _propagate: function (t, i) {
        e.ui.plugin.call(this, t, [i, this.ui()]), "resize" !== t && this._trigger(t, i, this.ui())
    }, plugins: {}, ui: function () {
        return{originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition}
    }}), e.ui.plugin.add("resizable", "animate", {stop: function (t) {
        var i = e(this).data("ui-resizable"), s = i.options, a = i._proportionallyResizeElements, n = a.length && /textarea/i.test(a[0].nodeName), r = n && e.ui.hasScroll(a[0], "left") ? 0 : i.sizeDiff.height, o = n ? 0 : i.sizeDiff.width, h = {width: i.size.width - o, height: i.size.height - r}, l = parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left) || null, u = parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top) || null;
        i.element.animate(e.extend(h, u && l ? {top: u, left: l} : {}), {duration: s.animateDuration, easing: s.animateEasing, step: function () {
            var s = {width: parseInt(i.element.css("width"), 10), height: parseInt(i.element.css("height"), 10), top: parseInt(i.element.css("top"), 10), left: parseInt(i.element.css("left"), 10)};
            a && a.length && e(a[0]).css({width: s.width, height: s.height}), i._updateCache(s), i._propagate("resize", t)
        }})
    }}), e.ui.plugin.add("resizable", "containment", {start: function () {
        var i, s, a, n, r, o, h, l = e(this).data("ui-resizable"), u = l.options, c = l.element, d = u.containment, p = d instanceof e ? d.get(0) : /parent/.test(d) ? c.parent().get(0) : d;
        p && (l.containerElement = e(p), /document/.test(d) || d === document ? (l.containerOffset = {left: 0, top: 0}, l.containerPosition = {left: 0, top: 0}, l.parentData = {element: e(document), left: 0, top: 0, width: e(document).width(), height: e(document).height() || document.body.parentNode.scrollHeight}) : (i = e(p), s = [], e(["Top", "Right", "Left", "Bottom"]).each(function (e, a) {
            s[e] = t(i.css("padding" + a))
        }), l.containerOffset = i.offset(), l.containerPosition = i.position(), l.containerSize = {height: i.innerHeight() - s[3], width: i.innerWidth() - s[1]}, a = l.containerOffset, n = l.containerSize.height, r = l.containerSize.width, o = e.ui.hasScroll(p, "left") ? p.scrollWidth : r, h = e.ui.hasScroll(p) ? p.scrollHeight : n, l.parentData = {element: p, left: a.left, top: a.top, width: o, height: h}))
    }, resize: function (t) {
        var i, s, a, n, r = e(this).data("ui-resizable"), o = r.options, h = r.containerOffset, l = r.position, u = r._aspectRatio || t.shiftKey, c = {top: 0, left: 0}, d = r.containerElement;
        d[0] !== document && /static/.test(d.css("position")) && (c = h), l.left < (r._helper ? h.left : 0) && (r.size.width = r.size.width + (r._helper ? r.position.left - h.left : r.position.left - c.left), u && (r.size.height = r.size.width / r.aspectRatio), r.position.left = o.helper ? h.left : 0), l.top < (r._helper ? h.top : 0) && (r.size.height = r.size.height + (r._helper ? r.position.top - h.top : r.position.top), u && (r.size.width = r.size.height * r.aspectRatio), r.position.top = r._helper ? h.top : 0), r.offset.left = r.parentData.left + r.position.left, r.offset.top = r.parentData.top + r.position.top, i = Math.abs((r._helper ? r.offset.left - c.left : r.offset.left - c.left) + r.sizeDiff.width), s = Math.abs((r._helper ? r.offset.top - c.top : r.offset.top - h.top) + r.sizeDiff.height), a = r.containerElement.get(0) === r.element.parent().get(0), n = /relative|absolute/.test(r.containerElement.css("position")), a && n && (i -= r.parentData.left), i + r.size.width >= r.parentData.width && (r.size.width = r.parentData.width - i, u && (r.size.height = r.size.width / r.aspectRatio)), s + r.size.height >= r.parentData.height && (r.size.height = r.parentData.height - s, u && (r.size.width = r.size.height * r.aspectRatio))
    }, stop: function () {
        var t = e(this).data("ui-resizable"), i = t.options, s = t.containerOffset, a = t.containerPosition, n = t.containerElement, r = e(t.helper), o = r.offset(), h = r.outerWidth() - t.sizeDiff.width, l = r.outerHeight() - t.sizeDiff.height;
        t._helper && !i.animate && /relative/.test(n.css("position")) && e(this).css({left: o.left - a.left - s.left, width: h, height: l}), t._helper && !i.animate && /static/.test(n.css("position")) && e(this).css({left: o.left - a.left - s.left, width: h, height: l})
    }}), e.ui.plugin.add("resizable", "alsoResize", {start: function () {
        var t = e(this).data("ui-resizable"), i = t.options, s = function (t) {
            e(t).each(function () {
                var t = e(this);
                t.data("ui-resizable-alsoresize", {width: parseInt(t.width(), 10), height: parseInt(t.height(), 10), left: parseInt(t.css("left"), 10), top: parseInt(t.css("top"), 10)})
            })
        };
        "object" != typeof i.alsoResize || i.alsoResize.parentNode ? s(i.alsoResize) : i.alsoResize.length ? (i.alsoResize = i.alsoResize[0], s(i.alsoResize)) : e.each(i.alsoResize, function (e) {
            s(e)
        })
    }, resize: function (t, i) {
        var s = e(this).data("ui-resizable"), a = s.options, n = s.originalSize, r = s.originalPosition, o = {height: s.size.height - n.height || 0, width: s.size.width - n.width || 0, top: s.position.top - r.top || 0, left: s.position.left - r.left || 0}, h = function (t, s) {
            e(t).each(function () {
                var t = e(this), a = e(this).data("ui-resizable-alsoresize"), n = {}, r = s && s.length ? s : t.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                e.each(r, function (e, t) {
                    var i = (a[t] || 0) + (o[t] || 0);
                    i && i >= 0 && (n[t] = i || null)
                }), t.css(n)
            })
        };
        "object" != typeof a.alsoResize || a.alsoResize.nodeType ? h(a.alsoResize) : e.each(a.alsoResize, function (e, t) {
            h(e, t)
        })
    }, stop: function () {
        e(this).removeData("resizable-alsoresize")
    }}), e.ui.plugin.add("resizable", "ghost", {start: function () {
        var t = e(this).data("ui-resizable"), i = t.options, s = t.size;
        t.ghost = t.originalElement.clone(), t.ghost.css({opacity: .25, display: "block", position: "relative", height: s.height, width: s.width, margin: 0, left: 0, top: 0}).addClass("ui-resizable-ghost").addClass("string" == typeof i.ghost ? i.ghost : ""), t.ghost.appendTo(t.helper)
    }, resize: function () {
        var t = e(this).data("ui-resizable");
        t.ghost && t.ghost.css({position: "relative", height: t.size.height, width: t.size.width})
    }, stop: function () {
        var t = e(this).data("ui-resizable");
        t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0))
    }}), e.ui.plugin.add("resizable", "grid", {resize: function () {
        var t = e(this).data("ui-resizable"), i = t.options, s = t.size, a = t.originalSize, n = t.originalPosition, r = t.axis, o = "number" == typeof i.grid ? [i.grid, i.grid] : i.grid, h = o[0] || 1, l = o[1] || 1, u = Math.round((s.width - a.width) / h) * h, c = Math.round((s.height - a.height) / l) * l, d = a.width + u, p = a.height + c, f = i.maxWidth && d > i.maxWidth, m = i.maxHeight && p > i.maxHeight, g = i.minWidth && i.minWidth > d, v = i.minHeight && i.minHeight > p;
        i.grid = o, g && (d += h), v && (p += l), f && (d -= h), m && (p -= l), /^(se|s|e)$/.test(r) ? (t.size.width = d, t.size.height = p) : /^(ne)$/.test(r) ? (t.size.width = d, t.size.height = p, t.position.top = n.top - c) : /^(sw)$/.test(r) ? (t.size.width = d, t.size.height = p, t.position.left = n.left - u) : (t.size.width = d, t.size.height = p, t.position.top = n.top - c, t.position.left = n.left - u)
    }})
})(jQuery);
(function (e) {
    e.widget("ui.selectable", e.ui.mouse, {version: "1.10.3", options: {appendTo: "body", autoRefresh: !0, distance: 0, filter: "*", tolerance: "touch", selected: null, selecting: null, start: null, stop: null, unselected: null, unselecting: null}, _create: function () {
        var t, i = this;
        this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function () {
            t = e(i.options.filter, i.element[0]), t.addClass("ui-selectee"), t.each(function () {
                var t = e(this), i = t.offset();
                e.data(this, "selectable-item", {element: this, $element: t, left: i.left, top: i.top, right: i.left + t.outerWidth(), bottom: i.top + t.outerHeight(), startselected: !1, selected: t.hasClass("ui-selected"), selecting: t.hasClass("ui-selecting"), unselecting: t.hasClass("ui-unselecting")})
            })
        }, this.refresh(), this.selectees = t.addClass("ui-selectee"), this._mouseInit(), this.helper = e("<div class='ui-selectable-helper'></div>")
    }, _destroy: function () {
        this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy()
    }, _mouseStart: function (t) {
        var i = this, s = this.options;
        this.opos = [t.pageX, t.pageY], this.options.disabled || (this.selectees = e(s.filter, this.element[0]), this._trigger("start", t), e(s.appendTo).append(this.helper), this.helper.css({left: t.pageX, top: t.pageY, width: 0, height: 0}), s.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () {
            var s = e.data(this, "selectable-item");
            s.startselected = !0, t.metaKey || t.ctrlKey || (s.$element.removeClass("ui-selected"), s.selected = !1, s.$element.addClass("ui-unselecting"), s.unselecting = !0, i._trigger("unselecting", t, {unselecting: s.element}))
        }), e(t.target).parents().addBack().each(function () {
            var s, a = e.data(this, "selectable-item");
            return a ? (s = !t.metaKey && !t.ctrlKey || !a.$element.hasClass("ui-selected"), a.$element.removeClass(s ? "ui-unselecting" : "ui-selected").addClass(s ? "ui-selecting" : "ui-unselecting"), a.unselecting = !s, a.selecting = s, a.selected = s, s ? i._trigger("selecting", t, {selecting: a.element}) : i._trigger("unselecting", t, {unselecting: a.element}), !1) : undefined
        }))
    }, _mouseDrag: function (t) {
        if (this.dragged = !0, !this.options.disabled) {
            var i, s = this, a = this.options, n = this.opos[0], r = this.opos[1], o = t.pageX, h = t.pageY;
            return n > o && (i = o, o = n, n = i), r > h && (i = h, h = r, r = i), this.helper.css({left: n, top: r, width: o - n, height: h - r}), this.selectees.each(function () {
                var i = e.data(this, "selectable-item"), l = !1;
                i && i.element !== s.element[0] && ("touch" === a.tolerance ? l = !(i.left > o || n > i.right || i.top > h || r > i.bottom) : "fit" === a.tolerance && (l = i.left > n && o > i.right && i.top > r && h > i.bottom), l ? (i.selected && (i.$element.removeClass("ui-selected"), i.selected = !1), i.unselecting && (i.$element.removeClass("ui-unselecting"), i.unselecting = !1), i.selecting || (i.$element.addClass("ui-selecting"), i.selecting = !0, s._trigger("selecting", t, {selecting: i.element}))) : (i.selecting && ((t.metaKey || t.ctrlKey) && i.startselected ? (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.$element.addClass("ui-selected"), i.selected = !0) : (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.startselected && (i.$element.addClass("ui-unselecting"), i.unselecting = !0), s._trigger("unselecting", t, {unselecting: i.element}))), i.selected && (t.metaKey || t.ctrlKey || i.startselected || (i.$element.removeClass("ui-selected"), i.selected = !1, i.$element.addClass("ui-unselecting"), i.unselecting = !0, s._trigger("unselecting", t, {unselecting: i.element})))))
            }), !1
        }
    }, _mouseStop: function (t) {
        var i = this;
        return this.dragged = !1, e(".ui-unselecting", this.element[0]).each(function () {
            var s = e.data(this, "selectable-item");
            s.$element.removeClass("ui-unselecting"), s.unselecting = !1, s.startselected = !1, i._trigger("unselected", t, {unselected: s.element})
        }), e(".ui-selecting", this.element[0]).each(function () {
            var s = e.data(this, "selectable-item");
            s.$element.removeClass("ui-selecting").addClass("ui-selected"), s.selecting = !1, s.selected = !0, s.startselected = !0, i._trigger("selected", t, {selected: s.element})
        }), this._trigger("stop", t), this.helper.remove(), !1
    }})
})(jQuery);
(function (e) {
    function t(e, t, i) {
        return e > t && t + i > e
    }

    function i(e) {
        return/left|right/.test(e.css("float")) || /inline|table-cell/.test(e.css("display"))
    }

    e.widget("ui.sortable", e.ui.mouse, {version: "1.10.3", widgetEventPrefix: "sort", ready: !1, options: {appendTo: "parent", axis: !1, connectWith: !1, containment: !1, cursor: "auto", cursorAt: !1, dropOnEmpty: !0, forcePlaceholderSize: !1, forceHelperSize: !1, grid: !1, handle: !1, helper: "original", items: "> *", opacity: !1, placeholder: !1, revert: !1, scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1e3, activate: null, beforeStop: null, change: null, deactivate: null, out: null, over: null, receive: null, remove: null, sort: null, start: null, stop: null, update: null}, _create: function () {
        var e = this.options;
        this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = this.items.length ? "x" === e.axis || i(this.items[0].item) : !1, this.offset = this.element.offset(), this._mouseInit(), this.ready = !0
    }, _destroy: function () {
        this.element.removeClass("ui-sortable ui-sortable-disabled"), this._mouseDestroy();
        for (var e = this.items.length - 1; e >= 0; e--)this.items[e].item.removeData(this.widgetName + "-item");
        return this
    }, _setOption: function (t, i) {
        "disabled" === t ? (this.options[t] = i, this.widget().toggleClass("ui-sortable-disabled", !!i)) : e.Widget.prototype._setOption.apply(this, arguments)
    }, _mouseCapture: function (t, i) {
        var s = null, a = !1, n = this;
        return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(t), e(t.target).parents().each(function () {
            return e.data(this, n.widgetName + "-item") === n ? (s = e(this), !1) : undefined
        }), e.data(t.target, n.widgetName + "-item") === n && (s = e(t.target)), s ? !this.options.handle || i || (e(this.options.handle, s).find("*").addBack().each(function () {
            this === t.target && (a = !0)
        }), a) ? (this.currentItem = s, this._removeCurrentsFromItems(), !0) : !1 : !1)
    }, _mouseStart: function (t, i, s) {
        var a, n, r = this.options;
        if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(t), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left}, e.extend(this.offset, {click: {left: t.pageX - this.offset.left, top: t.pageY - this.offset.top}, parent: this._getParentOffset(), relative: this._getRelativeOffset()}), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, r.cursorAt && this._adjustOffsetFromHelper(r.cursorAt), this.domPosition = {prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0]}, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), r.containment && this._setContainment(), r.cursor && "auto" !== r.cursor && (n = this.document.find("body"), this.storedCursor = n.css("cursor"), n.css("cursor", r.cursor), this.storedStylesheet = e("<style>*{ cursor: " + r.cursor + " !important; }</style>").appendTo(n)), r.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", r.opacity)), r.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", r.zIndex)), this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", t, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !s)for (a = this.containers.length - 1; a >= 0; a--)this.containers[a]._trigger("activate", t, this._uiHash(this));
        return e.ui.ddmanager && (e.ui.ddmanager.current = this), e.ui.ddmanager && !r.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(t), !0
    }, _mouseDrag: function (t) {
        var i, s, a, n, r = this.options, o = !1;
        for (this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - t.pageY < r.scrollSensitivity ? this.scrollParent[0].scrollTop = o = this.scrollParent[0].scrollTop + r.scrollSpeed : t.pageY - this.overflowOffset.top < r.scrollSensitivity && (this.scrollParent[0].scrollTop = o = this.scrollParent[0].scrollTop - r.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - t.pageX < r.scrollSensitivity ? this.scrollParent[0].scrollLeft = o = this.scrollParent[0].scrollLeft + r.scrollSpeed : t.pageX - this.overflowOffset.left < r.scrollSensitivity && (this.scrollParent[0].scrollLeft = o = this.scrollParent[0].scrollLeft - r.scrollSpeed)) : (t.pageY - e(document).scrollTop() < r.scrollSensitivity ? o = e(document).scrollTop(e(document).scrollTop() - r.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < r.scrollSensitivity && (o = e(document).scrollTop(e(document).scrollTop() + r.scrollSpeed)), t.pageX - e(document).scrollLeft() < r.scrollSensitivity ? o = e(document).scrollLeft(e(document).scrollLeft() - r.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < r.scrollSensitivity && (o = e(document).scrollLeft(e(document).scrollLeft() + r.scrollSpeed))), o !== !1 && e.ui.ddmanager && !r.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), i = this.items.length - 1; i >= 0; i--)if (s = this.items[i], a = s.item[0], n = this._intersectsWithPointer(s), n && s.instance === this.currentContainer && a !== this.currentItem[0] && this.placeholder[1 === n ? "next" : "prev"]()[0] !== a && !e.contains(this.placeholder[0], a) && ("semi-dynamic" === this.options.type ? !e.contains(this.element[0], a) : !0)) {
            if (this.direction = 1 === n ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(s))break;
            this._rearrange(t, s), this._trigger("change", t, this._uiHash());
            break
        }
        return this._contactContainers(t), e.ui.ddmanager && e.ui.ddmanager.drag(this, t), this._trigger("sort", t, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
    }, _mouseStop: function (t, i) {
        if (t) {
            if (e.ui.ddmanager && !this.options.dropBehaviour && e.ui.ddmanager.drop(this, t), this.options.revert) {
                var s = this, a = this.placeholder.offset(), n = this.options.axis, r = {};
                n && "x" !== n || (r.left = a.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)), n && "y" !== n || (r.top = a.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, e(this.helper).animate(r, parseInt(this.options.revert, 10) || 500, function () {
                    s._clear(t)
                })
            } else this._clear(t, i);
            return!1
        }
    }, cancel: function () {
        if (this.dragging) {
            this._mouseUp({target: null}), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
            for (var t = this.containers.length - 1; t >= 0; t--)this.containers[t]._trigger("deactivate", null, this._uiHash(this)), this.containers[t].containerCache.over && (this.containers[t]._trigger("out", null, this._uiHash(this)), this.containers[t].containerCache.over = 0)
        }
        return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), e.extend(this, {helper: null, dragging: !1, reverting: !1, _noFinalSort: null}), this.domPosition.prev ? e(this.domPosition.prev).after(this.currentItem) : e(this.domPosition.parent).prepend(this.currentItem)), this
    }, serialize: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected), s = [];
        return t = t || {}, e(i).each(function () {
            var i = (e(t.item || this).attr(t.attribute || "id") || "").match(t.expression || /(.+)[\-=_](.+)/);
            i && s.push((t.key || i[1] + "[]") + "=" + (t.key && t.expression ? i[1] : i[2]))
        }), !s.length && t.key && s.push(t.key + "="), s.join("&")
    }, toArray: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected), s = [];
        return t = t || {}, i.each(function () {
            s.push(e(t.item || this).attr(t.attribute || "id") || "")
        }), s
    }, _intersectsWith: function (e) {
        var t = this.positionAbs.left, i = t + this.helperProportions.width, s = this.positionAbs.top, a = s + this.helperProportions.height, n = e.left, r = n + e.width, o = e.top, h = o + e.height, l = this.offset.click.top, u = this.offset.click.left, c = "x" === this.options.axis || s + l > o && h > s + l, d = "y" === this.options.axis || t + u > n && r > t + u, p = c && d;
        return"pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > e[this.floating ? "width" : "height"] ? p : t + this.helperProportions.width / 2 > n && r > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > o && h > a - this.helperProportions.height / 2
    }, _intersectsWithPointer: function (e) {
        var i = "x" === this.options.axis || t(this.positionAbs.top + this.offset.click.top, e.top, e.height), s = "y" === this.options.axis || t(this.positionAbs.left + this.offset.click.left, e.left, e.width), a = i && s, n = this._getDragVerticalDirection(), r = this._getDragHorizontalDirection();
        return a ? this.floating ? r && "right" === r || "down" === n ? 2 : 1 : n && ("down" === n ? 2 : 1) : !1
    }, _intersectsWithSides: function (e) {
        var i = t(this.positionAbs.top + this.offset.click.top, e.top + e.height / 2, e.height), s = t(this.positionAbs.left + this.offset.click.left, e.left + e.width / 2, e.width), a = this._getDragVerticalDirection(), n = this._getDragHorizontalDirection();
        return this.floating && n ? "right" === n && s || "left" === n && !s : a && ("down" === a && i || "up" === a && !i)
    }, _getDragVerticalDirection: function () {
        var e = this.positionAbs.top - this.lastPositionAbs.top;
        return 0 !== e && (e > 0 ? "down" : "up")
    }, _getDragHorizontalDirection: function () {
        var e = this.positionAbs.left - this.lastPositionAbs.left;
        return 0 !== e && (e > 0 ? "right" : "left")
    }, refresh: function (e) {
        return this._refreshItems(e), this.refreshPositions(), this
    }, _connectWith: function () {
        var e = this.options;
        return e.connectWith.constructor === String ? [e.connectWith] : e.connectWith
    }, _getItemsAsjQuery: function (t) {
        var i, s, a, n, r = [], o = [], h = this._connectWith();
        if (h && t)for (i = h.length - 1; i >= 0; i--)for (a = e(h[i]), s = a.length - 1; s >= 0; s--)n = e.data(a[s], this.widgetFullName), n && n !== this && !n.options.disabled && o.push([e.isFunction(n.options.items) ? n.options.items.call(n.element) : e(n.options.items, n.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), n]);
        for (o.push([e.isFunction(this.options.items) ? this.options.items.call(this.element, null, {options: this.options, item: this.currentItem}) : e(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), i = o.length - 1; i >= 0; i--)o[i][0].each(function () {
            r.push(this)
        });
        return e(r)
    }, _removeCurrentsFromItems: function () {
        var t = this.currentItem.find(":data(" + this.widgetName + "-item)");
        this.items = e.grep(this.items, function (e) {
            for (var i = 0; t.length > i; i++)if (t[i] === e.item[0])return!1;
            return!0
        })
    }, _refreshItems: function (t) {
        this.items = [], this.containers = [this];
        var i, s, a, n, r, o, h, l, u = this.items, c = [
            [e.isFunction(this.options.items) ? this.options.items.call(this.element[0], t, {item: this.currentItem}) : e(this.options.items, this.element), this]
        ], d = this._connectWith();
        if (d && this.ready)for (i = d.length - 1; i >= 0; i--)for (a = e(d[i]), s = a.length - 1; s >= 0; s--)n = e.data(a[s], this.widgetFullName), n && n !== this && !n.options.disabled && (c.push([e.isFunction(n.options.items) ? n.options.items.call(n.element[0], t, {item: this.currentItem}) : e(n.options.items, n.element), n]), this.containers.push(n));
        for (i = c.length - 1; i >= 0; i--)for (r = c[i][1], o = c[i][0], s = 0, l = o.length; l > s; s++)h = e(o[s]), h.data(this.widgetName + "-item", r), u.push({item: h, instance: r, width: 0, height: 0, left: 0, top: 0})
    }, refreshPositions: function (t) {
        this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
        var i, s, a, n;
        for (i = this.items.length - 1; i >= 0; i--)s = this.items[i], s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (a = this.options.toleranceElement ? e(this.options.toleranceElement, s.item) : s.item, t || (s.width = a.outerWidth(), s.height = a.outerHeight()), n = a.offset(), s.left = n.left, s.top = n.top);
        if (this.options.custom && this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this); else for (i = this.containers.length - 1; i >= 0; i--)n = this.containers[i].element.offset(), this.containers[i].containerCache.left = n.left, this.containers[i].containerCache.top = n.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
        return this
    }, _createPlaceholder: function (t) {
        t = t || this;
        var i, s = t.options;
        s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder, s.placeholder = {element: function () {
            var s = t.currentItem[0].nodeName.toLowerCase(), a = e("<" + s + ">", t.document[0]).addClass(i || t.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
            return"tr" === s ? t.currentItem.children().each(function () {
                e("<td>&#160;</td>", t.document[0]).attr("colspan", e(this).attr("colspan") || 1).appendTo(a)
            }) : "img" === s && a.attr("src", t.currentItem.attr("src")), i || a.css("visibility", "hidden"), a
        }, update: function (e, a) {
            (!i || s.forcePlaceholderSize) && (a.height() || a.height(t.currentItem.innerHeight() - parseInt(t.currentItem.css("paddingTop") || 0, 10) - parseInt(t.currentItem.css("paddingBottom") || 0, 10)), a.width() || a.width(t.currentItem.innerWidth() - parseInt(t.currentItem.css("paddingLeft") || 0, 10) - parseInt(t.currentItem.css("paddingRight") || 0, 10)))
        }}), t.placeholder = e(s.placeholder.element.call(t.element, t.currentItem)), t.currentItem.after(t.placeholder), s.placeholder.update(t, t.placeholder)
    }, _contactContainers: function (s) {
        var a, n, r, o, h, l, u, c, d, p, f = null, m = null;
        for (a = this.containers.length - 1; a >= 0; a--)if (!e.contains(this.currentItem[0], this.containers[a].element[0]))if (this._intersectsWith(this.containers[a].containerCache)) {
            if (f && e.contains(this.containers[a].element[0], f.element[0]))continue;
            f = this.containers[a], m = a
        } else this.containers[a].containerCache.over && (this.containers[a]._trigger("out", s, this._uiHash(this)), this.containers[a].containerCache.over = 0);
        if (f)if (1 === this.containers.length)this.containers[m].containerCache.over || (this.containers[m]._trigger("over", s, this._uiHash(this)), this.containers[m].containerCache.over = 1); else {
            for (r = 1e4, o = null, p = f.floating || i(this.currentItem), h = p ? "left" : "top", l = p ? "width" : "height", u = this.positionAbs[h] + this.offset.click[h], n = this.items.length - 1; n >= 0; n--)e.contains(this.containers[m].element[0], this.items[n].item[0]) && this.items[n].item[0] !== this.currentItem[0] && (!p || t(this.positionAbs.top + this.offset.click.top, this.items[n].top, this.items[n].height)) && (c = this.items[n].item.offset()[h], d = !1, Math.abs(c - u) > Math.abs(c + this.items[n][l] - u) && (d = !0, c += this.items[n][l]), r > Math.abs(c - u) && (r = Math.abs(c - u), o = this.items[n], this.direction = d ? "up" : "down"));
            if (!o && !this.options.dropOnEmpty)return;
            if (this.currentContainer === this.containers[m])return;
            o ? this._rearrange(s, o, null, !0) : this._rearrange(s, null, this.containers[m].element, !0), this._trigger("change", s, this._uiHash()), this.containers[m]._trigger("change", s, this._uiHash(this)), this.currentContainer = this.containers[m], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[m]._trigger("over", s, this._uiHash(this)), this.containers[m].containerCache.over = 1
        }
    }, _createHelper: function (t) {
        var i = this.options, s = e.isFunction(i.helper) ? e(i.helper.apply(this.element[0], [t, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem;
        return s.parents("body").length || e("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]), s[0] === this.currentItem[0] && (this._storedCSS = {width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left")}), (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()), (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()), s
    }, _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {left: +t[0], top: +t[1] || 0}), "left"in t && (this.offset.click.left = t.left + this.margins.left), "right"in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top"in t && (this.offset.click.top = t.top + this.margins.top), "bottom"in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
    }, _getParentOffset: function () {
        this.offsetParent = this.helper.offsetParent();
        var t = this.offsetParent.offset();
        return"absolute" === this.cssPosition && this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (t = {top: 0, left: 0}), {top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)}
    }, _getRelativeOffset: function () {
        if ("relative" === this.cssPosition) {
            var e = this.currentItem.position();
            return{top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()}
        }
        return{top: 0, left: 0}
    }, _cacheMargins: function () {
        this.margins = {left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0}
    }, _cacheHelperProportions: function () {
        this.helperProportions = {width: this.helper.outerWidth(), height: this.helper.outerHeight()}
    }, _setContainment: function () {
        var t, i, s, a = this.options;
        "parent" === a.containment && (a.containment = this.helper[0].parentNode), ("document" === a.containment || "window" === a.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, e("document" === a.containment ? document : window).width() - this.helperProportions.width - this.margins.left, (e("document" === a.containment ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(a.containment) || (t = e(a.containment)[0], i = e(a.containment).offset(), s = "hidden" !== e(t).css("overflow"), this.containment = [i.left + (parseInt(e(t).css("borderLeftWidth"), 10) || 0) + (parseInt(e(t).css("paddingLeft"), 10) || 0) - this.margins.left, i.top + (parseInt(e(t).css("borderTopWidth"), 10) || 0) + (parseInt(e(t).css("paddingTop"), 10) || 0) - this.margins.top, i.left + (s ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) - (parseInt(e(t).css("borderLeftWidth"), 10) || 0) - (parseInt(e(t).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(t.scrollHeight, t.offsetHeight) : t.offsetHeight) - (parseInt(e(t).css("borderTopWidth"), 10) || 0) - (parseInt(e(t).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
    }, _convertPositionTo: function (t, i) {
        i || (i = this.position);
        var s = "absolute" === t ? 1 : -1, a = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, n = /(html|body)/i.test(a[0].tagName);
        return{top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : n ? 0 : a.scrollTop()) * s, left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : n ? 0 : a.scrollLeft()) * s}
    }, _generatePosition: function (t) {
        var i, s, a = this.options, n = t.pageX, r = t.pageY, o = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, h = /(html|body)/i.test(o[0].tagName);
        return"relative" !== this.cssPosition || this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (t.pageX - this.offset.click.left < this.containment[0] && (n = this.containment[0] + this.offset.click.left), t.pageY - this.offset.click.top < this.containment[1] && (r = this.containment[1] + this.offset.click.top), t.pageX - this.offset.click.left > this.containment[2] && (n = this.containment[2] + this.offset.click.left), t.pageY - this.offset.click.top > this.containment[3] && (r = this.containment[3] + this.offset.click.top)), a.grid && (i = this.originalPageY + Math.round((r - this.originalPageY) / a.grid[1]) * a.grid[1], r = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - a.grid[1] : i + a.grid[1] : i, s = this.originalPageX + Math.round((n - this.originalPageX) / a.grid[0]) * a.grid[0], n = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - a.grid[0] : s + a.grid[0] : s)), {top: r - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : h ? 0 : o.scrollTop()), left: n - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : h ? 0 : o.scrollLeft())}
    }, _rearrange: function (e, t, i, s) {
        i ? i[0].appendChild(this.placeholder[0]) : t.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? t.item[0] : t.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
        var a = this.counter;
        this._delay(function () {
            a === this.counter && this.refreshPositions(!s)
        })
    }, _clear: function (e, t) {
        this.reverting = !1;
        var i, s = [];
        if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
            for (i in this._storedCSS)("auto" === this._storedCSS[i] || "static" === this._storedCSS[i]) && (this._storedCSS[i] = "");
            this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
        } else this.currentItem.show();
        for (this.fromOutside && !t && s.push(function (e) {
            this._trigger("receive", e, this._uiHash(this.fromOutside))
        }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || t || s.push(function (e) {
            this._trigger("update", e, this._uiHash())
        }), this !== this.currentContainer && (t || (s.push(function (e) {
            this._trigger("remove", e, this._uiHash())
        }), s.push(function (e) {
            return function (t) {
                e._trigger("receive", t, this._uiHash(this))
            }
        }.call(this, this.currentContainer)), s.push(function (e) {
            return function (t) {
                e._trigger("update", t, this._uiHash(this))
            }
        }.call(this, this.currentContainer)))), i = this.containers.length - 1; i >= 0; i--)t || s.push(function (e) {
            return function (t) {
                e._trigger("deactivate", t, this._uiHash(this))
            }
        }.call(this, this.containers[i])), this.containers[i].containerCache.over && (s.push(function (e) {
            return function (t) {
                e._trigger("out", t, this._uiHash(this))
            }
        }.call(this, this.containers[i])), this.containers[i].containerCache.over = 0);
        if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, this.cancelHelperRemoval) {
            if (!t) {
                for (this._trigger("beforeStop", e, this._uiHash()), i = 0; s.length > i; i++)s[i].call(this, e);
                this._trigger("stop", e, this._uiHash())
            }
            return this.fromOutside = !1, !1
        }
        if (t || this._trigger("beforeStop", e, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null, !t) {
            for (i = 0; s.length > i; i++)s[i].call(this, e);
            this._trigger("stop", e, this._uiHash())
        }
        return this.fromOutside = !1, !0
    }, _trigger: function () {
        e.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
    }, _uiHash: function (t) {
        var i = t || this;
        return{helper: i.helper, placeholder: i.placeholder || e([]), position: i.position, originalPosition: i.originalPosition, offset: i.positionAbs, item: i.currentItem, sender: t ? t.element : null}
    }})
})(jQuery);
(function (e) {
    var t = 0, i = {}, a = {};
    i.height = i.paddingTop = i.paddingBottom = i.borderTopWidth = i.borderBottomWidth = "hide", a.height = a.paddingTop = a.paddingBottom = a.borderTopWidth = a.borderBottomWidth = "show", e.widget("ui.accordion", {version: "1.10.3", options: {active: 0, animate: {}, collapsible: !1, event: "click", header: "> li > :first-child,> :not(li):even", heightStyle: "auto", icons: {activeHeader: "ui-icon-triangle-1-s", header: "ui-icon-triangle-1-e"}, activate: null, beforeActivate: null}, _create: function () {
        var t = this.options;
        this.prevShow = this.prevHide = e(), this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist"), t.collapsible || t.active !== !1 && null != t.active || (t.active = 0), this._processPanels(), 0 > t.active && (t.active += this.headers.length), this._refresh()
    }, _getCreateEventData: function () {
        return{header: this.active, panel: this.active.length ? this.active.next() : e(), content: this.active.length ? this.active.next() : e()}
    }, _createIcons: function () {
        var t = this.options.icons;
        t && (e("<span>").addClass("ui-accordion-header-icon ui-icon " + t.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader), this.headers.addClass("ui-accordion-icons"))
    }, _destroyIcons: function () {
        this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
    }, _destroy: function () {
        var e;
        this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function () {
            /^ui-accordion/.test(this.id) && this.removeAttribute("id")
        }), this._destroyIcons(), e = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function () {
            /^ui-accordion/.test(this.id) && this.removeAttribute("id")
        }), "content" !== this.options.heightStyle && e.css("height", "")
    }, _setOption: function (e, t) {
        return"active" === e ? (this._activate(t), undefined) : ("event" === e && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(t)), this._super(e, t), "collapsible" !== e || t || this.options.active !== !1 || this._activate(0), "icons" === e && (this._destroyIcons(), t && this._createIcons()), "disabled" === e && this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!t), undefined)
    }, _keydown: function (t) {
        if (!t.altKey && !t.ctrlKey) {
            var i = e.ui.keyCode, a = this.headers.length, s = this.headers.index(t.target), n = !1;
            switch (t.keyCode) {
                case i.RIGHT:
                case i.DOWN:
                    n = this.headers[(s + 1) % a];
                    break;
                case i.LEFT:
                case i.UP:
                    n = this.headers[(s - 1 + a) % a];
                    break;
                case i.SPACE:
                case i.ENTER:
                    this._eventHandler(t);
                    break;
                case i.HOME:
                    n = this.headers[0];
                    break;
                case i.END:
                    n = this.headers[a - 1]
            }
            n && (e(t.target).attr("tabIndex", -1), e(n).attr("tabIndex", 0), n.focus(), t.preventDefault())
        }
    }, _panelKeyDown: function (t) {
        t.keyCode === e.ui.keyCode.UP && t.ctrlKey && e(t.currentTarget).prev().focus()
    }, refresh: function () {
        var t = this.options;
        this._processPanels(), t.active === !1 && t.collapsible === !0 || !this.headers.length ? (t.active = !1, this.active = e()) : t.active === !1 ? this._activate(0) : this.active.length && !e.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (t.active = !1, this.active = e()) : this._activate(Math.max(0, t.active - 1)) : t.active = this.headers.index(this.active), this._destroyIcons(), this._refresh()
    }, _processPanels: function () {
        this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"), this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()
    }, _refresh: function () {
        var i, a = this.options, s = a.heightStyle, n = this.element.parent(), r = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++t);
        this.active = this._findActive(a.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"), this.active.next().addClass("ui-accordion-content-active").show(), this.headers.attr("role", "tab").each(function (t) {
            var i = e(this), a = i.attr("id"), s = i.next(), n = s.attr("id");
            a || (a = r + "-header-" + t, i.attr("id", a)), n || (n = r + "-panel-" + t, s.attr("id", n)), i.attr("aria-controls", n), s.attr("aria-labelledby", a)
        }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({"aria-selected": "false", tabIndex: -1}).next().attr({"aria-expanded": "false", "aria-hidden": "true"}).hide(), this.active.length ? this.active.attr({"aria-selected": "true", tabIndex: 0}).next().attr({"aria-expanded": "true", "aria-hidden": "false"}) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(a.event), "fill" === s ? (i = n.height(), this.element.siblings(":visible").each(function () {
            var t = e(this), a = t.css("position");
            "absolute" !== a && "fixed" !== a && (i -= t.outerHeight(!0))
        }), this.headers.each(function () {
            i -= e(this).outerHeight(!0)
        }), this.headers.next().each(function () {
            e(this).height(Math.max(0, i - e(this).innerHeight() + e(this).height()))
        }).css("overflow", "auto")) : "auto" === s && (i = 0, this.headers.next().each(function () {
            i = Math.max(i, e(this).css("height", "").height())
        }).height(i))
    }, _activate: function (t) {
        var i = this._findActive(t)[0];
        i !== this.active[0] && (i = i || this.active[0], this._eventHandler({target: i, currentTarget: i, preventDefault: e.noop}))
    }, _findActive: function (t) {
        return"number" == typeof t ? this.headers.eq(t) : e()
    }, _setupEvents: function (t) {
        var i = {keydown: "_keydown"};
        t && e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler"
        }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, i), this._on(this.headers.next(), {keydown: "_panelKeyDown"}), this._hoverable(this.headers), this._focusable(this.headers)
    }, _eventHandler: function (t) {
        var i = this.options, a = this.active, s = e(t.currentTarget), n = s[0] === a[0], r = n && i.collapsible, o = r ? e() : s.next(), h = a.next(), l = {oldHeader: a, oldPanel: h, newHeader: r ? e() : s, newPanel: o};
        t.preventDefault(), n && !i.collapsible || this._trigger("beforeActivate", t, l) === !1 || (i.active = r ? !1 : this.headers.index(s), this.active = n ? e() : s, this._toggle(l), a.removeClass("ui-accordion-header-active ui-state-active"), i.icons && a.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header), n || (s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), i.icons && s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader), s.next().addClass("ui-accordion-content-active")))
    }, _toggle: function (t) {
        var i = t.newPanel, a = this.prevShow.length ? this.prevShow : t.oldPanel;
        this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = i, this.prevHide = a, this.options.animate ? this._animate(i, a, t) : (a.hide(), i.show(), this._toggleComplete(t)), a.attr({"aria-expanded": "false", "aria-hidden": "true"}), a.prev().attr("aria-selected", "false"), i.length && a.length ? a.prev().attr("tabIndex", -1) : i.length && this.headers.filter(function () {
            return 0 === e(this).attr("tabIndex")
        }).attr("tabIndex", -1), i.attr({"aria-expanded": "true", "aria-hidden": "false"}).prev().attr({"aria-selected": "true", tabIndex: 0})
    }, _animate: function (e, t, s) {
        var n, r, o, h = this, l = 0, u = e.length && (!t.length || e.index() < t.index()), d = this.options.animate || {}, c = u && d.down || d, p = function () {
            h._toggleComplete(s)
        };
        return"number" == typeof c && (o = c), "string" == typeof c && (r = c), r = r || c.easing || d.easing, o = o || c.duration || d.duration, t.length ? e.length ? (n = e.show().outerHeight(), t.animate(i, {duration: o, easing: r, step: function (e, t) {
            t.now = Math.round(e)
        }}), e.hide().animate(a, {duration: o, easing: r, complete: p, step: function (e, i) {
            i.now = Math.round(e), "height" !== i.prop ? l += i.now : "content" !== h.options.heightStyle && (i.now = Math.round(n - t.outerHeight() - l), l = 0)
        }}), undefined) : t.animate(i, o, r, p) : e.animate(a, o, r, p)
    }, _toggleComplete: function (e) {
        var t = e.oldPanel;
        t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"), t.length && (t.parent()[0].className = t.parent()[0].className), this._trigger("activate", null, e)
    }})
})(jQuery);
(function (e) {
    var t = 0;
    e.widget("ui.autocomplete", {version: "1.10.3", defaultElement: "<input>", options: {appendTo: null, autoFocus: !1, delay: 300, minLength: 1, position: {my: "left top", at: "left bottom", collision: "none"}, source: null, change: null, close: null, focus: null, open: null, response: null, search: null, select: null}, pending: 0, _create: function () {
        var t, i, a, s = this.element[0].nodeName.toLowerCase(), n = "textarea" === s, r = "input" === s;
        this.isMultiLine = n ? !0 : r ? !1 : this.element.prop("isContentEditable"), this.valueMethod = this.element[n || r ? "val" : "text"], this.isNewMenu = !0, this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"), this._on(this.element, {keydown: function (s) {
            if (this.element.prop("readOnly"))return t = !0, a = !0, i = !0, undefined;
            t = !1, a = !1, i = !1;
            var n = e.ui.keyCode;
            switch (s.keyCode) {
                case n.PAGE_UP:
                    t = !0, this._move("previousPage", s);
                    break;
                case n.PAGE_DOWN:
                    t = !0, this._move("nextPage", s);
                    break;
                case n.UP:
                    t = !0, this._keyEvent("previous", s);
                    break;
                case n.DOWN:
                    t = !0, this._keyEvent("next", s);
                    break;
                case n.ENTER:
                case n.NUMPAD_ENTER:
                    this.menu.active && (t = !0, s.preventDefault(), this.menu.select(s));
                    break;
                case n.TAB:
                    this.menu.active && this.menu.select(s);
                    break;
                case n.ESCAPE:
                    this.menu.element.is(":visible") && (this._value(this.term), this.close(s), s.preventDefault());
                    break;
                default:
                    i = !0, this._searchTimeout(s)
            }
        }, keypress: function (a) {
            if (t)return t = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && a.preventDefault(), undefined;
            if (!i) {
                var s = e.ui.keyCode;
                switch (a.keyCode) {
                    case s.PAGE_UP:
                        this._move("previousPage", a);
                        break;
                    case s.PAGE_DOWN:
                        this._move("nextPage", a);
                        break;
                    case s.UP:
                        this._keyEvent("previous", a);
                        break;
                    case s.DOWN:
                        this._keyEvent("next", a)
                }
            }
        }, input: function (e) {
            return a ? (a = !1, e.preventDefault(), undefined) : (this._searchTimeout(e), undefined)
        }, focus: function () {
            this.selectedItem = null, this.previous = this._value()
        }, blur: function (e) {
            return this.cancelBlur ? (delete this.cancelBlur, undefined) : (clearTimeout(this.searching), this.close(e), this._change(e), undefined)
        }}), this._initSource(), this.menu = e("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role: null}).hide().data("ui-menu"), this._on(this.menu.element, {mousedown: function (t) {
            t.preventDefault(), this.cancelBlur = !0, this._delay(function () {
                delete this.cancelBlur
            });
            var i = this.menu.element[0];
            e(t.target).closest(".ui-menu-item").length || this._delay(function () {
                var t = this;
                this.document.one("mousedown", function (a) {
                    a.target === t.element[0] || a.target === i || e.contains(i, a.target) || t.close()
                })
            })
        }, menufocus: function (t, i) {
            if (this.isNewMenu && (this.isNewMenu = !1, t.originalEvent && /^mouse/.test(t.originalEvent.type)))return this.menu.blur(), this.document.one("mousemove", function () {
                e(t.target).trigger(t.originalEvent)
            }), undefined;
            var a = i.item.data("ui-autocomplete-item");
            !1 !== this._trigger("focus", t, {item: a}) ? t.originalEvent && /^key/.test(t.originalEvent.type) && this._value(a.value) : this.liveRegion.text(a.value)
        }, menuselect: function (e, t) {
            var i = t.item.data("ui-autocomplete-item"), a = this.previous;
            this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = a, this._delay(function () {
                this.previous = a, this.selectedItem = i
            })), !1 !== this._trigger("select", e, {item: i}) && this._value(i.value), this.term = this._value(), this.close(e), this.selectedItem = i
        }}), this.liveRegion = e("<span>", {role: "status", "aria-live": "polite"}).addClass("ui-helper-hidden-accessible").insertBefore(this.element), this._on(this.window, {beforeunload: function () {
            this.element.removeAttr("autocomplete")
        }})
    }, _destroy: function () {
        clearTimeout(this.searching), this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove()
    }, _setOption: function (e, t) {
        this._super(e, t), "source" === e && this._initSource(), "appendTo" === e && this.menu.element.appendTo(this._appendTo()), "disabled" === e && t && this.xhr && this.xhr.abort()
    }, _appendTo: function () {
        var t = this.options.appendTo;
        return t && (t = t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)), t || (t = this.element.closest(".ui-front")), t.length || (t = this.document[0].body), t
    }, _initSource: function () {
        var t, i, a = this;
        e.isArray(this.options.source) ? (t = this.options.source, this.source = function (i, a) {
            a(e.ui.autocomplete.filter(t, i.term))
        }) : "string" == typeof this.options.source ? (i = this.options.source, this.source = function (t, s) {
            a.xhr && a.xhr.abort(), a.xhr = e.ajax({url: i, data: t, dataType: "json", success: function (e) {
                s(e)
            }, error: function () {
                s([])
            }})
        }) : this.source = this.options.source
    }, _searchTimeout: function (e) {
        clearTimeout(this.searching), this.searching = this._delay(function () {
            this.term !== this._value() && (this.selectedItem = null, this.search(null, e))
        }, this.options.delay)
    }, search: function (e, t) {
        return e = null != e ? e : this._value(), this.term = this._value(), e.length < this.options.minLength ? this.close(t) : this._trigger("search", t) !== !1 ? this._search(e) : undefined
    }, _search: function (e) {
        this.pending++, this.element.addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({term: e}, this._response())
    }, _response: function () {
        var e = this, i = ++t;
        return function (a) {
            i === t && e.__response(a), e.pending--, e.pending || e.element.removeClass("ui-autocomplete-loading")
        }
    }, __response: function (e) {
        e && (e = this._normalize(e)), this._trigger("response", null, {content: e}), !this.options.disabled && e && e.length && !this.cancelSearch ? (this._suggest(e), this._trigger("open")) : this._close()
    }, close: function (e) {
        this.cancelSearch = !0, this._close(e)
    }, _close: function (e) {
        this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", e))
    }, _change: function (e) {
        this.previous !== this._value() && this._trigger("change", e, {item: this.selectedItem})
    }, _normalize: function (t) {
        return t.length && t[0].label && t[0].value ? t : e.map(t, function (t) {
            return"string" == typeof t ? {label: t, value: t} : e.extend({label: t.label || t.value, value: t.value || t.label}, t)
        })
    }, _suggest: function (t) {
        var i = this.menu.element.empty();
        this._renderMenu(i, t), this.isNewMenu = !0, this.menu.refresh(), i.show(), this._resizeMenu(), i.position(e.extend({of: this.element}, this.options.position)), this.options.autoFocus && this.menu.next()
    }, _resizeMenu: function () {
        var e = this.menu.element;
        e.outerWidth(Math.max(e.width("").outerWidth() + 1, this.element.outerWidth()))
    }, _renderMenu: function (t, i) {
        var a = this;
        e.each(i, function (e, i) {
            a._renderItemData(t, i)
        })
    }, _renderItemData: function (e, t) {
        return this._renderItem(e, t).data("ui-autocomplete-item", t)
    }, _renderItem: function (t, i) {
        return e("<li>").append(e("<a>").text(i.label)).appendTo(t)
    }, _move: function (e, t) {
        return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(e) || this.menu.isLastItem() && /^next/.test(e) ? (this._value(this.term), this.menu.blur(), undefined) : (this.menu[e](t), undefined) : (this.search(null, t), undefined)
    }, widget: function () {
        return this.menu.element
    }, _value: function () {
        return this.valueMethod.apply(this.element, arguments)
    }, _keyEvent: function (e, t) {
        (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(e, t), t.preventDefault())
    }}), e.extend(e.ui.autocomplete, {escapeRegex: function (e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }, filter: function (t, i) {
        var a = RegExp(e.ui.autocomplete.escapeRegex(i), "i");
        return e.grep(t, function (e) {
            return a.test(e.label || e.value || e)
        })
    }}), e.widget("ui.autocomplete", e.ui.autocomplete, {options: {messages: {noResults: "No search results.", results: function (e) {
        return e + (e > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
    }}}, __response: function (e) {
        var t;
        this._superApply(arguments), this.options.disabled || this.cancelSearch || (t = e && e.length ? this.options.messages.results(e.length) : this.options.messages.noResults, this.liveRegion.text(t))
    }})
})(jQuery);
(function (e) {
    var t, i, a, s, n = "ui-button ui-widget ui-state-default ui-corner-all", r = "ui-state-hover ui-state-active ", o = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", h = function () {
        var t = e(this);
        setTimeout(function () {
            t.find(":ui-button").button("refresh")
        }, 1)
    }, l = function (t) {
        var i = t.name, a = t.form, s = e([]);
        return i && (i = i.replace(/'/g, "\\'"), s = a ? e(a).find("[name='" + i + "']") : e("[name='" + i + "']", t.ownerDocument).filter(function () {
            return!this.form
        })), s
    };
    e.widget("ui.button", {version: "1.10.3", defaultElement: "<button>", options: {disabled: null, text: !0, label: null, icons: {primary: null, secondary: null}}, _create: function () {
        this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, h), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
        var r = this, o = this.options, u = "checkbox" === this.type || "radio" === this.type, d = u ? "" : "ui-state-active", c = "ui-state-focus";
        null === o.label && (o.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(n).attr("role", "button").bind("mouseenter" + this.eventNamespace,function () {
            o.disabled || this === t && e(this).addClass("ui-state-active")
        }).bind("mouseleave" + this.eventNamespace,function () {
            o.disabled || e(this).removeClass(d)
        }).bind("click" + this.eventNamespace, function (e) {
            o.disabled && (e.preventDefault(), e.stopImmediatePropagation())
        }), this.element.bind("focus" + this.eventNamespace,function () {
            r.buttonElement.addClass(c)
        }).bind("blur" + this.eventNamespace, function () {
            r.buttonElement.removeClass(c)
        }), u && (this.element.bind("change" + this.eventNamespace, function () {
            s || r.refresh()
        }), this.buttonElement.bind("mousedown" + this.eventNamespace,function (e) {
            o.disabled || (s = !1, i = e.pageX, a = e.pageY)
        }).bind("mouseup" + this.eventNamespace, function (e) {
            o.disabled || (i !== e.pageX || a !== e.pageY) && (s = !0)
        })), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function () {
            return o.disabled || s ? !1 : undefined
        }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function () {
            if (o.disabled || s)return!1;
            e(this).addClass("ui-state-active"), r.buttonElement.attr("aria-pressed", "true");
            var t = r.element[0];
            l(t).not(t).map(function () {
                return e(this).button("widget")[0]
            }).removeClass("ui-state-active").attr("aria-pressed", "false")
        }) : (this.buttonElement.bind("mousedown" + this.eventNamespace,function () {
            return o.disabled ? !1 : (e(this).addClass("ui-state-active"), t = this, r.document.one("mouseup", function () {
                t = null
            }), undefined)
        }).bind("mouseup" + this.eventNamespace,function () {
            return o.disabled ? !1 : (e(this).removeClass("ui-state-active"), undefined)
        }).bind("keydown" + this.eventNamespace,function (t) {
            return o.disabled ? !1 : ((t.keyCode === e.ui.keyCode.SPACE || t.keyCode === e.ui.keyCode.ENTER) && e(this).addClass("ui-state-active"), undefined)
        }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function () {
            e(this).removeClass("ui-state-active")
        }), this.buttonElement.is("a") && this.buttonElement.keyup(function (t) {
            t.keyCode === e.ui.keyCode.SPACE && e(this).click()
        })), this._setOption("disabled", o.disabled), this._resetButton()
    }, _determineButtonType: function () {
        var e, t, i;
        this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (e = this.element.parents().last(), t = "label[for='" + this.element.attr("id") + "']", this.buttonElement = e.find(t), this.buttonElement.length || (e = e.length ? e.siblings() : this.element.siblings(), this.buttonElement = e.filter(t), this.buttonElement.length || (this.buttonElement = e.find(t))), this.element.addClass("ui-helper-hidden-accessible"), i = this.element.is(":checked"), i && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", i)) : this.buttonElement = this.element
    }, widget: function () {
        return this.buttonElement
    }, _destroy: function () {
        this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(n + " " + r + " " + o).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
    }, _setOption: function (e, t) {
        return this._super(e, t), "disabled" === e ? (t ? this.element.prop("disabled", !0) : this.element.prop("disabled", !1), undefined) : (this._resetButton(), undefined)
    }, refresh: function () {
        var t = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
        t !== this.options.disabled && this._setOption("disabled", t), "radio" === this.type ? l(this.element[0]).each(function () {
            e(this).is(":checked") ? e(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
        }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
    }, _resetButton: function () {
        if ("input" === this.type)return this.options.label && this.element.val(this.options.label), undefined;
        var t = this.buttonElement.removeClass(o), i = e("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(), a = this.options.icons, s = a.primary && a.secondary, n = [];
        a.primary || a.secondary ? (this.options.text && n.push("ui-button-text-icon" + (s ? "s" : a.primary ? "-primary" : "-secondary")), a.primary && t.prepend("<span class='ui-button-icon-primary ui-icon " + a.primary + "'></span>"), a.secondary && t.append("<span class='ui-button-icon-secondary ui-icon " + a.secondary + "'></span>"), this.options.text || (n.push(s ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || t.attr("title", e.trim(i)))) : n.push("ui-button-text-only"), t.addClass(n.join(" "))
    }}), e.widget("ui.buttonset", {version: "1.10.3", options: {items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"}, _create: function () {
        this.element.addClass("ui-buttonset")
    }, _init: function () {
        this.refresh()
    }, _setOption: function (e, t) {
        "disabled" === e && this.buttons.button("option", e, t), this._super(e, t)
    }, refresh: function () {
        var t = "rtl" === this.element.css("direction");
        this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () {
            return e(this).button("widget")[0]
        }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(t ? "ui-corner-left" : "ui-corner-right").end().end()
    }, _destroy: function () {
        this.element.removeClass("ui-buttonset"), this.buttons.map(function () {
            return e(this).button("widget")[0]
        }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
    }})
})(jQuery);
(function (e, t) {
    function i() {
        this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: !1, showMonthAfterYear: !1, yearSuffix: ""}, this._defaults = {showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: !1, hideIfNoPrevNext: !1, navigationAsDateFormat: !1, gotoCurrent: !1, changeMonth: !1, changeYear: !1, yearRange: "c-10:c+10", showOtherMonths: !1, selectOtherMonths: !1, showWeek: !1, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: !0, showButtonPanel: !1, autoSize: !1, disabled: !1}, e.extend(this._defaults, this.regional[""]), this.dpDiv = a(e("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    }

    function a(t) {
        var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return t.delegate(i, "mouseout",function () {
            e(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).removeClass("ui-datepicker-next-hover")
        }).delegate(i, "mouseover", function () {
            e.datepicker._isDisabledDatepicker(n.inline ? t.parent()[0] : n.input[0]) || (e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), e(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).addClass("ui-datepicker-next-hover"))
        })
    }

    function s(t, i) {
        e.extend(t, i);
        for (var a in i)null == i[a] && (t[a] = i[a]);
        return t
    }

    e.extend(e.ui, {datepicker: {version: "1.10.3"}});
    var n, r = "datepicker";
    e.extend(i.prototype, {markerClassName: "hasDatepicker", maxRows: 4, _widgetDatepicker: function () {
        return this.dpDiv
    }, setDefaults: function (e) {
        return s(this._defaults, e || {}), this
    }, _attachDatepicker: function (t, i) {
        var a, s, n;
        a = t.nodeName.toLowerCase(), s = "div" === a || "span" === a, t.id || (this.uuid += 1, t.id = "dp" + this.uuid), n = this._newInst(e(t), s), n.settings = e.extend({}, i || {}), "input" === a ? this._connectDatepicker(t, n) : s && this._inlineDatepicker(t, n)
    }, _newInst: function (t, i) {
        var s = t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
        return{id: s, input: t, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: i, dpDiv: i ? a(e("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv}
    }, _connectDatepicker: function (t, i) {
        var a = e(t);
        i.append = e([]), i.trigger = e([]), a.hasClass(this.markerClassName) || (this._attachments(a, i), a.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(i), e.data(t, r, i), i.settings.disabled && this._disableDatepicker(t))
    }, _attachments: function (t, i) {
        var a, s, n, r = this._get(i, "appendText"), o = this._get(i, "isRTL");
        i.append && i.append.remove(), r && (i.append = e("<span class='" + this._appendClass + "'>" + r + "</span>"), t[o ? "before" : "after"](i.append)), t.unbind("focus", this._showDatepicker), i.trigger && i.trigger.remove(), a = this._get(i, "showOn"), ("focus" === a || "both" === a) && t.focus(this._showDatepicker), ("button" === a || "both" === a) && (s = this._get(i, "buttonText"), n = this._get(i, "buttonImage"), i.trigger = e(this._get(i, "buttonImageOnly") ? e("<img/>").addClass(this._triggerClass).attr({src: n, alt: s, title: s}) : e("<button type='button'></button>").addClass(this._triggerClass).html(n ? e("<img/>").attr({src: n, alt: s, title: s}) : s)), t[o ? "before" : "after"](i.trigger), i.trigger.click(function () {
            return e.datepicker._datepickerShowing && e.datepicker._lastInput === t[0] ? e.datepicker._hideDatepicker() : e.datepicker._datepickerShowing && e.datepicker._lastInput !== t[0] ? (e.datepicker._hideDatepicker(), e.datepicker._showDatepicker(t[0])) : e.datepicker._showDatepicker(t[0]), !1
        }))
    }, _autoSize: function (e) {
        if (this._get(e, "autoSize") && !e.inline) {
            var t, i, a, s, n = new Date(2009, 11, 20), r = this._get(e, "dateFormat");
            r.match(/[DM]/) && (t = function (e) {
                for (i = 0, a = 0, s = 0; e.length > s; s++)e[s].length > i && (i = e[s].length, a = s);
                return a
            }, n.setMonth(t(this._get(e, r.match(/MM/) ? "monthNames" : "monthNamesShort"))), n.setDate(t(this._get(e, r.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - n.getDay())), e.input.attr("size", this._formatDate(e, n).length)
        }
    }, _inlineDatepicker: function (t, i) {
        var a = e(t);
        a.hasClass(this.markerClassName) || (a.addClass(this.markerClassName).append(i.dpDiv), e.data(t, r, i), this._setDate(i, this._getDefaultDate(i), !0), this._updateDatepicker(i), this._updateAlternate(i), i.settings.disabled && this._disableDatepicker(t), i.dpDiv.css("display", "block"))
    }, _dialogDatepicker: function (t, i, a, n, o) {
        var h, l, u, d, c, p = this._dialogInst;
        return p || (this.uuid += 1, h = "dp" + this.uuid, this._dialogInput = e("<input type='text' id='" + h + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.keydown(this._doKeyDown), e("body").append(this._dialogInput), p = this._dialogInst = this._newInst(this._dialogInput, !1), p.settings = {}, e.data(this._dialogInput[0], r, p)), s(p.settings, n || {}), i = i && i.constructor === Date ? this._formatDate(p, i) : i, this._dialogInput.val(i), this._pos = o ? o.length ? o : [o.pageX, o.pageY] : null, this._pos || (l = document.documentElement.clientWidth, u = document.documentElement.clientHeight, d = document.documentElement.scrollLeft || document.body.scrollLeft, c = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [l / 2 - 100 + d, u / 2 - 150 + c]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), p.settings.onSelect = a, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), e.blockUI && e.blockUI(this.dpDiv), e.data(this._dialogInput[0], r, p), this
    }, _destroyDatepicker: function (t) {
        var i, a = e(t), s = e.data(t, r);
        a.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), e.removeData(t, r), "input" === i ? (s.append.remove(), s.trigger.remove(), a.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : ("div" === i || "span" === i) && a.removeClass(this.markerClassName).empty())
    }, _enableDatepicker: function (t) {
        var i, a, s = e(t), n = e.data(t, r);
        s.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), "input" === i ? (t.disabled = !1, n.trigger.filter("button").each(function () {
            this.disabled = !1
        }).end().filter("img").css({opacity: "1.0", cursor: ""})) : ("div" === i || "span" === i) && (a = s.children("." + this._inlineClass), a.children().removeClass("ui-state-disabled"), a.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = e.map(this._disabledInputs, function (e) {
            return e === t ? null : e
        }))
    }, _disableDatepicker: function (t) {
        var i, a, s = e(t), n = e.data(t, r);
        s.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), "input" === i ? (t.disabled = !0, n.trigger.filter("button").each(function () {
            this.disabled = !0
        }).end().filter("img").css({opacity: "0.5", cursor: "default"})) : ("div" === i || "span" === i) && (a = s.children("." + this._inlineClass), a.children().addClass("ui-state-disabled"), a.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = e.map(this._disabledInputs, function (e) {
            return e === t ? null : e
        }), this._disabledInputs[this._disabledInputs.length] = t)
    }, _isDisabledDatepicker: function (e) {
        if (!e)return!1;
        for (var t = 0; this._disabledInputs.length > t; t++)if (this._disabledInputs[t] === e)return!0;
        return!1
    }, _getInst: function (t) {
        try {
            return e.data(t, r)
        } catch (i) {
            throw"Missing instance data for this datepicker"
        }
    }, _optionDatepicker: function (i, a, n) {
        var r, o, h, l, u = this._getInst(i);
        return 2 === arguments.length && "string" == typeof a ? "defaults" === a ? e.extend({}, e.datepicker._defaults) : u ? "all" === a ? e.extend({}, u.settings) : this._get(u, a) : null : (r = a || {}, "string" == typeof a && (r = {}, r[a] = n), u && (this._curInst === u && this._hideDatepicker(), o = this._getDateDatepicker(i, !0), h = this._getMinMaxDate(u, "min"), l = this._getMinMaxDate(u, "max"), s(u.settings, r), null !== h && r.dateFormat !== t && r.minDate === t && (u.settings.minDate = this._formatDate(u, h)), null !== l && r.dateFormat !== t && r.maxDate === t && (u.settings.maxDate = this._formatDate(u, l)), "disabled"in r && (r.disabled ? this._disableDatepicker(i) : this._enableDatepicker(i)), this._attachments(e(i), u), this._autoSize(u), this._setDate(u, o), this._updateAlternate(u), this._updateDatepicker(u)), t)
    }, _changeDatepicker: function (e, t, i) {
        this._optionDatepicker(e, t, i)
    }, _refreshDatepicker: function (e) {
        var t = this._getInst(e);
        t && this._updateDatepicker(t)
    }, _setDateDatepicker: function (e, t) {
        var i = this._getInst(e);
        i && (this._setDate(i, t), this._updateDatepicker(i), this._updateAlternate(i))
    }, _getDateDatepicker: function (e, t) {
        var i = this._getInst(e);
        return i && !i.inline && this._setDateFromField(i, t), i ? this._getDate(i) : null
    }, _doKeyDown: function (t) {
        var i, a, s, n = e.datepicker._getInst(t.target), r = !0, o = n.dpDiv.is(".ui-datepicker-rtl");
        if (n._keyEvent = !0, e.datepicker._datepickerShowing)switch (t.keyCode) {
            case 9:
                e.datepicker._hideDatepicker(), r = !1;
                break;
            case 13:
                return s = e("td." + e.datepicker._dayOverClass + ":not(." + e.datepicker._currentClass + ")", n.dpDiv), s[0] && e.datepicker._selectDay(t.target, n.selectedMonth, n.selectedYear, s[0]), i = e.datepicker._get(n, "onSelect"), i ? (a = e.datepicker._formatDate(n), i.apply(n.input ? n.input[0] : null, [a, n])) : e.datepicker._hideDatepicker(), !1;
            case 27:
                e.datepicker._hideDatepicker();
                break;
            case 33:
                e.datepicker._adjustDate(t.target, t.ctrlKey ? -e.datepicker._get(n, "stepBigMonths") : -e.datepicker._get(n, "stepMonths"), "M");
                break;
            case 34:
                e.datepicker._adjustDate(t.target, t.ctrlKey ? +e.datepicker._get(n, "stepBigMonths") : +e.datepicker._get(n, "stepMonths"), "M");
                break;
            case 35:
                (t.ctrlKey || t.metaKey) && e.datepicker._clearDate(t.target), r = t.ctrlKey || t.metaKey;
                break;
            case 36:
                (t.ctrlKey || t.metaKey) && e.datepicker._gotoToday(t.target), r = t.ctrlKey || t.metaKey;
                break;
            case 37:
                (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, o ? 1 : -1, "D"), r = t.ctrlKey || t.metaKey, t.originalEvent.altKey && e.datepicker._adjustDate(t.target, t.ctrlKey ? -e.datepicker._get(n, "stepBigMonths") : -e.datepicker._get(n, "stepMonths"), "M");
                break;
            case 38:
                (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, -7, "D"), r = t.ctrlKey || t.metaKey;
                break;
            case 39:
                (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, o ? -1 : 1, "D"), r = t.ctrlKey || t.metaKey, t.originalEvent.altKey && e.datepicker._adjustDate(t.target, t.ctrlKey ? +e.datepicker._get(n, "stepBigMonths") : +e.datepicker._get(n, "stepMonths"), "M");
                break;
            case 40:
                (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, 7, "D"), r = t.ctrlKey || t.metaKey;
                break;
            default:
                r = !1
        } else 36 === t.keyCode && t.ctrlKey ? e.datepicker._showDatepicker(this) : r = !1;
        r && (t.preventDefault(), t.stopPropagation())
    }, _doKeyPress: function (i) {
        var a, s, n = e.datepicker._getInst(i.target);
        return e.datepicker._get(n, "constrainInput") ? (a = e.datepicker._possibleChars(e.datepicker._get(n, "dateFormat")), s = String.fromCharCode(null == i.charCode ? i.keyCode : i.charCode), i.ctrlKey || i.metaKey || " " > s || !a || a.indexOf(s) > -1) : t
    }, _doKeyUp: function (t) {
        var i, a = e.datepicker._getInst(t.target);
        if (a.input.val() !== a.lastVal)try {
            i = e.datepicker.parseDate(e.datepicker._get(a, "dateFormat"), a.input ? a.input.val() : null, e.datepicker._getFormatConfig(a)), i && (e.datepicker._setDateFromField(a), e.datepicker._updateAlternate(a), e.datepicker._updateDatepicker(a))
        } catch (s) {
        }
        return!0
    }, _showDatepicker: function (t) {
        if (t = t.target || t, "input" !== t.nodeName.toLowerCase() && (t = e("input", t.parentNode)[0]), !e.datepicker._isDisabledDatepicker(t) && e.datepicker._lastInput !== t) {
            var i, a, n, r, o, h, l;
            i = e.datepicker._getInst(t), e.datepicker._curInst && e.datepicker._curInst !== i && (e.datepicker._curInst.dpDiv.stop(!0, !0), i && e.datepicker._datepickerShowing && e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])), a = e.datepicker._get(i, "beforeShow"), n = a ? a.apply(t, [t, i]) : {}, n !== !1 && (s(i.settings, n), i.lastVal = null, e.datepicker._lastInput = t, e.datepicker._setDateFromField(i), e.datepicker._inDialog && (t.value = ""), e.datepicker._pos || (e.datepicker._pos = e.datepicker._findPos(t), e.datepicker._pos[1] += t.offsetHeight), r = !1, e(t).parents().each(function () {
                return r |= "fixed" === e(this).css("position"), !r
            }), o = {left: e.datepicker._pos[0], top: e.datepicker._pos[1]}, e.datepicker._pos = null, i.dpDiv.empty(), i.dpDiv.css({position: "absolute", display: "block", top: "-1000px"}), e.datepicker._updateDatepicker(i), o = e.datepicker._checkOffset(i, o, r), i.dpDiv.css({position: e.datepicker._inDialog && e.blockUI ? "static" : r ? "fixed" : "absolute", display: "none", left: o.left + "px", top: o.top + "px"}), i.inline || (h = e.datepicker._get(i, "showAnim"), l = e.datepicker._get(i, "duration"), i.dpDiv.zIndex(e(t).zIndex() + 1), e.datepicker._datepickerShowing = !0, e.effects && e.effects.effect[h] ? i.dpDiv.show(h, e.datepicker._get(i, "showOptions"), l) : i.dpDiv[h || "show"](h ? l : null), e.datepicker._shouldFocusInput(i) && i.input.focus(), e.datepicker._curInst = i))
        }
    }, _updateDatepicker: function (t) {
        this.maxRows = 4, n = t, t.dpDiv.empty().append(this._generateHTML(t)), this._attachHandlers(t), t.dpDiv.find("." + this._dayOverClass + " a").mouseover();
        var i, a = this._getNumberOfMonths(t), s = a[1], r = 17;
        t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), s > 1 && t.dpDiv.addClass("ui-datepicker-multi-" + s).css("width", r * s + "em"), t.dpDiv[(1 !== a[0] || 1 !== a[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), t === e.datepicker._curInst && e.datepicker._datepickerShowing && e.datepicker._shouldFocusInput(t) && t.input.focus(), t.yearshtml && (i = t.yearshtml, setTimeout(function () {
            i === t.yearshtml && t.yearshtml && t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml), i = t.yearshtml = null
        }, 0))
    }, _shouldFocusInput: function (e) {
        return e.input && e.input.is(":visible") && !e.input.is(":disabled") && !e.input.is(":focus")
    }, _checkOffset: function (t, i, a) {
        var s = t.dpDiv.outerWidth(), n = t.dpDiv.outerHeight(), r = t.input ? t.input.outerWidth() : 0, o = t.input ? t.input.outerHeight() : 0, h = document.documentElement.clientWidth + (a ? 0 : e(document).scrollLeft()), l = document.documentElement.clientHeight + (a ? 0 : e(document).scrollTop());
        return i.left -= this._get(t, "isRTL") ? s - r : 0, i.left -= a && i.left === t.input.offset().left ? e(document).scrollLeft() : 0, i.top -= a && i.top === t.input.offset().top + o ? e(document).scrollTop() : 0, i.left -= Math.min(i.left, i.left + s > h && h > s ? Math.abs(i.left + s - h) : 0), i.top -= Math.min(i.top, i.top + n > l && l > n ? Math.abs(n + o) : 0), i
    }, _findPos: function (t) {
        for (var i, a = this._getInst(t), s = this._get(a, "isRTL"); t && ("hidden" === t.type || 1 !== t.nodeType || e.expr.filters.hidden(t));)t = t[s ? "previousSibling" : "nextSibling"];
        return i = e(t).offset(), [i.left, i.top]
    }, _hideDatepicker: function (t) {
        var i, a, s, n, o = this._curInst;
        !o || t && o !== e.data(t, r) || this._datepickerShowing && (i = this._get(o, "showAnim"), a = this._get(o, "duration"), s = function () {
            e.datepicker._tidyDialog(o)
        }, e.effects && (e.effects.effect[i] || e.effects[i]) ? o.dpDiv.hide(i, e.datepicker._get(o, "showOptions"), a, s) : o.dpDiv["slideDown" === i ? "slideUp" : "fadeIn" === i ? "fadeOut" : "hide"](i ? a : null, s), i || s(), this._datepickerShowing = !1, n = this._get(o, "onClose"), n && n.apply(o.input ? o.input[0] : null, [o.input ? o.input.val() : "", o]), this._lastInput = null, this._inDialog && (this._dialogInput.css({position: "absolute", left: "0", top: "-100px"}), e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))), this._inDialog = !1)
    }, _tidyDialog: function (e) {
        e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
    }, _checkExternalClick: function (t) {
        if (e.datepicker._curInst) {
            var i = e(t.target), a = e.datepicker._getInst(i[0]);
            (i[0].id !== e.datepicker._mainDivId && 0 === i.parents("#" + e.datepicker._mainDivId).length && !i.hasClass(e.datepicker.markerClassName) && !i.closest("." + e.datepicker._triggerClass).length && e.datepicker._datepickerShowing && (!e.datepicker._inDialog || !e.blockUI) || i.hasClass(e.datepicker.markerClassName) && e.datepicker._curInst !== a) && e.datepicker._hideDatepicker()
        }
    }, _adjustDate: function (t, i, a) {
        var s = e(t), n = this._getInst(s[0]);
        this._isDisabledDatepicker(s[0]) || (this._adjustInstDate(n, i + ("M" === a ? this._get(n, "showCurrentAtPos") : 0), a), this._updateDatepicker(n))
    }, _gotoToday: function (t) {
        var i, a = e(t), s = this._getInst(a[0]);
        this._get(s, "gotoCurrent") && s.currentDay ? (s.selectedDay = s.currentDay, s.drawMonth = s.selectedMonth = s.currentMonth, s.drawYear = s.selectedYear = s.currentYear) : (i = new Date, s.selectedDay = i.getDate(), s.drawMonth = s.selectedMonth = i.getMonth(), s.drawYear = s.selectedYear = i.getFullYear()), this._notifyChange(s), this._adjustDate(a)
    }, _selectMonthYear: function (t, i, a) {
        var s = e(t), n = this._getInst(s[0]);
        n["selected" + ("M" === a ? "Month" : "Year")] = n["draw" + ("M" === a ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10), this._notifyChange(n), this._adjustDate(s)
    }, _selectDay: function (t, i, a, s) {
        var n, r = e(t);
        e(s).hasClass(this._unselectableClass) || this._isDisabledDatepicker(r[0]) || (n = this._getInst(r[0]), n.selectedDay = n.currentDay = e("a", s).html(), n.selectedMonth = n.currentMonth = i, n.selectedYear = n.currentYear = a, this._selectDate(t, this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear)))
    }, _clearDate: function (t) {
        var i = e(t);
        this._selectDate(i, "")
    }, _selectDate: function (t, i) {
        var a, s = e(t), n = this._getInst(s[0]);
        i = null != i ? i : this._formatDate(n), n.input && n.input.val(i), this._updateAlternate(n), a = this._get(n, "onSelect"), a ? a.apply(n.input ? n.input[0] : null, [i, n]) : n.input && n.input.trigger("change"), n.inline ? this._updateDatepicker(n) : (this._hideDatepicker(), this._lastInput = n.input[0], "object" != typeof n.input[0] && n.input.focus(), this._lastInput = null)
    }, _updateAlternate: function (t) {
        var i, a, s, n = this._get(t, "altField");
        n && (i = this._get(t, "altFormat") || this._get(t, "dateFormat"), a = this._getDate(t), s = this.formatDate(i, a, this._getFormatConfig(t)), e(n).each(function () {
            e(this).val(s)
        }))
    }, noWeekends: function (e) {
        var t = e.getDay();
        return[t > 0 && 6 > t, ""]
    }, iso8601Week: function (e) {
        var t, i = new Date(e.getTime());
        return i.setDate(i.getDate() + 4 - (i.getDay() || 7)), t = i.getTime(), i.setMonth(0), i.setDate(1), Math.floor(Math.round((t - i) / 864e5) / 7) + 1
    }, parseDate: function (i, a, s) {
        if (null == i || null == a)throw"Invalid arguments";
        if (a = "object" == typeof a ? "" + a : a + "", "" === a)return null;
        var n, r, o, h, l = 0, u = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff, d = "string" != typeof u ? u : (new Date).getFullYear() % 100 + parseInt(u, 10), c = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort, p = (s ? s.dayNames : null) || this._defaults.dayNames, m = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort, f = (s ? s.monthNames : null) || this._defaults.monthNames, g = -1, v = -1, y = -1, b = -1, _ = !1, k = function (e) {
            var t = i.length > n + 1 && i.charAt(n + 1) === e;
            return t && n++, t
        }, x = function (e) {
            var t = k(e), i = "@" === e ? 14 : "!" === e ? 20 : "y" === e && t ? 4 : "o" === e ? 3 : 2, s = RegExp("^\\d{1," + i + "}"), n = a.substring(l).match(s);
            if (!n)throw"Missing number at position " + l;
            return l += n[0].length, parseInt(n[0], 10)
        }, D = function (i, s, n) {
            var r = -1, o = e.map(k(i) ? n : s,function (e, t) {
                return[
                    [t, e]
                ]
            }).sort(function (e, t) {
                return-(e[1].length - t[1].length)
            });
            if (e.each(o, function (e, i) {
                var s = i[1];
                return a.substr(l, s.length).toLowerCase() === s.toLowerCase() ? (r = i[0], l += s.length, !1) : t
            }), -1 !== r)return r + 1;
            throw"Unknown name at position " + l
        }, w = function () {
            if (a.charAt(l) !== i.charAt(n))throw"Unexpected literal at position " + l;
            l++
        };
        for (n = 0; i.length > n; n++)if (_)"'" !== i.charAt(n) || k("'") ? w() : _ = !1; else switch (i.charAt(n)) {
            case"d":
                y = x("d");
                break;
            case"D":
                D("D", c, p);
                break;
            case"o":
                b = x("o");
                break;
            case"m":
                v = x("m");
                break;
            case"M":
                v = D("M", m, f);
                break;
            case"y":
                g = x("y");
                break;
            case"@":
                h = new Date(x("@")), g = h.getFullYear(), v = h.getMonth() + 1, y = h.getDate();
                break;
            case"!":
                h = new Date((x("!") - this._ticksTo1970) / 1e4), g = h.getFullYear(), v = h.getMonth() + 1, y = h.getDate();
                break;
            case"'":
                k("'") ? w() : _ = !0;
                break;
            default:
                w()
        }
        if (a.length > l && (o = a.substr(l), !/^\s+/.test(o)))throw"Extra/unparsed characters found in date: " + o;
        if (-1 === g ? g = (new Date).getFullYear() : 100 > g && (g += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (d >= g ? 0 : -100)), b > -1)for (v = 1, y = b; ;) {
            if (r = this._getDaysInMonth(g, v - 1), r >= y)break;
            v++, y -= r
        }
        if (h = this._daylightSavingAdjust(new Date(g, v - 1, y)), h.getFullYear() !== g || h.getMonth() + 1 !== v || h.getDate() !== y)throw"Invalid date";
        return h
    }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: 1e7 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)), formatDate: function (e, t, i) {
        if (!t)return"";
        var a, s = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort, n = (i ? i.dayNames : null) || this._defaults.dayNames, r = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort, o = (i ? i.monthNames : null) || this._defaults.monthNames, h = function (t) {
            var i = e.length > a + 1 && e.charAt(a + 1) === t;
            return i && a++, i
        }, l = function (e, t, i) {
            var a = "" + t;
            if (h(e))for (; i > a.length;)a = "0" + a;
            return a
        }, u = function (e, t, i, a) {
            return h(e) ? a[t] : i[t]
        }, d = "", c = !1;
        if (t)for (a = 0; e.length > a; a++)if (c)"'" !== e.charAt(a) || h("'") ? d += e.charAt(a) : c = !1; else switch (e.charAt(a)) {
            case"d":
                d += l("d", t.getDate(), 2);
                break;
            case"D":
                d += u("D", t.getDay(), s, n);
                break;
            case"o":
                d += l("o", Math.round((new Date(t.getFullYear(), t.getMonth(), t.getDate()).getTime() - new Date(t.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                break;
            case"m":
                d += l("m", t.getMonth() + 1, 2);
                break;
            case"M":
                d += u("M", t.getMonth(), r, o);
                break;
            case"y":
                d += h("y") ? t.getFullYear() : (10 > t.getYear() % 100 ? "0" : "") + t.getYear() % 100;
                break;
            case"@":
                d += t.getTime();
                break;
            case"!":
                d += 1e4 * t.getTime() + this._ticksTo1970;
                break;
            case"'":
                h("'") ? d += "'" : c = !0;
                break;
            default:
                d += e.charAt(a)
        }
        return d
    }, _possibleChars: function (e) {
        var t, i = "", a = !1, s = function (i) {
            var a = e.length > t + 1 && e.charAt(t + 1) === i;
            return a && t++, a
        };
        for (t = 0; e.length > t; t++)if (a)"'" !== e.charAt(t) || s("'") ? i += e.charAt(t) : a = !1; else switch (e.charAt(t)) {
            case"d":
            case"m":
            case"y":
            case"@":
                i += "0123456789";
                break;
            case"D":
            case"M":
                return null;
            case"'":
                s("'") ? i += "'" : a = !0;
                break;
            default:
                i += e.charAt(t)
        }
        return i
    }, _get: function (e, i) {
        return e.settings[i] !== t ? e.settings[i] : this._defaults[i]
    }, _setDateFromField: function (e, t) {
        if (e.input.val() !== e.lastVal) {
            var i = this._get(e, "dateFormat"), a = e.lastVal = e.input ? e.input.val() : null, s = this._getDefaultDate(e), n = s, r = this._getFormatConfig(e);
            try {
                n = this.parseDate(i, a, r) || s
            } catch (o) {
                a = t ? "" : a
            }
            e.selectedDay = n.getDate(), e.drawMonth = e.selectedMonth = n.getMonth(), e.drawYear = e.selectedYear = n.getFullYear(), e.currentDay = a ? n.getDate() : 0, e.currentMonth = a ? n.getMonth() : 0, e.currentYear = a ? n.getFullYear() : 0, this._adjustInstDate(e)
        }
    }, _getDefaultDate: function (e) {
        return this._restrictMinMax(e, this._determineDate(e, this._get(e, "defaultDate"), new Date))
    }, _determineDate: function (t, i, a) {
        var s = function (e) {
            var t = new Date;
            return t.setDate(t.getDate() + e), t
        }, n = function (i) {
            try {
                return e.datepicker.parseDate(e.datepicker._get(t, "dateFormat"), i, e.datepicker._getFormatConfig(t))
            } catch (a) {
            }
            for (var s = (i.toLowerCase().match(/^c/) ? e.datepicker._getDate(t) : null) || new Date, n = s.getFullYear(), r = s.getMonth(), o = s.getDate(), h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, l = h.exec(i); l;) {
                switch (l[2] || "d") {
                    case"d":
                    case"D":
                        o += parseInt(l[1], 10);
                        break;
                    case"w":
                    case"W":
                        o += 7 * parseInt(l[1], 10);
                        break;
                    case"m":
                    case"M":
                        r += parseInt(l[1], 10), o = Math.min(o, e.datepicker._getDaysInMonth(n, r));
                        break;
                    case"y":
                    case"Y":
                        n += parseInt(l[1], 10), o = Math.min(o, e.datepicker._getDaysInMonth(n, r))
                }
                l = h.exec(i)
            }
            return new Date(n, r, o)
        }, r = null == i || "" === i ? a : "string" == typeof i ? n(i) : "number" == typeof i ? isNaN(i) ? a : s(i) : new Date(i.getTime());
        return r = r && "Invalid Date" == "" + r ? a : r, r && (r.setHours(0), r.setMinutes(0), r.setSeconds(0), r.setMilliseconds(0)), this._daylightSavingAdjust(r)
    }, _daylightSavingAdjust: function (e) {
        return e ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e) : null
    }, _setDate: function (e, t, i) {
        var a = !t, s = e.selectedMonth, n = e.selectedYear, r = this._restrictMinMax(e, this._determineDate(e, t, new Date));
        e.selectedDay = e.currentDay = r.getDate(), e.drawMonth = e.selectedMonth = e.currentMonth = r.getMonth(), e.drawYear = e.selectedYear = e.currentYear = r.getFullYear(), s === e.selectedMonth && n === e.selectedYear || i || this._notifyChange(e), this._adjustInstDate(e), e.input && e.input.val(a ? "" : this._formatDate(e))
    }, _getDate: function (e) {
        var t = !e.currentYear || e.input && "" === e.input.val() ? null : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
        return t
    }, _attachHandlers: function (t) {
        var i = this._get(t, "stepMonths"), a = "#" + t.id.replace(/\\\\/g, "\\");
        t.dpDiv.find("[data-handler]").map(function () {
            var t = {prev: function () {
                e.datepicker._adjustDate(a, -i, "M")
            }, next: function () {
                e.datepicker._adjustDate(a, +i, "M")
            }, hide: function () {
                e.datepicker._hideDatepicker()
            }, today: function () {
                e.datepicker._gotoToday(a)
            }, selectDay: function () {
                return e.datepicker._selectDay(a, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1
            }, selectMonth: function () {
                return e.datepicker._selectMonthYear(a, this, "M"), !1
            }, selectYear: function () {
                return e.datepicker._selectMonthYear(a, this, "Y"), !1
            }};
            e(this).bind(this.getAttribute("data-event"), t[this.getAttribute("data-handler")])
        })
    }, _generateHTML: function (e) {
        var t, i, a, s, n, r, o, h, l, u, d, c, p, m, f, g, v, y, b, _, k, x, D, w, T, M, S, N, C, A, P, I, F, j, H, E, z, L, O, R = new Date, W = this._daylightSavingAdjust(new Date(R.getFullYear(), R.getMonth(), R.getDate())), Y = this._get(e, "isRTL"), J = this._get(e, "showButtonPanel"), $ = this._get(e, "hideIfNoPrevNext"), Q = this._get(e, "navigationAsDateFormat"), B = this._getNumberOfMonths(e), K = this._get(e, "showCurrentAtPos"), V = this._get(e, "stepMonths"), U = 1 !== B[0] || 1 !== B[1], G = this._daylightSavingAdjust(e.currentDay ? new Date(e.currentYear, e.currentMonth, e.currentDay) : new Date(9999, 9, 9)), q = this._getMinMaxDate(e, "min"), X = this._getMinMaxDate(e, "max"), Z = e.drawMonth - K, et = e.drawYear;
        if (0 > Z && (Z += 12, et--), X)for (t = this._daylightSavingAdjust(new Date(X.getFullYear(), X.getMonth() - B[0] * B[1] + 1, X.getDate())), t = q && q > t ? q : t; this._daylightSavingAdjust(new Date(et, Z, 1)) > t;)Z--, 0 > Z && (Z = 11, et--);
        for (e.drawMonth = Z, e.drawYear = et, i = this._get(e, "prevText"), i = Q ? this.formatDate(i, this._daylightSavingAdjust(new Date(et, Z - V, 1)), this._getFormatConfig(e)) : i, a = this._canAdjustMonth(e, -1, et, Z) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>" : $ ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>", s = this._get(e, "nextText"), s = Q ? this.formatDate(s, this._daylightSavingAdjust(new Date(et, Z + V, 1)), this._getFormatConfig(e)) : s, n = this._canAdjustMonth(e, 1, et, Z) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + s + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + s + "</span></a>" : $ ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + s + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + s + "</span></a>", r = this._get(e, "currentText"), o = this._get(e, "gotoCurrent") && e.currentDay ? G : W, r = Q ? this.formatDate(r, o, this._getFormatConfig(e)) : r, h = e.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(e, "closeText") + "</button>", l = J ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Y ? h : "") + (this._isInRange(e, o) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + r + "</button>" : "") + (Y ? "" : h) + "</div>" : "", u = parseInt(this._get(e, "firstDay"), 10), u = isNaN(u) ? 0 : u, d = this._get(e, "showWeek"), c = this._get(e, "dayNames"), p = this._get(e, "dayNamesMin"), m = this._get(e, "monthNames"), f = this._get(e, "monthNamesShort"), g = this._get(e, "beforeShowDay"), v = this._get(e, "showOtherMonths"), y = this._get(e, "selectOtherMonths"), b = this._getDefaultDate(e), _ = "", x = 0; B[0] > x; x++) {
            for (D = "", this.maxRows = 4, w = 0; B[1] > w; w++) {
                if (T = this._daylightSavingAdjust(new Date(et, Z, e.selectedDay)), M = " ui-corner-all", S = "", U) {
                    if (S += "<div class='ui-datepicker-group", B[1] > 1)switch (w) {
                        case 0:
                            S += " ui-datepicker-group-first", M = " ui-corner-" + (Y ? "right" : "left");
                            break;
                        case B[1] - 1:
                            S += " ui-datepicker-group-last", M = " ui-corner-" + (Y ? "left" : "right");
                            break;
                        default:
                            S += " ui-datepicker-group-middle", M = ""
                    }
                    S += "'>"
                }
                for (S += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + M + "'>" + (/all|left/.test(M) && 0 === x ? Y ? n : a : "") + (/all|right/.test(M) && 0 === x ? Y ? a : n : "") + this._generateMonthYearHeader(e, Z, et, q, X, x > 0 || w > 0, m, f) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>", N = d ? "<th class='ui-datepicker-week-col'>" + this._get(e, "weekHeader") + "</th>" : "", k = 0; 7 > k; k++)C = (k + u) % 7, N += "<th" + ((k + u + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + c[C] + "'>" + p[C] + "</span></th>";
                for (S += N + "</tr></thead><tbody>", A = this._getDaysInMonth(et, Z), et === e.selectedYear && Z === e.selectedMonth && (e.selectedDay = Math.min(e.selectedDay, A)), P = (this._getFirstDayOfMonth(et, Z) - u + 7) % 7, I = Math.ceil((P + A) / 7), F = U ? this.maxRows > I ? this.maxRows : I : I, this.maxRows = F, j = this._daylightSavingAdjust(new Date(et, Z, 1 - P)), H = 0; F > H; H++) {
                    for (S += "<tr>", E = d ? "<td class='ui-datepicker-week-col'>" + this._get(e, "calculateWeek")(j) + "</td>" : "", k = 0; 7 > k; k++)z = g ? g.apply(e.input ? e.input[0] : null, [j]) : [!0, ""], L = j.getMonth() !== Z, O = L && !y || !z[0] || q && q > j || X && j > X, E += "<td class='" + ((k + u + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (L ? " ui-datepicker-other-month" : "") + (j.getTime() === T.getTime() && Z === e.selectedMonth && e._keyEvent || b.getTime() === j.getTime() && b.getTime() === T.getTime() ? " " + this._dayOverClass : "") + (O ? " " + this._unselectableClass + " ui-state-disabled" : "") + (L && !v ? "" : " " + z[1] + (j.getTime() === G.getTime() ? " " + this._currentClass : "") + (j.getTime() === W.getTime() ? " ui-datepicker-today" : "")) + "'" + (L && !v || !z[2] ? "" : " title='" + z[2].replace(/'/g, "&#39;") + "'") + (O ? "" : " data-handler='selectDay' data-event='click' data-month='" + j.getMonth() + "' data-year='" + j.getFullYear() + "'") + ">" + (L && !v ? "&#xa0;" : O ? "<span class='ui-state-default'>" + j.getDate() + "</span>" : "<a class='ui-state-default" + (j.getTime() === W.getTime() ? " ui-state-highlight" : "") + (j.getTime() === G.getTime() ? " ui-state-active" : "") + (L ? " ui-priority-secondary" : "") + "' href='#'>" + j.getDate() + "</a>") + "</td>", j.setDate(j.getDate() + 1), j = this._daylightSavingAdjust(j);
                    S += E + "</tr>"
                }
                Z++, Z > 11 && (Z = 0, et++), S += "</tbody></table>" + (U ? "</div>" + (B[0] > 0 && w === B[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), D += S
            }
            _ += D
        }
        return _ += l, e._keyEvent = !1, _
    }, _generateMonthYearHeader: function (e, t, i, a, s, n, r, o) {
        var h, l, u, d, c, p, m, f, g = this._get(e, "changeMonth"), v = this._get(e, "changeYear"), y = this._get(e, "showMonthAfterYear"), b = "<div class='ui-datepicker-title'>", _ = "";
        if (n || !g)_ += "<span class='ui-datepicker-month'>" + r[t] + "</span>"; else {
            for (h = a && a.getFullYear() === i, l = s && s.getFullYear() === i, _ += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", u = 0; 12 > u; u++)(!h || u >= a.getMonth()) && (!l || s.getMonth() >= u) && (_ += "<option value='" + u + "'" + (u === t ? " selected='selected'" : "") + ">" + o[u] + "</option>");
            _ += "</select>"
        }
        if (y || (b += _ + (!n && g && v ? "" : "&#xa0;")), !e.yearshtml)if (e.yearshtml = "", n || !v)b += "<span class='ui-datepicker-year'>" + i + "</span>"; else {
            for (d = this._get(e, "yearRange").split(":"), c = (new Date).getFullYear(), p = function (e) {
                var t = e.match(/c[+\-].*/) ? i + parseInt(e.substring(1), 10) : e.match(/[+\-].*/) ? c + parseInt(e, 10) : parseInt(e, 10);
                return isNaN(t) ? c : t
            }, m = p(d[0]), f = Math.max(m, p(d[1] || "")), m = a ? Math.max(m, a.getFullYear()) : m, f = s ? Math.min(f, s.getFullYear()) : f, e.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; f >= m; m++)e.yearshtml += "<option value='" + m + "'" + (m === i ? " selected='selected'" : "") + ">" + m + "</option>";
            e.yearshtml += "</select>", b += e.yearshtml, e.yearshtml = null
        }
        return b += this._get(e, "yearSuffix"), y && (b += (!n && g && v ? "" : "&#xa0;") + _), b += "</div>"
    }, _adjustInstDate: function (e, t, i) {
        var a = e.drawYear + ("Y" === i ? t : 0), s = e.drawMonth + ("M" === i ? t : 0), n = Math.min(e.selectedDay, this._getDaysInMonth(a, s)) + ("D" === i ? t : 0), r = this._restrictMinMax(e, this._daylightSavingAdjust(new Date(a, s, n)));
        e.selectedDay = r.getDate(), e.drawMonth = e.selectedMonth = r.getMonth(), e.drawYear = e.selectedYear = r.getFullYear(), ("M" === i || "Y" === i) && this._notifyChange(e)
    }, _restrictMinMax: function (e, t) {
        var i = this._getMinMaxDate(e, "min"), a = this._getMinMaxDate(e, "max"), s = i && i > t ? i : t;
        return a && s > a ? a : s
    }, _notifyChange: function (e) {
        var t = this._get(e, "onChangeMonthYear");
        t && t.apply(e.input ? e.input[0] : null, [e.selectedYear, e.selectedMonth + 1, e])
    }, _getNumberOfMonths: function (e) {
        var t = this._get(e, "numberOfMonths");
        return null == t ? [1, 1] : "number" == typeof t ? [1, t] : t
    }, _getMinMaxDate: function (e, t) {
        return this._determineDate(e, this._get(e, t + "Date"), null)
    }, _getDaysInMonth: function (e, t) {
        return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate()
    }, _getFirstDayOfMonth: function (e, t) {
        return new Date(e, t, 1).getDay()
    }, _canAdjustMonth: function (e, t, i, a) {
        var s = this._getNumberOfMonths(e), n = this._daylightSavingAdjust(new Date(i, a + (0 > t ? t : s[0] * s[1]), 1));
        return 0 > t && n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth())), this._isInRange(e, n)
    }, _isInRange: function (e, t) {
        var i, a, s = this._getMinMaxDate(e, "min"), n = this._getMinMaxDate(e, "max"), r = null, o = null, h = this._get(e, "yearRange");
        return h && (i = h.split(":"), a = (new Date).getFullYear(), r = parseInt(i[0], 10), o = parseInt(i[1], 10), i[0].match(/[+\-].*/) && (r += a), i[1].match(/[+\-].*/) && (o += a)), (!s || t.getTime() >= s.getTime()) && (!n || t.getTime() <= n.getTime()) && (!r || t.getFullYear() >= r) && (!o || o >= t.getFullYear())
    }, _getFormatConfig: function (e) {
        var t = this._get(e, "shortYearCutoff");
        return t = "string" != typeof t ? t : (new Date).getFullYear() % 100 + parseInt(t, 10), {shortYearCutoff: t, dayNamesShort: this._get(e, "dayNamesShort"), dayNames: this._get(e, "dayNames"), monthNamesShort: this._get(e, "monthNamesShort"), monthNames: this._get(e, "monthNames")}
    }, _formatDate: function (e, t, i, a) {
        t || (e.currentDay = e.selectedDay, e.currentMonth = e.selectedMonth, e.currentYear = e.selectedYear);
        var s = t ? "object" == typeof t ? t : this._daylightSavingAdjust(new Date(a, i, t)) : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
        return this.formatDate(this._get(e, "dateFormat"), s, this._getFormatConfig(e))
    }}), e.fn.datepicker = function (t) {
        if (!this.length)return this;
        e.datepicker.initialized || (e(document).mousedown(e.datepicker._checkExternalClick), e.datepicker.initialized = !0), 0 === e("#" + e.datepicker._mainDivId).length && e("body").append(e.datepicker.dpDiv);
        var i = Array.prototype.slice.call(arguments, 1);
        return"string" != typeof t || "isDisabled" !== t && "getDate" !== t && "widget" !== t ? "option" === t && 2 === arguments.length && "string" == typeof arguments[1] ? e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this[0]].concat(i)) : this.each(function () {
            "string" == typeof t ? e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this].concat(i)) : e.datepicker._attachDatepicker(this, t)
        }) : e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this[0]].concat(i))
    }, e.datepicker = new i, e.datepicker.initialized = !1, e.datepicker.uuid = (new Date).getTime(), e.datepicker.version = "1.10.3"
})(jQuery);
(function (e) {
    var t = {buttons: !0, height: !0, maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0, width: !0}, i = {maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0};
    e.widget("ui.dialog", {version: "1.10.3", options: {appendTo: "body", autoOpen: !0, buttons: [], closeOnEscape: !0, closeText: "close", dialogClass: "", draggable: !0, hide: null, height: "auto", maxHeight: null, maxWidth: null, minHeight: 150, minWidth: 150, modal: !1, position: {my: "center", at: "center", of: window, collision: "fit", using: function (t) {
        var i = e(this).css(t).offset().top;
        0 > i && e(this).css("top", t.top - i)
    }}, resizable: !0, show: null, title: null, width: 300, beforeClose: null, close: null, drag: null, dragStart: null, dragStop: null, focus: null, open: null, resize: null, resizeStart: null, resizeStop: null}, _create: function () {
        this.originalCss = {display: this.element[0].style.display, width: this.element[0].style.width, minHeight: this.element[0].style.minHeight, maxHeight: this.element[0].style.maxHeight, height: this.element[0].style.height}, this.originalPosition = {parent: this.element.parent(), index: this.element.parent().children().index(this.element)}, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && e.fn.draggable && this._makeDraggable(), this.options.resizable && e.fn.resizable && this._makeResizable(), this._isOpen = !1
    }, _init: function () {
        this.options.autoOpen && this.open()
    }, _appendTo: function () {
        var t = this.options.appendTo;
        return t && (t.jquery || t.nodeType) ? e(t) : this.document.find(t || "body").eq(0)
    }, _destroy: function () {
        var e, t = this.originalPosition;
        this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), e = t.parent.children().eq(t.index), e.length && e[0] !== this.element[0] ? e.before(this.element) : t.parent.append(this.element)
    }, widget: function () {
        return this.uiDialog
    }, disable: e.noop, enable: e.noop, close: function (t) {
        var i = this;
        this._isOpen && this._trigger("beforeClose", t) !== !1 && (this._isOpen = !1, this._destroyOverlay(), this.opener.filter(":focusable").focus().length || e(this.document[0].activeElement).blur(), this._hide(this.uiDialog, this.options.hide, function () {
            i._trigger("close", t)
        }))
    }, isOpen: function () {
        return this._isOpen
    }, moveToTop: function () {
        this._moveToTop()
    }, _moveToTop: function (e, t) {
        var i = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
        return i && !t && this._trigger("focus", e), i
    }, open: function () {
        var t = this;
        return this._isOpen ? (this._moveToTop() && this._focusTabbable(), undefined) : (this._isOpen = !0, this.opener = e(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this._show(this.uiDialog, this.options.show, function () {
            t._focusTabbable(), t._trigger("focus")
        }), this._trigger("open"), undefined)
    }, _focusTabbable: function () {
        var e = this.element.find("[autofocus]");
        e.length || (e = this.element.find(":tabbable")), e.length || (e = this.uiDialogButtonPane.find(":tabbable")), e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")), e.length || (e = this.uiDialog), e.eq(0).focus()
    }, _keepFocus: function (t) {
        function i() {
            var t = this.document[0].activeElement, i = this.uiDialog[0] === t || e.contains(this.uiDialog[0], t);
            i || this._focusTabbable()
        }

        t.preventDefault(), i.call(this), this._delay(i)
    }, _createWrapper: function () {
        this.uiDialog = e("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({tabIndex: -1, role: "dialog"}).appendTo(this._appendTo()), this._on(this.uiDialog, {keydown: function (t) {
            if (this.options.closeOnEscape && !t.isDefaultPrevented() && t.keyCode && t.keyCode === e.ui.keyCode.ESCAPE)return t.preventDefault(), this.close(t), undefined;
            if (t.keyCode === e.ui.keyCode.TAB) {
                var i = this.uiDialog.find(":tabbable"), a = i.filter(":first"), s = i.filter(":last");
                t.target !== s[0] && t.target !== this.uiDialog[0] || t.shiftKey ? t.target !== a[0] && t.target !== this.uiDialog[0] || !t.shiftKey || (s.focus(1), t.preventDefault()) : (a.focus(1), t.preventDefault())
            }
        }, mousedown: function (e) {
            this._moveToTop(e) && this._focusTabbable()
        }}), this.element.find("[aria-describedby]").length || this.uiDialog.attr({"aria-describedby": this.element.uniqueId().attr("id")})
    }, _createTitlebar: function () {
        var t;
        this.uiDialogTitlebar = e("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {mousedown: function (t) {
            e(t.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus()
        }}), this.uiDialogTitlebarClose = e("<button></button>").button({label: this.options.closeText, icons: {primary: "ui-icon-closethick"}, text: !1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {click: function (e) {
            e.preventDefault(), this.close(e)
        }}), t = e("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(t), this.uiDialog.attr({"aria-labelledby": t.attr("id")})
    }, _title: function (e) {
        this.options.title || e.html("&#160;"), e.text(this.options.title)
    }, _createButtonPane: function () {
        this.uiDialogButtonPane = e("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = e("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons()
    }, _createButtons: function () {
        var t = this, i = this.options.buttons;
        return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), e.isEmptyObject(i) || e.isArray(i) && !i.length ? (this.uiDialog.removeClass("ui-dialog-buttons"), undefined) : (e.each(i, function (i, a) {
            var s, n;
            a = e.isFunction(a) ? {click: a, text: i} : a, a = e.extend({type: "button"}, a), s = a.click, a.click = function () {
                s.apply(t.element[0], arguments)
            }, n = {icons: a.icons, text: a.showText}, delete a.icons, delete a.showText, e("<button></button>", a).button(n).appendTo(t.uiButtonSet)
        }), this.uiDialog.addClass("ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), undefined)
    }, _makeDraggable: function () {
        function t(e) {
            return{position: e.position, offset: e.offset}
        }

        var i = this, a = this.options;
        this.uiDialog.draggable({cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function (a, s) {
            e(this).addClass("ui-dialog-dragging"), i._blockFrames(), i._trigger("dragStart", a, t(s))
        }, drag: function (e, a) {
            i._trigger("drag", e, t(a))
        }, stop: function (s, n) {
            a.position = [n.position.left - i.document.scrollLeft(), n.position.top - i.document.scrollTop()], e(this).removeClass("ui-dialog-dragging"), i._unblockFrames(), i._trigger("dragStop", s, t(n))
        }})
    }, _makeResizable: function () {
        function t(e) {
            return{originalPosition: e.originalPosition, originalSize: e.originalSize, position: e.position, size: e.size}
        }

        var i = this, a = this.options, s = a.resizable, n = this.uiDialog.css("position"), r = "string" == typeof s ? s : "n,e,s,w,se,sw,ne,nw";
        this.uiDialog.resizable({cancel: ".ui-dialog-content", containment: "document", alsoResize: this.element, maxWidth: a.maxWidth, maxHeight: a.maxHeight, minWidth: a.minWidth, minHeight: this._minHeight(), handles: r, start: function (a, s) {
            e(this).addClass("ui-dialog-resizing"), i._blockFrames(), i._trigger("resizeStart", a, t(s))
        }, resize: function (e, a) {
            i._trigger("resize", e, t(a))
        }, stop: function (s, n) {
            a.height = e(this).height(), a.width = e(this).width(), e(this).removeClass("ui-dialog-resizing"), i._unblockFrames(), i._trigger("resizeStop", s, t(n))
        }}).css("position", n)
    }, _minHeight: function () {
        var e = this.options;
        return"auto" === e.height ? e.minHeight : Math.min(e.minHeight, e.height)
    }, _position: function () {
        var e = this.uiDialog.is(":visible");
        e || this.uiDialog.show(), this.uiDialog.position(this.options.position), e || this.uiDialog.hide()
    }, _setOptions: function (a) {
        var s = this, n = !1, r = {};
        e.each(a, function (e, a) {
            s._setOption(e, a), e in t && (n = !0), e in i && (r[e] = a)
        }), n && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", r)
    }, _setOption: function (e, t) {
        var i, a, s = this.uiDialog;
        "dialogClass" === e && s.removeClass(this.options.dialogClass).addClass(t), "disabled" !== e && (this._super(e, t), "appendTo" === e && this.uiDialog.appendTo(this._appendTo()), "buttons" === e && this._createButtons(), "closeText" === e && this.uiDialogTitlebarClose.button({label: "" + t}), "draggable" === e && (i = s.is(":data(ui-draggable)"), i && !t && s.draggable("destroy"), !i && t && this._makeDraggable()), "position" === e && this._position(), "resizable" === e && (a = s.is(":data(ui-resizable)"), a && !t && s.resizable("destroy"), a && "string" == typeof t && s.resizable("option", "handles", t), a || t === !1 || this._makeResizable()), "title" === e && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
    }, _size: function () {
        var e, t, i, a = this.options;
        this.element.show().css({width: "auto", minHeight: 0, maxHeight: "none", height: 0}), a.minWidth > a.width && (a.width = a.minWidth), e = this.uiDialog.css({height: "auto", width: a.width}).outerHeight(), t = Math.max(0, a.minHeight - e), i = "number" == typeof a.maxHeight ? Math.max(0, a.maxHeight - e) : "none", "auto" === a.height ? this.element.css({minHeight: t, maxHeight: i, height: "auto"}) : this.element.height(Math.max(0, a.height - e)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
    }, _blockFrames: function () {
        this.iframeBlocks = this.document.find("iframe").map(function () {
            var t = e(this);
            return e("<div>").css({position: "absolute", width: t.outerWidth(), height: t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]
        })
    }, _unblockFrames: function () {
        this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
    }, _allowInteraction: function (t) {
        return e(t.target).closest(".ui-dialog").length ? !0 : !!e(t.target).closest(".ui-datepicker").length
    }, _createOverlay: function () {
        if (this.options.modal) {
            var t = this, i = this.widgetFullName;
            e.ui.dialog.overlayInstances || this._delay(function () {
                e.ui.dialog.overlayInstances && this.document.bind("focusin.dialog", function (a) {
                    t._allowInteraction(a) || (a.preventDefault(), e(".ui-dialog:visible:last .ui-dialog-content").data(i)._focusTabbable())
                })
            }), this.overlay = e("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {mousedown: "_keepFocus"}), e.ui.dialog.overlayInstances++
        }
    }, _destroyOverlay: function () {
        this.options.modal && this.overlay && (e.ui.dialog.overlayInstances--, e.ui.dialog.overlayInstances || this.document.unbind("focusin.dialog"), this.overlay.remove(), this.overlay = null)
    }}), e.ui.dialog.overlayInstances = 0, e.uiBackCompat !== !1 && e.widget("ui.dialog", e.ui.dialog, {_position: function () {
        var t, i = this.options.position, a = [], s = [0, 0];
        i ? (("string" == typeof i || "object" == typeof i && "0"in i) && (a = i.split ? i.split(" ") : [i[0], i[1]], 1 === a.length && (a[1] = a[0]), e.each(["left", "top"], function (e, t) {
            +a[e] === a[e] && (s[e] = a[e], a[e] = t)
        }), i = {my: a[0] + (0 > s[0] ? s[0] : "+" + s[0]) + " " + a[1] + (0 > s[1] ? s[1] : "+" + s[1]), at: a.join(" ")}), i = e.extend({}, e.ui.dialog.prototype.options.position, i)) : i = e.ui.dialog.prototype.options.position, t = this.uiDialog.is(":visible"), t || this.uiDialog.show(), this.uiDialog.position(i), t || this.uiDialog.hide()
    }})
})(jQuery);
(function (e) {
    e.widget("ui.menu", {version: "1.10.3", defaultElement: "<ul>", delay: 300, options: {icons: {submenu: "ui-icon-carat-1-e"}, menus: "ul", position: {my: "left top", at: "right top"}, role: "menu", blur: null, focus: null, select: null}, _create: function () {
        this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({role: this.options.role, tabIndex: 0}).bind("click" + this.eventNamespace, e.proxy(function (e) {
            this.options.disabled && e.preventDefault()
        }, this)), this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"), this._on({"mousedown .ui-menu-item > a": function (e) {
            e.preventDefault()
        }, "click .ui-state-disabled > a": function (e) {
            e.preventDefault()
        }, "click .ui-menu-item:has(a)": function (t) {
            var i = e(t.target).closest(".ui-menu-item");
            !this.mouseHandled && i.not(".ui-state-disabled").length && (this.mouseHandled = !0, this.select(t), i.has(".ui-menu").length ? this.expand(t) : this.element.is(":focus") || (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
        }, "mouseenter .ui-menu-item": function (t) {
            var i = e(t.currentTarget);
            i.siblings().children(".ui-state-active").removeClass("ui-state-active"), this.focus(t, i)
        }, mouseleave: "collapseAll", "mouseleave .ui-menu": "collapseAll", focus: function (e, t) {
            var i = this.active || this.element.children(".ui-menu-item").eq(0);
            t || this.focus(e, i)
        }, blur: function (t) {
            this._delay(function () {
                e.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(t)
            })
        }, keydown: "_keydown"}), this.refresh(), this._on(this.document, {click: function (t) {
            e(t.target).closest(".ui-menu").length || this.collapseAll(t), this.mouseHandled = !1
        }})
    }, _destroy: function () {
        this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(), this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function () {
            var t = e(this);
            t.data("ui-menu-submenu-carat") && t.remove()
        }), this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
    }, _keydown: function (t) {
        function i(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        }

        var s, a, n, r, o, h = !0;
        switch (t.keyCode) {
            case e.ui.keyCode.PAGE_UP:
                this.previousPage(t);
                break;
            case e.ui.keyCode.PAGE_DOWN:
                this.nextPage(t);
                break;
            case e.ui.keyCode.HOME:
                this._move("first", "first", t);
                break;
            case e.ui.keyCode.END:
                this._move("last", "last", t);
                break;
            case e.ui.keyCode.UP:
                this.previous(t);
                break;
            case e.ui.keyCode.DOWN:
                this.next(t);
                break;
            case e.ui.keyCode.LEFT:
                this.collapse(t);
                break;
            case e.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(t);
                break;
            case e.ui.keyCode.ENTER:
            case e.ui.keyCode.SPACE:
                this._activate(t);
                break;
            case e.ui.keyCode.ESCAPE:
                this.collapse(t);
                break;
            default:
                h = !1, a = this.previousFilter || "", n = String.fromCharCode(t.keyCode), r = !1, clearTimeout(this.filterTimer), n === a ? r = !0 : n = a + n, o = RegExp("^" + i(n), "i"), s = this.activeMenu.children(".ui-menu-item").filter(function () {
                    return o.test(e(this).children("a").text())
                }), s = r && -1 !== s.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : s, s.length || (n = String.fromCharCode(t.keyCode), o = RegExp("^" + i(n), "i"), s = this.activeMenu.children(".ui-menu-item").filter(function () {
                    return o.test(e(this).children("a").text())
                })), s.length ? (this.focus(t, s), s.length > 1 ? (this.previousFilter = n, this.filterTimer = this._delay(function () {
                    delete this.previousFilter
                }, 1e3)) : delete this.previousFilter) : delete this.previousFilter
        }
        h && t.preventDefault()
    }, _activate: function (e) {
        this.active.is(".ui-state-disabled") || (this.active.children("a[aria-haspopup='true']").length ? this.expand(e) : this.select(e))
    }, refresh: function () {
        var t, i = this.options.icons.submenu, s = this.element.find(this.options.menus);
        s.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role: this.options.role, "aria-hidden": "true", "aria-expanded": "false"}).each(function () {
            var t = e(this), s = t.prev("a"), a = e("<span>").addClass("ui-menu-icon ui-icon " + i).data("ui-menu-submenu-carat", !0);
            s.attr("aria-haspopup", "true").prepend(a), t.attr("aria-labelledby", s.attr("id"))
        }), t = s.add(this.element), t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex: -1, role: this._itemRole()}), t.children(":not(.ui-menu-item)").each(function () {
            var t = e(this);
            /[^\-\u2014\u2013\s]/.test(t.text()) || t.addClass("ui-widget-content ui-menu-divider")
        }), t.children(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !e.contains(this.element[0], this.active[0]) && this.blur()
    }, _itemRole: function () {
        return{menu: "menuitem", listbox: "option"}[this.options.role]
    }, _setOption: function (e, t) {
        "icons" === e && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(t.submenu), this._super(e, t)
    }, focus: function (e, t) {
        var i, s;
        this.blur(e, e && "focus" === e.type), this._scrollIntoView(t), this.active = t.first(), s = this.active.children("a").addClass("ui-state-focus"), this.options.role && this.element.attr("aria-activedescendant", s.attr("id")), this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"), e && "keydown" === e.type ? this._close() : this.timer = this._delay(function () {
            this._close()
        }, this.delay), i = t.children(".ui-menu"), i.length && /^mouse/.test(e.type) && this._startOpening(i), this.activeMenu = t.parent(), this._trigger("focus", e, {item: t})
    }, _scrollIntoView: function (t) {
        var i, s, a, n, r, o;
        this._hasScroll() && (i = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0, s = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0, a = t.offset().top - this.activeMenu.offset().top - i - s, n = this.activeMenu.scrollTop(), r = this.activeMenu.height(), o = t.height(), 0 > a ? this.activeMenu.scrollTop(n + a) : a + o > r && this.activeMenu.scrollTop(n + a - r + o))
    }, blur: function (e, t) {
        t || clearTimeout(this.timer), this.active && (this.active.children("a").removeClass("ui-state-focus"), this.active = null, this._trigger("blur", e, {item: this.active}))
    }, _startOpening: function (e) {
        clearTimeout(this.timer), "true" === e.attr("aria-hidden") && (this.timer = this._delay(function () {
            this._close(), this._open(e)
        }, this.delay))
    }, _open: function (t) {
        var i = e.extend({of: this.active}, this.options.position);
        clearTimeout(this.timer), this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden", "true"), t.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i)
    }, collapseAll: function (t, i) {
        clearTimeout(this.timer), this.timer = this._delay(function () {
            var s = i ? this.element : e(t && t.target).closest(this.element.find(".ui-menu"));
            s.length || (s = this.element), this._close(s), this.blur(t), this.activeMenu = s
        }, this.delay)
    }, _close: function (e) {
        e || (e = this.active ? this.active.parent() : this.element), e.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
    }, collapse: function (e) {
        var t = this.active && this.active.parent().closest(".ui-menu-item", this.element);
        t && t.length && (this._close(), this.focus(e, t))
    }, expand: function (e) {
        var t = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
        t && t.length && (this._open(t.parent()), this._delay(function () {
            this.focus(e, t)
        }))
    }, next: function (e) {
        this._move("next", "first", e)
    }, previous: function (e) {
        this._move("prev", "last", e)
    }, isFirstItem: function () {
        return this.active && !this.active.prevAll(".ui-menu-item").length
    }, isLastItem: function () {
        return this.active && !this.active.nextAll(".ui-menu-item").length
    }, _move: function (e, t, i) {
        var s;
        this.active && (s = "first" === e || "last" === e ? this.active["first" === e ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[e + "All"](".ui-menu-item").eq(0)), s && s.length && this.active || (s = this.activeMenu.children(".ui-menu-item")[t]()), this.focus(i, s)
    }, nextPage: function (t) {
        var i, s, a;
        return this.active ? (this.isLastItem() || (this._hasScroll() ? (s = this.active.offset().top, a = this.element.height(), this.active.nextAll(".ui-menu-item").each(function () {
            return i = e(this), 0 > i.offset().top - s - a
        }), this.focus(t, i)) : this.focus(t, this.activeMenu.children(".ui-menu-item")[this.active ? "last" : "first"]())), undefined) : (this.next(t), undefined)
    }, previousPage: function (t) {
        var i, s, a;
        return this.active ? (this.isFirstItem() || (this._hasScroll() ? (s = this.active.offset().top, a = this.element.height(), this.active.prevAll(".ui-menu-item").each(function () {
            return i = e(this), i.offset().top - s + a > 0
        }), this.focus(t, i)) : this.focus(t, this.activeMenu.children(".ui-menu-item").first())), undefined) : (this.next(t), undefined)
    }, _hasScroll: function () {
        return this.element.outerHeight() < this.element.prop("scrollHeight")
    }, select: function (t) {
        this.active = this.active || e(t.target).closest(".ui-menu-item");
        var i = {item: this.active};
        this.active.has(".ui-menu").length || this.collapseAll(t, !0), this._trigger("select", t, i)
    }})
})(jQuery);
(function (e, t) {
    e.widget("ui.progressbar", {version: "1.10.3", options: {max: 100, value: 0, change: null, complete: null}, min: 0, _create: function () {
        this.oldValue = this.options.value = this._constrainedValue(), this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role: "progressbar", "aria-valuemin": this.min}), this.valueDiv = e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this._refreshValue()
    }, _destroy: function () {
        this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove()
    }, value: function (e) {
        return e === t ? this.options.value : (this.options.value = this._constrainedValue(e), this._refreshValue(), t)
    }, _constrainedValue: function (e) {
        return e === t && (e = this.options.value), this.indeterminate = e === !1, "number" != typeof e && (e = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, e))
    }, _setOptions: function (e) {
        var t = e.value;
        delete e.value, this._super(e), this.options.value = this._constrainedValue(t), this._refreshValue()
    }, _setOption: function (e, t) {
        "max" === e && (t = Math.max(this.min, t)), this._super(e, t)
    }, _percentage: function () {
        return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
    }, _refreshValue: function () {
        var t = this.options.value, i = this._percentage();
        this.valueDiv.toggle(this.indeterminate || t > this.min).toggleClass("ui-corner-right", t === this.options.max).width(i.toFixed(0) + "%"), this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = e("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))) : (this.element.attr({"aria-valuemax": this.options.max, "aria-valuenow": t}), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== t && (this.oldValue = t, this._trigger("change")), t === this.options.max && this._trigger("complete")
    }})
})(jQuery);
(function (e) {
    var t = 5;
    e.widget("ui.slider", e.ui.mouse, {version: "1.10.3", widgetEventPrefix: "slide", options: {animate: !1, distance: 0, max: 100, min: 0, orientation: "horizontal", range: !1, step: 1, value: 0, values: null, change: null, slide: null, start: null, stop: null}, _create: function () {
        this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1
    }, _refresh: function () {
        this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
    }, _createHandles: function () {
        var t, i, s = this.options, a = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), n = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", r = [];
        for (i = s.values && s.values.length || 1, a.length > i && (a.slice(i).remove(), a = a.slice(0, i)), t = a.length; i > t; t++)r.push(n);
        this.handles = a.add(e(r.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function (t) {
            e(this).data("ui-slider-handle-index", t)
        })
    }, _createRange: function () {
        var t = this.options, i = "";
        t.range ? (t.range === !0 && (t.values ? t.values.length && 2 !== t.values.length ? t.values = [t.values[0], t.values[0]] : e.isArray(t.values) && (t.values = t.values.slice(0)) : t.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left: "", bottom: ""}) : (this.range = e("<div></div>").appendTo(this.element), i = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(i + ("min" === t.range || "max" === t.range ? " ui-slider-range-" + t.range : ""))) : this.range = e([])
    }, _setupEvents: function () {
        var e = this.handles.add(this.range).filter("a");
        this._off(e), this._on(e, this._handleEvents), this._hoverable(e), this._focusable(e)
    }, _destroy: function () {
        this.handles.remove(), this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy()
    }, _mouseCapture: function (t) {
        var i, s, a, n, r, o, h, l, u = this, c = this.options;
        return c.disabled ? !1 : (this.elementSize = {width: this.element.outerWidth(), height: this.element.outerHeight()}, this.elementOffset = this.element.offset(), i = {x: t.pageX, y: t.pageY}, s = this._normValueFromMouse(i), a = this._valueMax() - this._valueMin() + 1, this.handles.each(function (t) {
            var i = Math.abs(s - u.values(t));
            (a > i || a === i && (t === u._lastChangedValue || u.values(t) === c.min)) && (a = i, n = e(this), r = t)
        }), o = this._start(t, r), o === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = r, n.addClass("ui-state-active").focus(), h = n.offset(), l = !e(t.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = l ? {left: 0, top: 0} : {left: t.pageX - h.left - n.width() / 2, top: t.pageY - h.top - n.height() / 2 - (parseInt(n.css("borderTopWidth"), 10) || 0) - (parseInt(n.css("borderBottomWidth"), 10) || 0) + (parseInt(n.css("marginTop"), 10) || 0)}, this.handles.hasClass("ui-state-hover") || this._slide(t, r, s), this._animateOff = !0, !0))
    }, _mouseStart: function () {
        return!0
    }, _mouseDrag: function (e) {
        var t = {x: e.pageX, y: e.pageY}, i = this._normValueFromMouse(t);
        return this._slide(e, this._handleIndex, i), !1
    }, _mouseStop: function (e) {
        return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(e, this._handleIndex), this._change(e, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
    }, _detectOrientation: function () {
        this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
    }, _normValueFromMouse: function (e) {
        var t, i, s, a, n;
        return"horizontal" === this.orientation ? (t = this.elementSize.width, i = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (t = this.elementSize.height, i = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), s = i / t, s > 1 && (s = 1), 0 > s && (s = 0), "vertical" === this.orientation && (s = 1 - s), a = this._valueMax() - this._valueMin(), n = this._valueMin() + s * a, this._trimAlignValue(n)
    }, _start: function (e, t) {
        var i = {handle: this.handles[t], value: this.value()};
        return this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._trigger("start", e, i)
    }, _slide: function (e, t, i) {
        var s, a, n;
        this.options.values && this.options.values.length ? (s = this.values(t ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === t && i > s || 1 === t && s > i) && (i = s), i !== this.values(t) && (a = this.values(), a[t] = i, n = this._trigger("slide", e, {handle: this.handles[t], value: i, values: a}), s = this.values(t ? 0 : 1), n !== !1 && this.values(t, i, !0))) : i !== this.value() && (n = this._trigger("slide", e, {handle: this.handles[t], value: i}), n !== !1 && this.value(i))
    }, _stop: function (e, t) {
        var i = {handle: this.handles[t], value: this.value()};
        this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._trigger("stop", e, i)
    }, _change: function (e, t) {
        if (!this._keySliding && !this._mouseSliding) {
            var i = {handle: this.handles[t], value: this.value()};
            this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._lastChangedValue = t, this._trigger("change", e, i)
        }
    }, value: function (e) {
        return arguments.length ? (this.options.value = this._trimAlignValue(e), this._refreshValue(), this._change(null, 0), undefined) : this._value()
    }, values: function (t, i) {
        var s, a, n;
        if (arguments.length > 1)return this.options.values[t] = this._trimAlignValue(i), this._refreshValue(), this._change(null, t), undefined;
        if (!arguments.length)return this._values();
        if (!e.isArray(arguments[0]))return this.options.values && this.options.values.length ? this._values(t) : this.value();
        for (s = this.options.values, a = arguments[0], n = 0; s.length > n; n += 1)s[n] = this._trimAlignValue(a[n]), this._change(null, n);
        this._refreshValue()
    }, _setOption: function (t, i) {
        var s, a = 0;
        switch ("range" === t && this.options.range === !0 && ("min" === i ? (this.options.value = this._values(0), this.options.values = null) : "max" === i && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), e.isArray(this.options.values) && (a = this.options.values.length), e.Widget.prototype._setOption.apply(this, arguments), t) {
            case"orientation":
                this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue();
                break;
            case"value":
                this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                break;
            case"values":
                for (this._animateOff = !0, this._refreshValue(), s = 0; a > s; s += 1)this._change(null, s);
                this._animateOff = !1;
                break;
            case"min":
            case"max":
                this._animateOff = !0, this._refreshValue(), this._animateOff = !1;
                break;
            case"range":
                this._animateOff = !0, this._refresh(), this._animateOff = !1
        }
    }, _value: function () {
        var e = this.options.value;
        return e = this._trimAlignValue(e)
    }, _values: function (e) {
        var t, i, s;
        if (arguments.length)return t = this.options.values[e], t = this._trimAlignValue(t);
        if (this.options.values && this.options.values.length) {
            for (i = this.options.values.slice(), s = 0; i.length > s; s += 1)i[s] = this._trimAlignValue(i[s]);
            return i
        }
        return[]
    }, _trimAlignValue: function (e) {
        if (this._valueMin() >= e)return this._valueMin();
        if (e >= this._valueMax())return this._valueMax();
        var t = this.options.step > 0 ? this.options.step : 1, i = (e - this._valueMin()) % t, s = e - i;
        return 2 * Math.abs(i) >= t && (s += i > 0 ? t : -t), parseFloat(s.toFixed(5))
    }, _valueMin: function () {
        return this.options.min
    }, _valueMax: function () {
        return this.options.max
    }, _refreshValue: function () {
        var t, i, s, a, n, r = this.options.range, o = this.options, h = this, l = this._animateOff ? !1 : o.animate, u = {};
        this.options.values && this.options.values.length ? this.handles.each(function (s) {
            i = 100 * ((h.values(s) - h._valueMin()) / (h._valueMax() - h._valueMin())), u["horizontal" === h.orientation ? "left" : "bottom"] = i + "%", e(this).stop(1, 1)[l ? "animate" : "css"](u, o.animate), h.options.range === !0 && ("horizontal" === h.orientation ? (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({left: i + "%"}, o.animate), 1 === s && h.range[l ? "animate" : "css"]({width: i - t + "%"}, {queue: !1, duration: o.animate})) : (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({bottom: i + "%"}, o.animate), 1 === s && h.range[l ? "animate" : "css"]({height: i - t + "%"}, {queue: !1, duration: o.animate}))), t = i
        }) : (s = this.value(), a = this._valueMin(), n = this._valueMax(), i = n !== a ? 100 * ((s - a) / (n - a)) : 0, u["horizontal" === this.orientation ? "left" : "bottom"] = i + "%", this.handle.stop(1, 1)[l ? "animate" : "css"](u, o.animate), "min" === r && "horizontal" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({width: i + "%"}, o.animate), "max" === r && "horizontal" === this.orientation && this.range[l ? "animate" : "css"]({width: 100 - i + "%"}, {queue: !1, duration: o.animate}), "min" === r && "vertical" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({height: i + "%"}, o.animate), "max" === r && "vertical" === this.orientation && this.range[l ? "animate" : "css"]({height: 100 - i + "%"}, {queue: !1, duration: o.animate}))
    }, _handleEvents: {keydown: function (i) {
        var s, a, n, r, o = e(i.target).data("ui-slider-handle-index");
        switch (i.keyCode) {
            case e.ui.keyCode.HOME:
            case e.ui.keyCode.END:
            case e.ui.keyCode.PAGE_UP:
            case e.ui.keyCode.PAGE_DOWN:
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
                if (i.preventDefault(), !this._keySliding && (this._keySliding = !0, e(i.target).addClass("ui-state-active"), s = this._start(i, o), s === !1))return
        }
        switch (r = this.options.step, a = n = this.options.values && this.options.values.length ? this.values(o) : this.value(), i.keyCode) {
            case e.ui.keyCode.HOME:
                n = this._valueMin();
                break;
            case e.ui.keyCode.END:
                n = this._valueMax();
                break;
            case e.ui.keyCode.PAGE_UP:
                n = this._trimAlignValue(a + (this._valueMax() - this._valueMin()) / t);
                break;
            case e.ui.keyCode.PAGE_DOWN:
                n = this._trimAlignValue(a - (this._valueMax() - this._valueMin()) / t);
                break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
                if (a === this._valueMax())return;
                n = this._trimAlignValue(a + r);
                break;
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
                if (a === this._valueMin())return;
                n = this._trimAlignValue(a - r)
        }
        this._slide(i, o, n)
    }, click: function (e) {
        e.preventDefault()
    }, keyup: function (t) {
        var i = e(t.target).data("ui-slider-handle-index");
        this._keySliding && (this._keySliding = !1, this._stop(t, i), this._change(t, i), e(t.target).removeClass("ui-state-active"))
    }}})
})(jQuery);
(function (e) {
    function t(e) {
        return function () {
            var t = this.element.val();
            e.apply(this, arguments), this._refresh(), t !== this.element.val() && this._trigger("change")
        }
    }

    e.widget("ui.spinner", {version: "1.10.3", defaultElement: "<input>", widgetEventPrefix: "spin", options: {culture: null, icons: {down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n"}, incremental: !0, max: null, min: null, numberFormat: null, page: 10, step: 1, change: null, spin: null, start: null, stop: null}, _create: function () {
        this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {beforeunload: function () {
            this.element.removeAttr("autocomplete")
        }})
    }, _getCreateOptions: function () {
        var t = {}, i = this.element;
        return e.each(["min", "max", "step"], function (e, s) {
            var a = i.attr(s);
            void 0 !== a && a.length && (t[s] = a)
        }), t
    }, _events: {keydown: function (e) {
        this._start(e) && this._keydown(e) && e.preventDefault()
    }, keyup: "_stop", focus: function () {
        this.previous = this.element.val()
    }, blur: function (e) {
        return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", e), void 0)
    }, mousewheel: function (e, t) {
        if (t) {
            if (!this.spinning && !this._start(e))return!1;
            this._spin((t > 0 ? 1 : -1) * this.options.step, e), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function () {
                this.spinning && this._stop(e)
            }, 100), e.preventDefault()
        }
    }, "mousedown .ui-spinner-button": function (t) {
        function i() {
            var e = this.element[0] === this.document[0].activeElement;
            e || (this.element.focus(), this.previous = s, this._delay(function () {
                this.previous = s
            }))
        }

        var s;
        s = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), t.preventDefault(), i.call(this), this.cancelBlur = !0, this._delay(function () {
            delete this.cancelBlur, i.call(this)
        }), this._start(t) !== !1 && this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t)
    }, "mouseup .ui-spinner-button": "_stop", "mouseenter .ui-spinner-button": function (t) {
        return e(t.currentTarget).hasClass("ui-state-active") ? this._start(t) === !1 ? !1 : (this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t), void 0) : void 0
    }, "mouseleave .ui-spinner-button": "_stop"}, _draw: function () {
        var e = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
        this.element.attr("role", "spinbutton"), this.buttons = e.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"), this.buttons.height() > Math.ceil(.5 * e.height()) && e.height() > 0 && e.height(e.height()), this.options.disabled && this.disable()
    }, _keydown: function (t) {
        var i = this.options, s = e.ui.keyCode;
        switch (t.keyCode) {
            case s.UP:
                return this._repeat(null, 1, t), !0;
            case s.DOWN:
                return this._repeat(null, -1, t), !0;
            case s.PAGE_UP:
                return this._repeat(null, i.page, t), !0;
            case s.PAGE_DOWN:
                return this._repeat(null, -i.page, t), !0
        }
        return!1
    }, _uiSpinnerHtml: function () {
        return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
    }, _buttonHtml: function () {
        return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" + "</a>" + "<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" + "<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" + "</a>"
    }, _start: function (e) {
        return this.spinning || this._trigger("start", e) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1
    }, _repeat: function (e, t, i) {
        e = e || 500, clearTimeout(this.timer), this.timer = this._delay(function () {
            this._repeat(40, t, i)
        }, e), this._spin(t * this.options.step, i)
    }, _spin: function (e, t) {
        var i = this.value() || 0;
        this.counter || (this.counter = 1), i = this._adjustValue(i + e * this._increment(this.counter)), this.spinning && this._trigger("spin", t, {value: i}) === !1 || (this._value(i), this.counter++)
    }, _increment: function (t) {
        var i = this.options.incremental;
        return i ? e.isFunction(i) ? i(t) : Math.floor(t * t * t / 5e4 - t * t / 500 + 17 * t / 200 + 1) : 1
    }, _precision: function () {
        var e = this._precisionOf(this.options.step);
        return null !== this.options.min && (e = Math.max(e, this._precisionOf(this.options.min))), e
    }, _precisionOf: function (e) {
        var t = "" + e, i = t.indexOf(".");
        return-1 === i ? 0 : t.length - i - 1
    }, _adjustValue: function (e) {
        var t, i, s = this.options;
        return t = null !== s.min ? s.min : 0, i = e - t, i = Math.round(i / s.step) * s.step, e = t + i, e = parseFloat(e.toFixed(this._precision())), null !== s.max && e > s.max ? s.max : null !== s.min && s.min > e ? s.min : e
    }, _stop: function (e) {
        this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", e))
    }, _setOption: function (e, t) {
        if ("culture" === e || "numberFormat" === e) {
            var i = this._parse(this.element.val());
            return this.options[e] = t, this.element.val(this._format(i)), void 0
        }
        ("max" === e || "min" === e || "step" === e) && "string" == typeof t && (t = this._parse(t)), "icons" === e && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(t.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(t.down)), this._super(e, t), "disabled" === e && (t ? (this.element.prop("disabled", !0), this.buttons.button("disable")) : (this.element.prop("disabled", !1), this.buttons.button("enable")))
    }, _setOptions: t(function (e) {
        this._super(e), this._value(this.element.val())
    }), _parse: function (e) {
        return"string" == typeof e && "" !== e && (e = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(e, 10, this.options.culture) : +e), "" === e || isNaN(e) ? null : e
    }, _format: function (e) {
        return"" === e ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(e, this.options.numberFormat, this.options.culture) : e
    }, _refresh: function () {
        this.element.attr({"aria-valuemin": this.options.min, "aria-valuemax": this.options.max, "aria-valuenow": this._parse(this.element.val())})
    }, _value: function (e, t) {
        var i;
        "" !== e && (i = this._parse(e), null !== i && (t || (i = this._adjustValue(i)), e = this._format(i))), this.element.val(e), this._refresh()
    }, _destroy: function () {
        this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.uiSpinner.replaceWith(this.element)
    }, stepUp: t(function (e) {
        this._stepUp(e)
    }), _stepUp: function (e) {
        this._start() && (this._spin((e || 1) * this.options.step), this._stop())
    }, stepDown: t(function (e) {
        this._stepDown(e)
    }), _stepDown: function (e) {
        this._start() && (this._spin((e || 1) * -this.options.step), this._stop())
    }, pageUp: t(function (e) {
        this._stepUp((e || 1) * this.options.page)
    }), pageDown: t(function (e) {
        this._stepDown((e || 1) * this.options.page)
    }), value: function (e) {
        return arguments.length ? (t(this._value).call(this, e), void 0) : this._parse(this.element.val())
    }, widget: function () {
        return this.uiSpinner
    }})
})(jQuery);
(function (e, t) {
    function i() {
        return++a
    }

    function s(e) {
        return e.hash.length > 1 && decodeURIComponent(e.href.replace(n, "")) === decodeURIComponent(location.href.replace(n, ""))
    }

    var a = 0, n = /#.*$/;
    e.widget("ui.tabs", {version: "1.10.3", delay: 300, options: {active: null, collapsible: !1, event: "click", heightStyle: "content", hide: null, show: null, activate: null, beforeActivate: null, beforeLoad: null, load: null}, _create: function () {
        var t = this, i = this.options;
        this.running = !1, this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", i.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace,function (t) {
            e(this).is(".ui-state-disabled") && t.preventDefault()
        }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function () {
            e(this).closest("li").is(".ui-state-disabled") && this.blur()
        }), this._processTabs(), i.active = this._initialActive(), e.isArray(i.disabled) && (i.disabled = e.unique(i.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"), function (e) {
            return t.tabs.index(e)
        }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(i.active) : e(), this._refresh(), this.active.length && this.load(i.active)
    }, _initialActive: function () {
        var i = this.options.active, s = this.options.collapsible, a = location.hash.substring(1);
        return null === i && (a && this.tabs.each(function (s, n) {
            return e(n).attr("aria-controls") === a ? (i = s, !1) : t
        }), null === i && (i = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === i || -1 === i) && (i = this.tabs.length ? 0 : !1)), i !== !1 && (i = this.tabs.index(this.tabs.eq(i)), -1 === i && (i = s ? !1 : 0)), !s && i === !1 && this.anchors.length && (i = 0), i
    }, _getCreateEventData: function () {
        return{tab: this.active, panel: this.active.length ? this._getPanelForTab(this.active) : e()}
    }, _tabKeydown: function (i) {
        var s = e(this.document[0].activeElement).closest("li"), a = this.tabs.index(s), n = !0;
        if (!this._handlePageNav(i)) {
            switch (i.keyCode) {
                case e.ui.keyCode.RIGHT:
                case e.ui.keyCode.DOWN:
                    a++;
                    break;
                case e.ui.keyCode.UP:
                case e.ui.keyCode.LEFT:
                    n = !1, a--;
                    break;
                case e.ui.keyCode.END:
                    a = this.anchors.length - 1;
                    break;
                case e.ui.keyCode.HOME:
                    a = 0;
                    break;
                case e.ui.keyCode.SPACE:
                    return i.preventDefault(), clearTimeout(this.activating), this._activate(a), t;
                case e.ui.keyCode.ENTER:
                    return i.preventDefault(), clearTimeout(this.activating), this._activate(a === this.options.active ? !1 : a), t;
                default:
                    return
            }
            i.preventDefault(), clearTimeout(this.activating), a = this._focusNextTab(a, n), i.ctrlKey || (s.attr("aria-selected", "false"), this.tabs.eq(a).attr("aria-selected", "true"), this.activating = this._delay(function () {
                this.option("active", a)
            }, this.delay))
        }
    }, _panelKeydown: function (t) {
        this._handlePageNav(t) || t.ctrlKey && t.keyCode === e.ui.keyCode.UP && (t.preventDefault(), this.active.focus())
    }, _handlePageNav: function (i) {
        return i.altKey && i.keyCode === e.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : i.altKey && i.keyCode === e.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : t
    }, _findNextTab: function (t, i) {
        function s() {
            return t > a && (t = 0), 0 > t && (t = a), t
        }

        for (var a = this.tabs.length - 1; -1 !== e.inArray(s(), this.options.disabled);)t = i ? t + 1 : t - 1;
        return t
    }, _focusNextTab: function (e, t) {
        return e = this._findNextTab(e, t), this.tabs.eq(e).focus(), e
    }, _setOption: function (e, i) {
        return"active" === e ? (this._activate(i), t) : "disabled" === e ? (this._setupDisabled(i), t) : (this._super(e, i), "collapsible" === e && (this.element.toggleClass("ui-tabs-collapsible", i), i || this.options.active !== !1 || this._activate(0)), "event" === e && this._setupEvents(i), "heightStyle" === e && this._setupHeightStyle(i), t)
    }, _tabId: function (e) {
        return e.attr("aria-controls") || "ui-tabs-" + i()
    }, _sanitizeSelector: function (e) {
        return e ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
    }, refresh: function () {
        var t = this.options, i = this.tablist.children(":has(a[href])");
        t.disabled = e.map(i.filter(".ui-state-disabled"), function (e) {
            return i.index(e)
        }), this._processTabs(), t.active !== !1 && this.anchors.length ? this.active.length && !e.contains(this.tablist[0], this.active[0]) ? this.tabs.length === t.disabled.length ? (t.active = !1, this.active = e()) : this._activate(this._findNextTab(Math.max(0, t.active - 1), !1)) : t.active = this.tabs.index(this.active) : (t.active = !1, this.active = e()), this._refresh()
    }, _refresh: function () {
        this._setupDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({"aria-selected": "false", tabIndex: -1}), this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded": "false", "aria-hidden": "true"}), this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected": "true", tabIndex: 0}), this._getPanelForTab(this.active).show().attr({"aria-expanded": "true", "aria-hidden": "false"})) : this.tabs.eq(0).attr("tabIndex", 0)
    }, _processTabs: function () {
        var t = this;
        this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist"), this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role: "tab", tabIndex: -1}), this.anchors = this.tabs.map(function () {
            return e("a", this)[0]
        }).addClass("ui-tabs-anchor").attr({role: "presentation", tabIndex: -1}), this.panels = e(), this.anchors.each(function (i, a) {
            var n, r, o, h = e(a).uniqueId().attr("id"), l = e(a).closest("li"), u = l.attr("aria-controls");
            s(a) ? (n = a.hash, r = t.element.find(t._sanitizeSelector(n))) : (o = t._tabId(l), n = "#" + o, r = t.element.find(n), r.length || (r = t._createPanel(o), r.insertAfter(t.panels[i - 1] || t.tablist)), r.attr("aria-live", "polite")), r.length && (t.panels = t.panels.add(r)), u && l.data("ui-tabs-aria-controls", u), l.attr({"aria-controls": n.substring(1), "aria-labelledby": h}), r.attr("aria-labelledby", h)
        }), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
    }, _getList: function () {
        return this.element.find("ol,ul").eq(0)
    }, _createPanel: function (t) {
        return e("<div>").attr("id", t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
    }, _setupDisabled: function (t) {
        e.isArray(t) && (t.length ? t.length === this.anchors.length && (t = !0) : t = !1);
        for (var i, s = 0; i = this.tabs[s]; s++)t === !0 || -1 !== e.inArray(s, t) ? e(i).addClass("ui-state-disabled").attr("aria-disabled", "true") : e(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");
        this.options.disabled = t
    }, _setupEvents: function (t) {
        var i = {click: function (e) {
            e.preventDefault()
        }};
        t && e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler"
        }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(this.anchors, i), this._on(this.tabs, {keydown: "_tabKeydown"}), this._on(this.panels, {keydown: "_panelKeydown"}), this._focusable(this.tabs), this._hoverable(this.tabs)
    }, _setupHeightStyle: function (t) {
        var i, s = this.element.parent();
        "fill" === t ? (i = s.height(), i -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function () {
            var t = e(this), s = t.css("position");
            "absolute" !== s && "fixed" !== s && (i -= t.outerHeight(!0))
        }), this.element.children().not(this.panels).each(function () {
            i -= e(this).outerHeight(!0)
        }), this.panels.each(function () {
            e(this).height(Math.max(0, i - e(this).innerHeight() + e(this).height()))
        }).css("overflow", "auto")) : "auto" === t && (i = 0, this.panels.each(function () {
            i = Math.max(i, e(this).height("").height())
        }).height(i))
    }, _eventHandler: function (t) {
        var i = this.options, s = this.active, a = e(t.currentTarget), n = a.closest("li"), r = n[0] === s[0], o = r && i.collapsible, h = o ? e() : this._getPanelForTab(n), l = s.length ? this._getPanelForTab(s) : e(), u = {oldTab: s, oldPanel: l, newTab: o ? e() : n, newPanel: h};
        t.preventDefault(), n.hasClass("ui-state-disabled") || n.hasClass("ui-tabs-loading") || this.running || r && !i.collapsible || this._trigger("beforeActivate", t, u) === !1 || (i.active = o ? !1 : this.tabs.index(n), this.active = r ? e() : n, this.xhr && this.xhr.abort(), l.length || h.length || e.error("jQuery UI Tabs: Mismatching fragment identifier."), h.length && this.load(this.tabs.index(n), t), this._toggle(t, u))
    }, _toggle: function (t, i) {
        function s() {
            n.running = !1, n._trigger("activate", t, i)
        }

        function a() {
            i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"), r.length && n.options.show ? n._show(r, n.options.show, s) : (r.show(), s())
        }

        var n = this, r = i.newPanel, o = i.oldPanel;
        this.running = !0, o.length && this.options.hide ? this._hide(o, this.options.hide, function () {
            i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), a()
        }) : (i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), o.hide(), a()), o.attr({"aria-expanded": "false", "aria-hidden": "true"}), i.oldTab.attr("aria-selected", "false"), r.length && o.length ? i.oldTab.attr("tabIndex", -1) : r.length && this.tabs.filter(function () {
            return 0 === e(this).attr("tabIndex")
        }).attr("tabIndex", -1), r.attr({"aria-expanded": "true", "aria-hidden": "false"}), i.newTab.attr({"aria-selected": "true", tabIndex: 0})
    }, _activate: function (t) {
        var i, s = this._findActive(t);
        s[0] !== this.active[0] && (s.length || (s = this.active), i = s.find(".ui-tabs-anchor")[0], this._eventHandler({target: i, currentTarget: i, preventDefault: e.noop}))
    }, _findActive: function (t) {
        return t === !1 ? e() : this.tabs.eq(t)
    }, _getIndex: function (e) {
        return"string" == typeof e && (e = this.anchors.index(this.anchors.filter("[href$='" + e + "']"))), e
    }, _destroy: function () {
        this.xhr && this.xhr.abort(), this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"), this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"), this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function () {
            e.data(this, "ui-tabs-destroy") ? e(this).remove() : e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
        }), this.tabs.each(function () {
            var t = e(this), i = t.data("ui-tabs-aria-controls");
            i ? t.attr("aria-controls", i).removeData("ui-tabs-aria-controls") : t.removeAttr("aria-controls")
        }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "")
    }, enable: function (i) {
        var s = this.options.disabled;
        s !== !1 && (i === t ? s = !1 : (i = this._getIndex(i), s = e.isArray(s) ? e.map(s, function (e) {
            return e !== i ? e : null
        }) : e.map(this.tabs, function (e, t) {
            return t !== i ? t : null
        })), this._setupDisabled(s))
    }, disable: function (i) {
        var s = this.options.disabled;
        if (s !== !0) {
            if (i === t)s = !0; else {
                if (i = this._getIndex(i), -1 !== e.inArray(i, s))return;
                s = e.isArray(s) ? e.merge([i], s).sort() : [i]
            }
            this._setupDisabled(s)
        }
    }, load: function (t, i) {
        t = this._getIndex(t);
        var a = this, n = this.tabs.eq(t), r = n.find(".ui-tabs-anchor"), o = this._getPanelForTab(n), h = {tab: n, panel: o};
        s(r[0]) || (this.xhr = e.ajax(this._ajaxSettings(r, i, h)), this.xhr && "canceled" !== this.xhr.statusText && (n.addClass("ui-tabs-loading"), o.attr("aria-busy", "true"), this.xhr.success(function (e) {
            setTimeout(function () {
                o.html(e), a._trigger("load", i, h)
            }, 1)
        }).complete(function (e, t) {
            setTimeout(function () {
                "abort" === t && a.panels.stop(!1, !0), n.removeClass("ui-tabs-loading"), o.removeAttr("aria-busy"), e === a.xhr && delete a.xhr
            }, 1)
        })))
    }, _ajaxSettings: function (t, i, s) {
        var a = this;
        return{url: t.attr("href"), beforeSend: function (t, n) {
            return a._trigger("beforeLoad", i, e.extend({jqXHR: t, ajaxSettings: n}, s))
        }}
    }, _getPanelForTab: function (t) {
        var i = e(t).attr("aria-controls");
        return this.element.find(this._sanitizeSelector("#" + i))
    }})
})(jQuery);
(function (e) {
    function t(t, i) {
        var s = (t.attr("aria-describedby") || "").split(/\s+/);
        s.push(i), t.data("ui-tooltip-id", i).attr("aria-describedby", e.trim(s.join(" ")))
    }

    function i(t) {
        var i = t.data("ui-tooltip-id"), s = (t.attr("aria-describedby") || "").split(/\s+/), a = e.inArray(i, s);
        -1 !== a && s.splice(a, 1), t.removeData("ui-tooltip-id"), s = e.trim(s.join(" ")), s ? t.attr("aria-describedby", s) : t.removeAttr("aria-describedby")
    }

    var s = 0;
    e.widget("ui.tooltip", {version: "1.10.3", options: {content: function () {
        var t = e(this).attr("title") || "";
        return e("<a>").text(t).html()
    }, hide: !0, items: "[title]:not([disabled])", position: {my: "left top+15", at: "left bottom", collision: "flipfit flip"}, show: !0, tooltipClass: null, track: !1, close: null, open: null}, _create: function () {
        this._on({mouseover: "open", focusin: "open"}), this.tooltips = {}, this.parents = {}, this.options.disabled && this._disable()
    }, _setOption: function (t, i) {
        var s = this;
        return"disabled" === t ? (this[i ? "_disable" : "_enable"](), this.options[t] = i, void 0) : (this._super(t, i), "content" === t && e.each(this.tooltips, function (e, t) {
            s._updateContent(t)
        }), void 0)
    }, _disable: function () {
        var t = this;
        e.each(this.tooltips, function (i, s) {
            var a = e.Event("blur");
            a.target = a.currentTarget = s[0], t.close(a, !0)
        }), this.element.find(this.options.items).addBack().each(function () {
            var t = e(this);
            t.is("[title]") && t.data("ui-tooltip-title", t.attr("title")).attr("title", "")
        })
    }, _enable: function () {
        this.element.find(this.options.items).addBack().each(function () {
            var t = e(this);
            t.data("ui-tooltip-title") && t.attr("title", t.data("ui-tooltip-title"))
        })
    }, open: function (t) {
        var i = this, s = e(t ? t.target : this.element).closest(this.options.items);
        s.length && !s.data("ui-tooltip-id") && (s.attr("title") && s.data("ui-tooltip-title", s.attr("title")), s.data("ui-tooltip-open", !0), t && "mouseover" === t.type && s.parents().each(function () {
            var t, s = e(this);
            s.data("ui-tooltip-open") && (t = e.Event("blur"), t.target = t.currentTarget = this, i.close(t, !0)), s.attr("title") && (s.uniqueId(), i.parents[this.id] = {element: this, title: s.attr("title")}, s.attr("title", ""))
        }), this._updateContent(s, t))
    }, _updateContent: function (e, t) {
        var i, s = this.options.content, a = this, n = t ? t.type : null;
        return"string" == typeof s ? this._open(t, e, s) : (i = s.call(e[0], function (i) {
            e.data("ui-tooltip-open") && a._delay(function () {
                t && (t.type = n), this._open(t, e, i)
            })
        }), i && this._open(t, e, i), void 0)
    }, _open: function (i, s, a) {
        function n(e) {
            l.of = e, r.is(":hidden") || r.position(l)
        }

        var r, o, h, l = e.extend({}, this.options.position);
        if (a) {
            if (r = this._find(s), r.length)return r.find(".ui-tooltip-content").html(a), void 0;
            s.is("[title]") && (i && "mouseover" === i.type ? s.attr("title", "") : s.removeAttr("title")), r = this._tooltip(s), t(s, r.attr("id")), r.find(".ui-tooltip-content").html(a), this.options.track && i && /^mouse/.test(i.type) ? (this._on(this.document, {mousemove: n}), n(i)) : r.position(e.extend({of: s}, this.options.position)), r.hide(), this._show(r, this.options.show), this.options.show && this.options.show.delay && (h = this.delayedShow = setInterval(function () {
                r.is(":visible") && (n(l.of), clearInterval(h))
            }, e.fx.interval)), this._trigger("open", i, {tooltip: r}), o = {keyup: function (t) {
                if (t.keyCode === e.ui.keyCode.ESCAPE) {
                    var i = e.Event(t);
                    i.currentTarget = s[0], this.close(i, !0)
                }
            }, remove: function () {
                this._removeTooltip(r)
            }}, i && "mouseover" !== i.type || (o.mouseleave = "close"), i && "focusin" !== i.type || (o.focusout = "close"), this._on(!0, s, o)
        }
    }, close: function (t) {
        var s = this, a = e(t ? t.currentTarget : this.element), n = this._find(a);
        this.closing || (clearInterval(this.delayedShow), a.data("ui-tooltip-title") && a.attr("title", a.data("ui-tooltip-title")), i(a), n.stop(!0), this._hide(n, this.options.hide, function () {
            s._removeTooltip(e(this))
        }), a.removeData("ui-tooltip-open"), this._off(a, "mouseleave focusout keyup"), a[0] !== this.element[0] && this._off(a, "remove"), this._off(this.document, "mousemove"), t && "mouseleave" === t.type && e.each(this.parents, function (t, i) {
            e(i.element).attr("title", i.title), delete s.parents[t]
        }), this.closing = !0, this._trigger("close", t, {tooltip: n}), this.closing = !1)
    }, _tooltip: function (t) {
        var i = "ui-tooltip-" + s++, a = e("<div>").attr({id: i, role: "tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
        return e("<div>").addClass("ui-tooltip-content").appendTo(a), a.appendTo(this.document[0].body), this.tooltips[i] = t, a
    }, _find: function (t) {
        var i = t.data("ui-tooltip-id");
        return i ? e("#" + i) : e()
    }, _removeTooltip: function (e) {
        e.remove(), delete this.tooltips[e.attr("id")]
    }, _destroy: function () {
        var t = this;
        e.each(this.tooltips, function (i, s) {
            var a = e.Event("blur");
            a.target = a.currentTarget = s[0], t.close(a, !0), e("#" + i).remove(), s.data("ui-tooltip-title") && (s.attr("title", s.data("ui-tooltip-title")), s.removeData("ui-tooltip-title"))
        })
    }})
})(jQuery);
(function (e, t) {
    var i = "ui-effects-";
    e.effects = {effect: {}}, function (e, t) {
        function i(e, t, i) {
            var s = c[t.type] || {};
            return null == e ? i || !t.def ? null : t.def : (e = s.floor ? ~~e : parseFloat(e), isNaN(e) ? t.def : s.mod ? (e + s.mod) % s.mod : 0 > e ? 0 : e > s.max ? s.max : e)
        }

        function s(i) {
            var s = l(), a = s._rgba = [];
            return i = i.toLowerCase(), f(h, function (e, n) {
                var r, o = n.re.exec(i), h = o && n.parse(o), l = n.space || "rgba";
                return h ? (r = s[l](h), s[u[l].cache] = r[u[l].cache], a = s._rgba = r._rgba, !1) : t
            }), a.length ? ("0,0,0,0" === a.join() && e.extend(a, n.transparent), s) : n[i]
        }

        function a(e, t, i) {
            return i = (i + 1) % 1, 1 > 6 * i ? e + 6 * (t - e) * i : 1 > 2 * i ? t : 2 > 3 * i ? e + 6 * (t - e) * (2 / 3 - i) : e
        }

        var n, r = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", o = /^([\-+])=\s*(\d+\.?\d*)/, h = [
            {re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (e) {
                return[e[1], e[2], e[3], e[4]]
            }},
            {re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (e) {
                return[2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]]
            }},
            {re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (e) {
                return[parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)]
            }},
            {re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (e) {
                return[parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)]
            }},
            {re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space: "hsla", parse: function (e) {
                return[e[1], e[2] / 100, e[3] / 100, e[4]]
            }}
        ], l = e.Color = function (t, i, s, a) {
            return new e.Color.fn.parse(t, i, s, a)
        }, u = {rgba: {props: {red: {idx: 0, type: "byte"}, green: {idx: 1, type: "byte"}, blue: {idx: 2, type: "byte"}}}, hsla: {props: {hue: {idx: 0, type: "degrees"}, saturation: {idx: 1, type: "percent"}, lightness: {idx: 2, type: "percent"}}}}, c = {"byte": {floor: !0, max: 255}, percent: {max: 1}, degrees: {mod: 360, floor: !0}}, d = l.support = {}, p = e("<p>")[0], f = e.each;
        p.style.cssText = "background-color:rgba(1,1,1,.5)", d.rgba = p.style.backgroundColor.indexOf("rgba") > -1, f(u, function (e, t) {
            t.cache = "_" + e, t.props.alpha = {idx: 3, type: "percent", def: 1}
        }), l.fn = e.extend(l.prototype, {parse: function (a, r, o, h) {
            if (a === t)return this._rgba = [null, null, null, null], this;
            (a.jquery || a.nodeType) && (a = e(a).css(r), r = t);
            var c = this, d = e.type(a), p = this._rgba = [];
            return r !== t && (a = [a, r, o, h], d = "array"), "string" === d ? this.parse(s(a) || n._default) : "array" === d ? (f(u.rgba.props, function (e, t) {
                p[t.idx] = i(a[t.idx], t)
            }), this) : "object" === d ? (a instanceof l ? f(u, function (e, t) {
                a[t.cache] && (c[t.cache] = a[t.cache].slice())
            }) : f(u, function (t, s) {
                var n = s.cache;
                f(s.props, function (e, t) {
                    if (!c[n] && s.to) {
                        if ("alpha" === e || null == a[e])return;
                        c[n] = s.to(c._rgba)
                    }
                    c[n][t.idx] = i(a[e], t, !0)
                }), c[n] && 0 > e.inArray(null, c[n].slice(0, 3)) && (c[n][3] = 1, s.from && (c._rgba = s.from(c[n])))
            }), this) : t
        }, is: function (e) {
            var i = l(e), s = !0, a = this;
            return f(u, function (e, n) {
                var r, o = i[n.cache];
                return o && (r = a[n.cache] || n.to && n.to(a._rgba) || [], f(n.props, function (e, i) {
                    return null != o[i.idx] ? s = o[i.idx] === r[i.idx] : t
                })), s
            }), s
        }, _space: function () {
            var e = [], t = this;
            return f(u, function (i, s) {
                t[s.cache] && e.push(i)
            }), e.pop()
        }, transition: function (e, t) {
            var s = l(e), a = s._space(), n = u[a], r = 0 === this.alpha() ? l("transparent") : this, o = r[n.cache] || n.to(r._rgba), h = o.slice();
            return s = s[n.cache], f(n.props, function (e, a) {
                var n = a.idx, r = o[n], l = s[n], u = c[a.type] || {};
                null !== l && (null === r ? h[n] = l : (u.mod && (l - r > u.mod / 2 ? r += u.mod : r - l > u.mod / 2 && (r -= u.mod)), h[n] = i((l - r) * t + r, a)))
            }), this[a](h)
        }, blend: function (t) {
            if (1 === this._rgba[3])return this;
            var i = this._rgba.slice(), s = i.pop(), a = l(t)._rgba;
            return l(e.map(i, function (e, t) {
                return(1 - s) * a[t] + s * e
            }))
        }, toRgbaString: function () {
            var t = "rgba(", i = e.map(this._rgba, function (e, t) {
                return null == e ? t > 2 ? 1 : 0 : e
            });
            return 1 === i[3] && (i.pop(), t = "rgb("), t + i.join() + ")"
        }, toHslaString: function () {
            var t = "hsla(", i = e.map(this.hsla(), function (e, t) {
                return null == e && (e = t > 2 ? 1 : 0), t && 3 > t && (e = Math.round(100 * e) + "%"), e
            });
            return 1 === i[3] && (i.pop(), t = "hsl("), t + i.join() + ")"
        }, toHexString: function (t) {
            var i = this._rgba.slice(), s = i.pop();
            return t && i.push(~~(255 * s)), "#" + e.map(i,function (e) {
                return e = (e || 0).toString(16), 1 === e.length ? "0" + e : e
            }).join("")
        }, toString: function () {
            return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
        }}), l.fn.parse.prototype = l.fn, u.hsla.to = function (e) {
            if (null == e[0] || null == e[1] || null == e[2])return[null, null, null, e[3]];
            var t, i, s = e[0] / 255, a = e[1] / 255, n = e[2] / 255, r = e[3], o = Math.max(s, a, n), h = Math.min(s, a, n), l = o - h, u = o + h, c = .5 * u;
            return t = h === o ? 0 : s === o ? 60 * (a - n) / l + 360 : a === o ? 60 * (n - s) / l + 120 : 60 * (s - a) / l + 240, i = 0 === l ? 0 : .5 >= c ? l / u : l / (2 - u), [Math.round(t) % 360, i, c, null == r ? 1 : r]
        }, u.hsla.from = function (e) {
            if (null == e[0] || null == e[1] || null == e[2])return[null, null, null, e[3]];
            var t = e[0] / 360, i = e[1], s = e[2], n = e[3], r = .5 >= s ? s * (1 + i) : s + i - s * i, o = 2 * s - r;
            return[Math.round(255 * a(o, r, t + 1 / 3)), Math.round(255 * a(o, r, t)), Math.round(255 * a(o, r, t - 1 / 3)), n]
        }, f(u, function (s, a) {
            var n = a.props, r = a.cache, h = a.to, u = a.from;
            l.fn[s] = function (s) {
                if (h && !this[r] && (this[r] = h(this._rgba)), s === t)return this[r].slice();
                var a, o = e.type(s), c = "array" === o || "object" === o ? s : arguments, d = this[r].slice();
                return f(n, function (e, t) {
                    var s = c["object" === o ? e : t.idx];
                    null == s && (s = d[t.idx]), d[t.idx] = i(s, t)
                }), u ? (a = l(u(d)), a[r] = d, a) : l(d)
            }, f(n, function (t, i) {
                l.fn[t] || (l.fn[t] = function (a) {
                    var n, r = e.type(a), h = "alpha" === t ? this._hsla ? "hsla" : "rgba" : s, l = this[h](), u = l[i.idx];
                    return"undefined" === r ? u : ("function" === r && (a = a.call(this, u), r = e.type(a)), null == a && i.empty ? this : ("string" === r && (n = o.exec(a), n && (a = u + parseFloat(n[2]) * ("+" === n[1] ? 1 : -1))), l[i.idx] = a, this[h](l)))
                })
            })
        }), l.hook = function (t) {
            var i = t.split(" ");
            f(i, function (t, i) {
                e.cssHooks[i] = {set: function (t, a) {
                    var n, r, o = "";
                    if ("transparent" !== a && ("string" !== e.type(a) || (n = s(a)))) {
                        if (a = l(n || a), !d.rgba && 1 !== a._rgba[3]) {
                            for (r = "backgroundColor" === i ? t.parentNode : t; ("" === o || "transparent" === o) && r && r.style;)try {
                                o = e.css(r, "backgroundColor"), r = r.parentNode
                            } catch (h) {
                            }
                            a = a.blend(o && "transparent" !== o ? o : "_default")
                        }
                        a = a.toRgbaString()
                    }
                    try {
                        t.style[i] = a
                    } catch (h) {
                    }
                }}, e.fx.step[i] = function (t) {
                    t.colorInit || (t.start = l(t.elem, i), t.end = l(t.end), t.colorInit = !0), e.cssHooks[i].set(t.elem, t.start.transition(t.end, t.pos))
                }
            })
        }, l.hook(r), e.cssHooks.borderColor = {expand: function (e) {
            var t = {};
            return f(["Top", "Right", "Bottom", "Left"], function (i, s) {
                t["border" + s + "Color"] = e
            }), t
        }}, n = e.Color.names = {aqua: "#00ffff", black: "#000000", blue: "#0000ff", fuchsia: "#ff00ff", gray: "#808080", green: "#008000", lime: "#00ff00", maroon: "#800000", navy: "#000080", olive: "#808000", purple: "#800080", red: "#ff0000", silver: "#c0c0c0", teal: "#008080", white: "#ffffff", yellow: "#ffff00", transparent: [null, null, null, 0], _default: "#ffffff"}
    }(jQuery), function () {
        function i(t) {
            var i, s, a = t.ownerDocument.defaultView ? t.ownerDocument.defaultView.getComputedStyle(t, null) : t.currentStyle, n = {};
            if (a && a.length && a[0] && a[a[0]])for (s = a.length; s--;)i = a[s], "string" == typeof a[i] && (n[e.camelCase(i)] = a[i]); else for (i in a)"string" == typeof a[i] && (n[i] = a[i]);
            return n
        }

        function s(t, i) {
            var s, a, r = {};
            for (s in i)a = i[s], t[s] !== a && (n[s] || (e.fx.step[s] || !isNaN(parseFloat(a))) && (r[s] = a));
            return r
        }

        var a = ["add", "remove", "toggle"], n = {border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1};
        e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (t, i) {
            e.fx.step[i] = function (e) {
                ("none" !== e.end && !e.setAttr || 1 === e.pos && !e.setAttr) && (jQuery.style(e.elem, i, e.end), e.setAttr = !0)
            }
        }), e.fn.addBack || (e.fn.addBack = function (e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }), e.effects.animateClass = function (t, n, r, o) {
            var h = e.speed(n, r, o);
            return this.queue(function () {
                var n, r = e(this), o = r.attr("class") || "", l = h.children ? r.find("*").addBack() : r;
                l = l.map(function () {
                    var t = e(this);
                    return{el: t, start: i(this)}
                }), n = function () {
                    e.each(a, function (e, i) {
                        t[i] && r[i + "Class"](t[i])
                    })
                }, n(), l = l.map(function () {
                    return this.end = i(this.el[0]), this.diff = s(this.start, this.end), this
                }), r.attr("class", o), l = l.map(function () {
                    var t = this, i = e.Deferred(), s = e.extend({}, h, {queue: !1, complete: function () {
                        i.resolve(t)
                    }});
                    return this.el.animate(this.diff, s), i.promise()
                }), e.when.apply(e, l.get()).done(function () {
                    n(), e.each(arguments, function () {
                        var t = this.el;
                        e.each(this.diff, function (e) {
                            t.css(e, "")
                        })
                    }), h.complete.call(r[0])
                })
            })
        }, e.fn.extend({addClass: function (t) {
            return function (i, s, a, n) {
                return s ? e.effects.animateClass.call(this, {add: i}, s, a, n) : t.apply(this, arguments)
            }
        }(e.fn.addClass), removeClass: function (t) {
            return function (i, s, a, n) {
                return arguments.length > 1 ? e.effects.animateClass.call(this, {remove: i}, s, a, n) : t.apply(this, arguments)
            }
        }(e.fn.removeClass), toggleClass: function (i) {
            return function (s, a, n, r, o) {
                return"boolean" == typeof a || a === t ? n ? e.effects.animateClass.call(this, a ? {add: s} : {remove: s}, n, r, o) : i.apply(this, arguments) : e.effects.animateClass.call(this, {toggle: s}, a, n, r)
            }
        }(e.fn.toggleClass), switchClass: function (t, i, s, a, n) {
            return e.effects.animateClass.call(this, {add: i, remove: t}, s, a, n)
        }})
    }(), function () {
        function s(t, i, s, a) {
            return e.isPlainObject(t) && (i = t, t = t.effect), t = {effect: t}, null == i && (i = {}), e.isFunction(i) && (a = i, s = null, i = {}), ("number" == typeof i || e.fx.speeds[i]) && (a = s, s = i, i = {}), e.isFunction(s) && (a = s, s = null), i && e.extend(t, i), s = s || i.duration, t.duration = e.fx.off ? 0 : "number" == typeof s ? s : s in e.fx.speeds ? e.fx.speeds[s] : e.fx.speeds._default, t.complete = a || i.complete, t
        }

        function a(t) {
            return!t || "number" == typeof t || e.fx.speeds[t] ? !0 : "string" != typeof t || e.effects.effect[t] ? e.isFunction(t) ? !0 : "object" != typeof t || t.effect ? !1 : !0 : !0
        }

        e.extend(e.effects, {version: "1.10.3", save: function (e, t) {
            for (var s = 0; t.length > s; s++)null !== t[s] && e.data(i + t[s], e[0].style[t[s]])
        }, restore: function (e, s) {
            var a, n;
            for (n = 0; s.length > n; n++)null !== s[n] && (a = e.data(i + s[n]), a === t && (a = ""), e.css(s[n], a))
        }, setMode: function (e, t) {
            return"toggle" === t && (t = e.is(":hidden") ? "show" : "hide"), t
        }, getBaseline: function (e, t) {
            var i, s;
            switch (e[0]) {
                case"top":
                    i = 0;
                    break;
                case"middle":
                    i = .5;
                    break;
                case"bottom":
                    i = 1;
                    break;
                default:
                    i = e[0] / t.height
            }
            switch (e[1]) {
                case"left":
                    s = 0;
                    break;
                case"center":
                    s = .5;
                    break;
                case"right":
                    s = 1;
                    break;
                default:
                    s = e[1] / t.width
            }
            return{x: s, y: i}
        }, createWrapper: function (t) {
            if (t.parent().is(".ui-effects-wrapper"))return t.parent();
            var i = {width: t.outerWidth(!0), height: t.outerHeight(!0), "float": t.css("float")}, s = e("<div></div>").addClass("ui-effects-wrapper").css({fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0}), a = {width: t.width(), height: t.height()}, n = document.activeElement;
            try {
                n.id
            } catch (r) {
                n = document.body
            }
            return t.wrap(s), (t[0] === n || e.contains(t[0], n)) && e(n).focus(), s = t.parent(), "static" === t.css("position") ? (s.css({position: "relative"}), t.css({position: "relative"})) : (e.extend(i, {position: t.css("position"), zIndex: t.css("z-index")}), e.each(["top", "left", "bottom", "right"], function (e, s) {
                i[s] = t.css(s), isNaN(parseInt(i[s], 10)) && (i[s] = "auto")
            }), t.css({position: "relative", top: 0, left: 0, right: "auto", bottom: "auto"})), t.css(a), s.css(i).show()
        }, removeWrapper: function (t) {
            var i = document.activeElement;
            return t.parent().is(".ui-effects-wrapper") && (t.parent().replaceWith(t), (t[0] === i || e.contains(t[0], i)) && e(i).focus()), t
        }, setTransition: function (t, i, s, a) {
            return a = a || {}, e.each(i, function (e, i) {
                var n = t.cssUnit(i);
                n[0] > 0 && (a[i] = n[0] * s + n[1])
            }), a
        }}), e.fn.extend({effect: function () {
            function t(t) {
                function s() {
                    e.isFunction(n) && n.call(a[0]), e.isFunction(t) && t()
                }

                var a = e(this), n = i.complete, o = i.mode;
                (a.is(":hidden") ? "hide" === o : "show" === o) ? (a[o](), s()) : r.call(a[0], i, s)
            }

            var i = s.apply(this, arguments), a = i.mode, n = i.queue, r = e.effects.effect[i.effect];
            return e.fx.off || !r ? a ? this[a](i.duration, i.complete) : this.each(function () {
                i.complete && i.complete.call(this)
            }) : n === !1 ? this.each(t) : this.queue(n || "fx", t)
        }, show: function (e) {
            return function (t) {
                if (a(t))return e.apply(this, arguments);
                var i = s.apply(this, arguments);
                return i.mode = "show", this.effect.call(this, i)
            }
        }(e.fn.show), hide: function (e) {
            return function (t) {
                if (a(t))return e.apply(this, arguments);
                var i = s.apply(this, arguments);
                return i.mode = "hide", this.effect.call(this, i)
            }
        }(e.fn.hide), toggle: function (e) {
            return function (t) {
                if (a(t) || "boolean" == typeof t)return e.apply(this, arguments);
                var i = s.apply(this, arguments);
                return i.mode = "toggle", this.effect.call(this, i)
            }
        }(e.fn.toggle), cssUnit: function (t) {
            var i = this.css(t), s = [];
            return e.each(["em", "px", "%", "pt"], function (e, t) {
                i.indexOf(t) > 0 && (s = [parseFloat(i), t])
            }), s
        }})
    }(), function () {
        var t = {};
        e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, i) {
            t[i] = function (t) {
                return Math.pow(t, e + 2)
            }
        }), e.extend(t, {Sine: function (e) {
            return 1 - Math.cos(e * Math.PI / 2)
        }, Circ: function (e) {
            return 1 - Math.sqrt(1 - e * e)
        }, Elastic: function (e) {
            return 0 === e || 1 === e ? e : -Math.pow(2, 8 * (e - 1)) * Math.sin((80 * (e - 1) - 7.5) * Math.PI / 15)
        }, Back: function (e) {
            return e * e * (3 * e - 2)
        }, Bounce: function (e) {
            for (var t, i = 4; ((t = Math.pow(2, --i)) - 1) / 11 > e;);
            return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
        }}), e.each(t, function (t, i) {
            e.easing["easeIn" + t] = i, e.easing["easeOut" + t] = function (e) {
                return 1 - i(1 - e)
            }, e.easing["easeInOut" + t] = function (e) {
                return.5 > e ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2
            }
        })
    }()
})(jQuery);
(function (e) {
    var t = /up|down|vertical/, i = /up|left|vertical|horizontal/;
    e.effects.effect.blind = function (a, s) {
        var n, r, o, l = e(this), h = ["position", "top", "bottom", "left", "right", "height", "width"], u = e.effects.setMode(l, a.mode || "hide"), d = a.direction || "up", c = t.test(d), p = c ? "height" : "width", f = c ? "top" : "left", m = i.test(d), g = {}, v = "show" === u;
        l.parent().is(".ui-effects-wrapper") ? e.effects.save(l.parent(), h) : e.effects.save(l, h), l.show(), n = e.effects.createWrapper(l).css({overflow: "hidden"}), r = n[p](), o = parseFloat(n.css(f)) || 0, g[p] = v ? r : 0, m || (l.css(c ? "bottom" : "right", 0).css(c ? "top" : "left", "auto").css({position: "absolute"}), g[f] = v ? o : r + o), v && (n.css(p, 0), m || n.css(f, o + r)), n.animate(g, {duration: a.duration, easing: a.easing, queue: !1, complete: function () {
            "hide" === u && l.hide(), e.effects.restore(l, h), e.effects.removeWrapper(l), s()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.bounce = function (t, i) {
        var a, s, n, r = e(this), o = ["position", "top", "bottom", "left", "right", "height", "width"], l = e.effects.setMode(r, t.mode || "effect"), h = "hide" === l, u = "show" === l, d = t.direction || "up", c = t.distance, p = t.times || 5, f = 2 * p + (u || h ? 1 : 0), m = t.duration / f, g = t.easing, v = "up" === d || "down" === d ? "top" : "left", y = "up" === d || "left" === d, b = r.queue(), _ = b.length;
        for ((u || h) && o.push("opacity"), e.effects.save(r, o), r.show(), e.effects.createWrapper(r), c || (c = r["top" === v ? "outerHeight" : "outerWidth"]() / 3), u && (n = {opacity: 1}, n[v] = 0, r.css("opacity", 0).css(v, y ? 2 * -c : 2 * c).animate(n, m, g)), h && (c /= Math.pow(2, p - 1)), n = {}, n[v] = 0, a = 0; p > a; a++)s = {}, s[v] = (y ? "-=" : "+=") + c, r.animate(s, m, g).animate(n, m, g), c = h ? 2 * c : c / 2;
        h && (s = {opacity: 0}, s[v] = (y ? "-=" : "+=") + c, r.animate(s, m, g)), r.queue(function () {
            h && r.hide(), e.effects.restore(r, o), e.effects.removeWrapper(r), i()
        }), _ > 1 && b.splice.apply(b, [1, 0].concat(b.splice(_, f + 1))), r.dequeue()
    }
})(jQuery);
(function (e) {
    e.effects.effect.clip = function (t, i) {
        var a, s, n, r = e(this), o = ["position", "top", "bottom", "left", "right", "height", "width"], l = e.effects.setMode(r, t.mode || "hide"), h = "show" === l, u = t.direction || "vertical", d = "vertical" === u, c = d ? "height" : "width", p = d ? "top" : "left", f = {};
        e.effects.save(r, o), r.show(), a = e.effects.createWrapper(r).css({overflow: "hidden"}), s = "IMG" === r[0].tagName ? a : r, n = s[c](), h && (s.css(c, 0), s.css(p, n / 2)), f[c] = h ? n : 0, f[p] = h ? 0 : n / 2, s.animate(f, {queue: !1, duration: t.duration, easing: t.easing, complete: function () {
            h || r.hide(), e.effects.restore(r, o), e.effects.removeWrapper(r), i()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.drop = function (t, i) {
        var a, s = e(this), n = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"], r = e.effects.setMode(s, t.mode || "hide"), o = "show" === r, l = t.direction || "left", h = "up" === l || "down" === l ? "top" : "left", u = "up" === l || "left" === l ? "pos" : "neg", d = {opacity: o ? 1 : 0};
        e.effects.save(s, n), s.show(), e.effects.createWrapper(s), a = t.distance || s["top" === h ? "outerHeight" : "outerWidth"](!0) / 2, o && s.css("opacity", 0).css(h, "pos" === u ? -a : a), d[h] = (o ? "pos" === u ? "+=" : "-=" : "pos" === u ? "-=" : "+=") + a, s.animate(d, {queue: !1, duration: t.duration, easing: t.easing, complete: function () {
            "hide" === r && s.hide(), e.effects.restore(s, n), e.effects.removeWrapper(s), i()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.explode = function (t, i) {
        function s() {
            b.push(this), b.length === d * c && a()
        }

        function a() {
            p.css({visibility: "visible"}), e(b).remove(), m || p.hide(), i()
        }

        var n, r, o, l, h, u, d = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3, c = d, p = e(this), f = e.effects.setMode(p, t.mode || "hide"), m = "show" === f, g = p.show().css("visibility", "hidden").offset(), v = Math.ceil(p.outerWidth() / c), y = Math.ceil(p.outerHeight() / d), b = [];
        for (n = 0; d > n; n++)for (l = g.top + n * y, u = n - (d - 1) / 2, r = 0; c > r; r++)o = g.left + r * v, h = r - (c - 1) / 2, p.clone().appendTo("body").wrap("<div></div>").css({position: "absolute", visibility: "visible", left: -r * v, top: -n * y}).parent().addClass("ui-effects-explode").css({position: "absolute", overflow: "hidden", width: v, height: y, left: o + (m ? h * v : 0), top: l + (m ? u * y : 0), opacity: m ? 0 : 1}).animate({left: o + (m ? 0 : h * v), top: l + (m ? 0 : u * y), opacity: m ? 1 : 0}, t.duration || 500, t.easing, s)
    }
})(jQuery);
(function (e) {
    e.effects.effect.fade = function (t, i) {
        var s = e(this), a = e.effects.setMode(s, t.mode || "toggle");
        s.animate({opacity: a}, {queue: !1, duration: t.duration, easing: t.easing, complete: i})
    }
})(jQuery);
(function (e) {
    e.effects.effect.fold = function (t, i) {
        var s, a, n = e(this), r = ["position", "top", "bottom", "left", "right", "height", "width"], o = e.effects.setMode(n, t.mode || "hide"), l = "show" === o, h = "hide" === o, u = t.size || 15, d = /([0-9]+)%/.exec(u), c = !!t.horizFirst, p = l !== c, f = p ? ["width", "height"] : ["height", "width"], m = t.duration / 2, g = {}, v = {};
        e.effects.save(n, r), n.show(), s = e.effects.createWrapper(n).css({overflow: "hidden"}), a = p ? [s.width(), s.height()] : [s.height(), s.width()], d && (u = parseInt(d[1], 10) / 100 * a[h ? 0 : 1]), l && s.css(c ? {height: 0, width: u} : {height: u, width: 0}), g[f[0]] = l ? a[0] : u, v[f[1]] = l ? a[1] : 0, s.animate(g, m, t.easing).animate(v, m, t.easing, function () {
            h && n.hide(), e.effects.restore(n, r), e.effects.removeWrapper(n), i()
        })
    }
})(jQuery);
(function (e) {
    e.effects.effect.highlight = function (t, i) {
        var s = e(this), a = ["backgroundImage", "backgroundColor", "opacity"], n = e.effects.setMode(s, t.mode || "show"), r = {backgroundColor: s.css("backgroundColor")};
        "hide" === n && (r.opacity = 0), e.effects.save(s, a), s.show().css({backgroundImage: "none", backgroundColor: t.color || "#ffff99"}).animate(r, {queue: !1, duration: t.duration, easing: t.easing, complete: function () {
            "hide" === n && s.hide(), e.effects.restore(s, a), i()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.pulsate = function (t, i) {
        var s, a = e(this), n = e.effects.setMode(a, t.mode || "show"), r = "show" === n, o = "hide" === n, l = r || "hide" === n, h = 2 * (t.times || 5) + (l ? 1 : 0), u = t.duration / h, d = 0, c = a.queue(), p = c.length;
        for ((r || !a.is(":visible")) && (a.css("opacity", 0).show(), d = 1), s = 1; h > s; s++)a.animate({opacity: d}, u, t.easing), d = 1 - d;
        a.animate({opacity: d}, u, t.easing), a.queue(function () {
            o && a.hide(), i()
        }), p > 1 && c.splice.apply(c, [1, 0].concat(c.splice(p, h + 1))), a.dequeue()
    }
})(jQuery);
(function (e) {
    e.effects.effect.puff = function (t, i) {
        var s = e(this), a = e.effects.setMode(s, t.mode || "hide"), n = "hide" === a, r = parseInt(t.percent, 10) || 150, o = r / 100, h = {height: s.height(), width: s.width(), outerHeight: s.outerHeight(), outerWidth: s.outerWidth()};
        e.extend(t, {effect: "scale", queue: !1, fade: !0, mode: a, complete: i, percent: n ? r : 100, from: n ? h : {height: h.height * o, width: h.width * o, outerHeight: h.outerHeight * o, outerWidth: h.outerWidth * o}}), s.effect(t)
    }, e.effects.effect.scale = function (t, i) {
        var s = e(this), a = e.extend(!0, {}, t), n = e.effects.setMode(s, t.mode || "effect"), r = parseInt(t.percent, 10) || (0 === parseInt(t.percent, 10) ? 0 : "hide" === n ? 0 : 100), o = t.direction || "both", h = t.origin, l = {height: s.height(), width: s.width(), outerHeight: s.outerHeight(), outerWidth: s.outerWidth()}, u = {y: "horizontal" !== o ? r / 100 : 1, x: "vertical" !== o ? r / 100 : 1};
        a.effect = "size", a.queue = !1, a.complete = i, "effect" !== n && (a.origin = h || ["middle", "center"], a.restore = !0), a.from = t.from || ("show" === n ? {height: 0, width: 0, outerHeight: 0, outerWidth: 0} : l), a.to = {height: l.height * u.y, width: l.width * u.x, outerHeight: l.outerHeight * u.y, outerWidth: l.outerWidth * u.x}, a.fade && ("show" === n && (a.from.opacity = 0, a.to.opacity = 1), "hide" === n && (a.from.opacity = 1, a.to.opacity = 0)), s.effect(a)
    }, e.effects.effect.size = function (t, i) {
        var s, a, n, r = e(this), o = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], h = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], l = ["width", "height", "overflow"], u = ["fontSize"], d = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], c = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], p = e.effects.setMode(r, t.mode || "effect"), f = t.restore || "effect" !== p, m = t.scale || "both", g = t.origin || ["middle", "center"], v = r.css("position"), y = f ? o : h, b = {height: 0, width: 0, outerHeight: 0, outerWidth: 0};
        "show" === p && r.show(), s = {height: r.height(), width: r.width(), outerHeight: r.outerHeight(), outerWidth: r.outerWidth()}, "toggle" === t.mode && "show" === p ? (r.from = t.to || b, r.to = t.from || s) : (r.from = t.from || ("show" === p ? b : s), r.to = t.to || ("hide" === p ? b : s)), n = {from: {y: r.from.height / s.height, x: r.from.width / s.width}, to: {y: r.to.height / s.height, x: r.to.width / s.width}}, ("box" === m || "both" === m) && (n.from.y !== n.to.y && (y = y.concat(d), r.from = e.effects.setTransition(r, d, n.from.y, r.from), r.to = e.effects.setTransition(r, d, n.to.y, r.to)), n.from.x !== n.to.x && (y = y.concat(c), r.from = e.effects.setTransition(r, c, n.from.x, r.from), r.to = e.effects.setTransition(r, c, n.to.x, r.to))), ("content" === m || "both" === m) && n.from.y !== n.to.y && (y = y.concat(u).concat(l), r.from = e.effects.setTransition(r, u, n.from.y, r.from), r.to = e.effects.setTransition(r, u, n.to.y, r.to)), e.effects.save(r, y), r.show(), e.effects.createWrapper(r), r.css("overflow", "hidden").css(r.from), g && (a = e.effects.getBaseline(g, s), r.from.top = (s.outerHeight - r.outerHeight()) * a.y, r.from.left = (s.outerWidth - r.outerWidth()) * a.x, r.to.top = (s.outerHeight - r.to.outerHeight) * a.y, r.to.left = (s.outerWidth - r.to.outerWidth) * a.x), r.css(r.from), ("content" === m || "both" === m) && (d = d.concat(["marginTop", "marginBottom"]).concat(u), c = c.concat(["marginLeft", "marginRight"]), l = o.concat(d).concat(c), r.find("*[width]").each(function () {
            var i = e(this), s = {height: i.height(), width: i.width(), outerHeight: i.outerHeight(), outerWidth: i.outerWidth()};
            f && e.effects.save(i, l), i.from = {height: s.height * n.from.y, width: s.width * n.from.x, outerHeight: s.outerHeight * n.from.y, outerWidth: s.outerWidth * n.from.x}, i.to = {height: s.height * n.to.y, width: s.width * n.to.x, outerHeight: s.height * n.to.y, outerWidth: s.width * n.to.x}, n.from.y !== n.to.y && (i.from = e.effects.setTransition(i, d, n.from.y, i.from), i.to = e.effects.setTransition(i, d, n.to.y, i.to)), n.from.x !== n.to.x && (i.from = e.effects.setTransition(i, c, n.from.x, i.from), i.to = e.effects.setTransition(i, c, n.to.x, i.to)), i.css(i.from), i.animate(i.to, t.duration, t.easing, function () {
                f && e.effects.restore(i, l)
            })
        })), r.animate(r.to, {queue: !1, duration: t.duration, easing: t.easing, complete: function () {
            0 === r.to.opacity && r.css("opacity", r.from.opacity), "hide" === p && r.hide(), e.effects.restore(r, y), f || ("static" === v ? r.css({position: "relative", top: r.to.top, left: r.to.left}) : e.each(["top", "left"], function (e, t) {
                r.css(t, function (t, i) {
                    var s = parseInt(i, 10), a = e ? r.to.left : r.to.top;
                    return"auto" === i ? a + "px" : s + a + "px"
                })
            })), e.effects.removeWrapper(r), i()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.shake = function (t, i) {
        var s, a = e(this), n = ["position", "top", "bottom", "left", "right", "height", "width"], r = e.effects.setMode(a, t.mode || "effect"), o = t.direction || "left", h = t.distance || 20, l = t.times || 3, u = 2 * l + 1, d = Math.round(t.duration / u), c = "up" === o || "down" === o ? "top" : "left", p = "up" === o || "left" === o, f = {}, m = {}, g = {}, v = a.queue(), y = v.length;
        for (e.effects.save(a, n), a.show(), e.effects.createWrapper(a), f[c] = (p ? "-=" : "+=") + h, m[c] = (p ? "+=" : "-=") + 2 * h, g[c] = (p ? "-=" : "+=") + 2 * h, a.animate(f, d, t.easing), s = 1; l > s; s++)a.animate(m, d, t.easing).animate(g, d, t.easing);
        a.animate(m, d, t.easing).animate(f, d / 2, t.easing).queue(function () {
            "hide" === r && a.hide(), e.effects.restore(a, n), e.effects.removeWrapper(a), i()
        }), y > 1 && v.splice.apply(v, [1, 0].concat(v.splice(y, u + 1))), a.dequeue()
    }
})(jQuery);
(function (e) {
    e.effects.effect.slide = function (t, i) {
        var s, a = e(this), n = ["position", "top", "bottom", "left", "right", "width", "height"], r = e.effects.setMode(a, t.mode || "show"), o = "show" === r, h = t.direction || "left", l = "up" === h || "down" === h ? "top" : "left", u = "up" === h || "left" === h, d = {};
        e.effects.save(a, n), a.show(), s = t.distance || a["top" === l ? "outerHeight" : "outerWidth"](!0), e.effects.createWrapper(a).css({overflow: "hidden"}), o && a.css(l, u ? isNaN(s) ? "-" + s : -s : s), d[l] = (o ? u ? "+=" : "-=" : u ? "-=" : "+=") + s, a.animate(d, {queue: !1, duration: t.duration, easing: t.easing, complete: function () {
            "hide" === r && a.hide(), e.effects.restore(a, n), e.effects.removeWrapper(a), i()
        }})
    }
})(jQuery);
(function (e) {
    e.effects.effect.transfer = function (t, i) {
        var s = e(this), a = e(t.to), n = "fixed" === a.css("position"), r = e("body"), o = n ? r.scrollTop() : 0, h = n ? r.scrollLeft() : 0, l = a.offset(), u = {top: l.top - o, left: l.left - h, height: a.innerHeight(), width: a.innerWidth()}, d = s.offset(), c = e("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(t.className).css({top: d.top - o, left: d.left - h, height: s.innerHeight(), width: s.innerWidth(), position: n ? "fixed" : "absolute"}).animate(u, t.duration, t.easing, function () {
            c.remove(), i()
        })
    }
})(jQuery);
/**
 * bootstrap.js v3.0.0 by @fat and @mdo
 * Copyright 2013 Twitter Inc.
 * http://www.apache.org/licenses/LICENSE-2.0
 */
if (!jQuery)throw new Error("Bootstrap requires jQuery");
+function (a) {
    "use strict";
    function b() {
        var a = document.createElement("bootstrap"), b = {WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend"};
        for (var c in b)if (void 0 !== a.style[c])return{end: b[c]}
    }

    a.fn.emulateTransitionEnd = function (b) {
        var c = !1, d = this;
        a(this).one(a.support.transition.end, function () {
            c = !0
        });
        var e = function () {
            c || a(d).trigger(a.support.transition.end)
        };
        return setTimeout(e, b), this
    }, a(function () {
        a.support.transition = b()
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = '[data-dismiss="alert"]', c = function (c) {
        a(c).on("click", b, this.close)
    };
    c.prototype.close = function (b) {
        function c() {
            f.trigger("closed.bs.alert").remove()
        }

        var d = a(this), e = d.attr("data-target");
        e || (e = d.attr("href"), e = e && e.replace(/.*(?=#[^\s]*$)/, ""));
        var f = a(e);
        b && b.preventDefault(), f.length || (f = d.hasClass("alert") ? d : d.parent()), f.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one(a.support.transition.end, c).emulateTransitionEnd(150) : c())
    };
    var d = a.fn.alert;
    a.fn.alert = function (b) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.alert");
            e || d.data("bs.alert", e = new c(this)), "string" == typeof b && e[b].call(d)
        })
    }, a.fn.alert.Constructor = c, a.fn.alert.noConflict = function () {
        return a.fn.alert = d, this
    }, a(document).on("click.bs.alert.data-api", b, c.prototype.close)
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (c, d) {
        this.$element = a(c), this.options = a.extend({}, b.DEFAULTS, d)
    };
    b.DEFAULTS = {loadingText: "loading..."}, b.prototype.setState = function (a) {
        var b = "disabled", c = this.$element, d = c.is("input") ? "val" : "html", e = c.data();
        a += "Text", e.resetText || c.data("resetText", c[d]()), c[d](e[a] || this.options[a]), setTimeout(function () {
            "loadingText" == a ? c.addClass(b).attr(b, b) : c.removeClass(b).removeAttr(b)
        }, 0)
    }, b.prototype.toggle = function () {
        var a = this.$element.closest('[data-toggle="buttons"]');
        if (a.length) {
            var b = this.$element.find("input").prop("checked", !this.$element.hasClass("active")).trigger("change");
            "radio" === b.prop("type") && a.find(".active").removeClass("active")
        }
        this.$element.toggleClass("active")
    };
    var c = a.fn.button;
    a.fn.button = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.button"), f = "object" == typeof c && c;
            e || d.data("bs.button", e = new b(this, f)), "toggle" == c ? e.toggle() : c && e.setState(c)
        })
    }, a.fn.button.Constructor = b, a.fn.button.noConflict = function () {
        return a.fn.button = c, this
    }, a(document).on("click.bs.button.data-api", "[data-toggle^=button]", function (b) {
        var c = a(b.target);
        c.hasClass("btn") || (c = c.closest(".btn")), c.button("toggle"), b.preventDefault()
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (b, c) {
        this.$element = a(b), this.$indicators = this.$element.find(".carousel-indicators"), this.options = c, this.paused = this.sliding = this.interval = this.$active = this.$items = null, "hover" == this.options.pause && this.$element.on("mouseenter", a.proxy(this.pause, this)).on("mouseleave", a.proxy(this.cycle, this))
    };
    b.DEFAULTS = {interval: 5e3, pause: "hover", wrap: !0}, b.prototype.cycle = function (b) {
        return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this
    }, b.prototype.getActiveIndex = function () {
        return this.$active = this.$element.find(".item.active"), this.$items = this.$active.parent().children(), this.$items.index(this.$active)
    }, b.prototype.to = function (b) {
        var c = this, d = this.getActiveIndex();
        return b > this.$items.length - 1 || 0 > b ? void 0 : this.sliding ? this.$element.one("slid", function () {
            c.to(b)
        }) : d == b ? this.pause().cycle() : this.slide(b > d ? "next" : "prev", a(this.$items[b]))
    }, b.prototype.pause = function (b) {
        return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition.end && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
    }, b.prototype.next = function () {
        return this.sliding ? void 0 : this.slide("next")
    }, b.prototype.prev = function () {
        return this.sliding ? void 0 : this.slide("prev")
    }, b.prototype.slide = function (b, c) {
        var d = this.$element.find(".item.active"), e = c || d[b](), f = this.interval, g = "next" == b ? "left" : "right", h = "next" == b ? "first" : "last", i = this;
        if (!e.length) {
            if (!this.options.wrap)return;
            e = this.$element.find(".item")[h]()
        }
        this.sliding = !0, f && this.pause();
        var j = a.Event("slide.bs.carousel", {relatedTarget: e[0], direction: g});
        if (!e.hasClass("active")) {
            if (this.$indicators.length && (this.$indicators.find(".active").removeClass("active"), this.$element.one("slid", function () {
                var b = a(i.$indicators.children()[i.getActiveIndex()]);
                b && b.addClass("active")
            })), a.support.transition && this.$element.hasClass("slide")) {
                if (this.$element.trigger(j), j.isDefaultPrevented())return;
                e.addClass(b), e[0].offsetWidth, d.addClass(g), e.addClass(g), d.one(a.support.transition.end,function () {
                    e.removeClass([b, g].join(" ")).addClass("active"), d.removeClass(["active", g].join(" ")), i.sliding = !1, setTimeout(function () {
                        i.$element.trigger("slid")
                    }, 0)
                }).emulateTransitionEnd(600)
            } else {
                if (this.$element.trigger(j), j.isDefaultPrevented())return;
                d.removeClass("active"), e.addClass("active"), this.sliding = !1, this.$element.trigger("slid")
            }
            return f && this.cycle(), this
        }
    };
    var c = a.fn.carousel;
    a.fn.carousel = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.carousel"), f = a.extend({}, b.DEFAULTS, d.data(), "object" == typeof c && c), g = "string" == typeof c ? c : f.slide;
            e || d.data("bs.carousel", e = new b(this, f)), "number" == typeof c ? e.to(c) : g ? e[g]() : f.interval && e.pause().cycle()
        })
    }, a.fn.carousel.Constructor = b, a.fn.carousel.noConflict = function () {
        return a.fn.carousel = c, this
    }, a(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", function (b) {
        var c, d = a(this), e = a(d.attr("data-target") || (c = d.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, "")), f = a.extend({}, e.data(), d.data()), g = d.attr("data-slide-to");
        g && (f.interval = !1), e.carousel(f), (g = d.attr("data-slide-to")) && e.data("bs.carousel").to(g), b.preventDefault()
    }), a(window).on("load", function () {
        a('[data-ride="carousel"]').each(function () {
            var b = a(this);
            b.carousel(b.data())
        })
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (c, d) {
        this.$element = a(c), this.options = a.extend({}, b.DEFAULTS, d), this.transitioning = null, this.options.parent && (this.$parent = a(this.options.parent)), this.options.toggle && this.toggle()
    };
    b.DEFAULTS = {toggle: !0}, b.prototype.dimension = function () {
        var a = this.$element.hasClass("width");
        return a ? "width" : "height"
    }, b.prototype.show = function () {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var b = a.Event("show.bs.collapse");
            if (this.$element.trigger(b), !b.isDefaultPrevented()) {
                var c = this.$parent && this.$parent.find("> .panel > .in");
                if (c && c.length) {
                    var d = c.data("bs.collapse");
                    if (d && d.transitioning)return;
                    c.collapse("hide"), d || c.data("bs.collapse", null)
                }
                var e = this.dimension();
                this.$element.removeClass("collapse").addClass("collapsing")[e](0), this.transitioning = 1;
                var f = function () {
                    this.$element.removeClass("collapsing").addClass("in")[e]("auto"), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
                };
                if (!a.support.transition)return f.call(this);
                var g = a.camelCase(["scroll", e].join("-"));
                this.$element.one(a.support.transition.end, a.proxy(f, this)).emulateTransitionEnd(350)[e](this.$element[0][g])
            }
        }
    }, b.prototype.hide = function () {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var b = a.Event("hide.bs.collapse");
            if (this.$element.trigger(b), !b.isDefaultPrevented()) {
                var c = this.dimension();
                this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"), this.transitioning = 1;
                var d = function () {
                    this.transitioning = 0, this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")
                };
                return a.support.transition ? (this.$element[c](0).one(a.support.transition.end, a.proxy(d, this)).emulateTransitionEnd(350), void 0) : d.call(this)
            }
        }
    }, b.prototype.toggle = function () {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    };
    var c = a.fn.collapse;
    a.fn.collapse = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.collapse"), f = a.extend({}, b.DEFAULTS, d.data(), "object" == typeof c && c);
            e || d.data("bs.collapse", e = new b(this, f)), "string" == typeof c && e[c]()
        })
    }, a.fn.collapse.Constructor = b, a.fn.collapse.noConflict = function () {
        return a.fn.collapse = c, this
    }, a(document).on("click.bs.collapse.data-api", "[data-toggle=collapse]", function (b) {
        var c, d = a(this), e = d.attr("data-target") || b.preventDefault() || (c = d.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, ""), f = a(e), g = f.data("bs.collapse"), h = g ? "toggle" : d.data(), i = d.attr("data-parent"), j = i && a(i);
        g && g.transitioning || (j && j.find('[data-toggle=collapse][data-parent="' + i + '"]').not(d).addClass("collapsed"), d[f.hasClass("in") ? "addClass" : "removeClass"]("collapsed")), f.collapse(h)
    })
}(window.jQuery), +function (a) {
    "use strict";
    function b() {
        a(d).remove(), a(e).each(function (b) {
            var d = c(a(this));
            d.hasClass("open") && (d.trigger(b = a.Event("hide.bs.dropdown")), b.isDefaultPrevented() || d.removeClass("open").trigger("hidden.bs.dropdown"))
        })
    }

    function c(b) {
        var c = b.attr("data-target");
        c || (c = b.attr("href"), c = c && /#/.test(c) && c.replace(/.*(?=#[^\s]*$)/, ""));
        var d = c && a(c);
        return d && d.length ? d : b.parent()
    }

    var d = ".dropdown-backdrop", e = "[data-toggle=dropdown]", f = function (b) {
        a(b).on("click.bs.dropdown", this.toggle)
    };
    f.prototype.toggle = function (d) {
        var e = a(this);
        if (!e.is(".disabled, :disabled")) {
            var f = c(e), g = f.hasClass("open");
            if (b(), !g) {
                if ("ontouchstart"in document.documentElement && !f.closest(".navbar-nav").length && a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click", b), f.trigger(d = a.Event("show.bs.dropdown")), d.isDefaultPrevented())return;
                f.toggleClass("open").trigger("shown.bs.dropdown"), e.focus()
            }
            return!1
        }
    }, f.prototype.keydown = function (b) {
        if (/(38|40|27)/.test(b.keyCode)) {
            var d = a(this);
            if (b.preventDefault(), b.stopPropagation(), !d.is(".disabled, :disabled")) {
                var f = c(d), g = f.hasClass("open");
                if (!g || g && 27 == b.keyCode)return 27 == b.which && f.find(e).focus(), d.click();
                var h = a("[role=menu] li:not(.divider):visible a", f);
                if (h.length) {
                    var i = h.index(h.filter(":focus"));
                    38 == b.keyCode && i > 0 && i--, 40 == b.keyCode && i < h.length - 1 && i++, ~i || (i = 0), h.eq(i).focus()
                }
            }
        }
    };
    var g = a.fn.dropdown;
    a.fn.dropdown = function (b) {
        return this.each(function () {
            var c = a(this), d = c.data("dropdown");
            d || c.data("dropdown", d = new f(this)), "string" == typeof b && d[b].call(c)
        })
    }, a.fn.dropdown.Constructor = f, a.fn.dropdown.noConflict = function () {
        return a.fn.dropdown = g, this
    }, a(document).on("click.bs.dropdown.data-api", b).on("click.bs.dropdown.data-api", ".dropdown form",function (a) {
        a.stopPropagation()
    }).on("click.bs.dropdown.data-api", e, f.prototype.toggle).on("keydown.bs.dropdown.data-api", e + ", [role=menu]", f.prototype.keydown)
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (b, c) {
        this.options = c, this.$element = a(b), this.$backdrop = this.isShown = null, this.options.remote && this.$element.load(this.options.remote)
    };
    b.DEFAULTS = {backdrop: !0, keyboard: !0, show: !0}, b.prototype.toggle = function (a) {
        return this[this.isShown ? "hide" : "show"](a)
    }, b.prototype.show = function (b) {
        var c = this, d = a.Event("show.bs.modal", {relatedTarget: b});
        this.$element.trigger(d), this.isShown || d.isDefaultPrevented() || (this.isShown = !0, this.escape(), this.$element.on("click.dismiss.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.backdrop(function () {
            var d = a.support.transition && c.$element.hasClass("fade");
            c.$element.parent().length || c.$element.appendTo(document.body), c.$element.show(), d && c.$element[0].offsetWidth, c.$element.addClass("in").attr("aria-hidden", !1), c.enforceFocus();
            var e = a.Event("shown.bs.modal", {relatedTarget: b});
            d ? c.$element.find(".modal-dialog").one(a.support.transition.end,function () {
                c.$element.focus().trigger(e)
            }).emulateTransitionEnd(300) : c.$element.focus().trigger(e)
        }))
    }, b.prototype.hide = function (b) {
        b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one(a.support.transition.end, a.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal())
    }, b.prototype.enforceFocus = function () {
        a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function (a) {
            this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.focus()
        }, this))
    }, b.prototype.escape = function () {
        this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", a.proxy(function (a) {
            27 == a.which && this.hide()
        }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal")
    }, b.prototype.hideModal = function () {
        var a = this;
        this.$element.hide(), this.backdrop(function () {
            a.removeBackdrop(), a.$element.trigger("hidden.bs.modal")
        })
    }, b.prototype.removeBackdrop = function () {
        this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
    }, b.prototype.backdrop = function (b) {
        var c = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var d = a.support.transition && c;
            if (this.$backdrop = a('<div class="modal-backdrop ' + c + '" />').appendTo(document.body), this.$element.on("click.dismiss.modal", a.proxy(function (a) {
                a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this))
            }, this)), d && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b)return;
            d ? this.$backdrop.one(a.support.transition.end, b).emulateTransitionEnd(150) : b()
        } else!this.isShown && this.$backdrop ? (this.$backdrop.removeClass("in"), a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(a.support.transition.end, b).emulateTransitionEnd(150) : b()) : b && b()
    };
    var c = a.fn.modal;
    a.fn.modal = function (c, d) {
        return this.each(function () {
            var e = a(this), f = e.data("bs.modal"), g = a.extend({}, b.DEFAULTS, e.data(), "object" == typeof c && c);
            f || e.data("bs.modal", f = new b(this, g)), "string" == typeof c ? f[c](d) : g.show && f.show(d)
        })
    }, a.fn.modal.Constructor = b, a.fn.modal.noConflict = function () {
        return a.fn.modal = c, this
    }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (b) {
        var c = a(this), d = c.attr("href"), e = a(c.attr("data-target") || d && d.replace(/.*(?=#[^\s]+$)/, "")), f = e.data("modal") ? "toggle" : a.extend({remote: !/#/.test(d) && d}, e.data(), c.data());
        b.preventDefault(), e.modal(f, this).one("hide", function () {
            c.is(":visible") && c.focus()
        })
    }), a(document).on("show.bs.modal", ".modal",function () {
        a(document.body).addClass("modal-open")
    }).on("hidden.bs.modal", ".modal", function () {
        a(document.body).removeClass("modal-open")
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (a, b) {
        this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null, this.init("tooltip", a, b)
    };
    b.DEFAULTS = {animation: !0, placement: "top", selector: !1, template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1}, b.prototype.init = function (b, c, d) {
        this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d);
        for (var e = this.options.trigger.split(" "), f = e.length; f--;) {
            var g = e[f];
            if ("click" == g)this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this)); else if ("manual" != g) {
                var h = "hover" == g ? "mouseenter" : "focus", i = "hover" == g ? "mouseleave" : "blur";
                this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this))
            }
        }
        this.options.selector ? this._options = a.extend({}, this.options, {trigger: "manual", selector: ""}) : this.fixTitle()
    }, b.prototype.getDefaults = function () {
        return b.DEFAULTS
    }, b.prototype.getOptions = function (b) {
        return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = {show: b.delay, hide: b.delay}), b
    }, b.prototype.getDelegateOptions = function () {
        var b = {}, c = this.getDefaults();
        return this._options && a.each(this._options, function (a, d) {
            c[a] != d && (b[a] = d)
        }), b
    }, b.prototype.enter = function (b) {
        var c = b instanceof this.constructor ? b : a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        return clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? (c.timeout = setTimeout(function () {
            "in" == c.hoverState && c.show()
        }, c.options.delay.show), void 0) : c.show()
    }, b.prototype.leave = function (b) {
        var c = b instanceof this.constructor ? b : a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        return clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? (c.timeout = setTimeout(function () {
            "out" == c.hoverState && c.hide()
        }, c.options.delay.hide), void 0) : c.hide()
    }, b.prototype.show = function () {
        var b = a.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            if (this.$element.trigger(b), b.isDefaultPrevented())return;
            var c = this.tip();
            this.setContent(), this.options.animation && c.addClass("fade");
            var d = "function" == typeof this.options.placement ? this.options.placement.call(this, c[0], this.$element[0]) : this.options.placement, e = /\s?auto?\s?/i, f = e.test(d);
            f && (d = d.replace(e, "") || "top"), c.detach().css({top: 0, left: 0, display: "block"}).addClass(d), this.options.container ? c.appendTo(this.options.container) : c.insertAfter(this.$element);
            var g = this.getPosition(), h = c[0].offsetWidth, i = c[0].offsetHeight;
            if (f) {
                var j = this.$element.parent(), k = d, l = document.documentElement.scrollTop || document.body.scrollTop, m = "body" == this.options.container ? window.innerWidth : j.outerWidth(), n = "body" == this.options.container ? window.innerHeight : j.outerHeight(), o = "body" == this.options.container ? 0 : j.offset().left;
                d = "bottom" == d && g.top + g.height + i - l > n ? "top" : "top" == d && g.top - l - i < 0 ? "bottom" : "right" == d && g.right + h > m ? "left" : "left" == d && g.left - h < o ? "right" : d, c.removeClass(k).addClass(d)
            }
            var p = this.getCalculatedOffset(d, g, h, i);
            this.applyPlacement(p, d), this.$element.trigger("shown.bs." + this.type)
        }
    }, b.prototype.applyPlacement = function (a, b) {
        var c, d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css("margin-top"), 10), h = parseInt(d.css("margin-left"), 10);
        isNaN(g) && (g = 0), isNaN(h) && (h = 0), a.top = a.top + g, a.left = a.left + h, d.offset(a).addClass("in");
        var i = d[0].offsetWidth, j = d[0].offsetHeight;
        if ("top" == b && j != f && (c = !0, a.top = a.top + f - j), /bottom|top/.test(b)) {
            var k = 0;
            a.left < 0 && (k = -2 * a.left, a.left = 0, d.offset(a), i = d[0].offsetWidth, j = d[0].offsetHeight), this.replaceArrow(k - e + i, i, "left")
        } else this.replaceArrow(j - f, j, "top");
        c && d.offset(a)
    }, b.prototype.replaceArrow = function (a, b, c) {
        this.arrow().css(c, a ? 50 * (1 - a / b) + "%" : "")
    }, b.prototype.setContent = function () {
        var a = this.tip(), b = this.getTitle();
        a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right")
    }, b.prototype.hide = function () {
        function b() {
            "in" != c.hoverState && d.detach()
        }

        var c = this, d = this.tip(), e = a.Event("hide.bs." + this.type);
        return this.$element.trigger(e), e.isDefaultPrevented() ? void 0 : (d.removeClass("in"), a.support.transition && this.$tip.hasClass("fade") ? d.one(a.support.transition.end, b).emulateTransitionEnd(150) : b(), this.$element.trigger("hidden.bs." + this.type), this)
    }, b.prototype.fixTitle = function () {
        var a = this.$element;
        (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "")
    }, b.prototype.hasContent = function () {
        return this.getTitle()
    }, b.prototype.getPosition = function () {
        var b = this.$element[0];
        return a.extend({}, "function" == typeof b.getBoundingClientRect ? b.getBoundingClientRect() : {width: b.offsetWidth, height: b.offsetHeight}, this.$element.offset())
    }, b.prototype.getCalculatedOffset = function (a, b, c, d) {
        return"bottom" == a ? {top: b.top + b.height, left: b.left + b.width / 2 - c / 2} : "top" == a ? {top: b.top - d, left: b.left + b.width / 2 - c / 2} : "left" == a ? {top: b.top + b.height / 2 - d / 2, left: b.left - c} : {top: b.top + b.height / 2 - d / 2, left: b.left + b.width}
    }, b.prototype.getTitle = function () {
        var a, b = this.$element, c = this.options;
        return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title)
    }, b.prototype.tip = function () {
        return this.$tip = this.$tip || a(this.options.template)
    }, b.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
    }, b.prototype.validate = function () {
        this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null)
    }, b.prototype.enable = function () {
        this.enabled = !0
    }, b.prototype.disable = function () {
        this.enabled = !1
    }, b.prototype.toggleEnabled = function () {
        this.enabled = !this.enabled
    }, b.prototype.toggle = function (b) {
        var c = b ? a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type) : this;
        c.tip().hasClass("in") ? c.leave(c) : c.enter(c)
    }, b.prototype.destroy = function () {
        this.hide().$element.off("." + this.type).removeData("bs." + this.type)
    };
    var c = a.fn.tooltip;
    a.fn.tooltip = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.tooltip"), f = "object" == typeof c && c;
            e || d.data("bs.tooltip", e = new b(this, f)), "string" == typeof c && e[c]()
        })
    }, a.fn.tooltip.Constructor = b, a.fn.tooltip.noConflict = function () {
        return a.fn.tooltip = c, this
    }
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (a, b) {
        this.init("popover", a, b)
    };
    if (!a.fn.tooltip)throw new Error("Popover requires tooltip.js");
    b.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, {placement: "right", trigger: "click", content: "", template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}), b.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), b.prototype.constructor = b, b.prototype.getDefaults = function () {
        return b.DEFAULTS
    }, b.prototype.setContent = function () {
        var a = this.tip(), b = this.getTitle(), c = this.getContent();
        a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content")[this.options.html ? "html" : "text"](c), a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide()
    }, b.prototype.hasContent = function () {
        return this.getTitle() || this.getContent()
    }, b.prototype.getContent = function () {
        var a = this.$element, b = this.options;
        return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content)
    }, b.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find(".arrow")
    }, b.prototype.tip = function () {
        return this.$tip || (this.$tip = a(this.options.template)), this.$tip
    };
    var c = a.fn.popover;
    a.fn.popover = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.popover"), f = "object" == typeof c && c;
            e || d.data("bs.popover", e = new b(this, f)), "string" == typeof c && e[c]()
        })
    }, a.fn.popover.Constructor = b, a.fn.popover.noConflict = function () {
        return a.fn.popover = c, this
    }
}(window.jQuery), +function (a) {
    "use strict";
    function b(c, d) {
        var e, f = a.proxy(this.process, this);
        this.$element = a(c).is("body") ? a(window) : a(c), this.$body = a("body"), this.$scrollElement = this.$element.on("scroll.bs.scroll-spy.data-api", f), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || (e = a(c).attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a", this.offsets = a([]), this.targets = a([]), this.activeTarget = null, this.refresh(), this.process()
    }

    b.DEFAULTS = {offset: 10}, b.prototype.refresh = function () {
        var b = this.$element[0] == window ? "offset" : "position";
        this.offsets = a([]), this.targets = a([]);
        var c = this;
        this.$body.find(this.selector).map(function () {
            var d = a(this), e = d.data("target") || d.attr("href"), f = /^#\w/.test(e) && a(e);
            return f && f.length && [
                [f[b]().top + (!a.isWindow(c.$scrollElement.get(0)) && c.$scrollElement.scrollTop()), e]
            ] || null
        }).sort(function (a, b) {
            return a[0] - b[0]
        }).each(function () {
            c.offsets.push(this[0]), c.targets.push(this[1])
        })
    }, b.prototype.process = function () {
        var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight, d = c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget;
        if (b >= d)return g != (a = f.last()[0]) && this.activate(a);
        for (a = e.length; a--;)g != f[a] && b >= e[a] && (!e[a + 1] || b <= e[a + 1]) && this.activate(f[a])
    }, b.prototype.activate = function (b) {
        this.activeTarget = b, a(this.selector).parents(".active").removeClass("active");
        var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents("li").addClass("active");
        d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate")
    };
    var c = a.fn.scrollspy;
    a.fn.scrollspy = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.scrollspy"), f = "object" == typeof c && c;
            e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]()
        })
    }, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () {
        return a.fn.scrollspy = c, this
    }, a(window).on("load", function () {
        a('[data-spy="scroll"]').each(function () {
            var b = a(this);
            b.scrollspy(b.data())
        })
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (b) {
        this.element = a(b)
    };
    b.prototype.show = function () {
        var b = this.element, c = b.closest("ul:not(.dropdown-menu)"), d = b.attr("data-target");
        if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) {
            var e = c.find(".active:last a")[0], f = a.Event("show.bs.tab", {relatedTarget: e});
            if (b.trigger(f), !f.isDefaultPrevented()) {
                var g = a(d);
                this.activate(b.parent("li"), c), this.activate(g, g.parent(), function () {
                    b.trigger({type: "shown.bs.tab", relatedTarget: e})
                })
            }
        }
    }, b.prototype.activate = function (b, c, d) {
        function e() {
            f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"), b.addClass("active"), g ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), b.parent(".dropdown-menu") && b.closest("li.dropdown").addClass("active"), d && d()
        }

        var f = c.find("> .active"), g = d && a.support.transition && f.hasClass("fade");
        g ? f.one(a.support.transition.end, e).emulateTransitionEnd(150) : e(), f.removeClass("in")
    };
    var c = a.fn.tab;
    a.fn.tab = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.tab");
            e || d.data("bs.tab", e = new b(this)), "string" == typeof c && e[c]()
        })
    }, a.fn.tab.Constructor = b, a.fn.tab.noConflict = function () {
        return a.fn.tab = c, this
    }, a(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function (b) {
        b.preventDefault(), a(this).tab("show")
    })
}(window.jQuery), +function (a) {
    "use strict";
    var b = function (c, d) {
        this.options = a.extend({}, b.DEFAULTS, d), this.$window = a(window).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(c), this.affixed = this.unpin = null, this.checkPosition()
    };
    b.RESET = "affix affix-top affix-bottom", b.DEFAULTS = {offset: 0}, b.prototype.checkPositionWithEventLoop = function () {
        setTimeout(a.proxy(this.checkPosition, this), 1)
    }, b.prototype.checkPosition = function () {
        if (this.$element.is(":visible")) {
            var c = a(document).height(), d = this.$window.scrollTop(), e = this.$element.offset(), f = this.options.offset, g = f.top, h = f.bottom;
            "object" != typeof f && (h = g = f), "function" == typeof g && (g = f.top()), "function" == typeof h && (h = f.bottom());
            var i = null != this.unpin && d + this.unpin <= e.top ? !1 : null != h && e.top + this.$element.height() >= c - h ? "bottom" : null != g && g >= d ? "top" : !1;
            this.affixed !== i && (this.unpin && this.$element.css("top", ""), this.affixed = i, this.unpin = "bottom" == i ? e.top - d : null, this.$element.removeClass(b.RESET).addClass("affix" + (i ? "-" + i : "")), "bottom" == i && this.$element.offset({top: document.body.offsetHeight - h - this.$element.height()}))
        }
    };
    var c = a.fn.affix;
    a.fn.affix = function (c) {
        return this.each(function () {
            var d = a(this), e = d.data("bs.affix"), f = "object" == typeof c && c;
            e || d.data("bs.affix", e = new b(this, f)), "string" == typeof c && e[c]()
        })
    }, a.fn.affix.Constructor = b, a.fn.affix.noConflict = function () {
        return a.fn.affix = c, this
    }, a(window).on("load", function () {
        a('[data-spy="affix"]').each(function () {
            var b = a(this), c = b.data();
            c.offset = c.offset || {}, c.offsetBottom && (c.offset.bottom = c.offsetBottom), c.offsetTop && (c.offset.top = c.offsetTop), b.affix(c)
        })
    })
}(window.jQuery);
/*
 * Project: Twitter Bootstrap Hover Dropdown
 * Author: Cameron Spear
 * Contributors: Mattia Larentis
 *
 * Dependencies?: Twitter Bootstrap's Dropdown plugin
 *
 * A simple plugin to enable twitter bootstrap dropdowns to active on hover and provide a nice user experience.
 *
 * No license, do what you want. I'd love credit or a shoutout, though.
 *
 * http://cameronspear.com/blog/twitter-bootstrap-dropdown-on-hover-plugin/
 */
(function (e, t, n) {
    var r = e();
    e.fn.dropdownHover = function (n) {
        r = r.add(this.parent());
        return this.each(function () {
            var i = e(this), s = i.parent(), o = {delay: 500, instantlyCloseOthers: !0}, u = {delay: e(this).data("delay"), instantlyCloseOthers: e(this).data("close-others")}, a = e.extend(!0, {}, o, n, u), f;
            s.hover(function (e) {
                if (!s.hasClass("open") && !i.is(e.target))return!0;
                a.instantlyCloseOthers === !0 && r.removeClass("open");
                t.clearTimeout(f);
                s.addClass("open")
            }, function () {
                f = t.setTimeout(function () {
                    s.removeClass("open")
                }, a.delay)
            });
            i.hover(function () {
                a.instantlyCloseOthers === !0 && r.removeClass("open");
                t.clearTimeout(f);
                s.addClass("open")
            });
            s.find(".dropdown-submenu").each(function () {
                var n = e(this), r;
                n.hover(function () {
                    t.clearTimeout(r);
                    n.children(".dropdown-menu").show();
                    n.siblings().children(".dropdown-menu").hide()
                }, function () {
                    var e = n.children(".dropdown-menu");
                    r = t.setTimeout(function () {
                        e.hide()
                    }, a.delay)
                })
            })
        })
    };
    e(document).ready(function () {
        e('[data-hover="dropdown"]').dropdownHover()
    })
})(jQuery, this);
/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.1
 *
 */
(function (f) {
    jQuery.fn.extend({slimScroll: function (h) {
        var a = f.extend({width: "auto", height: "250px", size: "7px", color: "#000", position: "right", distance: "1px", start: "top", opacity: 0.4, alwaysVisible: !1, disableFadeOut: !1, railVisible: !1, railColor: "#333", railOpacity: 0.2, railDraggable: !0, railClass: "slimScrollRail", barClass: "slimScrollBar", wrapperClass: "slimScrollDiv", allowPageScroll: !1, wheelStep: 20, touchScrollStep: 200, borderRadius: "7px", railBorderRadius: "7px"}, h);
        this.each(function () {
            function r(d) {
                if (s) {
                    d = d ||
                        window.event;
                    var c = 0;
                    d.wheelDelta && (c = -d.wheelDelta / 120);
                    d.detail && (c = d.detail / 3);
                    f(d.target || d.srcTarget || d.srcElement).closest("." + a.wrapperClass).is(b.parent()) && m(c, !0);
                    d.preventDefault && !k && d.preventDefault();
                    k || (d.returnValue = !1)
                }
            }

            function m(d, f, h) {
                k = !1;
                var e = d, g = b.outerHeight() - c.outerHeight();
                f && (e = parseInt(c.css("top")) + d * parseInt(a.wheelStep) / 100 * c.outerHeight(), e = Math.min(Math.max(e, 0), g), e = 0 < d ? Math.ceil(e) : Math.floor(e), c.css({top: e + "px"}));
                l = parseInt(c.css("top")) / (b.outerHeight() - c.outerHeight());
                e = l * (b[0].scrollHeight - b.outerHeight());
                h && (e = d, d = e / b[0].scrollHeight * b.outerHeight(), d = Math.min(Math.max(d, 0), g), c.css({top: d + "px"}));
                b.scrollTop(e);
                b.trigger("slimscrolling", ~~e);
                v();
                p()
            }

            function C() {
                window.addEventListener ? (this.addEventListener("DOMMouseScroll", r, !1), this.addEventListener("mousewheel", r, !1), this.addEventListener("MozMousePixelScroll", r, !1)) : document.attachEvent("onmousewheel", r)
            }

            function w() {
                u = Math.max(b.outerHeight() / b[0].scrollHeight * b.outerHeight(), D);
                c.css({height: u + "px"});
                var a = u == b.outerHeight() ? "none" : "block";
                c.css({display: a})
            }

            function v() {
                w();
                clearTimeout(A);
                l == ~~l ? (k = a.allowPageScroll, B != l && b.trigger("slimscroll", 0 == ~~l ? "top" : "bottom")) : k = !1;
                B = l;
                u >= b.outerHeight() ? k = !0 : (c.stop(!0, !0).fadeIn("fast"), a.railVisible && g.stop(!0, !0).fadeIn("fast"))
            }

            function p() {
                a.alwaysVisible || (A = setTimeout(function () {
                    a.disableFadeOut && s || (x || y) || (c.fadeOut("slow"), g.fadeOut("slow"))
                }, 1E3))
            }

            var s, x, y, A, z, u, l, B, D = 30, k = !1, b = f(this);
            if (b.parent().hasClass(a.wrapperClass)) {
                var n = b.scrollTop(),
                    c = b.parent().find("." + a.barClass), g = b.parent().find("." + a.railClass);
                w();
                if (f.isPlainObject(h)) {
                    if ("height"in h && "auto" == h.height) {
                        b.parent().css("height", "auto");
                        b.css("height", "auto");
                        var q = b.parent().parent().height();
                        b.parent().css("height", q);
                        b.css("height", q)
                    }
                    if ("scrollTo"in h)n = parseInt(a.scrollTo); else if ("scrollBy"in h)n += parseInt(a.scrollBy); else if ("destroy"in h) {
                        c.remove();
                        g.remove();
                        b.unwrap();
                        return
                    }
                    m(n, !1, !0)
                }
            } else {
                a.height = "auto" == a.height ? b.parent().height() : a.height;
                n = f("<div></div>").addClass(a.wrapperClass).css({position: "relative",
                    overflow: "hidden", width: a.width, height: a.height});
                b.css({overflow: "hidden", width: a.width, height: a.height});
                var g = f("<div></div>").addClass(a.railClass).css({width: a.size, height: "100%", position: "absolute", top: 0, display: a.alwaysVisible && a.railVisible ? "block" : "none", "border-radius": a.railBorderRadius, background: a.railColor, opacity: a.railOpacity, zIndex: 90}), c = f("<div></div>").addClass(a.barClass).css({background: a.color, width: a.size, position: "absolute", top: 0, opacity: a.opacity, display: a.alwaysVisible ?
                    "block" : "none", "border-radius": a.borderRadius, BorderRadius: a.borderRadius, MozBorderRadius: a.borderRadius, WebkitBorderRadius: a.borderRadius, zIndex: 99}), q = "right" == a.position ? {right: a.distance} : {left: a.distance};
                g.css(q);
                c.css(q);
                b.wrap(n);
                b.parent().append(c);
                b.parent().append(g);
                a.railDraggable && c.bind("mousedown",function (a) {
                    var b = f(document);
                    y = !0;
                    t = parseFloat(c.css("top"));
                    pageY = a.pageY;
                    b.bind("mousemove.slimscroll", function (a) {
                        currTop = t + a.pageY - pageY;
                        c.css("top", currTop);
                        m(0, c.position().top, !1)
                    });
                    b.bind("mouseup.slimscroll", function (a) {
                        y = !1;
                        p();
                        b.unbind(".slimscroll")
                    });
                    return!1
                }).bind("selectstart.slimscroll", function (a) {
                        a.stopPropagation();
                        a.preventDefault();
                        return!1
                    });
                g.hover(function () {
                    v()
                }, function () {
                    p()
                });
                c.hover(function () {
                    x = !0
                }, function () {
                    x = !1
                });
                b.hover(function () {
                    s = !0;
                    v();
                    p()
                }, function () {
                    s = !1;
                    p()
                });
                b.bind("touchstart", function (a, b) {
                    a.originalEvent.touches.length && (z = a.originalEvent.touches[0].pageY)
                });
                b.bind("touchmove", function (b) {
                    k || b.originalEvent.preventDefault();
                    b.originalEvent.touches.length &&
                    (m((z - b.originalEvent.touches[0].pageY) / a.touchScrollStep, !0), z = b.originalEvent.touches[0].pageY)
                });
                w();
                "bottom" === a.start ? (c.css({top: b.outerHeight() - c.outerHeight()}), m(0, !0)) : "top" !== a.start && (m(f(a.start).position().top, null, !0), a.alwaysVisible || c.hide());
                C()
            }
        });
        return this
    }});
    jQuery.fn.extend({slimscroll: jQuery.fn.slimScroll})
})(jQuery);
/*!
 * jQuery blockUI plugin
 * Version 2.59.0-2013.04.05
 * @requires jQuery v1.7 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2013 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */
(function () {
    function a(j) {
        j.fn._fadeIn = j.fn.fadeIn;
        var d = j.noop || function () {
        };
        var n = /MSIE/.test(navigator.userAgent);
        var f = /MSIE 6.0/.test(navigator.userAgent) && !/MSIE 8.0/.test(navigator.userAgent);
        var k = document.documentMode || 0;
        var g = j.isFunction(document.createElement("div").style.setExpression);
        j.blockUI = function (r) {
            e(window, r)
        };
        j.unblockUI = function (r) {
            i(window, r)
        };
        j.growlUI = function (v, t, u, r) {
            var s = j('<div class="growlUI"></div>');
            if (v) {
                s.append("<h1>" + v + "</h1>")
            }
            if (t) {
                s.append("<h2>" + t + "</h2>")
            }
            if (u === undefined) {
                u = 3000
            }
            j.blockUI({message: s, fadeIn: 700, fadeOut: 1000, centerY: false, timeout: u, showOverlay: false, onUnblock: r, css: j.blockUI.defaults.growlCSS})
        };
        j.fn.block = function (s) {
            if (this[0] === window) {
                j.blockUI(s);
                return this
            }
            var r = j.extend({}, j.blockUI.defaults, s || {});
            this.each(function () {
                var t = j(this);
                if (r.ignoreIfBlocked && t.data("blockUI.isBlocked")) {
                    return
                }
                t.unblock({fadeOut: 0})
            });
            return this.each(function () {
                if (j.css(this, "position") == "static") {
                    this.style.position = "relative";
                    j(this).data("blockUI.static", true)
                }
                this.style.zoom = 1;
                e(this, s)
            })
        };
        j.fn.unblock = function (r) {
            if (this[0] === window) {
                j.unblockUI(r);
                return this
            }
            return this.each(function () {
                i(this, r)
            })
        };
        j.blockUI.version = 2.59;
        j.blockUI.defaults = {message: "<h1>Please wait...</h1>", title: null, draggable: true, theme: false, css: {padding: 0, margin: 0, width: "30%", top: "40%", left: "35%", textAlign: "center", color: "#000", border: "3px solid #aaa", backgroundColor: "#fff", cursor: "wait"}, themedCSS: {width: "30%", top: "40%", left: "35%"}, overlayCSS: {backgroundColor: "#000", opacity: 0.6, cursor: "wait"}, cursorReset: "default", growlCSS: {width: "350px", top: "10px", left: "", right: "10px", border: "none", padding: "5px", opacity: 0.6, cursor: "default", color: "#fff", backgroundColor: "#000", "-webkit-border-radius": "10px", "-moz-border-radius": "10px", "border-radius": "10px"}, iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank", forceIframe: false, baseZ: 1000, centerX: true, centerY: true, allowBodyStretch: true, bindEvents: true, constrainTabKey: true, fadeIn: 200, fadeOut: 400, timeout: 0, showOverlay: true, focusInput: true, onBlock: null, onUnblock: null, onOverlayClick: null, quirksmodeOffsetHack: 4, blockMsgClass: "blockMsg", ignoreIfBlocked: false};
        var c = null;
        var h = [];

        function e(v, H) {
            var E, P;
            var C = (v == window);
            var y = (H && H.message !== undefined ? H.message : undefined);
            H = j.extend({}, j.blockUI.defaults, H || {});
            if (H.ignoreIfBlocked && j(v).data("blockUI.isBlocked")) {
                return
            }
            H.overlayCSS = j.extend({}, j.blockUI.defaults.overlayCSS, H.overlayCSS || {});
            E = j.extend({}, j.blockUI.defaults.css, H.css || {});
            if (H.onOverlayClick) {
                H.overlayCSS.cursor = "pointer"
            }
            P = j.extend({}, j.blockUI.defaults.themedCSS, H.themedCSS || {});
            y = y === undefined ? H.message : y;
            if (C && c) {
                i(window, {fadeOut: 0})
            }
            if (y && typeof y != "string" && (y.parentNode || y.jquery)) {
                var K = y.jquery ? y[0] : y;
                var R = {};
                j(v).data("blockUI.history", R);
                R.el = K;
                R.parent = K.parentNode;
                R.display = K.style.display;
                R.position = K.style.position;
                if (R.parent) {
                    R.parent.removeChild(K)
                }
            }
            j(v).data("blockUI.onUnblock", H.onUnblock);
            var D = H.baseZ;
            var O, N, M, I;
            if (n || H.forceIframe) {
                O = j('<iframe class="blockUI" style="z-index:' + (D++) + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + H.iframeSrc + '"></iframe>')
            } else {
                O = j('<div class="blockUI" style="display:none"></div>')
            }
            if (H.theme) {
                N = j('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + (D++) + ';display:none"></div>')
            } else {
                N = j('<div class="blockUI blockOverlay" style="z-index:' + (D++) + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>')
            }
            if (H.theme && C) {
                I = '<div class="blockUI ' + H.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (D + 10) + ';display:none;position:fixed">';
                if (H.title) {
                    I += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (H.title || " ") + "</div>"
                }
                I += '<div class="ui-widget-content ui-dialog-content"></div>';
                I += "</div>"
            } else {
                if (H.theme) {
                    I = '<div class="blockUI ' + H.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (D + 10) + ';display:none;position:absolute">';
                    if (H.title) {
                        I += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (H.title || " ") + "</div>"
                    }
                    I += '<div class="ui-widget-content ui-dialog-content"></div>';
                    I += "</div>"
                } else {
                    if (C) {
                        I = '<div class="blockUI ' + H.blockMsgClass + ' blockPage" style="z-index:' + (D + 10) + ';display:none;position:fixed"></div>'
                    } else {
                        I = '<div class="blockUI ' + H.blockMsgClass + ' blockElement" style="z-index:' + (D + 10) + ';display:none;position:absolute"></div>'
                    }
                }
            }
            M = j(I);
            if (y) {
                if (H.theme) {
                    M.css(P);
                    M.addClass("ui-widget-content")
                } else {
                    M.css(E)
                }
            }
            if (!H.theme) {
                N.css(H.overlayCSS)
            }
            N.css("position", C ? "fixed" : "absolute");
            if (n || H.forceIframe) {
                O.css("opacity", 0)
            }
            var B = [O, N, M], Q = C ? j("body") : j(v);
            j.each(B, function () {
                this.appendTo(Q)
            });
            if (H.theme && H.draggable && j.fn.draggable) {
                M.draggable({handle: ".ui-dialog-titlebar", cancel: "li"})
            }
            var x = g && (!j.support.boxModel || j("object,embed", C ? null : v).length > 0);
            if (f || x) {
                if (C && H.allowBodyStretch && j.support.boxModel) {
                    j("html,body").css("height", "100%")
                }
                if ((f || !j.support.boxModel) && !C) {
                    var G = o(v, "borderTopWidth"), L = o(v, "borderLeftWidth");
                    var A = G ? "(0 - " + G + ")" : 0;
                    var F = L ? "(0 - " + L + ")" : 0
                }
                j.each(B, function (t, U) {
                    var z = U[0].style;
                    z.position = "absolute";
                    if (t < 2) {
                        if (C) {
                            z.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" + H.quirksmodeOffsetHack + ') + "px"')
                        } else {
                            z.setExpression("height", 'this.parentNode.offsetHeight + "px"')
                        }
                        if (C) {
                            z.setExpression("width", 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"')
                        } else {
                            z.setExpression("width", 'this.parentNode.offsetWidth + "px"')
                        }
                        if (F) {
                            z.setExpression("left", F)
                        }
                        if (A) {
                            z.setExpression("top", A)
                        }
                    } else {
                        if (H.centerY) {
                            if (C) {
                                z.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"')
                            }
                            z.marginTop = 0
                        } else {
                            if (!H.centerY && C) {
                                var S = (H.css && H.css.top) ? parseInt(H.css.top, 10) : 0;
                                var T = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + S + ') + "px"';
                                z.setExpression("top", T)
                            }
                        }
                    }
                })
            }
            if (y) {
                if (H.theme) {
                    M.find(".ui-widget-content").append(y)
                } else {
                    M.append(y)
                }
                if (y.jquery || y.nodeType) {
                    j(y).show()
                }
            }
            if ((n || H.forceIframe) && H.showOverlay) {
                O.show()
            }
            if (H.fadeIn) {
                var J = H.onBlock ? H.onBlock : d;
                var u = (H.showOverlay && !y) ? J : d;
                var r = y ? J : d;
                if (H.showOverlay) {
                    N._fadeIn(H.fadeIn, u)
                }
                if (y) {
                    M._fadeIn(H.fadeIn, r)
                }
            } else {
                if (H.showOverlay) {
                    N.show()
                }
                if (y) {
                    M.show()
                }
                if (H.onBlock) {
                    H.onBlock()
                }
            }
            m(1, v, H);
            if (C) {
                c = M[0];
                h = j(":input:enabled:visible", c);
                if (H.focusInput) {
                    setTimeout(q, 20)
                }
            } else {
                b(M[0], H.centerX, H.centerY)
            }
            if (H.timeout) {
                var w = setTimeout(function () {
                    if (C) {
                        j.unblockUI(H)
                    } else {
                        j(v).unblock(H)
                    }
                }, H.timeout);
                j(v).data("blockUI.timeout", w)
            }
        }

        function i(u, w) {
            var v;
            var t = (u == window);
            var s = j(u);
            var x = s.data("blockUI.history");
            var y = s.data("blockUI.timeout");
            if (y) {
                clearTimeout(y);
                s.removeData("blockUI.timeout")
            }
            w = j.extend({}, j.blockUI.defaults, w || {});
            m(0, u, w);
            if (w.onUnblock === null) {
                w.onUnblock = s.data("blockUI.onUnblock");
                s.removeData("blockUI.onUnblock")
            }
            var r;
            if (t) {
                r = j("body").children().filter(".blockUI").add("body > .blockUI")
            } else {
                r = s.find(">.blockUI")
            }
            if (w.cursorReset) {
                if (r.length > 1) {
                    r[1].style.cursor = w.cursorReset
                }
                if (r.length > 2) {
                    r[2].style.cursor = w.cursorReset
                }
            }
            if (t) {
                c = h = null
            }
            if (w.fadeOut) {
                v = r.length;
                r.fadeOut(w.fadeOut, function () {
                    if (--v === 0) {
                        l(r, x, w, u)
                    }
                })
            } else {
                l(r, x, w, u)
            }
        }

        function l(v, z, y, x) {
            var u = j(x);
            v.each(function (w, A) {
                if (this.parentNode) {
                    this.parentNode.removeChild(this)
                }
            });
            if (z && z.el) {
                z.el.style.display = z.display;
                z.el.style.position = z.position;
                if (z.parent) {
                    z.parent.appendChild(z.el)
                }
                u.removeData("blockUI.history")
            }
            if (u.data("blockUI.static")) {
                u.css("position", "static")
            }
            if (typeof y.onUnblock == "function") {
                y.onUnblock(x, y)
            }
            var r = j(document.body), t = r.width(), s = r[0].style.width;
            r.width(t - 1).width(t);
            r[0].style.width = s
        }

        function m(r, v, w) {
            var u = v == window, t = j(v);
            if (!r && (u && !c || !u && !t.data("blockUI.isBlocked"))) {
                return
            }
            t.data("blockUI.isBlocked", r);
            if (!u || !w.bindEvents || (r && !w.showOverlay)) {
                return
            }
            var s = "mousedown mouseup keydown keypress keyup touchstart touchend touchmove";
            if (r) {
                j(document).bind(s, w, p)
            } else {
                j(document).unbind(s, p)
            }
        }

        function p(w) {
            if (w.keyCode && w.keyCode == 9) {
                if (c && w.data.constrainTabKey) {
                    var t = h;
                    var s = !w.shiftKey && w.target === t[t.length - 1];
                    var r = w.shiftKey && w.target === t[0];
                    if (s || r) {
                        setTimeout(function () {
                            q(r)
                        }, 10);
                        return false
                    }
                }
            }
            var u = w.data;
            var v = j(w.target);
            if (v.hasClass("blockOverlay") && u.onOverlayClick) {
                u.onOverlayClick()
            }
            if (v.parents("div." + u.blockMsgClass).length > 0) {
                return true
            }
            return v.parents().children().filter("div.blockUI").length === 0
        }

        function q(r) {
            if (!h) {
                return
            }
            var s = h[r === true ? h.length - 1 : 0];
            if (s) {
                s.focus()
            }
        }

        function b(z, r, B) {
            var A = z.parentNode, w = z.style;
            var u = ((A.offsetWidth - z.offsetWidth) / 2) - o(A, "borderLeftWidth");
            var v = ((A.offsetHeight - z.offsetHeight) / 2) - o(A, "borderTopWidth");
            if (r) {
                w.left = u > 0 ? (u + "px") : "0"
            }
            if (B) {
                w.top = v > 0 ? (v + "px") : "0"
            }
        }

        function o(r, s) {
            return parseInt(j.css(r, s), 10) || 0
        }
    }

    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define(["jquery"], a)
    } else {
        a(jQuery)
    }
})();
/*!
 * jQuery Cookie Plugin v1.3.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        a(jQuery)
    }
}(function (e) {
    var a = /\+/g;

    function d(g) {
        return g
    }

    function b(g) {
        return decodeURIComponent(g.replace(a, " "))
    }

    function f(g) {
        if (g.indexOf('"') === 0) {
            g = g.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            return c.json ? JSON.parse(g) : g
        } catch (h) {
        }
    }

    var c = e.cookie = function (p, o, u) {
        if (o !== undefined) {
            u = e.extend({}, c.defaults, u);
            if (typeof u.expires === "number") {
                var q = u.expires, s = u.expires = new Date();
                s.setDate(s.getDate() + q)
            }
            o = c.json ? JSON.stringify(o) : String(o);
            return(document.cookie = [c.raw ? p : encodeURIComponent(p), "=", c.raw ? o : encodeURIComponent(o), u.expires ? "; expires=" + u.expires.toUTCString() : "", u.path ? "; path=" + u.path : "", u.domain ? "; domain=" + u.domain : "", u.secure ? "; secure" : ""].join(""))
        }
        var g = c.raw ? d : b;
        var r = document.cookie.split("; ");
        var v = p ? undefined : {};
        for (var n = 0, k = r.length; n < k; n++) {
            var m = r[n].split("=");
            var h = g(m.shift());
            var j = g(m.join("="));
            if (p && p === h) {
                v = f(j);
                break
            }
            if (!p) {
                v[h] = f(j)
            }
        }
        return v
    };
    c.defaults = {};
    e.removeCookie = function (h, g) {
        if (e.cookie(h) !== undefined) {
            e.cookie(h, "", e.extend({}, g, {expires: -1}));
            return true
        }
        return false
    }
}));
(function (e, t) {
    "use strict";
    function n(e) {
        var t = Array.prototype.slice.call(arguments, 1);
        return e.prop ? e.prop.apply(e, t) : e.attr.apply(e, t)
    }

    function s(e, t, n) {
        var s, a;
        for (s in n)n.hasOwnProperty(s) && (a = s.replace(/ |$/g, t.eventNamespace), e.bind(a, n[s]))
    }

    function a(e, t, n) {
        s(e, n, {focus: function () {
            t.addClass(n.focusClass)
        }, blur: function () {
            t.removeClass(n.focusClass), t.removeClass(n.activeClass)
        }, mouseenter: function () {
            t.addClass(n.hoverClass)
        }, mouseleave: function () {
            t.removeClass(n.hoverClass), t.removeClass(n.activeClass)
        }, "mousedown touchbegin": function () {
            e.is(":disabled") || t.addClass(n.activeClass)
        }, "mouseup touchend": function () {
            t.removeClass(n.activeClass)
        }})
    }

    function i(e, t) {
        e.removeClass(t.hoverClass + " " + t.focusClass + " " + t.activeClass)
    }

    function r(e, t, n) {
        n ? e.addClass(t) : e.removeClass(t)
    }

    function l(e, t, n) {
        var s = "checked", a = t.is(":" + s);
        t.prop ? t.prop(s, a) : a ? t.attr(s, s) : t.removeAttr(s), r(e, n.checkedClass, a)
    }

    function u(e, t, n) {
        r(e, n.disabledClass, t.is(":disabled"))
    }

    function o(e, t, n) {
        switch (n) {
            case"after":
                return e.after(t), e.next();
            case"before":
                return e.before(t), e.prev();
            case"wrap":
                return e.wrap(t), e.parent()
        }
        return null
    }

    function c(t, s, a) {
        var i, r, l;
        return a || (a = {}), a = e.extend({bind: {}, divClass: null, divWrap: "wrap", spanClass: null, spanHtml: null, spanWrap: "wrap"}, a), i = e("<div />"), r = e("<span />"), s.autoHide && t.is(":hidden") && "none" === t.css("display") && i.hide(), a.divClass && i.addClass(a.divClass), s.wrapperClass && i.addClass(s.wrapperClass), a.spanClass && r.addClass(a.spanClass), l = n(t, "id"), s.useID && l && n(i, "id", s.idPrefix + "-" + l), a.spanHtml && r.html(a.spanHtml), i = o(t, i, a.divWrap), r = o(t, r, a.spanWrap), u(i, t, s), {div: i, span: r}
    }

    function d(t, n) {
        var s;
        return n.wrapperClass ? (s = e("<span />").addClass(n.wrapperClass), s = o(t, s, "wrap")) : null
    }

    function f() {
        var t, n, s, a;
        return a = "rgb(120,2,153)", n = e('<div style="width:0;height:0;color:' + a + '">'), e("body").append(n), s = n.get(0), t = window.getComputedStyle ? window.getComputedStyle(s, "").color : (s.currentStyle || s.style || {}).color, n.remove(), t.replace(/ /g, "") !== a
    }

    function p(t) {
        return t ? e("<span />").text(t).html() : ""
    }

    function m() {
        return navigator.cpuClass && !navigator.product
    }

    function v() {
        return window.XMLHttpRequest !== void 0 ? !0 : !1
    }

    function h(e) {
        var t;
        return e[0].multiple ? !0 : (t = n(e, "size"), !t || 1 >= t ? !1 : !0)
    }

    function C() {
        return!1
    }

    function w(e, t) {
        var n = "none";
        s(e, t, {"selectstart dragstart mousedown": C}), e.css({MozUserSelect: n, msUserSelect: n, webkitUserSelect: n, userSelect: n})
    }

    function b(e, t, n) {
        var s = e.val();
        "" === s ? s = n.fileDefaultHtml : (s = s.split(/[\/\\]+/), s = s[s.length - 1]), t.text(s)
    }

    function y(e, t, n) {
        var s, a;
        for (s = [], e.each(function () {
            var e;
            for (e in t)Object.prototype.hasOwnProperty.call(t, e) && (s.push({el: this, name: e, old: this.style[e]}), this.style[e] = t[e])
        }), n(); s.length;)a = s.pop(), a.el.style[a.name] = a.old
    }

    function g(e, t) {
        var n;
        n = e.parents(), n.push(e[0]), n = n.not(":visible"), y(n, {visibility: "hidden", display: "block", position: "absolute"}, t)
    }

    function k(e, t) {
        return function () {
            e.unwrap().unwrap().unbind(t.eventNamespace)
        }
    }

    var H = !0, x = !1, A = [
        {match: function (e) {
            return e.is("a, button, :submit, :reset, input[type='button']")
        }, apply: function (e, t) {
            var r, l, o, d, f;
            return l = t.submitDefaultHtml, e.is(":reset") && (l = t.resetDefaultHtml), d = e.is("a, button") ? function () {
                return e.html() || l
            } : function () {
                return p(n(e, "value")) || l
            }, o = c(e, t, {divClass: t.buttonClass, spanHtml: d()}), r = o.div, a(e, r, t), f = !1, s(r, t, {"click touchend": function () {
                var t, s, a, i;
                f || e.is(":disabled") || (f = !0, e[0].dispatchEvent ? (t = document.createEvent("MouseEvents"), t.initEvent("click", !0, !0), s = e[0].dispatchEvent(t), e.is("a") && s && (a = n(e, "target"), i = n(e, "href"), a && "_self" !== a ? window.open(i, a) : document.location.href = i)) : e.click(), f = !1)
            }}), w(r, t), {remove: function () {
                return r.after(e), r.remove(), e.unbind(t.eventNamespace), e
            }, update: function () {
                i(r, t), u(r, e, t), e.detach(), o.span.html(d()).append(e)
            }}
        }},
        {match: function (e) {
            return e.is(":checkbox")
        }, apply: function (e, t) {
            var n, r, o;
            return n = c(e, t, {divClass: t.checkboxClass}), r = n.div, o = n.span, a(e, r, t), s(e, t, {"click touchend": function () {
                l(o, e, t)
            }}), l(o, e, t), {remove: k(e, t), update: function () {
                i(r, t), o.removeClass(t.checkedClass), l(o, e, t), u(r, e, t)
            }}
        }},
        {match: function (e) {
            return e.is(":file")
        }, apply: function (t, r) {
            function l() {
                b(t, p, r)
            }

            var d, f, p, v;
            return d = c(t, r, {divClass: r.fileClass, spanClass: r.fileButtonClass, spanHtml: r.fileButtonHtml, spanWrap: "after"}), f = d.div, v = d.span, p = e("<span />").html(r.fileDefaultHtml), p.addClass(r.filenameClass), p = o(t, p, "after"), n(t, "size") || n(t, "size", f.width() / 10), a(t, f, r), l(), m() ? s(t, r, {click: function () {
                t.trigger("change"), setTimeout(l, 0)
            }}) : s(t, r, {change: l}), w(p, r), w(v, r), {remove: function () {
                return p.remove(), v.remove(), t.unwrap().unbind(r.eventNamespace)
            }, update: function () {
                i(f, r), b(t, p, r), u(f, t, r)
            }}
        }},
        {match: function (e) {
            if (e.is("input")) {
                var t = (" " + n(e, "type") + " ").toLowerCase(), s = " color date datetime datetime-local email month number password search tel text time url week ";
                return s.indexOf(t) >= 0
            }
            return!1
        }, apply: function (e, t) {
            var s, i;
            return s = n(e, "type"), e.addClass(t.inputClass), i = d(e, t), a(e, e, t), t.inputAddTypeAsClass && e.addClass(s), {remove: function () {
                e.removeClass(t.inputClass), t.inputAddTypeAsClass && e.removeClass(s), i && e.unwrap()
            }, update: C}
        }},
        {match: function (e) {
            return e.is(":radio")
        }, apply: function (t, r) {
            var o, d, f;
            return o = c(t, r, {divClass: r.radioClass}), d = o.div, f = o.span, a(t, d, r), s(t, r, {"click touchend": function () {
                e.uniform.update(e(':radio[name="' + n(t, "name") + '"]'))
            }}), l(f, t, r), {remove: k(t, r), update: function () {
                i(d, r), l(f, t, r), u(d, t, r)
            }}
        }},
        {match: function (e) {
            return e.is("select") && !h(e) ? !0 : !1
        }, apply: function (t, n) {
            var r, l, o, d;
            return n.selectAutoWidth && g(t, function () {
                d = t.width()
            }), r = c(t, n, {divClass: n.selectClass, spanHtml: (t.find(":selected:first") || t.find("option:first")).html(), spanWrap: "before"}), l = r.div, o = r.span, n.selectAutoWidth ? g(t, function () {
                y(e([o[0], l[0]]), {display: "block"}, function () {
                    var e;
                    e = o.outerWidth() - o.width(), l.width(d + e), o.width(d)
                })
            }) : l.addClass("fixedWidth"), a(t, l, n), s(t, n, {change: function () {
                o.html(t.find(":selected").html()), l.removeClass(n.activeClass)
            }, "click touchend": function () {
                var e = t.find(":selected").html();
                o.html() !== e && t.trigger("change")
            }, keyup: function () {
                o.html(t.find(":selected").html())
            }}), w(o, n), {remove: function () {
                return o.remove(), t.unwrap().unbind(n.eventNamespace), t
            }, update: function () {
                n.selectAutoWidth ? (e.uniform.restore(t), t.uniform(n)) : (i(l, n), o.html(t.find(":selected").html()), u(l, t, n))
            }}
        }},
        {match: function (e) {
            return e.is("select") && h(e) ? !0 : !1
        }, apply: function (e, t) {
            var n;
            return e.addClass(t.selectMultiClass), n = d(e, t), a(e, e, t), {remove: function () {
                e.removeClass(t.selectMultiClass), n && e.unwrap()
            }, update: C}
        }},
        {match: function (e) {
            return e.is("textarea")
        }, apply: function (e, t) {
            var n;
            return e.addClass(t.textareaClass), n = d(e, t), a(e, e, t), {remove: function () {
                e.removeClass(t.textareaClass), n && e.unwrap()
            }, update: C}
        }}
    ];
    m() && !v() && (H = !1), e.uniform = {defaults: {activeClass: "active", autoHide: !0, buttonClass: "button", checkboxClass: "checker", checkedClass: "checked", disabledClass: "disabled", eventNamespace: ".uniform", fileButtonClass: "action", fileButtonHtml: "Choose File", fileClass: "uploader", fileDefaultHtml: "No file selected", filenameClass: "filename", focusClass: "focus", hoverClass: "hover", idPrefix: "uniform", inputAddTypeAsClass: !0, inputClass: "uniform-input", radioClass: "radio", resetDefaultHtml: "Reset", resetSelector: !1, selectAutoWidth: !0, selectClass: "selector", selectMultiClass: "uniform-multiselect", submitDefaultHtml: "Submit", textareaClass: "uniform", useID: !0, wrapperClass: null}, elements: []}, e.fn.uniform = function (t) {
        var n = this;
        return t = e.extend({}, e.uniform.defaults, t), x || (x = !0, f() && (H = !1)), H ? (t.resetSelector && e(t.resetSelector).mouseup(function () {
            window.setTimeout(function () {
                e.uniform.update(n)
            }, 10)
        }), this.each(function () {
            var n, s, a, i = e(this);
            if (i.data("uniformed"))return e.uniform.update(i), void 0;
            for (n = 0; A.length > n; n += 1)if (s = A[n], s.match(i, t))return a = s.apply(i, t), i.data("uniformed", a), e.uniform.elements.push(i.get(0)), void 0
        })) : this
    }, e.uniform.restore = e.fn.uniform.restore = function (n) {
        n === t && (n = e.uniform.elements), e(n).each(function () {
            var t, n, s = e(this);
            n = s.data("uniformed"), n && (n.remove(), t = e.inArray(this, e.uniform.elements), t >= 0 && e.uniform.elements.splice(t, 1), s.removeData("uniformed"))
        })
    }, e.uniform.update = e.fn.uniform.update = function (n) {
        n === t && (n = e.uniform.elements), e(n).each(function () {
            var t, n = e(this);
            t = n.data("uniformed"), t && t.update(n, t.options)
        })
    }
})(jQuery);
/* Javascript plotting library for jQuery, version 0.8.1.

 Copyright (c) 2007-2013 IOLA and Ole Laursen.
 Licensed under the MIT license.

 */

// first an inline dependency, jquery.colorhelpers.js, we inline it here
// for convenience

/* Plugin for jQuery for working with colors.
 *
 * Version 1.1.
 *
 * Inspiration from jQuery color animation plugin by John Resig.
 *
 * Released under the MIT license by Ole Laursen, October 2009.
 *
 * Examples:
 *
 *   $.color.parse("#fff").scale('rgb', 0.25).add('a', -0.5).toString()
 *   var c = $.color.extract($("#mydiv"), 'background-color');
 *   console.log(c.r, c.g, c.b, c.a);
 *   $.color.make(100, 50, 25, 0.4).toString() // returns "rgba(100,50,25,0.4)"
 *
 * Note that .scale() and .add() return the same modified object
 * instead of making a new one.
 *
 * V. 1.1: Fix error handling so e.g. parsing an empty string does
 * produce a color rather than just crashing.
 */
(function (B) {
    B.color = {};
    B.color.make = function (F, E, C, D) {
        var G = {};
        G.r = F || 0;
        G.g = E || 0;
        G.b = C || 0;
        G.a = D != null ? D : 1;
        G.add = function (J, I) {
            for (var H = 0; H < J.length; ++H) {
                G[J.charAt(H)] += I
            }
            return G.normalize()
        };
        G.scale = function (J, I) {
            for (var H = 0; H < J.length; ++H) {
                G[J.charAt(H)] *= I
            }
            return G.normalize()
        };
        G.toString = function () {
            if (G.a >= 1) {
                return"rgb(" + [G.r, G.g, G.b].join(",") + ")"
            } else {
                return"rgba(" + [G.r, G.g, G.b, G.a].join(",") + ")"
            }
        };
        G.normalize = function () {
            function H(J, K, I) {
                return K < J ? J : (K > I ? I : K)
            }

            G.r = H(0, parseInt(G.r), 255);
            G.g = H(0, parseInt(G.g), 255);
            G.b = H(0, parseInt(G.b), 255);
            G.a = H(0, G.a, 1);
            return G
        };
        G.clone = function () {
            return B.color.make(G.r, G.b, G.g, G.a)
        };
        return G.normalize()
    };
    B.color.extract = function (D, C) {
        var E;
        do {
            E = D.css(C).toLowerCase();
            if (E != "" && E != "transparent") {
                break
            }
            D = D.parent()
        } while (!B.nodeName(D.get(0), "body"));
        if (E == "rgba(0, 0, 0, 0)") {
            E = "transparent"
        }
        return B.color.parse(E)
    };
    B.color.parse = function (F) {
        var E, C = B.color.make;
        if (E = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(F)) {
            return C(parseInt(E[1], 10), parseInt(E[2], 10), parseInt(E[3], 10))
        }
        if (E = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)) {
            return C(parseInt(E[1], 10), parseInt(E[2], 10), parseInt(E[3], 10), parseFloat(E[4]))
        }
        if (E = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(F)) {
            return C(parseFloat(E[1]) * 2.55, parseFloat(E[2]) * 2.55, parseFloat(E[3]) * 2.55)
        }
        if (E = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)) {
            return C(parseFloat(E[1]) * 2.55, parseFloat(E[2]) * 2.55, parseFloat(E[3]) * 2.55, parseFloat(E[4]))
        }
        if (E = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)) {
            return C(parseInt(E[1], 16), parseInt(E[2], 16), parseInt(E[3], 16))
        }
        if (E = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)) {
            return C(parseInt(E[1] + E[1], 16), parseInt(E[2] + E[2], 16), parseInt(E[3] + E[3], 16))
        }
        var D = B.trim(F).toLowerCase();
        if (D == "transparent") {
            return C(255, 255, 255, 0)
        } else {
            E = A[D] || [0, 0, 0];
            return C(E[0], E[1], E[2])
        }
    };
    var A = {aqua: [0, 255, 255], azure: [240, 255, 255], beige: [245, 245, 220], black: [0, 0, 0], blue: [0, 0, 255], brown: [165, 42, 42], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgrey: [169, 169, 169], darkgreen: [0, 100, 0], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkviolet: [148, 0, 211], fuchsia: [255, 0, 255], gold: [255, 215, 0], green: [0, 128, 0], indigo: [75, 0, 130], khaki: [240, 230, 140], lightblue: [173, 216, 230], lightcyan: [224, 255, 255], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightyellow: [255, 255, 224], lime: [0, 255, 0], magenta: [255, 0, 255], maroon: [128, 0, 0], navy: [0, 0, 128], olive: [128, 128, 0], orange: [255, 165, 0], pink: [255, 192, 203], purple: [128, 0, 128], violet: [128, 0, 128], red: [255, 0, 0], silver: [192, 192, 192], white: [255, 255, 255], yellow: [255, 255, 0]}
})(jQuery);

// the actual Flot code
(function ($) {

    // Cache the prototype hasOwnProperty for faster access

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    ///////////////////////////////////////////////////////////////////////////
    // The Canvas object is a wrapper around an HTML5 <canvas> tag.
    //
    // @constructor
    // @param {string} cls List of classes to apply to the canvas.
    // @param {element} container Element onto which to append the canvas.
    //
    // Requiring a container is a little iffy, but unfortunately canvas
    // operations don't work unless the canvas is attached to the DOM.

    function Canvas(cls, container) {

        var element = container.children("." + cls)[0];

        if (element == null) {

            element = document.createElement("canvas");
            element.className = cls;

            $(element).css({ direction: "ltr", position: "absolute", left: 0, top: 0 })
                .appendTo(container);

            // If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas

            if (!element.getContext) {
                if (window.G_vmlCanvasManager) {
                    element = window.G_vmlCanvasManager.initElement(element);
                } else {
                    throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
                }
            }
        }

        this.element = element;

        var context = this.context = element.getContext("2d");

        // Determine the screen's ratio of physical to device-independent
        // pixels.  This is the ratio between the canvas width that the browser
        // advertises and the number of pixels actually present in that space.

        // The iPhone 4, for example, has a device-independent width of 320px,
        // but its screen is actually 640px wide.  It therefore has a pixel
        // ratio of 2, while most normal devices have a ratio of 1.

        var devicePixelRatio = window.devicePixelRatio || 1,
            backingStoreRatio =
                context.webkitBackingStorePixelRatio ||
                    context.mozBackingStorePixelRatio ||
                    context.msBackingStorePixelRatio ||
                    context.oBackingStorePixelRatio ||
                    context.backingStorePixelRatio || 1;

        this.pixelRatio = devicePixelRatio / backingStoreRatio;

        // Size the canvas to match the internal dimensions of its container

        this.resize(container.width(), container.height());

        // Collection of HTML div layers for text overlaid onto the canvas

        this.textContainer = null;
        this.text = {};

        // Cache of text fragments and metrics, so we can avoid expensively
        // re-calculating them when the plot is re-rendered in a loop.

        this._textCache = {};
    }

    // Resizes the canvas to the given dimensions.
    //
    // @param {number} width New width of the canvas, in pixels.
    // @param {number} width New height of the canvas, in pixels.

    Canvas.prototype.resize = function (width, height) {

        if (width <= 0 || height <= 0) {
            throw new Error("Invalid dimensions for plot, width = " + width + ", height = " + height);
        }

        var element = this.element,
            context = this.context,
            pixelRatio = this.pixelRatio;

        // Resize the canvas, increasing its density based on the display's
        // pixel ratio; basically giving it more pixels without increasing the
        // size of its element, to take advantage of the fact that retina
        // displays have that many more pixels in the same advertised space.

        // Resizing should reset the state (excanvas seems to be buggy though)

        if (this.width != width) {
            element.width = width * pixelRatio;
            element.style.width = width + "px";
            this.width = width;
        }

        if (this.height != height) {
            element.height = height * pixelRatio;
            element.style.height = height + "px";
            this.height = height;
        }

        // Save the context, so we can reset in case we get replotted.  The
        // restore ensure that we're really back at the initial state, and
        // should be safe even if we haven't saved the initial state yet.

        context.restore();
        context.save();

        // Scale the coordinate space to match the display density; so even though we
        // may have twice as many pixels, we still want lines and other drawing to
        // appear at the same size; the extra pixels will just make them crisper.

        context.scale(pixelRatio, pixelRatio);
    };

    // Clears the entire canvas area, not including any overlaid HTML text

    Canvas.prototype.clear = function () {
        this.context.clearRect(0, 0, this.width, this.height);
    };

    // Finishes rendering the canvas, including managing the text overlay.

    Canvas.prototype.render = function () {

        var cache = this._textCache;

        // For each text layer, add elements marked as active that haven't
        // already been rendered, and remove those that are no longer active.

        for (var layerKey in cache) {
            if (hasOwnProperty.call(cache, layerKey)) {

                var layer = this.getTextLayer(layerKey),
                    layerCache = cache[layerKey];

                layer.hide();

                for (var styleKey in layerCache) {
                    if (hasOwnProperty.call(layerCache, styleKey)) {
                        var styleCache = layerCache[styleKey];
                        for (var key in styleCache) {
                            if (hasOwnProperty.call(styleCache, key)) {

                                var positions = styleCache[key].positions;

                                for (var i = 0, position; position = positions[i]; i++) {
                                    if (position.active) {
                                        if (!position.rendered) {
                                            layer.append(position.element);
                                            position.rendered = true;
                                        }
                                    } else {
                                        positions.splice(i--, 1);
                                        if (position.rendered) {
                                            position.element.detach();
                                        }
                                    }
                                }

                                if (positions.length == 0) {
                                    delete styleCache[key];
                                }
                            }
                        }
                    }
                }

                layer.show();
            }
        }
    };

    // Creates (if necessary) and returns the text overlay container.
    //
    // @param {string} classes String of space-separated CSS classes used to
    //     uniquely identify the text layer.
    // @return {object} The jQuery-wrapped text-layer div.

    Canvas.prototype.getTextLayer = function (classes) {

        var layer = this.text[classes];

        // Create the text layer if it doesn't exist

        if (layer == null) {

            // Create the text layer container, if it doesn't exist

            if (this.textContainer == null) {
                this.textContainer = $("<div class='flot-text'></div>")
                    .css({
                        position: "absolute",
                        top: 0,
                        left: 0,
                        bottom: 0,
                        right: 0,
                        'font-size': "smaller",
                        color: "#545454"
                    })
                    .insertAfter(this.element);
            }

            layer = this.text[classes] = $("<div></div>")
                .addClass(classes)
                .css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    bottom: 0,
                    right: 0
                })
                .appendTo(this.textContainer);
        }

        return layer;
    };

    // Creates (if necessary) and returns a text info object.
    //
    // The object looks like this:
    //
    // {
    //     width: Width of the text's wrapper div.
    //     height: Height of the text's wrapper div.
    //     element: The jQuery-wrapped HTML div containing the text.
    //     positions: Array of positions at which this text is drawn.
    // }
    //
    // The positions array contains objects that look like this:
    //
    // {
    //     active: Flag indicating whether the text should be visible.
    //     rendered: Flag indicating whether the text is currently visible.
    //     element: The jQuery-wrapped HTML div containing the text.
    //     x: X coordinate at which to draw the text.
    //     y: Y coordinate at which to draw the text.
    // }
    //
    // Each position after the first receives a clone of the original element.
    //
    // The idea is that that the width, height, and general 'identity' of the
    // text is constant no matter where it is placed; the placements are a
    // secondary property.
    //
    // Canvas maintains a cache of recently-used text info objects; getTextInfo
    // either returns the cached element or creates a new entry.
    //
    // @param {string} layer A string of space-separated CSS classes uniquely
    //     identifying the layer containing this text.
    // @param {string} text Text string to retrieve info for.
    // @param {(string|object)=} font Either a string of space-separated CSS
    //     classes or a font-spec object, defining the text's font and style.
    // @param {number=} angle Angle at which to rotate the text, in degrees.
    //     Angle is currently unused, it will be implemented in the future.
    // @param {number=} width Maximum width of the text before it wraps.
    // @return {object} a text info object.

    Canvas.prototype.getTextInfo = function (layer, text, font, angle, width) {

        var textStyle, layerCache, styleCache, info;

        // Cast the value to a string, in case we were given a number or such

        text = "" + text;

        // If the font is a font-spec object, generate a CSS font definition

        if (typeof font === "object") {
            textStyle = font.style + " " + font.variant + " " + font.weight + " " + font.size + "px/" + font.lineHeight + "px " + font.family;
        } else {
            textStyle = font;
        }

        // Retrieve (or create) the cache for the text's layer and styles

        layerCache = this._textCache[layer];

        if (layerCache == null) {
            layerCache = this._textCache[layer] = {};
        }

        styleCache = layerCache[textStyle];

        if (styleCache == null) {
            styleCache = layerCache[textStyle] = {};
        }

        info = styleCache[text];

        // If we can't find a matching element in our cache, create a new one

        if (info == null) {

            var element = $("<div></div>").html(text)
                .css({
                    position: "absolute",
                    'max-width': width,
                    top: -9999
                })
                .appendTo(this.getTextLayer(layer));

            if (typeof font === "object") {
                element.css({
                    font: textStyle,
                    color: font.color
                });
            } else if (typeof font === "string") {
                element.addClass(font);
            }

            info = styleCache[text] = {
                width: element.outerWidth(true),
                height: element.outerHeight(true),
                element: element,
                positions: []
            };

            element.detach();
        }

        return info;
    };

    // Adds a text string to the canvas text overlay.
    //
    // The text isn't drawn immediately; it is marked as rendering, which will
    // result in its addition to the canvas on the next render pass.
    //
    // @param {string} layer A string of space-separated CSS classes uniquely
    //     identifying the layer containing this text.
    // @param {number} x X coordinate at which to draw the text.
    // @param {number} y Y coordinate at which to draw the text.
    // @param {string} text Text string to draw.
    // @param {(string|object)=} font Either a string of space-separated CSS
    //     classes or a font-spec object, defining the text's font and style.
    // @param {number=} angle Angle at which to rotate the text, in degrees.
    //     Angle is currently unused, it will be implemented in the future.
    // @param {number=} width Maximum width of the text before it wraps.
    // @param {string=} halign Horizontal alignment of the text; either "left",
    //     "center" or "right".
    // @param {string=} valign Vertical alignment of the text; either "top",
    //     "middle" or "bottom".

    Canvas.prototype.addText = function (layer, x, y, text, font, angle, width, halign, valign) {

        var info = this.getTextInfo(layer, text, font, angle, width),
            positions = info.positions;

        // Tweak the div's position to match the text's alignment

        if (halign == "center") {
            x -= info.width / 2;
        } else if (halign == "right") {
            x -= info.width;
        }

        if (valign == "middle") {
            y -= info.height / 2;
        } else if (valign == "bottom") {
            y -= info.height;
        }

        // Determine whether this text already exists at this position.
        // If so, mark it for inclusion in the next render pass.

        for (var i = 0, position; position = positions[i]; i++) {
            if (position.x == x && position.y == y) {
                position.active = true;
                return;
            }
        }

        // If the text doesn't exist at this position, create a new entry

        // For the very first position we'll re-use the original element,
        // while for subsequent ones we'll clone it.

        position = {
            active: true,
            rendered: false,
            element: positions.length ? info.element.clone() : info.element,
            x: x,
            y: y
        }

        positions.push(position);

        // Move the element to its final position within the container

        position.element.css({
            top: Math.round(y),
            left: Math.round(x),
            'text-align': halign	// In case the text wraps
        });
    };

    // Removes one or more text strings from the canvas text overlay.
    //
    // If no parameters are given, all text within the layer is removed.
    //
    // Note that the text is not immediately removed; it is simply marked as
    // inactive, which will result in its removal on the next render pass.
    // This avoids the performance penalty for 'clear and redraw' behavior,
    // where we potentially get rid of all text on a layer, but will likely
    // add back most or all of it later, as when redrawing axes, for example.
    //
    // @param {string} layer A string of space-separated CSS classes uniquely
    //     identifying the layer containing this text.
    // @param {number=} x X coordinate of the text.
    // @param {number=} y Y coordinate of the text.
    // @param {string=} text Text string to remove.
    // @param {(string|object)=} font Either a string of space-separated CSS
    //     classes or a font-spec object, defining the text's font and style.
    // @param {number=} angle Angle at which the text is rotated, in degrees.
    //     Angle is currently unused, it will be implemented in the future.

    Canvas.prototype.removeText = function (layer, x, y, text, font, angle) {
        if (text == null) {
            var layerCache = this._textCache[layer];
            if (layerCache != null) {
                for (var styleKey in layerCache) {
                    if (hasOwnProperty.call(layerCache, styleKey)) {
                        var styleCache = layerCache[styleKey];
                        for (var key in styleCache) {
                            if (hasOwnProperty.call(styleCache, key)) {
                                var positions = styleCache[key].positions;
                                for (var i = 0, position; position = positions[i]; i++) {
                                    position.active = false;
                                }
                            }
                        }
                    }
                }
            }
        } else {
            var positions = this.getTextInfo(layer, text, font, angle).positions;
            for (var i = 0, position; position = positions[i]; i++) {
                if (position.x == x && position.y == y) {
                    position.active = false;
                }
            }
        }
    };

    ///////////////////////////////////////////////////////////////////////////
    // The top-level container for the entire plot.

    function Plot(placeholder, data_, options_, plugins) {
        // data is on the form:
        //   [ series1, series2 ... ]
        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]
        // or { data: [ [x1, y1], [x2, y2], ... ], label: "some label", ... }

        var series = [],
            options = {
                // the color theme used for graphs
                colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                legend: {
                    show: true,
                    noColumns: 1, // number of colums in legend table
                    labelFormatter: null, // fn: string -> string
                    labelBoxBorderColor: "#ccc", // border color for the little label boxes
                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph
                    position: "ne", // position of default legend container within plot
                    margin: 5, // distance from grid edge to default legend container within plot
                    backgroundColor: null, // null means auto-detect
                    backgroundOpacity: 0.85, // set to 0 to avoid background
                    sorted: null    // default to no legend sorting
                },
                xaxis: {
                    show: null, // null = auto-detect, true = always, false = never
                    position: "bottom", // or "top"
                    mode: null, // null or "time"
                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: "italic", weight: "bold", family: "sans-serif", variant: "small-caps" }
                    color: null, // base color, labels, ticks
                    tickColor: null, // possibly different color of ticks, e.g. "rgba(0,0,0,0.15)"
                    transform: null, // null or f: number -> number to transform axis
                    inverseTransform: null, // if transform is set, this should be the inverse function
                    min: null, // min. value to show, null means set automatically
                    max: null, // max. value to show, null means set automatically
                    autoscaleMargin: null, // margin in % to add if auto-setting min/max
                    ticks: null, // either [1, 3] or [[1, "a"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks
                    tickFormatter: null, // fn: number -> string
                    labelWidth: null, // size of tick labels in pixels
                    labelHeight: null,
                    reserveSpace: null, // whether to reserve space even if axis isn't shown
                    tickLength: null, // size in pixels of ticks, or "full" for whole line
                    alignTicksWithAxis: null, // axis number or null for no sync
                    tickDecimals: null, // no. of decimals, null means auto
                    tickSize: null, // number or [number, "unit"]
                    minTickSize: null // number or [number, "unit"]
                },
                yaxis: {
                    autoscaleMargin: 0.02,
                    position: "left" // or "right"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: false,
                        radius: 3,
                        lineWidth: 2, // in pixels
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle" // or callback
                    },
                    lines: {
                        // we don't put in show: false so we can see
                        // whether lines were actively disabled
                        lineWidth: 2, // in pixels
                        fill: false,
                        fillColor: null,
                        steps: false
                        // Omit 'zero', so we can later default its value to
                        // match that of the 'fill' option.
                    },
                    bars: {
                        show: false,
                        lineWidth: 2, // in pixels
                        barWidth: 1, // in units of the x axis
                        fill: true,
                        fillColor: null,
                        align: "left", // "left", "right", or "center"
                        horizontal: false,
                        zero: true
                    },
                    shadowSize: 3,
                    highlightColor: null
                },
                grid: {
                    show: true,
                    aboveData: false,
                    color: "#545454", // primary color used for outline and labels
                    backgroundColor: null, // null for transparent, else color
                    borderColor: null, // set if different from the grid color
                    tickColor: null, // color for the ticks, e.g. "rgba(0,0,0,0.15)"
                    margin: 0, // distance from the canvas edge to the grid
                    labelMargin: 5, // in pixels
                    axisMargin: 8, // in pixels
                    borderWidth: 2, // in pixels
                    minBorderMargin: null, // in pixels, null means taken from points radius
                    markings: null, // array of ranges or fn: axes -> array of ranges
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    // interactive stuff
                    clickable: false,
                    hoverable: false,
                    autoHighlight: true, // highlight in case mouse is near
                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item
                },
                interaction: {
                    redrawOverlayInterval: 1000 / 60 // time between updates, -1 means in same flow
                },
                hooks: {}
            },
            surface = null,     // the canvas for the plot itself
            overlay = null,     // canvas for interactive stuff on top of plot
            eventHolder = null, // jQuery object that events should be bound to
            ctx = null, octx = null,
            xaxes = [], yaxes = [],
            plotOffset = { left: 0, right: 0, top: 0, bottom: 0},
            plotWidth = 0, plotHeight = 0,
            hooks = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            },
            plot = this;

        // public functions
        plot.setData = setData;
        plot.setupGrid = setupGrid;
        plot.draw = draw;
        plot.getPlaceholder = function () {
            return placeholder;
        };
        plot.getCanvas = function () {
            return surface.element;
        };
        plot.getPlotOffset = function () {
            return plotOffset;
        };
        plot.width = function () {
            return plotWidth;
        };
        plot.height = function () {
            return plotHeight;
        };
        plot.offset = function () {
            var o = eventHolder.offset();
            o.left += plotOffset.left;
            o.top += plotOffset.top;
            return o;
        };
        plot.getData = function () {
            return series;
        };
        plot.getAxes = function () {
            var res = {}, i;
            $.each(xaxes.concat(yaxes), function (_, axis) {
                if (axis)
                    res[axis.direction + (axis.n != 1 ? axis.n : "") + "axis"] = axis;
            });
            return res;
        };
        plot.getXAxes = function () {
            return xaxes;
        };
        plot.getYAxes = function () {
            return yaxes;
        };
        plot.c2p = canvasToAxisCoords;
        plot.p2c = axisToCanvasCoords;
        plot.getOptions = function () {
            return options;
        };
        plot.highlight = highlight;
        plot.unhighlight = unhighlight;
        plot.triggerRedrawOverlay = triggerRedrawOverlay;
        plot.pointOffset = function (point) {
            return {
                left: parseInt(xaxes[axisNumber(point, "x") - 1].p2c(+point.x) + plotOffset.left, 10),
                top: parseInt(yaxes[axisNumber(point, "y") - 1].p2c(+point.y) + plotOffset.top, 10)
            };
        };
        plot.shutdown = shutdown;
        plot.resize = function () {
            var width = placeholder.width(),
                height = placeholder.height();
            surface.resize(width, height);
            overlay.resize(width, height);
        };

        // public attributes
        plot.hooks = hooks;

        // initialize
        initPlugins(plot);
        parseOptions(options_);
        setupCanvases();
        setData(data_);
        setupGrid();
        draw();
        bindEvents();


        function executeHooks(hook, args) {
            args = [plot].concat(args);
            for (var i = 0; i < hook.length; ++i)
                hook[i].apply(this, args);
        }

        function initPlugins() {

            // References to key classes, allowing plugins to modify them

            var classes = {
                Canvas: Canvas
            };

            for (var i = 0; i < plugins.length; ++i) {
                var p = plugins[i];
                p.init(plot, classes);
                if (p.options)
                    $.extend(true, options, p.options);
            }
        }

        function parseOptions(opts) {

            $.extend(true, options, opts);

            // $.extend merges arrays, rather than replacing them.  When less
            // colors are provided than the size of the default palette, we
            // end up with those colors plus the remaining defaults, which is
            // not expected behavior; avoid it by replacing them here.

            if (opts && opts.colors) {
                options.colors = opts.colors;
            }

            if (options.xaxis.color == null)
                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();
            if (options.yaxis.color == null)
                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();

            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility
                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;
            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility
                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;

            if (options.grid.borderColor == null)
                options.grid.borderColor = options.grid.color;
            if (options.grid.tickColor == null)
                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();

            // Fill in defaults for axis options, including any unspecified
            // font-spec fields, if a font-spec was provided.

            // If no x/y axis options were provided, create one of each anyway,
            // since the rest of the code assumes that they exist.

            var i, axisOptions, axisCount,
                fontDefaults = {
                    style: placeholder.css("font-style"),
                    size: Math.round(0.8 * (+placeholder.css("font-size").replace("px", "") || 13)),
                    variant: placeholder.css("font-variant"),
                    weight: placeholder.css("font-weight"),
                    family: placeholder.css("font-family")
                };

            fontDefaults.lineHeight = fontDefaults.size * 1.15;

            axisCount = options.xaxes.length || 1;
            for (i = 0; i < axisCount; ++i) {

                axisOptions = options.xaxes[i];
                if (axisOptions && !axisOptions.tickColor) {
                    axisOptions.tickColor = axisOptions.color;
                }

                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);
                options.xaxes[i] = axisOptions;

                if (axisOptions.font) {
                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);
                    if (!axisOptions.font.color) {
                        axisOptions.font.color = axisOptions.color;
                    }
                }
            }

            axisCount = options.yaxes.length || 1;
            for (i = 0; i < axisCount; ++i) {

                axisOptions = options.yaxes[i];
                if (axisOptions && !axisOptions.tickColor) {
                    axisOptions.tickColor = axisOptions.color;
                }

                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);
                options.yaxes[i] = axisOptions;

                if (axisOptions.font) {
                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);
                    if (!axisOptions.font.color) {
                        axisOptions.font.color = axisOptions.color;
                    }
                }
            }

            // backwards compatibility, to be removed in future
            if (options.xaxis.noTicks && options.xaxis.ticks == null)
                options.xaxis.ticks = options.xaxis.noTicks;
            if (options.yaxis.noTicks && options.yaxis.ticks == null)
                options.yaxis.ticks = options.yaxis.noTicks;
            if (options.x2axis) {
                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
                options.xaxes[1].position = "top";
            }
            if (options.y2axis) {
                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
                options.yaxes[1].position = "right";
            }
            if (options.grid.coloredAreas)
                options.grid.markings = options.grid.coloredAreas;
            if (options.grid.coloredAreasColor)
                options.grid.markingsColor = options.grid.coloredAreasColor;
            if (options.lines)
                $.extend(true, options.series.lines, options.lines);
            if (options.points)
                $.extend(true, options.series.points, options.points);
            if (options.bars)
                $.extend(true, options.series.bars, options.bars);
            if (options.shadowSize != null)
                options.series.shadowSize = options.shadowSize;
            if (options.highlightColor != null)
                options.series.highlightColor = options.highlightColor;

            // save options on axes for future reference
            for (i = 0; i < options.xaxes.length; ++i)
                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
            for (i = 0; i < options.yaxes.length; ++i)
                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];

            // add hooks from options
            for (var n in hooks)
                if (options.hooks[n] && options.hooks[n].length)
                    hooks[n] = hooks[n].concat(options.hooks[n]);

            executeHooks(hooks.processOptions, [options]);
        }

        function setData(d) {
            series = parseData(d);
            fillInSeriesOptions();
            processData();
        }

        function parseData(d) {
            var res = [];
            for (var i = 0; i < d.length; ++i) {
                var s = $.extend(true, {}, options.series);

                if (d[i].data != null) {
                    s.data = d[i].data; // move the data instead of deep-copy
                    delete d[i].data;

                    $.extend(true, s, d[i]);

                    d[i].data = s.data;
                }
                else
                    s.data = d[i];
                res.push(s);
            }

            return res;
        }

        function axisNumber(obj, coord) {
            var a = obj[coord + "axis"];
            if (typeof a == "object") // if we got a real axis, extract number
                a = a.n;
            if (typeof a != "number")
                a = 1; // default to first axis
            return a;
        }

        function allAxes() {
            // return flat array without annoying null entries
            return $.grep(xaxes.concat(yaxes), function (a) {
                return a;
            });
        }

        function canvasToAxisCoords(pos) {
            // return an object with x/y corresponding to all used axes
            var res = {}, i, axis;
            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used)
                    res["x" + axis.n] = axis.c2p(pos.left);
            }

            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used)
                    res["y" + axis.n] = axis.c2p(pos.top);
            }

            if (res.x1 !== undefined)
                res.x = res.x1;
            if (res.y1 !== undefined)
                res.y = res.y1;

            return res;
        }

        function axisToCanvasCoords(pos) {
            // get canvas coords from the first pair of x/y found in pos
            var res = {}, i, axis, key;

            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used) {
                    key = "x" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "x";

                    if (pos[key] != null) {
                        res.left = axis.p2c(pos[key]);
                        break;
                    }
                }
            }

            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used) {
                    key = "y" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "y";

                    if (pos[key] != null) {
                        res.top = axis.p2c(pos[key]);
                        break;
                    }
                }
            }

            return res;
        }

        function getOrCreateAxis(axes, number) {
            if (!axes[number - 1])
                axes[number - 1] = {
                    n: number, // save the number for future reference
                    direction: axes == xaxes ? "x" : "y",
                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)
                };

            return axes[number - 1];
        }

        function fillInSeriesOptions() {

            var neededColors = series.length, maxIndex = -1, i;

            // Subtract the number of series that already have fixed colors or
            // color indexes from the number that we still need to generate.

            for (i = 0; i < series.length; ++i) {
                var sc = series[i].color;
                if (sc != null) {
                    neededColors--;
                    if (typeof sc == "number" && sc > maxIndex) {
                        maxIndex = sc;
                    }
                }
            }

            // If any of the series have fixed color indexes, then we need to
            // generate at least as many colors as the highest index.

            if (neededColors <= maxIndex) {
                neededColors = maxIndex + 1;
            }

            // Generate all the colors, using first the option colors and then
            // variations on those colors once they're exhausted.

            var c, colors = [], colorPool = options.colors,
                colorPoolSize = colorPool.length, variation = 0;

            for (i = 0; i < neededColors; i++) {

                c = $.color.parse(colorPool[i % colorPoolSize] || "#666");

                // Each time we exhaust the colors in the pool we adjust
                // a scaling factor used to produce more variations on
                // those colors. The factor alternates negative/positive
                // to produce lighter/darker colors.

                // Reset the variation after every few cycles, or else
                // it will end up producing only white or black colors.

                if (i % colorPoolSize == 0 && i) {
                    if (variation >= 0) {
                        if (variation < 0.5) {
                            variation = -variation - 0.2;
                        } else variation = 0;
                    } else variation = -variation;
                }

                colors[i] = c.scale('rgb', 1 + variation);
            }

            // Finalize the series options, filling in their colors

            var colori = 0, s;
            for (i = 0; i < series.length; ++i) {
                s = series[i];

                // assign colors
                if (s.color == null) {
                    s.color = colors[colori].toString();
                    ++colori;
                }
                else if (typeof s.color == "number")
                    s.color = colors[s.color].toString();

                // turn on lines automatically in case nothing is set
                if (s.lines.show == null) {
                    var v, show = true;
                    for (v in s)
                        if (s[v] && s[v].show) {
                            show = false;
                            break;
                        }
                    if (show)
                        s.lines.show = true;
                }

                // If nothing was provided for lines.zero, default it to match
                // lines.fill, since areas by default should extend to zero.

                if (s.lines.zero == null) {
                    s.lines.zero = !!s.lines.fill;
                }

                // setup axes
                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
            }
        }

        function processData() {
            var topSentry = Number.POSITIVE_INFINITY,
                bottomSentry = Number.NEGATIVE_INFINITY,
                fakeInfinity = Number.MAX_VALUE,
                i, j, k, m, length,
                s, points, ps, x, y, axis, val, f, p,
                data, format;

            function updateAxis(axis, min, max) {
                if (min < axis.datamin && min != -fakeInfinity)
                    axis.datamin = min;
                if (max > axis.datamax && max != fakeInfinity)
                    axis.datamax = max;
            }

            $.each(allAxes(), function (_, axis) {
                // init axis
                axis.datamin = topSentry;
                axis.datamax = bottomSentry;
                axis.used = false;
            });

            for (i = 0; i < series.length; ++i) {
                s = series[i];
                s.datapoints = { points: [] };

                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);
            }

            // first pass: clean and copy data
            for (i = 0; i < series.length; ++i) {
                s = series[i];

                data = s.data;
                format = s.datapoints.format;

                if (!format) {
                    format = [];
                    // find out how to copy
                    format.push({ x: true, number: true, required: true });
                    format.push({ y: true, number: true, required: true });

                    if (s.bars.show || (s.lines.show && s.lines.fill)) {
                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));
                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });
                        if (s.bars.horizontal) {
                            delete format[format.length - 1].y;
                            format[format.length - 1].x = true;
                        }
                    }

                    s.datapoints.format = format;
                }

                if (s.datapoints.pointsize != null)
                    continue; // already filled in

                s.datapoints.pointsize = format.length;

                ps = s.datapoints.pointsize;
                points = s.datapoints.points;

                var insertSteps = s.lines.show && s.lines.steps;
                s.xaxis.used = s.yaxis.used = true;

                for (j = k = 0; j < data.length; ++j, k += ps) {
                    p = data[j];

                    var nullify = p == null;
                    if (!nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = p[m];
                            f = format[m];

                            if (f) {
                                if (f.number && val != null) {
                                    val = +val; // convert to number
                                    if (isNaN(val))
                                        val = null;
                                    else if (val == Infinity)
                                        val = fakeInfinity;
                                    else if (val == -Infinity)
                                        val = -fakeInfinity;
                                }

                                if (val == null) {
                                    if (f.required)
                                        nullify = true;

                                    if (f.defaultValue != null)
                                        val = f.defaultValue;
                                }
                            }

                            points[k + m] = val;
                        }
                    }

                    if (nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = points[k + m];
                            if (val != null) {
                                f = format[m];
                                // extract min/max info
                                if (f.autoscale) {
                                    if (f.x) {
                                        updateAxis(s.xaxis, val, val);
                                    }
                                    if (f.y) {
                                        updateAxis(s.yaxis, val, val);
                                    }
                                }
                            }
                            points[k + m] = null;
                        }
                    }
                    else {
                        // a little bit of line specific stuff that
                        // perhaps shouldn't be here, but lacking
                        // better means...
                        if (insertSteps && k > 0
                            && points[k - ps] != null
                            && points[k - ps] != points[k]
                            && points[k - ps + 1] != points[k + 1]) {
                            // copy the point to make room for a middle point
                            for (m = 0; m < ps; ++m)
                                points[k + ps + m] = points[k + m];

                            // middle point has same y
                            points[k + 1] = points[k - ps + 1];

                            // we've added a point, better reflect that
                            k += ps;
                        }
                    }
                }
            }

            // give the hooks a chance to run
            for (i = 0; i < series.length; ++i) {
                s = series[i];

                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);
            }

            // second pass: find datamax/datamin for auto-scaling
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                points = s.datapoints.points;
                ps = s.datapoints.pointsize;
                format = s.datapoints.format;

                var xmin = topSentry, ymin = topSentry,
                    xmax = bottomSentry, ymax = bottomSentry;

                for (j = 0; j < points.length; j += ps) {
                    if (points[j] == null)
                        continue;

                    for (m = 0; m < ps; ++m) {
                        val = points[j + m];
                        f = format[m];
                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)
                            continue;

                        if (f.x) {
                            if (val < xmin)
                                xmin = val;
                            if (val > xmax)
                                xmax = val;
                        }
                        if (f.y) {
                            if (val < ymin)
                                ymin = val;
                            if (val > ymax)
                                ymax = val;
                        }
                    }
                }

                if (s.bars.show) {
                    // make sure we got room for the bar on the dancing floor
                    var delta;

                    switch (s.bars.align) {
                        case "left":
                            delta = 0;
                            break;
                        case "right":
                            delta = -s.bars.barWidth;
                            break;
                        case "center":
                            delta = -s.bars.barWidth / 2;
                            break;
                        default:
                            throw new Error("Invalid bar alignment: " + s.bars.align);
                    }

                    if (s.bars.horizontal) {
                        ymin += delta;
                        ymax += delta + s.bars.barWidth;
                    }
                    else {
                        xmin += delta;
                        xmax += delta + s.bars.barWidth;
                    }
                }

                updateAxis(s.xaxis, xmin, xmax);
                updateAxis(s.yaxis, ymin, ymax);
            }

            $.each(allAxes(), function (_, axis) {
                if (axis.datamin == topSentry)
                    axis.datamin = null;
                if (axis.datamax == bottomSentry)
                    axis.datamax = null;
            });
        }

        function setupCanvases() {

            // Make sure the placeholder is clear of everything except canvases
            // from a previous plot in this container that we'll try to re-use.

            placeholder.css("padding", 0) // padding messes up the positioning
                .children(":not(.flot-base,.flot-overlay)").remove();

            if (placeholder.css("position") == 'static')
                placeholder.css("position", "relative"); // for positioning labels and overlay

            surface = new Canvas("flot-base", placeholder);
            overlay = new Canvas("flot-overlay", placeholder); // overlay canvas for interactive features

            ctx = surface.context;
            octx = overlay.context;

            // define which element we're listening for events on
            eventHolder = $(overlay.element).unbind();

            // If we're re-using a plot object, shut down the old one

            var existing = placeholder.data("plot");

            if (existing) {
                existing.shutdown();
                overlay.clear();
            }

            // save in case we get replotted
            placeholder.data("plot", plot);
        }

        function bindEvents() {
            // bind events
            if (options.grid.hoverable) {
                eventHolder.mousemove(onMouseMove);

                // Use bind, rather than .mouseleave, because we officially
                // still support jQuery 1.2.6, which doesn't define a shortcut
                // for mouseenter or mouseleave.  This was a bug/oversight that
                // was fixed somewhere around 1.3.x.  We can return to using
                // .mouseleave when we drop support for 1.2.6.

                eventHolder.bind("mouseleave", onMouseLeave);
            }

            if (options.grid.clickable)
                eventHolder.click(onClick);

            executeHooks(hooks.bindEvents, [eventHolder]);
        }

        function shutdown() {
            if (redrawTimeout)
                clearTimeout(redrawTimeout);

            eventHolder.unbind("mousemove", onMouseMove);
            eventHolder.unbind("mouseleave", onMouseLeave);
            eventHolder.unbind("click", onClick);

            executeHooks(hooks.shutdown, [eventHolder]);
        }

        function setTransformationHelpers(axis) {
            // set helper functions on the axis, assumes plot area
            // has been computed already

            function identity(x) {
                return x;
            }

            var s, m, t = axis.options.transform || identity,
                it = axis.options.inverseTransform;

            // precompute how much the axis is scaling a point
            // in canvas space
            if (axis.direction == "x") {
                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
                m = Math.min(t(axis.max), t(axis.min));
            }
            else {
                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
                s = -s;
                m = Math.max(t(axis.max), t(axis.min));
            }

            // data point to canvas coordinate
            if (t == identity) // slight optimization
                axis.p2c = function (p) {
                    return (p - m) * s;
                };
            else
                axis.p2c = function (p) {
                    return (t(p) - m) * s;
                };
            // canvas coordinate to data point
            if (!it)
                axis.c2p = function (c) {
                    return m + c / s;
                };
            else
                axis.c2p = function (c) {
                    return it(m + c / s);
                };
        }

        function measureTickLabels(axis) {

            var opts = axis.options,
                ticks = axis.ticks || [],
                labelWidth = opts.labelWidth || 0,
                labelHeight = opts.labelHeight || 0,
                maxWidth = labelWidth || axis.direction == "x" ? Math.floor(surface.width / (ticks.length || 1)) : null;
            legacyStyles = axis.direction + "Axis " + axis.direction + axis.n + "Axis",
                layer = "flot-" + axis.direction + "-axis flot-" + axis.direction + axis.n + "-axis " + legacyStyles,
                font = opts.font || "flot-tick-label tickLabel";

            for (var i = 0; i < ticks.length; ++i) {

                var t = ticks[i];

                if (!t.label)
                    continue;

                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);

                labelWidth = Math.max(labelWidth, info.width);
                labelHeight = Math.max(labelHeight, info.height);
            }

            axis.labelWidth = opts.labelWidth || labelWidth;
            axis.labelHeight = opts.labelHeight || labelHeight;
        }

        function allocateAxisBoxFirstPhase(axis) {
            // find the bounding box of the axis by looking at label
            // widths/heights and ticks, make room by diminishing the
            // plotOffset; this first phase only looks at one
            // dimension per axis, the other dimension depends on the
            // other axes so will have to wait

            var lw = axis.labelWidth,
                lh = axis.labelHeight,
                pos = axis.options.position,
                tickLength = axis.options.tickLength,
                axisMargin = options.grid.axisMargin,
                padding = options.grid.labelMargin,
                all = axis.direction == "x" ? xaxes : yaxes,
                index, innermost;

            // determine axis margin
            var samePosition = $.grep(all, function (a) {
                return a && a.options.position == pos && a.reserveSpace;
            });
            if ($.inArray(axis, samePosition) == samePosition.length - 1)
                axisMargin = 0; // outermost

            // determine tick length - if we're innermost, we can use "full"
            if (tickLength == null) {
                var sameDirection = $.grep(all, function (a) {
                    return a && a.reserveSpace;
                });

                innermost = $.inArray(axis, sameDirection) == 0;
                if (innermost)
                    tickLength = "full";
                else
                    tickLength = 5;
            }

            if (!isNaN(+tickLength))
                padding += +tickLength;

            // compute box
            if (axis.direction == "x") {
                lh += padding;

                if (pos == "bottom") {
                    plotOffset.bottom += lh + axisMargin;
                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };
                }
                else {
                    axis.box = { top: plotOffset.top + axisMargin, height: lh };
                    plotOffset.top += lh + axisMargin;
                }
            }
            else {
                lw += padding;

                if (pos == "left") {
                    axis.box = { left: plotOffset.left + axisMargin, width: lw };
                    plotOffset.left += lw + axisMargin;
                }
                else {
                    plotOffset.right += lw + axisMargin;
                    axis.box = { left: surface.width - plotOffset.right, width: lw };
                }
            }

            // save for future reference
            axis.position = pos;
            axis.tickLength = tickLength;
            axis.box.padding = padding;
            axis.innermost = innermost;
        }

        function allocateAxisBoxSecondPhase(axis) {
            // now that all axis boxes have been placed in one
            // dimension, we can set the remaining dimension coordinates
            if (axis.direction == "x") {
                axis.box.left = plotOffset.left - axis.labelWidth / 2;
                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;
            }
            else {
                axis.box.top = plotOffset.top - axis.labelHeight / 2;
                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;
            }
        }

        function adjustLayoutForThingsStickingOut() {
            // possibly adjust plot offset to ensure everything stays
            // inside the canvas and isn't clipped off

            var minMargin = options.grid.minBorderMargin,
                margins = { x: 0, y: 0 }, i, axis;

            // check stuff from the plot (FIXME: this should just read
            // a value from the series, otherwise it's impossible to
            // customize)
            if (minMargin == null) {
                minMargin = 0;
                for (i = 0; i < series.length; ++i)
                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth / 2));
            }

            margins.x = margins.y = Math.ceil(minMargin);

            // check axis labels, note we don't check the actual
            // labels but instead use the overall width/height to not
            // jump as much around with replots
            $.each(allAxes(), function (_, axis) {
                var dir = axis.direction;
                if (axis.reserveSpace)
                    margins[dir] = Math.ceil(Math.max(margins[dir], (dir == "x" ? axis.labelWidth : axis.labelHeight) / 2));
            });

            plotOffset.left = Math.max(margins.x, plotOffset.left);
            plotOffset.right = Math.max(margins.x, plotOffset.right);
            plotOffset.top = Math.max(margins.y, plotOffset.top);
            plotOffset.bottom = Math.max(margins.y, plotOffset.bottom);
        }

        function setupGrid() {
            var i, axes = allAxes(), showGrid = options.grid.show;

            // Initialize the plot's offset from the edge of the canvas

            for (var a in plotOffset) {
                var margin = options.grid.margin || 0;
                plotOffset[a] = typeof margin == "number" ? margin : margin[a] || 0;
            }

            executeHooks(hooks.processOffset, [plotOffset]);

            // If the grid is visible, add its border width to the offset

            for (var a in plotOffset) {
                if (typeof(options.grid.borderWidth) == "object") {
                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;
                }
                else {
                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;
                }
            }

            // init axes
            $.each(axes, function (_, axis) {
                axis.show = axis.options.show;
                if (axis.show == null)
                    axis.show = axis.used; // by default an axis is visible if it's got data

                axis.reserveSpace = axis.show || axis.options.reserveSpace;

                setRange(axis);
            });

            if (showGrid) {

                var allocatedAxes = $.grep(axes, function (axis) {
                    return axis.reserveSpace;
                });

                $.each(allocatedAxes, function (_, axis) {
                    // make the ticks
                    setupTickGeneration(axis);
                    setTicks(axis);
                    snapRangeToTicks(axis, axis.ticks);
                    // find labelWidth/Height for axis
                    measureTickLabels(axis);
                });

                // with all dimensions calculated, we can compute the
                // axis bounding boxes, start from the outside
                // (reverse order)
                for (i = allocatedAxes.length - 1; i >= 0; --i)
                    allocateAxisBoxFirstPhase(allocatedAxes[i]);

                // make sure we've got enough space for things that
                // might stick out
                adjustLayoutForThingsStickingOut();

                $.each(allocatedAxes, function (_, axis) {
                    allocateAxisBoxSecondPhase(axis);
                });
            }

            plotWidth = surface.width - plotOffset.left - plotOffset.right;
            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;

            // now we got the proper plot dimensions, we can compute the scaling
            $.each(axes, function (_, axis) {
                setTransformationHelpers(axis);
            });

            if (showGrid) {
                drawAxisLabels();
            }

            insertLegend();
        }

        function setRange(axis) {
            var opts = axis.options,
                min = +(opts.min != null ? opts.min : axis.datamin),
                max = +(opts.max != null ? opts.max : axis.datamax),
                delta = max - min;

            if (delta == 0.0) {
                // degenerate case
                var widen = max == 0 ? 1 : 0.01;

                if (opts.min == null)
                    min -= widen;
                // always widen max if we couldn't widen min to ensure we
                // don't fall into min == max which doesn't work
                if (opts.max == null || opts.min != null)
                    max += widen;
            }
            else {
                // consider autoscaling
                var margin = opts.autoscaleMargin;
                if (margin != null) {
                    if (opts.min == null) {
                        min -= delta * margin;
                        // make sure we don't go below zero if all values
                        // are positive
                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)
                            min = 0;
                    }
                    if (opts.max == null) {
                        max += delta * margin;
                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)
                            max = 0;
                    }
                }
            }
            axis.min = min;
            axis.max = max;
        }

        function setupTickGeneration(axis) {
            var opts = axis.options;

            // estimate number of ticks
            var noTicks;
            if (typeof opts.ticks == "number" && opts.ticks > 0)
                noTicks = opts.ticks;
            else
            // heuristic based on the model a*sqrt(x) fitted to
            // some data points that seemed reasonable
                noTicks = 0.3 * Math.sqrt(axis.direction == "x" ? surface.width : surface.height);

            var delta = (axis.max - axis.min) / noTicks,
                dec = -Math.floor(Math.log(delta) / Math.LN10),
                maxDec = opts.tickDecimals;

            if (maxDec != null && dec > maxDec) {
                dec = maxDec;
            }

            var magn = Math.pow(10, -dec),
                norm = delta / magn, // norm is between 1.0 and 10.0
                size;

            if (norm < 1.5) {
                size = 1;
            } else if (norm < 3) {
                size = 2;
                // special case for 2.5, requires an extra decimal
                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
                    size = 2.5;
                    ++dec;
                }
            } else if (norm < 7.5) {
                size = 5;
            } else {
                size = 10;
            }

            size *= magn;

            if (opts.minTickSize != null && size < opts.minTickSize) {
                size = opts.minTickSize;
            }

            axis.delta = delta;
            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);
            axis.tickSize = opts.tickSize || size;

            // Time mode was moved to a plug-in in 0.8, but since so many people use this
            // we'll add an especially friendly make sure they remembered to include it.

            if (opts.mode == "time" && !axis.tickGenerator) {
                throw new Error("Time mode requires the flot.time plugin.");
            }

            // Flot supports base-10 axes; any other mode else is handled by a plug-in,
            // like flot.time.js.

            if (!axis.tickGenerator) {

                axis.tickGenerator = function (axis) {

                    var ticks = [],
                        start = floorInBase(axis.min, axis.tickSize),
                        i = 0,
                        v = Number.NaN,
                        prev;

                    do {
                        prev = v;
                        v = start + i * axis.tickSize;
                        ticks.push(v);
                        ++i;
                    } while (v < axis.max && v != prev);
                    return ticks;
                };

                axis.tickFormatter = function (value, axis) {

                    var factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;
                    var formatted = "" + Math.round(value * factor) / factor;

                    // If tickDecimals was specified, ensure that we have exactly that
                    // much precision; otherwise default to the value's own precision.

                    if (axis.tickDecimals != null) {
                        var decimal = formatted.indexOf(".");
                        var precision = decimal == -1 ? 0 : formatted.length - decimal - 1;
                        if (precision < axis.tickDecimals) {
                            return (precision ? formatted : formatted + ".") + ("" + factor).substr(1, axis.tickDecimals - precision);
                        }
                    }

                    return formatted;
                };
            }

            if ($.isFunction(opts.tickFormatter))
                axis.tickFormatter = function (v, axis) {
                    return "" + opts.tickFormatter(v, axis);
                };

            if (opts.alignTicksWithAxis != null) {
                var otherAxis = (axis.direction == "x" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];
                if (otherAxis && otherAxis.used && otherAxis != axis) {
                    // consider snapping min/max to outermost nice ticks
                    var niceTicks = axis.tickGenerator(axis);
                    if (niceTicks.length > 0) {
                        if (opts.min == null)
                            axis.min = Math.min(axis.min, niceTicks[0]);
                        if (opts.max == null && niceTicks.length > 1)
                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
                    }

                    axis.tickGenerator = function (axis) {
                        // copy ticks, scaled to this axis
                        var ticks = [], v, i;
                        for (i = 0; i < otherAxis.ticks.length; ++i) {
                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);
                            v = axis.min + v * (axis.max - axis.min);
                            ticks.push(v);
                        }
                        return ticks;
                    };

                    // we might need an extra decimal since forced
                    // ticks don't necessarily fit naturally
                    if (!axis.mode && opts.tickDecimals == null) {
                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),
                            ts = axis.tickGenerator(axis);

                        // only proceed if the tick interval rounded
                        // with an extra decimal doesn't give us a
                        // zero at end
                        if (!(ts.length > 1 && /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))
                            axis.tickDecimals = extraDec;
                    }
                }
            }
        }

        function setTicks(axis) {
            var oticks = axis.options.ticks, ticks = [];
            if (oticks == null || (typeof oticks == "number" && oticks > 0))
                ticks = axis.tickGenerator(axis);
            else if (oticks) {
                if ($.isFunction(oticks))
                // generate the ticks
                    ticks = oticks(axis);
                else
                    ticks = oticks;
            }

            // clean up/labelify the supplied ticks, copy them over
            var i, v;
            axis.ticks = [];
            for (i = 0; i < ticks.length; ++i) {
                var label = null;
                var t = ticks[i];
                if (typeof t == "object") {
                    v = +t[0];
                    if (t.length > 1)
                        label = t[1];
                }
                else
                    v = +t;
                if (label == null)
                    label = axis.tickFormatter(v, axis);
                if (!isNaN(v))
                    axis.ticks.push({ v: v, label: label });
            }
        }

        function snapRangeToTicks(axis, ticks) {
            if (axis.options.autoscaleMargin && ticks.length > 0) {
                // snap to ticks
                if (axis.options.min == null)
                    axis.min = Math.min(axis.min, ticks[0].v);
                if (axis.options.max == null && ticks.length > 1)
                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
            }
        }

        function draw() {

            surface.clear();

            executeHooks(hooks.drawBackground, [ctx]);

            var grid = options.grid;

            // draw background, if any
            if (grid.show && grid.backgroundColor)
                drawBackground();

            if (grid.show && !grid.aboveData) {
                drawGrid();
            }

            for (var i = 0; i < series.length; ++i) {
                executeHooks(hooks.drawSeries, [ctx, series[i]]);
                drawSeries(series[i]);
            }

            executeHooks(hooks.draw, [ctx]);

            if (grid.show && grid.aboveData) {
                drawGrid();
            }

            surface.render();

            // A draw implies that either the axes or data have changed, so we
            // should probably update the overlay highlights as well.

            triggerRedrawOverlay();
        }

        function extractRange(ranges, coord) {
            var axis, from, to, key, axes = allAxes();

            for (var i = 0; i < axes.length; ++i) {
                axis = axes[i];
                if (axis.direction == coord) {
                    key = coord + axis.n + "axis";
                    if (!ranges[key] && axis.n == 1)
                        key = coord + "axis"; // support x1axis as xaxis
                    if (ranges[key]) {
                        from = ranges[key].from;
                        to = ranges[key].to;
                        break;
                    }
                }
            }

            // backwards-compat stuff - to be removed in future
            if (!ranges[key]) {
                axis = coord == "x" ? xaxes[0] : yaxes[0];
                from = ranges[coord + "1"];
                to = ranges[coord + "2"];
            }

            // auto-reverse as an added bonus
            if (from != null && to != null && from > to) {
                var tmp = from;
                from = to;
                to = tmp;
            }

            return { from: from, to: to, axis: axis };
        }

        function drawBackground() {
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, "rgba(255, 255, 255, 0)");
            ctx.fillRect(0, 0, plotWidth, plotHeight);
            ctx.restore();
        }

        function drawGrid() {
            var i, axes, bw, bc;

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // draw markings
            var markings = options.grid.markings;
            if (markings) {
                if ($.isFunction(markings)) {
                    axes = plot.getAxes();
                    // xmin etc. is backwards compatibility, to be
                    // removed in the future
                    axes.xmin = axes.xaxis.min;
                    axes.xmax = axes.xaxis.max;
                    axes.ymin = axes.yaxis.min;
                    axes.ymax = axes.yaxis.max;

                    markings = markings(axes);
                }

                for (i = 0; i < markings.length; ++i) {
                    var m = markings[i],
                        xrange = extractRange(m, "x"),
                        yrange = extractRange(m, "y");

                    // fill in missing
                    if (xrange.from == null)
                        xrange.from = xrange.axis.min;
                    if (xrange.to == null)
                        xrange.to = xrange.axis.max;
                    if (yrange.from == null)
                        yrange.from = yrange.axis.min;
                    if (yrange.to == null)
                        yrange.to = yrange.axis.max;

                    // clip
                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||
                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)
                        continue;

                    xrange.from = Math.max(xrange.from, xrange.axis.min);
                    xrange.to = Math.min(xrange.to, xrange.axis.max);
                    yrange.from = Math.max(yrange.from, yrange.axis.min);
                    yrange.to = Math.min(yrange.to, yrange.axis.max);

                    if (xrange.from == xrange.to && yrange.from == yrange.to)
                        continue;

                    // then draw
                    xrange.from = xrange.axis.p2c(xrange.from);
                    xrange.to = xrange.axis.p2c(xrange.to);
                    yrange.from = yrange.axis.p2c(yrange.from);
                    yrange.to = yrange.axis.p2c(yrange.to);

                    if (xrange.from == xrange.to || yrange.from == yrange.to) {
                        // draw line
                        ctx.beginPath();
                        ctx.strokeStyle = m.color || options.grid.markingsColor;
                        ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;
                        ctx.moveTo(xrange.from, yrange.from);
                        ctx.lineTo(xrange.to, yrange.to);
                        ctx.stroke();
                    }
                    else {
                        // fill area
                        ctx.fillStyle = m.color || options.grid.markingsColor;
                        ctx.fillRect(xrange.from, yrange.to,
                            xrange.to - xrange.from,
                            yrange.from - yrange.to);
                    }
                }
            }

            // draw the ticks
            axes = allAxes();
            bw = options.grid.borderWidth;

            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j], box = axis.box,
                    t = axis.tickLength, x, y, xoff, yoff;
                if (!axis.show || axis.ticks.length == 0)
                    continue;

                ctx.lineWidth = 1;

                // find the edges
                if (axis.direction == "x") {
                    x = 0;
                    if (t == "full")
                        y = (axis.position == "top" ? 0 : plotHeight);
                    else
                        y = box.top - plotOffset.top + (axis.position == "top" ? box.height : 0);
                }
                else {
                    y = 0;
                    if (t == "full")
                        x = (axis.position == "left" ? 0 : plotWidth);
                    else
                        x = box.left - plotOffset.left + (axis.position == "left" ? box.width : 0);
                }

                // draw tick bar
                if (!axis.innermost) {
                    ctx.strokeStyle = axis.options.color;
                    ctx.beginPath();
                    xoff = yoff = 0;
                    if (axis.direction == "x")
                        xoff = plotWidth + 1;
                    else
                        yoff = plotHeight + 1;

                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x") {
                            y = Math.floor(y) + 0.5;
                        } else {
                            x = Math.floor(x) + 0.5;
                        }
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                    ctx.stroke();
                }

                // draw ticks

                ctx.strokeStyle = axis.options.tickColor;

                ctx.beginPath();
                for (i = 0; i < axis.ticks.length; ++i) {
                    var v = axis.ticks[i].v;

                    xoff = yoff = 0;

                    if (isNaN(v) || v < axis.min || v > axis.max
                        // skip those lying on the axes if we got a border
                        || (t == "full"
                        && ((typeof bw == "object" && bw[axis.position] > 0) || bw > 0)
                        && (v == axis.min || v == axis.max)))
                        continue;

                    if (axis.direction == "x") {
                        x = axis.p2c(v);
                        yoff = t == "full" ? -plotHeight : t;

                        if (axis.position == "top")
                            yoff = -yoff;
                    }
                    else {
                        y = axis.p2c(v);
                        xoff = t == "full" ? -plotWidth : t;

                        if (axis.position == "left")
                            xoff = -xoff;
                    }

                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x")
                            x = Math.floor(x) + 0.5;
                        else
                            y = Math.floor(y) + 0.5;
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                }

                ctx.stroke();
            }


            // draw border
            if (bw) {
                // If either borderWidth or borderColor is an object, then draw the border
                // line by line instead of as one rectangle
                bc = options.grid.borderColor;
                if (typeof bw == "object" || typeof bc == "object") {
                    if (typeof bw !== "object") {
                        bw = {top: bw, right: bw, bottom: bw, left: bw};
                    }
                    if (typeof bc !== "object") {
                        bc = {top: bc, right: bc, bottom: bc, left: bc};
                    }

                    if (bw.top > 0) {
                        ctx.strokeStyle = bc.top;
                        ctx.lineWidth = bw.top;
                        ctx.beginPath();
                        ctx.moveTo(0 - bw.left, 0 - bw.top / 2);
                        ctx.lineTo(plotWidth, 0 - bw.top / 2);
                        ctx.stroke();
                    }

                    if (bw.right > 0) {
                        ctx.strokeStyle = bc.right;
                        ctx.lineWidth = bw.right;
                        ctx.beginPath();
                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);
                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);
                        ctx.stroke();
                    }

                    if (bw.bottom > 0) {
                        ctx.strokeStyle = bc.bottom;
                        ctx.lineWidth = bw.bottom;
                        ctx.beginPath();
                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);
                        ctx.lineTo(0, plotHeight + bw.bottom / 2);
                        ctx.stroke();
                    }

                    if (bw.left > 0) {
                        ctx.strokeStyle = bc.left;
                        ctx.lineWidth = bw.left;
                        ctx.beginPath();
                        ctx.moveTo(0 - bw.left / 2, plotHeight + bw.bottom);
                        ctx.lineTo(0 - bw.left / 2, 0);
                        ctx.stroke();
                    }
                }
                else {
                    ctx.lineWidth = bw;
                    ctx.strokeStyle = options.grid.borderColor;
                    ctx.strokeRect(-bw / 2, -bw / 2, plotWidth + bw, plotHeight + bw);
                }
            }

            ctx.restore();
        }

        function drawAxisLabels() {

            $.each(allAxes(), function (_, axis) {
                if (!axis.show || axis.ticks.length == 0)
                    return;

                var box = axis.box,
                    legacyStyles = axis.direction + "Axis " + axis.direction + axis.n + "Axis",
                    layer = "flot-" + axis.direction + "-axis flot-" + axis.direction + axis.n + "-axis " + legacyStyles,
                    font = axis.options.font || "flot-tick-label tickLabel",
                    tick, x, y, halign, valign;

                surface.removeText(layer);

                for (var i = 0; i < axis.ticks.length; ++i) {

                    tick = axis.ticks[i];
                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)
                        continue;

                    if (axis.direction == "x") {
                        halign = "center";
                        x = plotOffset.left + axis.p2c(tick.v);
                        if (axis.position == "bottom") {
                            y = box.top + box.padding;
                        } else {
                            y = box.top + box.height - box.padding;
                            valign = "bottom";
                        }
                    } else {
                        valign = "middle";
                        y = plotOffset.top + axis.p2c(tick.v);
                        if (axis.position == "left") {
                            x = box.left + box.width - box.padding;
                            halign = "right";
                        } else {
                            x = box.left + box.padding;
                        }
                    }

                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);
                }
            });
        }

        function drawSeries(series) {
            if (series.lines.show)
                drawSeriesLines(series);
            if (series.bars.show)
                drawSeriesBars(series);
            if (series.points.show)
                drawSeriesPoints(series);
        }

        function drawSeriesLines(series) {
            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    prevx = null, prevy = null;

                ctx.beginPath();
                for (var i = ps; i < points.length; i += ps) {
                    var x1 = points[i - ps], y1 = points[i - ps + 1],
                        x2 = points[i], y2 = points[i + 1];

                    if (x1 == null || x2 == null)
                        continue;

                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min) {
                        if (y2 < axisy.min)
                            continue;   // line segment is outside
                        // compute new intersection point
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min) {
                        if (y1 < axisy.min)
                            continue;
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max) {
                        if (y2 > axisy.max)
                            continue;
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max) {
                        if (y1 > axisy.max)
                            continue;
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (x1 != prevx || y1 != prevy)
                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);

                    prevx = x2;
                    prevy = y2;
                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
                }
                ctx.stroke();
            }

            function plotLineArea(datapoints, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),
                    i = 0, top, areaOpen = false,
                    ypos = 1, segmentStart = 0, segmentEnd = 0;

                // we process each segment in two turns, first forward
                // direction to sketch out top, then once we hit the
                // end we go backwards to sketch the bottom
                while (true) {
                    if (ps > 0 && i > points.length + ps)
                        break;

                    i += ps; // ps is negative if going backwards

                    var x1 = points[i - ps],
                        y1 = points[i - ps + ypos],
                        x2 = points[i], y2 = points[i + ypos];

                    if (areaOpen) {
                        if (ps > 0 && x1 != null && x2 == null) {
                            // at turning point
                            segmentEnd = i;
                            ps = -ps;
                            ypos = 2;
                            continue;
                        }

                        if (ps < 0 && i == segmentStart + ps) {
                            // done with the reverse sweep
                            ctx.fill();
                            areaOpen = false;
                            ps = -ps;
                            ypos = 1;
                            i = segmentStart = segmentEnd + ps;
                            continue;
                        }
                    }

                    if (x1 == null || x2 == null)
                        continue;

                    // clip x values

                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (!areaOpen) {
                        // open area
                        ctx.beginPath();
                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
                        areaOpen = true;
                    }

                    // now first check the case where both is outside
                    if (y1 >= axisy.max && y2 >= axisy.max) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
                        continue;
                    }
                    else if (y1 <= axisy.min && y2 <= axisy.min) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
                        continue;
                    }

                    // else it's a bit more complicated, there might
                    // be a flat maxed out rectangle first, then a
                    // triangular cutout or reverse; to find these
                    // keep track of the current x values
                    var x1old = x1, x2old = x2;

                    // clip the y values, without shortcutting, we
                    // go through all cases in turn

                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // if the x value was changed we got a rectangle
                    // to fill
                    if (x1 != x1old) {
                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));
                        // it goes to (x1, y1), but we fill that below
                    }

                    // fill triangular section, this sometimes result
                    // in redundant points if (x1, y1) hasn't changed
                    // from previous line to, but we just ignore that
                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));

                    // fill the other rectangle if it's there
                    if (x2 != x2old) {
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
                    }
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.lineJoin = "round";

            var lw = series.lines.lineWidth,
                sw = series.shadowSize;
            // FIXME: consider another form of shadow when filling is turned on
            if (lw > 0 && sw > 0) {
                // draw shadow as a thick and thin line with transparency
                ctx.lineWidth = sw;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                // position shadow at angle from the mid of line
                var angle = Math.PI / 18;
                plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 2), Math.cos(angle) * (lw / 2 + sw / 2), series.xaxis, series.yaxis);
                ctx.lineWidth = sw / 2;
                plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 4), Math.cos(angle) * (lw / 2 + sw / 4), series.xaxis, series.yaxis);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);
            if (fillStyle) {
                ctx.fillStyle = fillStyle;
                plotLineArea(series.datapoints, series.xaxis, series.yaxis);
            }

            if (lw > 0)
                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function drawSeriesPoints(series) {
            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {
                var points = datapoints.points, ps = datapoints.pointsize;

                for (var i = 0; i < points.length; i += ps) {
                    var x = points[i], y = points[i + 1];
                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                        continue;

                    ctx.beginPath();
                    x = axisx.p2c(x);
                    y = axisy.p2c(y) + offset;
                    if (symbol == "circle")
                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);
                    else
                        symbol(ctx, x, y, radius, shadow);
                    ctx.closePath();

                    if (fillStyle) {
                        ctx.fillStyle = fillStyle;
                        ctx.fill();
                    }
                    ctx.stroke();
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            var lw = series.points.lineWidth,
                sw = series.shadowSize,
                radius = series.points.radius,
                symbol = series.points.symbol;

            // If the user sets the line width to 0, we change it to a very 
            // small value. A line width of 0 seems to force the default of 1.
            // Doing the conditional here allows the shadow setting to still be 
            // optional even with a lineWidth of 0.

            if (lw == 0)
                lw = 0.0001;

            if (lw > 0 && sw > 0) {
                // draw shadow in two steps
                var w = sw / 2;
                ctx.lineWidth = w;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                plotPoints(series.datapoints, radius, null, w + w / 2, true,
                    series.xaxis, series.yaxis, symbol);

                ctx.strokeStyle = "rgba(0,0,0,0.2)";
                plotPoints(series.datapoints, radius, null, w / 2, true,
                    series.xaxis, series.yaxis, symbol);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            plotPoints(series.datapoints, radius,
                getFillStyle(series.points, series.color), 0, false,
                series.xaxis, series.yaxis, symbol);
            ctx.restore();
        }

        function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {
            var left, right, bottom, top,
                drawLeft, drawRight, drawTop, drawBottom,
                tmp;

            // in horizontal mode, we start the bar from the left
            // instead of from the bottom so it appears to be
            // horizontal rather than vertical
            if (horizontal) {
                drawBottom = drawRight = drawTop = true;
                drawLeft = false;
                left = b;
                right = x;
                top = y + barLeft;
                bottom = y + barRight;

                // account for negative bars
                if (right < left) {
                    tmp = right;
                    right = left;
                    left = tmp;
                    drawLeft = true;
                    drawRight = false;
                }
            }
            else {
                drawLeft = drawRight = drawTop = true;
                drawBottom = false;
                left = x + barLeft;
                right = x + barRight;
                bottom = b;
                top = y;

                // account for negative bars
                if (top < bottom) {
                    tmp = top;
                    top = bottom;
                    bottom = tmp;
                    drawBottom = true;
                    drawTop = false;
                }
            }

            // clip
            if (right < axisx.min || left > axisx.max ||
                top < axisy.min || bottom > axisy.max)
                return;

            if (left < axisx.min) {
                left = axisx.min;
                drawLeft = false;
            }

            if (right > axisx.max) {
                right = axisx.max;
                drawRight = false;
            }

            if (bottom < axisy.min) {
                bottom = axisy.min;
                drawBottom = false;
            }

            if (top > axisy.max) {
                top = axisy.max;
                drawTop = false;
            }

            left = axisx.p2c(left);
            bottom = axisy.p2c(bottom);
            right = axisx.p2c(right);
            top = axisy.p2c(top);

            // fill the bar
            if (fillStyleCallback) {
                c.beginPath();
                c.moveTo(left, bottom);
                c.lineTo(left, top);
                c.lineTo(right, top);
                c.lineTo(right, bottom);
                c.fillStyle = fillStyleCallback(bottom, top);
                c.fill();
            }

            // draw outline
            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
                c.beginPath();

                // FIXME: inline moveTo is buggy with excanvas
                c.moveTo(left, bottom + offset);
                if (drawLeft)
                    c.lineTo(left, top + offset);
                else
                    c.moveTo(left, top + offset);
                if (drawTop)
                    c.lineTo(right, top + offset);
                else
                    c.moveTo(right, top + offset);
                if (drawRight)
                    c.lineTo(right, bottom + offset);
                else
                    c.moveTo(right, bottom + offset);
                if (drawBottom)
                    c.lineTo(left, bottom + offset);
                else
                    c.moveTo(left, bottom + offset);
                c.stroke();
            }
        }

        function drawSeriesBars(series) {
            function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {
                var points = datapoints.points, ps = datapoints.pointsize;

                for (var i = 0; i < points.length; i += ps) {
                    if (points[i] == null)
                        continue;
                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // FIXME: figure out a way to add shadows (for instance along the right edge)
            ctx.lineWidth = series.bars.lineWidth;
            ctx.strokeStyle = series.color;

            var barLeft;

            switch (series.bars.align) {
                case "left":
                    barLeft = 0;
                    break;
                case "right":
                    barLeft = -series.bars.barWidth;
                    break;
                case "center":
                    barLeft = -series.bars.barWidth / 2;
                    break;
                default:
                    throw new Error("Invalid bar alignment: " + series.bars.align);
            }

            var fillStyleCallback = series.bars.fill ? function (bottom, top) {
                return getFillStyle(series.bars, series.color, bottom, top);
            } : null;
            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function getFillStyle(filloptions, seriesColor, bottom, top) {
            var fill = filloptions.fill;
            if (!fill)
                return null;

            if (filloptions.fillColor)
                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);

            var c = $.color.parse(seriesColor);
            c.a = typeof fill == "number" ? fill : 0.4;
            c.normalize();
            return c.toString();
        }

        function insertLegend() {

            placeholder.find(".legend").remove();

            if (!options.legend.show)
                return;

            var fragments = [], entries = [], rowStarted = false,
                lf = options.legend.labelFormatter, s, label;

            // Build a list of legend entries, with each having a label and a color

            for (var i = 0; i < series.length; ++i) {
                s = series[i];
                if (s.label) {
                    label = lf ? lf(s.label, s) : s.label;
                    if (label) {
                        entries.push({
                            label: label,
                            color: s.color
                        });
                    }
                }
            }

            // Sort the legend using either the default or a custom comparator

            if (options.legend.sorted) {
                if ($.isFunction(options.legend.sorted)) {
                    entries.sort(options.legend.sorted);
                } else if (options.legend.sorted == "reverse") {
                    entries.reverse();
                } else {
                    var ascending = options.legend.sorted != "descending";
                    entries.sort(function (a, b) {
                        return a.label == b.label ? 0 : (
                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR
                            );
                    });
                }
            }

            // Generate markup for the list of entries, in their final order

            for (var i = 0; i < entries.length; ++i) {

                var entry = entries[i];

                if (i % options.legend.noColumns == 0) {
                    if (rowStarted)
                        fragments.push('</tr>');
                    fragments.push('<tr>');
                    rowStarted = true;
                }

                fragments.push(
                    '<td class="legendColorBox"><div style="border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden"></div></div></td>' +
                        '<td class="legendLabel">' + entry.label + '</td>'
                );
            }

            if (rowStarted)
                fragments.push('</tr>');

            if (fragments.length == 0)
                return;

            var table = '<table style="font-size:smaller;color:' + options.grid.color + '">' + fragments.join("") + '</table>';
            if (options.legend.container != null)
                $(options.legend.container).html(table);
            else {
                var pos = "",
                    p = options.legend.position,
                    m = options.legend.margin;
                if (m[0] == null)
                    m = [m, m];
                if (p.charAt(0) == "n")
                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';
                else if (p.charAt(0) == "s")
                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';
                if (p.charAt(1) == "e")
                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';
                else if (p.charAt(1) == "w")
                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';
                var legend = $('<div class="legend">' + table.replace('style="', 'style="position:absolute;' + pos + ';') + '</div>').appendTo(placeholder);
                if (options.legend.backgroundOpacity != 0.0) {
                    // put in the transparent background
                    // separately to avoid blended labels and
                    // label boxes
                    var c = options.legend.backgroundColor;
                    if (c == null) {
                        c = options.grid.backgroundColor;
                        if (c && typeof c == "string")
                            c = $.color.parse(c);
                        else
                            c = $.color.extract(legend, 'background-color');
                        c.a = 1;
                        c = c.toString();
                    }
                    var div = legend.children();
                    $('<div style="position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos + 'background-color:' + c + ';"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);
                }
            }
        }


        // interactive features

        var highlights = [],
            redrawTimeout = null;

        // returns the data item the mouse is over, or null if none is found
        function findNearbyItem(mouseX, mouseY, seriesFilter) {
            var maxDistance = options.grid.mouseActiveRadius,
                smallestDistance = maxDistance * maxDistance + 1,
                item = null, foundPoint = false, i, j, ps;

            for (i = series.length - 1; i >= 0; --i) {
                if (!seriesFilter(series[i]))
                    continue;

                var s = series[i],
                    axisx = s.xaxis,
                    axisy = s.yaxis,
                    points = s.datapoints.points,
                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster
                    my = axisy.c2p(mouseY),
                    maxx = maxDistance / axisx.scale,
                    maxy = maxDistance / axisy.scale;

                ps = s.datapoints.pointsize;
                // with inverse transforms, we can't use the maxx/maxy
                // optimization, sadly
                if (axisx.options.inverseTransform)
                    maxx = Number.MAX_VALUE;
                if (axisy.options.inverseTransform)
                    maxy = Number.MAX_VALUE;

                if (s.lines.show || s.points.show) {
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1];
                        if (x == null)
                            continue;

                        // For points and lines, the cursor must be within a
                        // certain distance to the data point
                        if (x - mx > maxx || x - mx < -maxx ||
                            y - my > maxy || y - my < -maxy)
                            continue;

                        // We have to calculate distances in pixels, not in
                        // data units, because the scales of the axes may be different
                        var dx = Math.abs(axisx.p2c(x) - mouseX),
                            dy = Math.abs(axisy.p2c(y) - mouseY),
                            dist = dx * dx + dy * dy; // we save the sqrt

                        // use <= to ensure last point takes precedence
                        // (last generally means on top of)
                        if (dist < smallestDistance) {
                            smallestDistance = dist;
                            item = [i, j / ps];
                        }
                    }
                }

                if (s.bars.show && !item) { // no other point can be nearby
                    var barLeft = s.bars.align == "left" ? 0 : -s.bars.barWidth / 2,
                        barRight = barLeft + s.bars.barWidth;

                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1], b = points[j + 2];
                        if (x == null)
                            continue;

                        // for a bar graph, the cursor must be inside the bar
                        if (series[i].bars.horizontal ?
                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&
                                my >= y + barLeft && my <= y + barRight) :
                            (mx >= x + barLeft && mx <= x + barRight &&
                                my >= Math.min(b, y) && my <= Math.max(b, y)))
                            item = [i, j / ps];
                    }
                }
            }

            if (item) {
                i = item[0];
                j = item[1];
                ps = series[i].datapoints.pointsize;

                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),
                    dataIndex: j,
                    series: series[i],
                    seriesIndex: i };
            }

            return null;
        }

        function onMouseMove(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                    function (s) {
                        return s["hoverable"] != false;
                    });
        }

        function onMouseLeave(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                    function (s) {
                        return false;
                    });
        }

        function onClick(e) {
            triggerClickHoverEvent("plotclick", e,
                function (s) {
                    return s["clickable"] != false;
                });
        }

        // trigger click or hover event (they send the same parameters
        // so we share their code)
        function triggerClickHoverEvent(eventname, event, seriesFilter) {
            var offset = eventHolder.offset(),
                canvasX = event.pageX - offset.left - plotOffset.left,
                canvasY = event.pageY - offset.top - plotOffset.top,
                pos = canvasToAxisCoords({ left: canvasX, top: canvasY });

            pos.pageX = event.pageX;
            pos.pageY = event.pageY;

            var item = findNearbyItem(canvasX, canvasY, seriesFilter);

            if (item) {
                // fill in mouse pos for any listeners out there
                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);
                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);
            }

            if (options.grid.autoHighlight) {
                // clear auto-highlights
                for (var i = 0; i < highlights.length; ++i) {
                    var h = highlights[i];
                    if (h.auto == eventname && !(item && h.series == item.series &&
                        h.point[0] == item.datapoint[0] &&
                        h.point[1] == item.datapoint[1]))
                        unhighlight(h.series, h.point);
                }

                if (item)
                    highlight(item.series, item.datapoint, eventname);
            }

            placeholder.trigger(eventname, [ pos, item ]);
        }

        function triggerRedrawOverlay() {
            var t = options.interaction.redrawOverlayInterval;
            if (t == -1) {      // skip event queue
                drawOverlay();
                return;
            }

            if (!redrawTimeout)
                redrawTimeout = setTimeout(drawOverlay, t);
        }

        function drawOverlay() {
            redrawTimeout = null;

            // draw highlights
            octx.save();
            overlay.clear();
            octx.translate(plotOffset.left, plotOffset.top);

            var i, hi;
            for (i = 0; i < highlights.length; ++i) {
                hi = highlights[i];

                if (hi.series.bars.show)
                    drawBarHighlight(hi.series, hi.point);
                else
                    drawPointHighlight(hi.series, hi.point);
            }
            octx.restore();

            executeHooks(hooks.drawOverlay, [octx]);
        }

        function highlight(s, point, auto) {
            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }

            var i = indexOfHighlight(s, point);
            if (i == -1) {
                highlights.push({ series: s, point: point, auto: auto });

                triggerRedrawOverlay();
            }
            else if (!auto)
                highlights[i].auto = false;
        }

        function unhighlight(s, point) {
            if (s == null && point == null) {
                highlights = [];
                triggerRedrawOverlay();
                return;
            }

            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }

            var i = indexOfHighlight(s, point);
            if (i != -1) {
                highlights.splice(i, 1);

                triggerRedrawOverlay();
            }
        }

        function indexOfHighlight(s, p) {
            for (var i = 0; i < highlights.length; ++i) {
                var h = highlights[i];
                if (h.series == s && h.point[0] == p[0]
                    && h.point[1] == p[1])
                    return i;
            }
            return -1;
        }

        function drawPointHighlight(series, point) {
            var x = point[0], y = point[1],
                axisx = series.xaxis, axisy = series.yaxis,
                highlightColor = (typeof series.highlightColor === "string") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();

            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                return;

            var pointRadius = series.points.radius + series.points.lineWidth / 2;
            octx.lineWidth = pointRadius;
            octx.strokeStyle = highlightColor;
            var radius = 1.5 * pointRadius;
            x = axisx.p2c(x);
            y = axisy.p2c(y);

            octx.beginPath();
            if (series.points.symbol == "circle")
                octx.arc(x, y, radius, 0, 2 * Math.PI, false);
            else
                series.points.symbol(octx, x, y, radius, false);
            octx.closePath();
            octx.stroke();
        }

        function drawBarHighlight(series, point) {
            var highlightColor = (typeof series.highlightColor === "string") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),
                fillStyle = highlightColor,
                barLeft = series.bars.align == "left" ? 0 : -series.bars.barWidth / 2;

            octx.lineWidth = series.bars.lineWidth;
            octx.strokeStyle = highlightColor;

            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,
                0, function () {
                    return fillStyle;
                }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);
        }

        function getColorOrGradient(spec, bottom, top, defaultColor) {
            if (typeof spec == "string")
                return spec;
            else {
                // assume this is a gradient spec; IE currently only
                // supports a simple vertical gradient properly, so that's
                // what we support too
                var gradient = ctx.createLinearGradient(0, top, 0, bottom);

                for (var i = 0, l = spec.colors.length; i < l; ++i) {
                    var c = spec.colors[i];
                    if (typeof c != "string") {
                        var co = $.color.parse(defaultColor);
                        if (c.brightness != null)
                            co = co.scale('rgb', c.brightness);
                        if (c.opacity != null)
                            co.a *= c.opacity;
                        c = co.toString();
                    }
                    gradient.addColorStop(i / (l - 1), c);
                }

                return gradient;
            }
        }
    }

    // Add the plot function to the top level of the jQuery object

    $.plot = function (placeholder, data, options) {
        //var t0 = new Date();
        var plot = new Plot($(placeholder), data, options, $.plot.plugins);
        //(window.console ? console.log : alert)("time used (msecs): " + ((new Date()).getTime() - t0.getTime()));
        return plot;
    };

    $.plot.version = "0.8.1";

    $.plot.plugins = [];

    // Also add the plot function as a chainable property

    $.fn.plot = function (data, options) {
        return this.each(function () {
            $.plot(this, data, options);
        });
    };

    // round to nearby lower multiple of base
    function floorInBase(n, base) {
        return base * Math.floor(n / base);
    }

})(jQuery);

/* Flot plugin for automatically redrawing plots as the placeholder resizes.

 Copyright (c) 2007-2013 IOLA and Ole Laursen.
 Licensed under the MIT license.

 It works by listening for changes on the placeholder div (through the jQuery
 resize event plugin) - if the size changes, it will redraw the plot.

 There are no options. If you need to disable the plugin for some plots, you
 can just fix the size of their placeholders.

 */

/* Inline dependency:
 * jQuery resize event - v1.1 - 3/14/2010
 * http://benalman.com/projects/jquery-resize-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

(function ($, h, c) {
    var a = $([]), e = $.resize = $.extend($.resize, {}), i, k = "setTimeout", j = "resize", d = j + "-special-event", b = "delay", f = "throttleWindow";
    e[b] = 250;
    e[f] = true;
    $.event.special[j] = {setup: function () {
        if (!e[f] && this[k]) {
            return false
        }
        var l = $(this);
        a = a.add(l);
        $.data(this, d, {w: l.width(), h: l.height()});
        if (a.length === 1) {
            g()
        }
    }, teardown: function () {
        if (!e[f] && this[k]) {
            return false
        }
        var l = $(this);
        a = a.not(l);
        l.removeData(d);
        if (!a.length) {
            clearTimeout(i)
        }
    }, add: function (l) {
        if (!e[f] && this[k]) {
            return false
        }
        var n;

        function m(s, o, p) {
            var q = $(this), r = $.data(this, d);
            r.w = o !== c ? o : q.width();
            r.h = p !== c ? p : q.height();
            n.apply(this, arguments)
        }

        if ($.isFunction(l)) {
            n = l;
            return m
        } else {
            n = l.handler;
            l.handler = m
        }
    }};
    function g() {
        i = h[k](function () {
            a.each(function () {
                var n = $(this), m = n.width(), l = n.height(), o = $.data(this, d);
                if (m !== o.w || l !== o.h) {
                    n.trigger(j, [o.w = m, o.h = l])
                }
            });
            g()
        }, e[b])
    }
})(jQuery, this);

(function ($) {
    var options = { }; // no options

    function init(plot) {
        function onResize() {
            var placeholder = plot.getPlaceholder();

            // somebody might have hidden us and we can't plot
            // when we don't have the dimensions
            if (placeholder.width() == 0 || placeholder.height() == 0)
                return;

            plot.resize();
            plot.setupGrid();
            plot.draw();
        }

        function bindEvents(plot, eventHolder) {
            plot.getPlaceholder().resize(onResize);
        }

        function shutdown(plot, eventHolder) {
            plot.getPlaceholder().unbind("resize", onResize);
        }

        plot.hooks.bindEvents.push(bindEvents);
        plot.hooks.shutdown.push(shutdown);
    }

    $.plot.plugins.push({
        init: init,
        options: options,
        name: 'resize',
        version: '1.0'
    });
})(jQuery);

(function (c) {
    var j = {init: function (a) {
        var b = {color: c(this).css("background-color"), reach: 20, speed: 1E3, pause: 0, glow: !0, repeat: !0, onHover: !1};
        c(this).css({"-moz-outline-radius": c(this).css("border-top-left-radius"), "-webkit-outline-radius": c(this).css("border-top-left-radius"), "outline-radius": c(this).css("border-top-left-radius")});
        a && c.extend(b, a);
        b.color = c("<div style='background:" + b.color + "'></div>").css("background-color");
        !0 !== b.repeat && (!isNaN(b.repeat) && 0 < b.repeat) && (b.repeat -= 1);
        return this.each(function () {
            b.onHover ?
                c(this).bind("mouseover",function () {
                    g(b, this, 0)
                }).bind("mouseout", function () {
                    c(this).pulsate("destroy")
                }) : g(b, this, 0)
        })
    }, destroy: function () {
        return this.each(function () {
            clearTimeout(this.timer);
            c(this).css("outline", 0)
        })
    }}, g = function (a, b, d) {
        var f = a.reach;
        d = d > f ? 0 : d;
        var h = (f - d) / f, e = a.color.split(","), h = "rgba(" + e[0].split("(")[1] + "," + e[1] + "," + e[2].split(")")[0] + "," + h + ")", e = {outline: "2px solid " + h};
        a.glow ? (e["box-shadow"] = "0px 0px " + parseInt(d / 1.5) + "px " + h, userAgent = navigator.userAgent || "", /(chrome)[ \/]([\w.]+)/.test(userAgent.toLowerCase()) &&
            (e["outline-offset"] = d + "px", e["outline-radius"] = "100 px")) : e["outline-offset"] = d + "px";
        c(b).css(e);
        b.timer = setTimeout(function () {
            if (d >= f && !a.repeat)return c(b).pulsate("destroy"), !1;
            if (d >= f && !0 !== a.repeat && !isNaN(a.repeat) && 0 < a.repeat)a.repeat -= 1; else if (a.pause && d >= f) {
                var e = d + 1;
                innerfunc = function () {
                    g(a, b, e)
                };
                setTimeout(innerfunc, a.pause);
                return!1
            }
            g(a, b, d + 1)
        }, a.speed / f)
    };
    c.fn.pulsate = function (a) {
        if (j[a])return j[a].apply(this, Array.prototype.slice.call(arguments, 1));
        if ("object" === typeof a || !a)return j.init.apply(this,
            arguments);
        c.error("Method " + a + " does not exist on jQuery.pulsate")
    }
})(jQuery);
// moment.js
// version : 2.0.0
// author : Tim Wood
// license : MIT
// momentjs.com
(function (e) {
    function O(e, t) {
        return function (n) {
            return j(e.call(this, n), t)
        }
    }

    function M(e) {
        return function (t) {
            return this.lang().ordinal(e.call(this, t))
        }
    }

    function _() {
    }

    function D(e) {
        H(this, e)
    }

    function P(e) {
        var t = this._data = {}, n = e.years || e.year || e.y || 0, r = e.months || e.month || e.M || 0, i = e.weeks || e.week || e.w || 0, s = e.days || e.day || e.d || 0, o = e.hours || e.hour || e.h || 0, u = e.minutes || e.minute || e.m || 0, a = e.seconds || e.second || e.s || 0, f = e.milliseconds || e.millisecond || e.ms || 0;
        this._milliseconds = f + a * 1e3 + u * 6e4 + o * 36e5, this._days = s + i * 7, this._months = r + n * 12, t.milliseconds = f % 1e3, a += B(f / 1e3), t.seconds = a % 60, u += B(a / 60), t.minutes = u % 60, o += B(u / 60), t.hours = o % 24, s += B(o / 24), s += i * 7, t.days = s % 30, r += B(s / 30), t.months = r % 12, n += B(r / 12), t.years = n
    }

    function H(e, t) {
        for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]);
        return e
    }

    function B(e) {
        return e < 0 ? Math.ceil(e) : Math.floor(e)
    }

    function j(e, t) {
        var n = e + "";
        while (n.length < t)n = "0" + n;
        return n
    }

    function F(e, t, n) {
        var r = t._milliseconds, i = t._days, s = t._months, o;
        r && e._d.setTime(+e + r * n), i && e.date(e.date() + i * n), s && (o = e.date(), e.date(1).month(e.month() + s * n).date(Math.min(o, e.daysInMonth())))
    }

    function I(e) {
        return Object.prototype.toString.call(e) === "[object Array]"
    }

    function q(e, t) {
        var n = Math.min(e.length, t.length), r = Math.abs(e.length - t.length), i = 0, s;
        for (s = 0; s < n; s++)~~e[s] !== ~~t[s] && i++;
        return i + r
    }

    function R(e, t) {
        return t.abbr = e, s[e] || (s[e] = new _), s[e].set(t), s[e]
    }

    function U(e) {
        return e ? (!s[e] && o && require("./lang/" + e), s[e]) : t.fn._lang
    }

    function z(e) {
        return e.match(/\[.*\]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "")
    }

    function W(e) {
        var t = e.match(a), n, r;
        for (n = 0, r = t.length; n < r; n++)A[t[n]] ? t[n] = A[t[n]] : t[n] = z(t[n]);
        return function (i) {
            var s = "";
            for (n = 0; n < r; n++)s += typeof t[n].call == "function" ? t[n].call(i, e) : t[n];
            return s
        }
    }

    function X(e, t) {
        function r(t) {
            return e.lang().longDateFormat(t) || t
        }

        var n = 5;
        while (n-- && f.test(t))t = t.replace(f, r);
        return C[t] || (C[t] = W(t)), C[t](e)
    }

    function V(e) {
        switch (e) {
            case"DDDD":
                return p;
            case"YYYY":
                return d;
            case"YYYYY":
                return v;
            case"S":
            case"SS":
            case"SSS":
            case"DDD":
                return h;
            case"MMM":
            case"MMMM":
            case"dd":
            case"ddd":
            case"dddd":
            case"a":
            case"A":
                return m;
            case"X":
                return b;
            case"Z":
            case"ZZ":
                return g;
            case"T":
                return y;
            case"MM":
            case"DD":
            case"YY":
            case"HH":
            case"hh":
            case"mm":
            case"ss":
            case"M":
            case"D":
            case"d":
            case"H":
            case"h":
            case"m":
            case"s":
                return c;
            default:
                return new RegExp(e.replace("\\", ""))
        }
    }

    function $(e, t, n) {
        var r, i, s = n._a;
        switch (e) {
            case"M":
            case"MM":
                s[1] = t == null ? 0 : ~~t - 1;
                break;
            case"MMM":
            case"MMMM":
                r = U(n._l).monthsParse(t), r != null ? s[1] = r : n._isValid = !1;
                break;
            case"D":
            case"DD":
            case"DDD":
            case"DDDD":
                t != null && (s[2] = ~~t);
                break;
            case"YY":
                s[0] = ~~t + (~~t > 68 ? 1900 : 2e3);
                break;
            case"YYYY":
            case"YYYYY":
                s[0] = ~~t;
                break;
            case"a":
            case"A":
                n._isPm = (t + "").toLowerCase() === "pm";
                break;
            case"H":
            case"HH":
            case"h":
            case"hh":
                s[3] = ~~t;
                break;
            case"m":
            case"mm":
                s[4] = ~~t;
                break;
            case"s":
            case"ss":
                s[5] = ~~t;
                break;
            case"S":
            case"SS":
            case"SSS":
                s[6] = ~~(("0." + t) * 1e3);
                break;
            case"X":
                n._d = new Date(parseFloat(t) * 1e3);
                break;
            case"Z":
            case"ZZ":
                n._useUTC = !0, r = (t + "").match(x), r && r[1] && (n._tzh = ~~r[1]), r && r[2] && (n._tzm = ~~r[2]), r && r[0] === "+" && (n._tzh = -n._tzh, n._tzm = -n._tzm)
        }
        t == null && (n._isValid = !1)
    }

    function J(e) {
        var t, n, r = [];
        if (e._d)return;
        for (t = 0; t < 7; t++)e._a[t] = r[t] = e._a[t] == null ? t === 2 ? 1 : 0 : e._a[t];
        r[3] += e._tzh || 0, r[4] += e._tzm || 0, n = new Date(0), e._useUTC ? (n.setUTCFullYear(r[0], r[1], r[2]), n.setUTCHours(r[3], r[4], r[5], r[6])) : (n.setFullYear(r[0], r[1], r[2]), n.setHours(r[3], r[4], r[5], r[6])), e._d = n
    }

    function K(e) {
        var t = e._f.match(a), n = e._i, r, i;
        e._a = [];
        for (r = 0; r < t.length; r++)i = (V(t[r]).exec(n) || [])[0], i && (n = n.slice(n.indexOf(i) + i.length)), A[t[r]] && $(t[r], i, e);
        e._isPm && e._a[3] < 12 && (e._a[3] += 12), e._isPm === !1 && e._a[3] === 12 && (e._a[3] = 0), J(e)
    }

    function Q(e) {
        var t, n, r, i = 99, s, o, u;
        while (e._f.length) {
            t = H({}, e), t._f = e._f.pop(), K(t), n = new D(t);
            if (n.isValid()) {
                r = n;
                break
            }
            u = q(t._a, n.toArray()), u < i && (i = u, r = n)
        }
        H(e, r)
    }

    function G(e) {
        var t, n = e._i;
        if (w.exec(n)) {
            e._f = "YYYY-MM-DDT";
            for (t = 0; t < 4; t++)if (S[t][1].exec(n)) {
                e._f += S[t][0];
                break
            }
            g.exec(n) && (e._f += " Z"), K(e)
        } else e._d = new Date(n)
    }

    function Y(t) {
        var n = t._i, r = u.exec(n);
        n === e ? t._d = new Date : r ? t._d = new Date(+r[1]) : typeof n == "string" ? G(t) : I(n) ? (t._a = n.slice(0), J(t)) : t._d = n instanceof Date ? new Date(+n) : new Date(n)
    }

    function Z(e, t, n, r, i) {
        return i.relativeTime(t || 1, !!n, e, r)
    }

    function et(e, t, n) {
        var i = r(Math.abs(e) / 1e3), s = r(i / 60), o = r(s / 60), u = r(o / 24), a = r(u / 365), f = i < 45 && ["s", i] || s === 1 && ["m"] || s < 45 && ["mm", s] || o === 1 && ["h"] || o < 22 && ["hh", o] || u === 1 && ["d"] || u <= 25 && ["dd", u] || u <= 45 && ["M"] || u < 345 && ["MM", r(u / 30)] || a === 1 && ["y"] || ["yy", a];
        return f[2] = t, f[3] = e > 0, f[4] = n, Z.apply({}, f)
    }

    function tt(e, n, r) {
        var i = r - n, s = r - e.day();
        return s > i && (s -= 7), s < i - 7 && (s += 7), Math.ceil(t(e).add("d", s).dayOfYear() / 7)
    }

    function nt(e) {
        var n = e._i, r = e._f;
        return n === null || n === "" ? null : (typeof n == "string" && (e._i = n = U().preparse(n)), t.isMoment(n) ? (e = H({}, n), e._d = new Date(+n._d)) : r ? I(r) ? Q(e) : K(e) : Y(e), new D(e))
    }

    function rt(e, n) {
        t.fn[e] = t.fn[e + "s"] = function (e) {
            var t = this._isUTC ? "UTC" : "";
            return e != null ? (this._d["set" + t + n](e), this) : this._d["get" + t + n]()
        }
    }

    function it(e) {
        t.duration.fn[e] = function () {
            return this._data[e]
        }
    }

    function st(e, n) {
        t.duration.fn["as" + e] = function () {
            return+this / n
        }
    }

    var t, n = "2.0.0", r = Math.round, i, s = {}, o = typeof module != "undefined" && module.exports, u = /^\/?Date\((\-?\d+)/i, a = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g, f = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g, l = /([0-9a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)/gi, c = /\d\d?/, h = /\d{1,3}/, p = /\d{3}/, d = /\d{1,4}/, v = /[+\-]?\d{1,6}/, m = /[0-9]*[a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF]+\s*?[\u0600-\u06FF]+/i, g = /Z|[\+\-]\d\d:?\d\d/i, y = /T/i, b = /[\+\-]?\d+(\.\d{1,3})?/, w = /^\s*\d{4}-\d\d-\d\d((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/, E = "YYYY-MM-DDTHH:mm:ssZ", S = [
        ["HH:mm:ss.S", /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],
        ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
        ["HH:mm", /(T| )\d\d:\d\d/],
        ["HH", /(T| )\d\d/]
    ], x = /([\+\-]|\d\d)/gi, T = "Month|Date|Hours|Minutes|Seconds|Milliseconds".split("|"), N = {Milliseconds: 1, Seconds: 1e3, Minutes: 6e4, Hours: 36e5, Days: 864e5, Months: 2592e6, Years: 31536e6}, C = {}, k = "DDD w W M D d".split(" "), L = "M D H h m s w W".split(" "), A = {M: function () {
        return this.month() + 1
    }, MMM: function (e) {
        return this.lang().monthsShort(this, e)
    }, MMMM: function (e) {
        return this.lang().months(this, e)
    }, D: function () {
        return this.date()
    }, DDD: function () {
        return this.dayOfYear()
    }, d: function () {
        return this.day()
    }, dd: function (e) {
        return this.lang().weekdaysMin(this, e)
    }, ddd: function (e) {
        return this.lang().weekdaysShort(this, e)
    }, dddd: function (e) {
        return this.lang().weekdays(this, e)
    }, w: function () {
        return this.week()
    }, W: function () {
        return this.isoWeek()
    }, YY: function () {
        return j(this.year() % 100, 2)
    }, YYYY: function () {
        return j(this.year(), 4)
    }, YYYYY: function () {
        return j(this.year(), 5)
    }, a: function () {
        return this.lang().meridiem(this.hours(), this.minutes(), !0)
    }, A: function () {
        return this.lang().meridiem(this.hours(), this.minutes(), !1)
    }, H: function () {
        return this.hours()
    }, h: function () {
        return this.hours() % 12 || 12
    }, m: function () {
        return this.minutes()
    }, s: function () {
        return this.seconds()
    }, S: function () {
        return~~(this.milliseconds() / 100)
    }, SS: function () {
        return j(~~(this.milliseconds() / 10), 2)
    }, SSS: function () {
        return j(this.milliseconds(), 3)
    }, Z: function () {
        var e = -this.zone(), t = "+";
        return e < 0 && (e = -e, t = "-"), t + j(~~(e / 60), 2) + ":" + j(~~e % 60, 2)
    }, ZZ: function () {
        var e = -this.zone(), t = "+";
        return e < 0 && (e = -e, t = "-"), t + j(~~(10 * e / 6), 4)
    }, X: function () {
        return this.unix()
    }};
    while (k.length)i = k.pop(), A[i + "o"] = M(A[i]);
    while (L.length)i = L.pop(), A[i + i] = O(A[i], 2);
    A.DDDD = O(A.DDD, 3), _.prototype = {set: function (e) {
        var t, n;
        for (n in e)t = e[n], typeof t == "function" ? this[n] = t : this["_" + n] = t
    }, _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), months: function (e) {
        return this._months[e.month()]
    }, _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), monthsShort: function (e) {
        return this._monthsShort[e.month()]
    }, monthsParse: function (e) {
        var n, r, i, s;
        this._monthsParse || (this._monthsParse = []);
        for (n = 0; n < 12; n++) {
            this._monthsParse[n] || (r = t([2e3, n]), i = "^" + this.months(r, "") + "|^" + this.monthsShort(r, ""), this._monthsParse[n] = new RegExp(i.replace(".", ""), "i"));
            if (this._monthsParse[n].test(e))return n
        }
    }, _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), weekdays: function (e) {
        return this._weekdays[e.day()]
    }, _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), weekdaysShort: function (e) {
        return this._weekdaysShort[e.day()]
    }, _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), weekdaysMin: function (e) {
        return this._weekdaysMin[e.day()]
    }, _longDateFormat: {LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D YYYY", LLL: "MMMM D YYYY LT", LLLL: "dddd, MMMM D YYYY LT"}, longDateFormat: function (e) {
        var t = this._longDateFormat[e];
        return!t && this._longDateFormat[e.toUpperCase()] && (t = this._longDateFormat[e.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (e) {
            return e.slice(1)
        }), this._longDateFormat[e] = t), t
    }, meridiem: function (e, t, n) {
        return e > 11 ? n ? "pm" : "PM" : n ? "am" : "AM"
    }, _calendar: {sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[last] dddd [at] LT", sameElse: "L"}, calendar: function (e, t) {
        var n = this._calendar[e];
        return typeof n == "function" ? n.apply(t) : n
    }, _relativeTime: {future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years"}, relativeTime: function (e, t, n, r) {
        var i = this._relativeTime[n];
        return typeof i == "function" ? i(e, t, n, r) : i.replace(/%d/i, e)
    }, pastFuture: function (e, t) {
        var n = this._relativeTime[e > 0 ? "future" : "past"];
        return typeof n == "function" ? n(t) : n.replace(/%s/i, t)
    }, ordinal: function (e) {
        return this._ordinal.replace("%d", e)
    }, _ordinal: "%d", preparse: function (e) {
        return e
    }, postformat: function (e) {
        return e
    }, week: function (e) {
        return tt(e, this._week.dow, this._week.doy)
    }, _week: {dow: 0, doy: 6}}, t = function (e, t, n) {
        return nt({_i: e, _f: t, _l: n, _isUTC: !1})
    }, t.utc = function (e, t, n) {
        return nt({_useUTC: !0, _isUTC: !0, _l: n, _i: e, _f: t})
    }, t.unix = function (e) {
        return t(e * 1e3)
    }, t.duration = function (e, n) {
        var r = t.isDuration(e), i = typeof e == "number", s = r ? e._data : i ? {} : e, o;
        return i && (n ? s[n] = e : s.milliseconds = e), o = new P(s), r && e.hasOwnProperty("_lang") && (o._lang = e._lang), o
    }, t.version = n, t.defaultFormat = E, t.lang = function (e, n) {
        var r;
        if (!e)return t.fn._lang._abbr;
        n ? R(e, n) : s[e] || U(e), t.duration.fn._lang = t.fn._lang = U(e)
    }, t.langData = function (e) {
        return e && e._lang && e._lang._abbr && (e = e._lang._abbr), U(e)
    }, t.isMoment = function (e) {
        return e instanceof D
    }, t.isDuration = function (e) {
        return e instanceof P
    }, t.fn = D.prototype = {clone: function () {
        return t(this)
    }, valueOf: function () {
        return+this._d
    }, unix: function () {
        return Math.floor(+this._d / 1e3)
    }, toString: function () {
        return this.format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    }, toDate: function () {
        return this._d
    }, toJSON: function () {
        return t.utc(this).format("YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
    }, toArray: function () {
        var e = this;
        return[e.year(), e.month(), e.date(), e.hours(), e.minutes(), e.seconds(), e.milliseconds()]
    }, isValid: function () {
        return this._isValid == null && (this._a ? this._isValid = !q(this._a, (this._isUTC ? t.utc(this._a) : t(this._a)).toArray()) : this._isValid = !isNaN(this._d.getTime())), !!this._isValid
    }, utc: function () {
        return this._isUTC = !0, this
    }, local: function () {
        return this._isUTC = !1, this
    }, format: function (e) {
        var n = X(this, e || t.defaultFormat);
        return this.lang().postformat(n)
    }, add: function (e, n) {
        var r;
        return typeof e == "string" ? r = t.duration(+n, e) : r = t.duration(e, n), F(this, r, 1), this
    }, subtract: function (e, n) {
        var r;
        return typeof e == "string" ? r = t.duration(+n, e) : r = t.duration(e, n), F(this, r, -1), this
    }, diff: function (e, n, r) {
        var i = this._isUTC ? t(e).utc() : t(e).local(), s = (this.zone() - i.zone()) * 6e4, o, u;
        return n && (n = n.replace(/s$/, "")), n === "year" || n === "month" ? (o = (this.daysInMonth() + i.daysInMonth()) * 432e5, u = (this.year() - i.year()) * 12 + (this.month() - i.month()), u += (this - t(this).startOf("month") - (i - t(i).startOf("month"))) / o, n === "year" && (u /= 12)) : (o = this - i - s, u = n === "second" ? o / 1e3 : n === "minute" ? o / 6e4 : n === "hour" ? o / 36e5 : n === "day" ? o / 864e5 : n === "week" ? o / 6048e5 : o), r ? u : B(u)
    }, from: function (e, n) {
        return t.duration(this.diff(e)).lang(this.lang()._abbr).humanize(!n)
    }, fromNow: function (e) {
        return this.from(t(), e)
    }, calendar: function () {
        var e = this.diff(t().startOf("day"), "days", !0), n = e < -6 ? "sameElse" : e < -1 ? "lastWeek" : e < 0 ? "lastDay" : e < 1 ? "sameDay" : e < 2 ? "nextDay" : e < 7 ? "nextWeek" : "sameElse";
        return this.format(this.lang().calendar(n, this))
    }, isLeapYear: function () {
        var e = this.year();
        return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0
    }, isDST: function () {
        return this.zone() < t([this.year()]).zone() || this.zone() < t([this.year(), 5]).zone()
    }, day: function (e) {
        var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        return e == null ? t : this.add({d: e - t})
    }, startOf: function (e) {
        e = e.replace(/s$/, "");
        switch (e) {
            case"year":
                this.month(0);
            case"month":
                this.date(1);
            case"week":
            case"day":
                this.hours(0);
            case"hour":
                this.minutes(0);
            case"minute":
                this.seconds(0);
            case"second":
                this.milliseconds(0)
        }
        return e === "week" && this.day(0), this
    }, endOf: function (e) {
        return this.startOf(e).add(e.replace(/s?$/, "s"), 1).subtract("ms", 1)
    }, isAfter: function (e, n) {
        return n = typeof n != "undefined" ? n : "millisecond", +this.clone().startOf(n) > +t(e).startOf(n)
    }, isBefore: function (e, n) {
        return n = typeof n != "undefined" ? n : "millisecond", +this.clone().startOf(n) < +t(e).startOf(n)
    }, isSame: function (e, n) {
        return n = typeof n != "undefined" ? n : "millisecond", +this.clone().startOf(n) === +t(e).startOf(n)
    }, zone: function () {
        return this._isUTC ? 0 : this._d.getTimezoneOffset()
    }, daysInMonth: function () {
        return t.utc([this.year(), this.month() + 1, 0]).date()
    }, dayOfYear: function (e) {
        var n = r((t(this).startOf("day") - t(this).startOf("year")) / 864e5) + 1;
        return e == null ? n : this.add("d", e - n)
    }, isoWeek: function (e) {
        var t = tt(this, 1, 4);
        return e == null ? t : this.add("d", (e - t) * 7)
    }, week: function (e) {
        var t = this.lang().week(this);
        return e == null ? t : this.add("d", (e - t) * 7)
    }, lang: function (t) {
        return t === e ? this._lang : (this._lang = U(t), this)
    }};
    for (i = 0; i < T.length; i++)rt(T[i].toLowerCase().replace(/s$/, ""), T[i]);
    rt("year", "FullYear"), t.fn.days = t.fn.day, t.fn.weeks = t.fn.week, t.fn.isoWeeks = t.fn.isoWeek, t.duration.fn = P.prototype = {weeks: function () {
        return B(this.days() / 7)
    }, valueOf: function () {
        return this._milliseconds + this._days * 864e5 + this._months * 2592e6
    }, humanize: function (e) {
        var t = +this, n = et(t, !e, this.lang());
        return e && (n = this.lang().pastFuture(t, n)), this.lang().postformat(n)
    }, lang: t.fn.lang};
    for (i in N)N.hasOwnProperty(i) && (st(i, N[i]), it(i.toLowerCase()));
    st("Weeks", 6048e5), t.lang("en", {ordinal: function (e) {
        var t = e % 10, n = ~~(e % 100 / 10) === 1 ? "th" : t === 1 ? "st" : t === 2 ? "nd" : t === 3 ? "rd" : "th";
        return e + n
    }}), o && (module.exports = t), typeof ender == "undefined" && (this.moment = t), typeof define == "function" && define.amd && define("moment", [], function () {
        return t
    })
}).call(this);
/**
 * @version: 1.2
 * @author: Dan Grossman http://www.dangrossman.info/
 *
 * @Improved by KeenThemes for Metronic Bootstrap 3.0

 * @date: 2013-07-25
 * @copyright: Copyright (c) 2012-2013 Dan Grossman. All rights reserved.
 * @license: Licensed under Apache License v2.0. See http://www.apache.org/licenses/LICENSE-2.0
 * @website: http://www.improvely.com/
 */
!function ($) {

    var DateRangePicker = function (element, options, cb) {
        var hasOptions = typeof options == 'object';
        var localeObject;

        //option defaults

        this.startDate = moment().startOf('day');
        this.endDate = moment().startOf('day');
        this.minDate = false;
        this.maxDate = false;
        this.dateLimit = false;

        this.showDropdowns = false;
        this.showWeekNumbers = false;
        this.timePicker = false;
        this.timePickerIncrement = 30;
        this.timePicker12Hour = true;
        this.ranges = {};
        this.opens = 'right';

        this.buttonClasses = ['btn', 'btn-small'];
        this.applyClass = 'green';
        this.cancelClass = 'default';

        this.format = 'MM/DD/YYYY';
        this.separator = ' - ';

        this.locale = {
            applyLabel: 'Apply',
            cancelLabel: 'Cancel',
            fromLabel: 'From',
            toLabel: 'To',
            weekLabel: 'W',
            customRangeLabel: 'Custom Range',
            daysOfWeek: moment()._lang._weekdaysMin.slice(),
            monthNames: moment()._lang._monthsShort.slice(),
            firstDay: 0
        };

        this.cb = function () {
        };

        //element that triggered the date range picker
        this.element = $(element);

        if (this.element.hasClass('pull-right'))
            this.opens = 'left';

        if (this.element.is('input')) {
            this.element.on({
                click: $.proxy(this.show, this),
                focus: $.proxy(this.show, this)
            });
        } else {
            this.element.on('click', $.proxy(this.show, this));
        }

        localeObject = this.locale;

        if (hasOptions) {
            if (typeof options.locale == 'object') {
                $.each(localeObject, function (property, value) {
                    localeObject[property] = options.locale[property] || value;
                });
            }

            if (options.applyClass) {
                this.applyClass = options.applyClass;
            }

            if (options.cancelClass) {
                this.cancelClass = options.cancelClass;
            }
        }


        var DRPTemplate = '<div class="daterangepicker dropdown-menu">' +
            '<div class="calendar left"></div>' +
            '<div class="calendar right"></div>' +
            '<div class="ranges">' +
            '<div class="range_inputs">' +
            '<div class="daterangepicker_start_input" style="float: left">' +
            '<label for="daterangepicker_start">' + this.locale.fromLabel + '</label>' +
            '<input class="input-mini" type="text" name="daterangepicker_start" value="" disabled="disabled" />' +
            '</div>' +
            '<div class="daterangepicker_end_input" style="float: left; padding-left: 11px">' +
            '<label for="daterangepicker_end">' + this.locale.toLabel + '</label>' +
            '<input class="input-mini" type="text" name="daterangepicker_end" value="" disabled="disabled" />' +
            '</div>' +
            '<button class="' + this.applyClass + ' applyBtn" disabled="disabled">' + this.locale.applyLabel + '</button>&nbsp;' +
            '<button class="' + this.cancelClass + ' cancelBtn">' + this.locale.cancelLabel + '</button>' +
            '</div>' +
            '</div>' +
            '</div>';

        this.container = $(DRPTemplate).appendTo('body');

        if (hasOptions) {

            if (typeof options.format == 'string')
                this.format = options.format;

            if (typeof options.separator == 'string')
                this.separator = options.separator;

            if (typeof options.startDate == 'string')
                this.startDate = moment(options.startDate, this.format);

            if (typeof options.endDate == 'string')
                this.endDate = moment(options.endDate, this.format);

            if (typeof options.minDate == 'string')
                this.minDate = moment(options.minDate, this.format);

            if (typeof options.maxDate == 'string')
                this.maxDate = moment(options.maxDate, this.format);

            if (typeof options.startDate == 'object')
                this.startDate = moment(options.startDate);

            if (typeof options.endDate == 'object')
                this.endDate = moment(options.endDate);

            if (typeof options.minDate == 'object')
                this.minDate = moment(options.minDate);

            if (typeof options.maxDate == 'object')
                this.maxDate = moment(options.maxDate);

            if (typeof options.ranges == 'object') {
                for (var range in options.ranges) {

                    var start = moment(options.ranges[range][0]);
                    var end = moment(options.ranges[range][1]);

                    // If we have a min/max date set, bound this range
                    // to it, but only if it would otherwise fall
                    // outside of the min/max.
                    if (this.minDate && start.isBefore(this.minDate))
                        start = moment(this.minDate);

                    if (this.maxDate && end.isAfter(this.maxDate))
                        end = moment(this.maxDate);

                    // If the end of the range is before the minimum (if min is set) OR
                    // the start of the range is after the max (also if set) don't display this
                    // range option.
                    if ((this.minDate && end.isBefore(this.minDate)) || (this.maxDate && start.isAfter(this.maxDate))) {
                        continue;
                    }

                    this.ranges[range] = [start, end];
                }

                var list = '<ul>';
                for (var range in this.ranges) {
                    list += '<li>' + range + '</li>';
                }
                list += '<li>' + this.locale.customRangeLabel + '</li>';
                list += '</ul>';
                this.container.find('.ranges').prepend(list);
            }

            if (typeof options.dateLimit == 'object')
                this.dateLimit = options.dateLimit;

            // update day names order to firstDay
            if (typeof options.locale == 'object') {
                if (typeof options.locale.firstDay == 'number') {
                    this.locale.firstDay = options.locale.firstDay;
                    var iterator = options.locale.firstDay;
                    while (iterator > 0) {
                        this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());
                        iterator--;
                    }
                }
            }

            if (typeof options.opens == 'string')
                this.opens = options.opens;

            if (typeof options.showWeekNumbers == 'boolean') {
                this.showWeekNumbers = options.showWeekNumbers;
            }

            if (typeof options.buttonClasses == 'string') {
                this.buttonClasses = [options.buttonClasses];
            }

            if (typeof options.buttonClasses == 'object') {
                this.buttonClasses = options.buttonClasses;
            }

            if (typeof options.showDropdowns == 'boolean') {
                this.showDropdowns = options.showDropdowns;
            }

            if (typeof options.timePicker == 'boolean') {
                this.timePicker = options.timePicker;
            }

            if (typeof options.timePickerIncrement == 'number') {
                this.timePickerIncrement = options.timePickerIncrement;
            }

            if (typeof options.timePicker12Hour == 'boolean') {
                this.timePicker12Hour = options.timePicker12Hour;
            }

        }

        if (!this.timePicker) {
            this.startDate = this.startDate.startOf('day');
            this.endDate = this.endDate.startOf('day');
        }

        //apply CSS classes to buttons
        var c = this.container;
        $.each(this.buttonClasses, function (idx, val) {
            c.find('button').addClass(val);
        });

        if (this.opens == 'right') {
            //swap calendar positions
            var left = this.container.find('.calendar.left');
            var right = this.container.find('.calendar.right');
            left.removeClass('left').addClass('right');
            right.removeClass('right').addClass('left');
        }

        if (typeof options == 'undefined' || typeof options.ranges == 'undefined') {
            this.container.find('.calendar').show();
            this.move();
        }

        if (typeof cb == 'function')
            this.cb = cb;

        this.container.addClass('opens' + this.opens);

        //try parse date if in text input
        if (!hasOptions || (typeof options.startDate == 'undefined' && typeof options.endDate == 'undefined')) {
            if ($(this.element).is('input[type=text]')) {
                var val = $(this.element).val();
                var split = val.split(this.separator);
                var start, end;
                if (split.length == 2) {
                    start = moment(split[0], this.format);
                    end = moment(split[1], this.format);
                }
                if (start != null && end != null) {
                    this.startDate = start;
                    this.endDate = end;
                }
            }
        }

        //state
        this.oldStartDate = this.startDate.clone();
        this.oldEndDate = this.endDate.clone();

        this.leftCalendar = {
            month: moment([this.startDate.year(), this.startDate.month(), 1, this.startDate.hour(), this.startDate.minute()]),
            calendar: []
        };

        this.rightCalendar = {
            month: moment([this.endDate.year(), this.endDate.month(), 1, this.endDate.hour(), this.endDate.minute()]),
            calendar: []
        };

        //event listeners
        this.container.on('mousedown', $.proxy(this.mousedown, this));
        this.container.find('.calendar').on('click', '.prev', $.proxy(this.clickPrev, this));
        this.container.find('.calendar').on('click', '.next', $.proxy(this.clickNext, this));
        this.container.find('.ranges').on('click', 'button.applyBtn', $.proxy(this.clickApply, this));
        this.container.find('.ranges').on('click', 'button.cancelBtn', $.proxy(this.clickCancel, this));

        this.container.find('.ranges').on('click', '.daterangepicker_start_input', $.proxy(this.showCalendars, this));
        this.container.find('.ranges').on('click', '.daterangepicker_end_input', $.proxy(this.showCalendars, this));

        this.container.find('.calendar').on('click', 'td.available', $.proxy(this.clickDate, this));
        this.container.find('.calendar').on('mouseenter', 'td.available', $.proxy(this.enterDate, this));
        this.container.find('.calendar').on('mouseleave', 'td.available', $.proxy(this.updateView, this));

        this.container.find('.ranges').on('click', 'li', $.proxy(this.clickRange, this));
        this.container.find('.ranges').on('mouseenter', 'li', $.proxy(this.enterRange, this));
        this.container.find('.ranges').on('mouseleave', 'li', $.proxy(this.updateView, this));

        this.container.find('.calendar').on('change', 'select.yearselect', $.proxy(this.updateMonthYear, this));
        this.container.find('.calendar').on('change', 'select.monthselect', $.proxy(this.updateMonthYear, this));

        this.container.find('.calendar').on('change', 'select.hourselect', $.proxy(this.updateTime, this));
        this.container.find('.calendar').on('change', 'select.minuteselect', $.proxy(this.updateTime, this));
        this.container.find('.calendar').on('change', 'select.ampmselect', $.proxy(this.updateTime, this));

        this.element.on('keyup', $.proxy(this.updateFromControl, this));

        this.updateView();
        this.updateCalendars();

    };

    DateRangePicker.prototype = {

        constructor: DateRangePicker,

        mousedown: function (e) {
            e.stopPropagation();
        },

        updateView: function () {
            this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year());
            this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year());

            this.container.find('input[name=daterangepicker_start]').val(this.startDate.format(this.format));
            this.container.find('input[name=daterangepicker_end]').val(this.endDate.format(this.format));

            if (this.startDate.isSame(this.endDate) || this.startDate.isBefore(this.endDate)) {
                this.container.find('button.applyBtn').removeAttr('disabled');
            } else {
                this.container.find('button.applyBtn').attr('disabled', 'disabled');
            }
        },

        updateFromControl: function () {
            if (!this.element.is('input')) return;
            if (!this.element.val().length) return;

            var dateString = this.element.val().split(this.separator);
            var start = moment(dateString[0], this.format);
            var end = moment(dateString[1], this.format);

            if (start == null || end == null) return;
            if (end.isBefore(start)) return;

            this.startDate = start;
            this.endDate = end;

            this.notify();
            this.updateCalendars();
        },

        notify: function () {
            this.updateView();
            this.cb(this.startDate, this.endDate);
        },

        move: function () {
            var minWidth = $(this.container).find('.ranges').outerWidth();
            if ($(this.container).find('.calendar').is(':visible')) {
                var padding = 24; // FIXME: this works for the default styling, but isn't flexible
                minWidth += $(this.container).find('.calendar').outerWidth() * 2 + padding;
            }
            if (this.opens == 'left') {
                this.container.css({
                    top: this.element.offset().top + this.element.outerHeight(),
                    right: $(window).width() - this.element.offset().left - this.element.outerWidth(),
                    left: 'auto',
                    'min-width': minWidth
                });
                if (this.container.offset().left < 0) {
                    this.container.css({
                        right: 'auto',
                        left: 9
                    });
                }
            } else {
                this.container.css({
                    top: this.element.offset().top + this.element.outerHeight(),
                    left: this.element.offset().left,
                    right: 'auto',
                    'min-width': minWidth
                });
                if (this.container.offset().left + this.container.outerWidth() > $(window).width()) {
                    this.container.css({
                        left: 'auto',
                        right: 0
                    });
                }
            }
        },

        show: function (e) {
            this.container.show();
            this.move();

            if (e) {
                e.stopPropagation();
                e.preventDefault();
            }

            $(document).on('mousedown', $.proxy(this.hide, this));
            this.element.trigger('shown', {target: e.target, picker: this});
        },

        hide: function (e) {
            this.container.hide();

            if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))
                this.notify();

            this.oldStartDate = this.startDate.clone();
            this.oldEndDate = this.endDate.clone();

            $(document).off('mousedown', this.hide);
            this.element.trigger('hidden', { picker: this });
        },

        enterRange: function (e) {
            var label = e.target.innerHTML;
            if (label == this.locale.customRangeLabel) {
                this.updateView();
            } else {
                var dates = this.ranges[label];
                this.container.find('input[name=daterangepicker_start]').val(dates[0].format(this.format));
                this.container.find('input[name=daterangepicker_end]').val(dates[1].format(this.format));
            }
        },

        showCalendars: function () {
            this.container.find('.calendar').show();
            this.move();
        },

        updateInputText: function () {
            if (this.element.is('input'))
                this.element.val(this.startDate.format(this.format) + this.separator + this.endDate.format(this.format));
        },

        clickRange: function (e) {
            var label = e.target.innerHTML;
            if (label == this.locale.customRangeLabel) {
                this.showCalendars();
            } else {
                var dates = this.ranges[label];

                this.startDate = dates[0];
                this.endDate = dates[1];

                if (!this.timePicker) {
                    this.startDate.startOf('day');
                    this.endDate.startOf('day');
                }

                this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year()).hour(this.startDate.hour()).minute(this.startDate.minute());
                this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year()).hour(this.endDate.hour()).minute(this.endDate.minute());
                this.updateCalendars();

                this.updateInputText();

                this.container.find('.calendar').hide();
                this.hide();
            }
        },

        clickPrev: function (e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.subtract('month', 1);
            } else {
                this.rightCalendar.month.subtract('month', 1);
            }
            this.updateCalendars();
        },

        clickNext: function (e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.add('month', 1);
            } else {
                this.rightCalendar.month.add('month', 1);
            }
            this.updateCalendars();
        },

        enterDate: function (e) {

            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');

            if (cal.hasClass('left')) {
                this.container.find('input[name=daterangepicker_start]').val(this.leftCalendar.calendar[row][col].format(this.format));
            } else {
                this.container.find('input[name=daterangepicker_end]').val(this.rightCalendar.calendar[row][col].format(this.format));
            }

        },

        clickDate: function (e) {
            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');

            if (cal.hasClass('left')) {
                var startDate = this.leftCalendar.calendar[row][col];
                var endDate = this.endDate;
                if (typeof this.dateLimit == 'object') {
                    var maxDate = moment(startDate).add(this.dateLimit).startOf('day');
                    if (endDate.isAfter(maxDate)) {
                        endDate = maxDate;
                    }
                }
            } else {
                var startDate = this.startDate;
                var endDate = this.rightCalendar.calendar[row][col];
                if (typeof this.dateLimit == 'object') {
                    var minDate = moment(endDate).subtract(this.dateLimit).startOf('day');
                    if (startDate.isBefore(minDate)) {
                        startDate = minDate;
                    }
                }
            }

            cal.find('td').removeClass('active');

            if (startDate.isSame(endDate) || startDate.isBefore(endDate)) {
                $(e.target).addClass('active');
                this.startDate = startDate;
                this.endDate = endDate;
            } else if (startDate.isAfter(endDate)) {
                $(e.target).addClass('active');
                this.startDate = startDate;
                this.endDate = moment(startDate).add('day', 1).startOf('day');
            }

            this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year());
            this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year());
            this.updateCalendars();
        },

        clickApply: function (e) {
            this.updateInputText();
            this.hide();
        },

        clickCancel: function (e) {
            this.startDate = this.oldStartDate;
            this.endDate = this.oldEndDate;
            this.updateView();
            this.updateCalendars();
            this.hide();
        },

        updateMonthYear: function (e) {

            var isLeft = $(e.target).closest('.calendar').hasClass('left');
            var cal = this.container.find('.calendar.left');
            if (!isLeft)
                cal = this.container.find('.calendar.right');

            var month = cal.find('.monthselect').val();
            var year = cal.find('.yearselect').val();

            if (isLeft) {
                this.leftCalendar.month.month(month).year(year);
            } else {
                this.rightCalendar.month.month(month).year(year);
            }

            this.updateCalendars();

        },

        updateTime: function (e) {

            var isLeft = $(e.target).closest('.calendar').hasClass('left');
            var cal = this.container.find('.calendar.left');
            if (!isLeft)
                cal = this.container.find('.calendar.right');

            var hour = parseInt(cal.find('.hourselect').val());
            var minute = parseInt(cal.find('.minuteselect').val());

            if (this.timePicker12Hour) {
                var ampm = cal.find('.ampmselect').val();
                if (ampm == 'PM' && hour < 12)
                    hour += 12;
                if (ampm == 'AM' && hour == 12)
                    hour = 0;
            }

            if (isLeft) {
                var start = this.startDate;
                start.hour(hour);
                start.minute(minute);
                this.startDate = start;
                this.leftCalendar.month.hour(hour).minute(minute);
            } else {
                var end = this.endDate;
                end.hour(hour);
                end.minute(minute);
                this.endDate = end;
                this.rightCalendar.month.hour(hour).minute(minute);
            }

            this.updateCalendars();

        },

        updateCalendars: function () {
            this.leftCalendar.calendar = this.buildCalendar(this.leftCalendar.month.month(), this.leftCalendar.month.year(), this.leftCalendar.month.hour(), this.leftCalendar.month.minute(), 'left');
            this.rightCalendar.calendar = this.buildCalendar(this.rightCalendar.month.month(), this.rightCalendar.month.year(), this.rightCalendar.month.hour(), this.rightCalendar.month.minute(), 'right');
            this.container.find('.calendar.left').html(this.renderCalendar(this.leftCalendar.calendar, this.startDate, this.minDate, this.maxDate));
            this.container.find('.calendar.right').html(this.renderCalendar(this.rightCalendar.calendar, this.endDate, this.startDate, this.maxDate));

            this.container.find('.ranges li').removeClass('active');
            var customRange = true;
            var i = 0;
            for (var range in this.ranges) {
                if (this.timePicker) {
                    if (this.startDate.isSame(this.ranges[range][0]) && this.endDate.isSame(this.ranges[range][1])) {
                        customRange = false;
                        this.container.find('.ranges li:eq(' + i + ')').addClass('active');
                    }
                } else {
                    //ignore times when comparing dates if time picker is not enabled
                    if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {
                        customRange = false;
                        this.container.find('.ranges li:eq(' + i + ')').addClass('active');
                    }
                }
                i++;
            }
            if (customRange)
                this.container.find('.ranges li:last').addClass('active');
        },

        buildCalendar: function (month, year, hour, minute, side) {

            var firstDay = moment([year, month, 1]);
            var lastMonth = moment(firstDay).subtract('month', 1).month();
            var lastYear = moment(firstDay).subtract('month', 1).year();

            var daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();

            var dayOfWeek = firstDay.day();

            //initialize a 6 rows x 7 columns array for the calendar
            var calendar = [];
            for (var i = 0; i < 6; i++) {
                calendar[i] = [];
            }

            //populate the calendar with date objects
            var startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;
            if (startDay > daysInLastMonth)
                startDay -= 7;

            if (dayOfWeek == this.locale.firstDay)
                startDay = daysInLastMonth - 6;

            var curDate = moment([lastYear, lastMonth, startDay, hour, minute]);
            for (var i = 0, col = 0, row = 0; i < 42; i++, col++, curDate = moment(curDate).add('day', 1)) {
                if (i > 0 && col % 7 == 0) {
                    col = 0;
                    row++;
                }
                calendar[row][col] = curDate;
            }

            return calendar;

        },

        renderDropdowns: function (selected, minDate, maxDate) {
            var currentMonth = selected.month();
            var monthHtml = '<select class="monthselect">';
            var inMinYear = false;
            var inMaxYear = false;

            for (var m = 0; m < 12; m++) {
                if ((!inMinYear || m >= minDate.month()) && (!inMaxYear || m <= maxDate.month())) {
                    monthHtml += "<option value='" + m + "'" +
                        (m === currentMonth ? " selected='selected'" : "") +
                        ">" + this.locale.monthNames[m] + "</option>";
                }
            }
            monthHtml += "</select>";

            var currentYear = selected.year();
            var maxYear = (maxDate && maxDate.year()) || (currentYear + 5);
            var minYear = (minDate && minDate.year()) || (currentYear - 50);
            var yearHtml = '<select class="yearselect">'

            for (var y = minYear; y <= maxYear; y++) {
                yearHtml += '<option value="' + y + '"' +
                    (y === currentYear ? ' selected="selected"' : '') +
                    '>' + y + '</option>';
            }

            yearHtml += '</select>';

            return monthHtml + yearHtml;
        },

        renderCalendar: function (calendar, selected, minDate, maxDate) {

            var html = '<div class="calendar-date">';
            html += '<table class="table-condensed">';
            html += '<thead>';
            html += '<tr>';

            // add empty cell for week number
            if (this.showWeekNumbers)
                html += '<th></th>';

            if (!minDate || minDate.isBefore(calendar[1][1])) {
                html += '<th class="prev available"><i class="fa icon-arrow-left fa-angle-left"></i></th>';
            } else {
                html += '<th></th>';
            }

            var dateHtml = this.locale.monthNames[calendar[1][1].month()] + calendar[1][1].format(" YYYY");

            if (this.showDropdowns) {
                dateHtml = this.renderDropdowns(calendar[1][1], minDate, maxDate);
            }

            html += '<th colspan="5" style="width: auto">' + dateHtml + '</th>';
            if (!maxDate || maxDate.isAfter(calendar[1][1])) {
                html += '<th class="next available"><i class="fa icon-arrow-right fa-angle-right"></i></th>';
            } else {
                html += '<th></th>';
            }

            html += '</tr>';
            html += '<tr>';

            // add week number label
            if (this.showWeekNumbers)
                html += '<th class="week">' + this.locale.weekLabel + '</th>';

            $.each(this.locale.daysOfWeek, function (index, dayOfWeek) {
                html += '<th>' + dayOfWeek + '</th>';
            });

            html += '</tr>';
            html += '</thead>';
            html += '<tbody>';

            for (var row = 0; row < 6; row++) {
                html += '<tr>';

                // add week number
                if (this.showWeekNumbers)
                    html += '<td class="week">' + calendar[row][0].week() + '</td>';

                for (var col = 0; col < 7; col++) {
                    var cname = 'available ';
                    cname += (calendar[row][col].month() == calendar[1][1].month()) ? '' : 'off';

                    if ((minDate && calendar[row][col].isBefore(minDate)) || (maxDate && calendar[row][col].isAfter(maxDate))) {
                        cname = ' off disabled ';
                    } else if (calendar[row][col].format('YYYY-MM-DD') == selected.format('YYYY-MM-DD')) {
                        cname += ' active ';
                        if (calendar[row][col].format('YYYY-MM-DD') == this.startDate.format('YYYY-MM-DD')) {
                            cname += ' start-date ';
                        }
                        if (calendar[row][col].format('YYYY-MM-DD') == this.endDate.format('YYYY-MM-DD')) {
                            cname += ' end-date ';
                        }
                    } else if (calendar[row][col] >= this.startDate && calendar[row][col] <= this.endDate) {
                        cname += ' in-range ';
                        if (calendar[row][col].isSame(this.startDate)) {
                            cname += ' start-date ';
                        }
                        if (calendar[row][col].isSame(this.endDate)) {
                            cname += ' end-date ';
                        }
                    }

                    var title = 'r' + row + 'c' + col;
                    html += '<td class="' + cname.replace(/\s+/g, ' ').replace(/^\s?(.*?)\s?$/, '$1') + '" data-title="' + title + '">' + calendar[row][col].date() + '</td>';
                }
                html += '</tr>';
            }

            html += '</tbody>';
            html += '</table>';
            html += '</div>';

            if (this.timePicker) {

                html += '<div class="calendar-time">';
                html += '<select class="hourselect">';
                var start = 0;
                var end = 23;
                var selected_hour = selected.hour();
                if (this.timePicker12Hour) {
                    start = 1;
                    end = 12;
                    if (selected_hour >= 12)
                        selected_hour -= 12;
                    if (selected_hour == 0)
                        selected_hour = 12;
                }

                for (var i = start; i <= end; i++) {
                    if (i == selected_hour) {
                        html += '<option value="' + i + '" selected="selected">' + i + '</option>';
                    } else {
                        html += '<option value="' + i + '">' + i + '</option>';
                    }
                }

                html += '</select> : ';

                html += '<select class="minuteselect">';

                for (var i = 0; i < 60; i += this.timePickerIncrement) {
                    var num = i;
                    if (num < 10)
                        num = '0' + num;
                    if (i == selected.minute()) {
                        html += '<option value="' + i + '" selected="selected">' + num + '</option>';
                    } else {
                        html += '<option value="' + i + '">' + num + '</option>';
                    }
                }

                html += '</select> ';

                if (this.timePicker12Hour) {
                    html += '<select class="ampmselect">';
                    if (selected.hour() >= 12) {
                        html += '<option value="AM">AM</option><option value="PM" selected="selected">PM</option>';
                    } else {
                        html += '<option value="AM" selected="selected">AM</option><option value="PM">PM</option>';
                    }
                    html += '</select>';
                }

                html += '</div>';

            }

            return html;

        }

    };

    $.fn.daterangepicker = function (options, cb) {
        this.each(function () {
            var el = $(this);
            if (!el.data('daterangepicker'))
                el.data('daterangepicker', new DateRangePicker(el, options, cb));
        });
        return this;
    };

}(window.jQuery);

/*
 * Gritter for jQuery
 * http://www.boedesign.com/
 *
 * Copyright (c) 2012 Jordan Boesch
 * Dual licensed under the MIT and GPL licenses.
 *
 * Date: February 24, 2012
 * Version: 1.7.4
 */

(function ($) {

    /**
     * Set it up as an object under the jQuery namespace
     */
    $.gritter = {};

    /**
     * Set up global options that the user can over-ride
     */
    $.gritter.options = {
        position: '',
        class_name: '', // could be set to 'gritter-light' to use white notifications
        fade_in_speed: 'medium', // how fast notifications fade in
        fade_out_speed: 1000, // how fast the notices fade out
        time: 6000 // hang on the screen for...
    }

    /**
     * Add a gritter notification to the screen
     * @see Gritter#add();
     */
    $.gritter.add = function (params) {

        try {
            return Gritter.add(params || {});
        } catch (e) {

            var err = 'Gritter Error: ' + e;
            (typeof(console) != 'undefined' && console.error) ?
                console.error(err, params) :
                alert(err);

        }

    }

    /**
     * Remove a gritter notification from the screen
     * @see Gritter#removeSpecific();
     */
    $.gritter.remove = function (id, params) {
        Gritter.removeSpecific(id, params || {});
    }

    /**
     * Remove all notifications
     * @see Gritter#stop();
     */
    $.gritter.removeAll = function (params) {
        Gritter.stop(params || {});
    }

    /**
     * Big fat Gritter object
     * @constructor (not really since its object literal)
     */
    var Gritter = {

        // Public - options to over-ride with $.gritter.options in "add"
        position: '',
        fade_in_speed: '',
        fade_out_speed: '',
        time: '',

        // Private - no touchy the private parts
        _custom_timer: 0,
        _item_count: 0,
        _is_setup: 0,
        _tpl_close: '<div class="gritter-close"></div>',
        _tpl_title: '<span class="gritter-title">[[title]]</span>',
        _tpl_item: '<div id="gritter-item-[[number]]" class="gritter-item-wrapper [[item_class]]" style="display:none"><div class="gritter-top"></div><div class="gritter-item">[[close]][[image]]<div class="[[class_name]]">[[title]]<p>[[text]]</p></div><div style="clear:both"></div></div><div class="gritter-bottom"></div></div>',
        _tpl_wrap: '<div id="gritter-notice-wrapper"></div>',

        /**
         * Add a gritter notification to the screen
         * @param {Object} params The object that contains all the options for drawing the notification
         * @return {Integer} The specific numeric id to that gritter notification
         */
        add: function (params) {
            // Handle straight text
            if (typeof(params) == 'string') {
                params = {text: params};
            }

            // We might have some issues if we don't have a title or text!
            if (!params.text) {
                throw 'You must supply "text" parameter.';
            }

            // Check the options and set them once
            if (!this._is_setup) {
                this._runSetup();
            }

            // Basics
            var title = params.title,
                text = params.text,
                image = params.image || '',
                sticky = params.sticky || false,
                item_class = params.class_name || $.gritter.options.class_name,
                position = $.gritter.options.position,
                time_alive = params.time || '';

            this._verifyWrapper();

            this._item_count++;
            var number = this._item_count,
                tmp = this._tpl_item;

            // Assign callbacks
            $(['before_open', 'after_open', 'before_close', 'after_close']).each(function (i, val) {
                Gritter['_' + val + '_' + number] = ($.isFunction(params[val])) ? params[val] : function () {
                }
            });

            // Reset
            this._custom_timer = 0;

            // A custom fade time set
            if (time_alive) {
                this._custom_timer = time_alive;
            }

            var image_str = (image != '') ? '<img src="' + image + '" class="gritter-image" />' : '',
                class_name = (image != '') ? 'gritter-with-image' : 'gritter-without-image';

            // String replacements on the template
            if (title) {
                title = this._str_replace('[[title]]', title, this._tpl_title);
            } else {
                title = '';
            }

            tmp = this._str_replace(
                ['[[title]]', '[[text]]', '[[close]]', '[[image]]', '[[number]]', '[[class_name]]', '[[item_class]]'],
                [title, text, this._tpl_close, image_str, this._item_count, class_name, item_class], tmp
            );

            // If it's false, don't show another gritter message
            if (this['_before_open_' + number]() === false) {
                return false;
            }

            $('#gritter-notice-wrapper').addClass(position).append(tmp);

            var item = $('#gritter-item-' + this._item_count);

            item.fadeIn(this.fade_in_speed, function () {
                Gritter['_after_open_' + number]($(this));
            });

            if (!sticky) {
                this._setFadeTimer(item, number);
            }

            // Bind the hover/unhover states
            $(item).bind('mouseenter mouseleave', function (event) {
                if (event.type == 'mouseenter') {
                    if (!sticky) {
                        Gritter._restoreItemIfFading($(this), number);
                    }
                }
                else {
                    if (!sticky) {
                        Gritter._setFadeTimer($(this), number);
                    }
                }
                Gritter._hoverState($(this), event.type);
            });

            // Clicking (X) makes the perdy thing close
            $(item).find('.gritter-close').click(function () {
                Gritter.removeSpecific(number, {}, null, true);
            });

            return number;

        },

        /**
         * If we don't have any more gritter notifications, get rid of the wrapper using this check
         * @private
         * @param {Integer} unique_id The ID of the element that was just deleted, use it for a callback
         * @param {Object} e The jQuery element that we're going to perform the remove() action on
         * @param {Boolean} manual_close Did we close the gritter dialog with the (X) button
         */
        _countRemoveWrapper: function (unique_id, e, manual_close) {

            // Remove it then run the callback function
            e.remove();
            this['_after_close_' + unique_id](e, manual_close);

            // Check if the wrapper is empty, if it is.. remove the wrapper
            if ($('.gritter-item-wrapper').length == 0) {
                $('#gritter-notice-wrapper').remove();
            }

        },

        /**
         * Fade out an element after it's been on the screen for x amount of time
         * @private
         * @param {Object} e The jQuery element to get rid of
         * @param {Integer} unique_id The id of the element to remove
         * @param {Object} params An optional list of params to set fade speeds etc.
         * @param {Boolean} unbind_events Unbind the mouseenter/mouseleave events if they click (X)
         */
        _fade: function (e, unique_id, params, unbind_events) {

            var params = params || {},
                fade = (typeof(params.fade) != 'undefined') ? params.fade : true,
                fade_out_speed = params.speed || this.fade_out_speed,
                manual_close = unbind_events;

            this['_before_close_' + unique_id](e, manual_close);

            // If this is true, then we are coming from clicking the (X)
            if (unbind_events) {
                e.unbind('mouseenter mouseleave');
            }

            // Fade it out or remove it
            if (fade) {

                e.animate({
                    opacity: 0
                }, fade_out_speed, function () {
                    e.animate({ height: 0 }, 300, function () {
                        Gritter._countRemoveWrapper(unique_id, e, manual_close);
                    })
                })

            }
            else {

                this._countRemoveWrapper(unique_id, e);

            }

        },

        /**
         * Perform actions based on the type of bind (mouseenter, mouseleave)
         * @private
         * @param {Object} e The jQuery element
         * @param {String} type The type of action we're performing: mouseenter or mouseleave
         */
        _hoverState: function (e, type) {

            // Change the border styles and add the (X) close button when you hover
            if (type == 'mouseenter') {

                e.addClass('hover');

                // Show close button
                e.find('.gritter-close').show();

            }
            // Remove the border styles and hide (X) close button when you mouse out
            else {

                e.removeClass('hover');

                // Hide close button
                e.find('.gritter-close').hide();

            }

        },

        /**
         * Remove a specific notification based on an ID
         * @param {Integer} unique_id The ID used to delete a specific notification
         * @param {Object} params A set of options passed in to determine how to get rid of it
         * @param {Object} e The jQuery element that we're "fading" then removing
         * @param {Boolean} unbind_events If we clicked on the (X) we set this to true to unbind mouseenter/mouseleave
         */
        removeSpecific: function (unique_id, params, e, unbind_events) {

            if (!e) {
                var e = $('#gritter-item-' + unique_id);
            }

            // We set the fourth param to let the _fade function know to
            // unbind the "mouseleave" event.  Once you click (X) there's no going back!
            this._fade(e, unique_id, params || {}, unbind_events);

        },

        /**
         * If the item is fading out and we hover over it, restore it!
         * @private
         * @param {Object} e The HTML element to remove
         * @param {Integer} unique_id The ID of the element
         */
        _restoreItemIfFading: function (e, unique_id) {

            clearTimeout(this['_int_id_' + unique_id]);
            e.stop().css({ opacity: '', height: '' });

        },

        /**
         * Setup the global options - only once
         * @private
         */
        _runSetup: function () {

            for (opt in $.gritter.options) {
                this[opt] = $.gritter.options[opt];
            }
            this._is_setup = 1;

        },

        /**
         * Set the notification to fade out after a certain amount of time
         * @private
         * @param {Object} item The HTML element we're dealing with
         * @param {Integer} unique_id The ID of the element
         */
        _setFadeTimer: function (e, unique_id) {

            var timer_str = (this._custom_timer) ? this._custom_timer : this.time;
            this['_int_id_' + unique_id] = setTimeout(function () {
                Gritter._fade(e, unique_id);
            }, timer_str);

        },

        /**
         * Bring everything to a halt
         * @param {Object} params A list of callback functions to pass when all notifications are removed
         */
        stop: function (params) {

            // callbacks (if passed)
            var before_close = ($.isFunction(params.before_close)) ? params.before_close : function () {
            };
            var after_close = ($.isFunction(params.after_close)) ? params.after_close : function () {
            };

            var wrap = $('#gritter-notice-wrapper');
            before_close(wrap);
            wrap.fadeOut(function () {
                $(this).remove();
                after_close();
            });

        },

        /**
         * An extremely handy PHP function ported to JS, works well for templating
         * @private
         * @param {String/Array} search A list of things to search for
         * @param {String/Array} replace A list of things to replace the searches with
         * @return {String} sa The output
         */
        _str_replace: function (search, replace, subject, count) {

            var i = 0, j = 0, temp = '', repl = '', sl = 0, fl = 0,
                f = [].concat(search),
                r = [].concat(replace),
                s = subject,
                ra = r instanceof Array, sa = s instanceof Array;
            s = [].concat(s);

            if (count) {
                this.window[count] = 0;
            }

            for (i = 0, sl = s.length; i < sl; i++) {

                if (s[i] === '') {
                    continue;
                }

                for (j = 0, fl = f.length; j < fl; j++) {

                    temp = s[i] + '';
                    repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
                    s[i] = (temp).split(f[j]).join(repl);

                    if (count && s[i] !== temp) {
                        this.window[count] += (temp.length - s[i].length) / f[j].length;
                    }

                }
            }

            return sa ? s : s[0];

        },

        /**
         * A check to make sure we have something to wrap our notices with
         * @private
         */
        _verifyWrapper: function () {

            if ($('#gritter-notice-wrapper').length == 0) {
                $('body').append(this._tpl_wrap);
            }

        }

    }

})(jQuery);

/*!
 * FullCalendar v1.6.1
 * Docs & License: http://arshaw.com/fullcalendar/
 * (c) 2013 Adam Shaw
 */
(function (t, e) {
    function n(e) {
        t.extend(!0, ye, e)
    }

    function r(n, r, l) {
        function u(t) {
            G ? (S(), C(), R(), b(t)) : f()
        }

        function f() {
            K = r.theme ? "ui" : "fc", n.addClass("fc"), r.isRTL ? n.addClass("fc-rtl") : n.addClass("fc-ltr"), r.theme && n.addClass("ui-widget"), G = t("<div class='fc-content' style='position:relative'/>").prependTo(n), $ = new a(Z, r), Q = $.render(), Q && n.prepend(Q), y(r.defaultView), t(window).resize(x), m() || v()
        }

        function v() {
            setTimeout(function () {
                !te.start && m() && b()
            }, 0)
        }

        function h() {
            t(window).unbind("resize", x), $.destroy(), G.remove(), n.removeClass("fc fc-rtl ui-widget")
        }

        function g() {
            return 0 !== se.offsetWidth
        }

        function m() {
            return 0 !== t("body")[0].offsetWidth
        }

        function y(e) {
            if (!te || e != te.name) {
                ue++, W();
                var n, r = te;
                r ? ((r.beforeHide || I)(), q(G, G.height()), r.element.hide()) : q(G, 1), G.css("overflow", "hidden"), te = ce[e], te ? te.element.show() : te = ce[e] = new De[e](n = re = t("<div class='fc-view fc-view-" + e + "' style='position:absolute'/>").appendTo(G), Z), r && $.deactivateButton(r.name), $.activateButton(e), b(), G.css("overflow", ""), r && q(G, 1), n || (te.afterShow || I)(), ue--
            }
        }

        function b(t) {
            if (g()) {
                ue++, W(), ne === e && S();
                var r = !1;
                !te.start || t || te.start > fe || fe >= te.end ? (te.render(fe, t || 0), E(!0), r = !0) : te.sizeDirty ? (te.clearEvents(), E(), r = !0) : te.eventsDirty && (te.clearEvents(), r = !0), te.sizeDirty = !1, te.eventsDirty = !1, T(r), ee = n.outerWidth(), $.updateTitle(te.title);
                var a = new Date;
                a >= te.start && te.end > a ? $.disableButton("today") : $.enableButton("today"), ue--, te.trigger("viewDisplay", se)
            }
        }

        function M() {
            C(), g() && (S(), E(), W(), te.clearEvents(), te.renderEvents(de), te.sizeDirty = !1)
        }

        function C() {
            t.each(ce, function (t, e) {
                e.sizeDirty = !0
            })
        }

        function S() {
            ne = r.contentHeight ? r.contentHeight : r.height ? r.height - (Q ? Q.height() : 0) - L(G) : Math.round(G.width() / Math.max(r.aspectRatio, .5))
        }

        function E(t) {
            ue++, te.setHeight(ne, t), re && (re.css("position", "relative"), re = null), te.setWidth(G.width(), t), ue--
        }

        function x() {
            if (!ue)if (te.start) {
                var t = ++le;
                setTimeout(function () {
                    t == le && !ue && g() && ee != (ee = n.outerWidth()) && (ue++, M(), te.trigger("windowResize", se), ue--)
                }, 200)
            } else v()
        }

        function T(t) {
            !r.lazyFetching || oe(te.visStart, te.visEnd) ? k() : t && F()
        }

        function k() {
            ie(te.visStart, te.visEnd)
        }

        function H(t) {
            de = t, F()
        }

        function z(t) {
            F(t)
        }

        function F(t) {
            R(), g() && (te.clearEvents(), te.renderEvents(de, t), te.eventsDirty = !1)
        }

        function R() {
            t.each(ce, function (t, e) {
                e.eventsDirty = !0
            })
        }

        function N(t, n, r) {
            te.select(t, n, r === e ? !0 : r)
        }

        function W() {
            te && te.unselect()
        }

        function A() {
            b(-1)
        }

        function _() {
            b(1)
        }

        function O() {
            i(fe, -1), b()
        }

        function B() {
            i(fe, 1), b()
        }

        function Y() {
            fe = new Date, b()
        }

        function j(t, e, n) {
            t instanceof Date ? fe = d(t) : p(fe, t, e, n), b()
        }

        function P(t, n, r) {
            t !== e && i(fe, t), n !== e && s(fe, n), r !== e && c(fe, r), b()
        }

        function J() {
            return d(fe)
        }

        function V() {
            return te
        }

        function X(t, n) {
            return n === e ? r[t] : (("height" == t || "contentHeight" == t || "aspectRatio" == t) && (r[t] = n, M()), e)
        }

        function U(t, n) {
            return r[t] ? r[t].apply(n || se, Array.prototype.slice.call(arguments, 2)) : e
        }

        var Z = this;
        Z.options = r, Z.render = u, Z.destroy = h, Z.refetchEvents = k, Z.reportEvents = H, Z.reportEventChange = z, Z.rerenderEvents = F, Z.changeView = y, Z.select = N, Z.unselect = W, Z.prev = A, Z.next = _, Z.prevYear = O, Z.nextYear = B, Z.today = Y, Z.gotoDate = j, Z.incrementDate = P, Z.formatDate = function (t, e) {
            return w(t, e, r)
        }, Z.formatDates = function (t, e, n) {
            return D(t, e, n, r)
        }, Z.getDate = J, Z.getView = V, Z.option = X, Z.trigger = U, o.call(Z, r, l);
        var $, Q, G, K, te, ee, ne, re, ae, oe = Z.isFetchNeeded, ie = Z.fetchEvents, se = n[0], ce = {}, le = 0, ue = 0, fe = new Date, de = [];
        p(fe, r.year, r.month, r.date), r.droppable && t(document).bind("dragstart",function (e, n) {
            var a = e.target, o = t(a);
            if (!o.parents(".fc").length) {
                var i = r.dropAccept;
                (t.isFunction(i) ? i.call(a, o) : o.is(i)) && (ae = a, te.dragStart(ae, e, n))
            }
        }).bind("dragstop", function (t, e) {
            ae && (te.dragStop(ae, t, e), ae = null)
        })
    }

    function a(n, r) {
        function a() {
            v = r.theme ? "ui" : "fc";
            var n = r.header;
            return n ? h = t("<table class='fc-header' style='width:100%'/>").append(t("<tr/>").append(i("left")).append(i("center")).append(i("right"))) : e
        }

        function o() {
            h.remove()
        }

        function i(e) {
            var a = t("<td class='fc-header-" + e + "'/>"), o = r.header[e];
            return o && t.each(o.split(" "), function (e) {
                e > 0 && a.append("<span class='fc-header-space'/>");
                var o;
                t.each(this.split(","), function (e, i) {
                    if ("title" == i)a.append("<span class='fc-header-title'><h2>&nbsp;</h2></span>"), o && o.addClass(v + "-corner-right"), o = null; else {
                        var s;
                        if (n[i] ? s = n[i] : De[i] && (s = function () {
                            u.removeClass(v + "-state-hover"), n.changeView(i)
                        }), s) {
                            var c = r.theme ? J(r.buttonIcons, i) : null, l = J(r.buttonText, i), u = t("<span class='fc-button fc-button-" + i + " " + v + "-state-default'>" + (c ? "<span class='fc-icon-wrap'><span class='ui-icon ui-icon-" + c + "'/>" + "</span>" : l) + "</span>").click(function () {
                                u.hasClass(v + "-state-disabled") || s()
                            }).mousedown(function () {
                                u.not("." + v + "-state-active").not("." + v + "-state-disabled").addClass(v + "-state-down")
                            }).mouseup(function () {
                                u.removeClass(v + "-state-down")
                            }).hover(function () {
                                u.not("." + v + "-state-active").not("." + v + "-state-disabled").addClass(v + "-state-hover")
                            },function () {
                                u.removeClass(v + "-state-hover").removeClass(v + "-state-down")
                            }).appendTo(a);
                            U(u), o || u.addClass(v + "-corner-left"), o = u
                        }
                    }
                }), o && o.addClass(v + "-corner-right")
            }), a
        }

        function s(t) {
            h.find("h2").html(t)
        }

        function c(t) {
            h.find("span.fc-button-" + t).addClass(v + "-state-active")
        }

        function l(t) {
            h.find("span.fc-button-" + t).removeClass(v + "-state-active")
        }

        function u(t) {
            h.find("span.fc-button-" + t).addClass(v + "-state-disabled")
        }

        function f(t) {
            h.find("span.fc-button-" + t).removeClass(v + "-state-disabled")
        }

        var d = this;
        d.render = a, d.destroy = o, d.updateTitle = s, d.activateButton = c, d.deactivateButton = l, d.disableButton = u, d.enableButton = f;
        var v, h = t([])
    }

    function o(n, r) {
        function a(t, e) {
            return!S || S > t || e > E
        }

        function o(t, e) {
            S = t, E = e, W = [];
            var n = ++F, r = z.length;
            R = r;
            for (var a = 0; r > a; a++)i(z[a], n)
        }

        function i(e, r) {
            s(e, function (a) {
                if (r == F) {
                    if (a) {
                        n.eventDataTransform && (a = t.map(a, n.eventDataTransform)), e.eventDataTransform && (a = t.map(a, e.eventDataTransform));
                        for (var o = 0; a.length > o; o++)a[o].source = e, b(a[o]);
                        W = W.concat(a)
                    }
                    R--, R || k(W)
                }
            })
        }

        function s(r, a) {
            var o, i, c = we.sourceFetchers;
            for (o = 0; c.length > o; o++) {
                if (i = c[o](r, S, E, a), i === !0)return;
                if ("object" == typeof i)return s(i, a), e
            }
            var l = r.events;
            if (l)t.isFunction(l) ? (p(), l(d(S), d(E), function (t) {
                a(t), y()
            })) : t.isArray(l) ? a(l) : a(); else {
                var u = r.url;
                if (u) {
                    var f = r.success, v = r.error, h = r.complete, g = t.extend({}, r.data || {}), m = K(r.startParam, n.startParam), b = K(r.endParam, n.endParam);
                    m && (g[m] = Math.round(+S / 1e3)), b && (g[b] = Math.round(+E / 1e3)), p(), t.ajax(t.extend({}, Me, r, {data: g, success: function (e) {
                        e = e || [];
                        var n = G(f, this, arguments);
                        t.isArray(n) && (e = n), a(e)
                    }, error: function () {
                        G(v, this, arguments), a()
                    }, complete: function () {
                        G(h, this, arguments), y()
                    }}))
                } else a()
            }
        }

        function c(t) {
            t = l(t), t && (R++, i(t, F))
        }

        function l(n) {
            return t.isFunction(n) || t.isArray(n) ? n = {events: n} : "string" == typeof n && (n = {url: n}), "object" == typeof n ? (w(n), z.push(n), n) : e
        }

        function u(e) {
            z = t.grep(z, function (t) {
                return!D(t, e)
            }), W = t.grep(W, function (t) {
                return!D(t.source, e)
            }), k(W)
        }

        function f(t) {
            var e, n, r = W.length, a = T().defaultEventEnd, o = t.start - t._start, i = t.end ? t.end - (t._end || a(t)) : 0;
            for (e = 0; r > e; e++)n = W[e], n._id == t._id && n != t && (n.start = new Date(+n.start + o), n.end = t.end ? n.end ? new Date(+n.end + i) : new Date(+a(n) + i) : null, n.title = t.title, n.url = t.url, n.allDay = t.allDay, n.className = t.className, n.editable = t.editable, n.color = t.color, n.backgroudColor = t.backgroudColor, n.borderColor = t.borderColor, n.textColor = t.textColor, b(n));
            b(t), k(W)
        }

        function v(t, e) {
            b(t), t.source || (e && (H.events.push(t), t.source = H), W.push(t)), k(W)
        }

        function h(e) {
            if (e) {
                if (!t.isFunction(e)) {
                    var n = e + "";
                    e = function (t) {
                        return t._id == n
                    }
                }
                W = t.grep(W, e, !0);
                for (var r = 0; z.length > r; r++)t.isArray(z[r].events) && (z[r].events = t.grep(z[r].events, e, !0))
            } else {
                W = [];
                for (var r = 0; z.length > r; r++)t.isArray(z[r].events) && (z[r].events = [])
            }
            k(W)
        }

        function g(e) {
            return t.isFunction(e) ? t.grep(W, e) : e ? (e += "", t.grep(W, function (t) {
                return t._id == e
            })) : W
        }

        function p() {
            N++ || x("loading", null, !0)
        }

        function y() {
            --N || x("loading", null, !1)
        }

        function b(t) {
            var r = t.source || {}, a = K(r.ignoreTimezone, n.ignoreTimezone);
            t._id = t._id || (t.id === e ? "_fc" + Ce++ : t.id + ""), t.date && (t.start || (t.start = t.date), delete t.date), t._start = d(t.start = m(t.start, a)), t.end = m(t.end, a), t.end && t.end <= t.start && (t.end = null), t._end = t.end ? d(t.end) : null, t.allDay === e && (t.allDay = K(r.allDayDefault, n.allDayDefault)), t.className ? "string" == typeof t.className && (t.className = t.className.split(/\s+/)) : t.className = []
        }

        function w(t) {
            t.className ? "string" == typeof t.className && (t.className = t.className.split(/\s+/)) : t.className = [];
            for (var e = we.sourceNormalizers, n = 0; e.length > n; n++)e[n](t)
        }

        function D(t, e) {
            return t && e && M(t) == M(e)
        }

        function M(t) {
            return("object" == typeof t ? t.events || t.url : "") || t
        }

        var C = this;
        C.isFetchNeeded = a, C.fetchEvents = o, C.addEventSource = c, C.removeEventSource = u, C.updateEvent = f, C.renderEvent = v, C.removeEvents = h, C.clientEvents = g, C.normalizeEvent = b;
        for (var S, E, x = C.trigger, T = C.getView, k = C.reportEvents, H = {events: []}, z = [H], F = 0, R = 0, N = 0, W = [], A = 0; r.length > A; A++)l(r[A])
    }

    function i(t, e, n) {
        return t.setFullYear(t.getFullYear() + e), n || f(t), t
    }

    function s(t, e, n) {
        if (+t) {
            var r = t.getMonth() + e, a = d(t);
            for (a.setDate(1), a.setMonth(r), t.setMonth(r), n || f(t); t.getMonth() != a.getMonth();)t.setDate(t.getDate() + (a > t ? 1 : -1))
        }
        return t
    }

    function c(t, e, n) {
        if (+t) {
            var r = t.getDate() + e, a = d(t);
            a.setHours(9), a.setDate(r), t.setDate(r), n || f(t), l(t, a)
        }
        return t
    }

    function l(t, e) {
        if (+t)for (; t.getDate() != e.getDate();)t.setTime(+t + (e > t ? 1 : -1) * xe)
    }

    function u(t, e) {
        return t.setMinutes(t.getMinutes() + e), t
    }

    function f(t) {
        return t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0), t
    }

    function d(t, e) {
        return e ? f(new Date(+t)) : new Date(+t)
    }

    function v() {
        var t, e = 0;
        do t = new Date(1970, e++, 1); while (t.getHours());
        return t
    }

    function h(t, e, n) {
        for (e = e || 1; !t.getDay() || n && 1 == t.getDay() || !n && 6 == t.getDay();)c(t, e);
        return t
    }

    function g(t, e) {
        return Math.round((d(t, !0) - d(e, !0)) / Ee)
    }

    function p(t, n, r, a) {
        n !== e && n != t.getFullYear() && (t.setDate(1), t.setMonth(0), t.setFullYear(n)), r !== e && r != t.getMonth() && (t.setDate(1), t.setMonth(r)), a !== e && t.setDate(a)
    }

    function m(t, n) {
        return"object" == typeof t ? t : "number" == typeof t ? new Date(1e3 * t) : "string" == typeof t ? t.match(/^\d+(\.\d+)?$/) ? new Date(1e3 * parseFloat(t)) : (n === e && (n = !0), y(t, n) || (t ? new Date(t) : null)) : null
    }

    function y(t, e) {
        var n = t.match(/^([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\.([0-9]+))?)?(Z|(([-+])([0-9]{2})(:?([0-9]{2}))?))?)?)?)?$/);
        if (!n)return null;
        var r = new Date(n[1], 0, 1);
        if (e || !n[13]) {
            var a = new Date(n[1], 0, 1, 9, 0);
            n[3] && (r.setMonth(n[3] - 1), a.setMonth(n[3] - 1)), n[5] && (r.setDate(n[5]), a.setDate(n[5])), l(r, a), n[7] && r.setHours(n[7]), n[8] && r.setMinutes(n[8]), n[10] && r.setSeconds(n[10]), n[12] && r.setMilliseconds(1e3 * Number("0." + n[12])), l(r, a)
        } else if (r.setUTCFullYear(n[1], n[3] ? n[3] - 1 : 0, n[5] || 1), r.setUTCHours(n[7] || 0, n[8] || 0, n[10] || 0, n[12] ? 1e3 * Number("0." + n[12]) : 0), n[14]) {
            var o = 60 * Number(n[16]) + (n[18] ? Number(n[18]) : 0);
            o *= "-" == n[15] ? 1 : -1, r = new Date(+r + 1e3 * 60 * o)
        }
        return r
    }

    function b(t) {
        if ("number" == typeof t)return 60 * t;
        if ("object" == typeof t)return 60 * t.getHours() + t.getMinutes();
        var e = t.match(/(\d+)(?::(\d+))?\s*(\w+)?/);
        if (e) {
            var n = parseInt(e[1], 10);
            return e[3] && (n %= 12, "p" == e[3].toLowerCase().charAt(0) && (n += 12)), 60 * n + (e[2] ? parseInt(e[2], 10) : 0)
        }
    }

    function w(t, e, n) {
        return D(t, null, e, n)
    }

    function D(t, e, n, r) {
        r = r || ye;
        var a, o, i, s, c = t, l = e, u = n.length, f = "";
        for (a = 0; u > a; a++)if (o = n.charAt(a), "'" == o) {
            for (i = a + 1; u > i; i++)if ("'" == n.charAt(i)) {
                c && (f += i == a + 1 ? "'" : n.substring(a + 1, i), a = i);
                break
            }
        } else if ("(" == o) {
            for (i = a + 1; u > i; i++)if (")" == n.charAt(i)) {
                var d = w(c, n.substring(a + 1, i), r);
                parseInt(d.replace(/\D/, ""), 10) && (f += d), a = i;
                break
            }
        } else if ("[" == o) {
            for (i = a + 1; u > i; i++)if ("]" == n.charAt(i)) {
                var v = n.substring(a + 1, i), d = w(c, v, r);
                d != w(l, v, r) && (f += d), a = i;
                break
            }
        } else if ("{" == o)c = e, l = t; else if ("}" == o)c = t, l = e; else {
            for (i = u; i > a; i--)if (s = ke[n.substring(a, i)]) {
                c && (f += s(c, r)), a = i - 1;
                break
            }
            i == a && c && (f += o)
        }
        return f
    }

    function M(t) {
        var e, n = new Date(t.getTime());
        return n.setDate(n.getDate() + 4 - (n.getDay() || 7)), e = n.getTime(), n.setMonth(0), n.setDate(1), Math.floor(Math.round((e - n) / 864e5) / 7) + 1
    }

    function C(t) {
        return t.end ? S(t.end, t.allDay) : c(d(t.start), 1)
    }

    function S(t, e) {
        return t = d(t), e || t.getHours() || t.getMinutes() ? c(t, 1) : f(t)
    }

    function E(t, e) {
        return 100 * (e.msLength - t.msLength) + (t.event.start - e.event.start)
    }

    function x(t, e) {
        return t.end > e.start && t.start < e.end
    }

    function T(t, e, n, r) {
        var a, o, i, s, c, l, u, f, v = [], h = t.length;
        for (a = 0; h > a; a++)o = t[a], i = o.start, s = e[a], s > n && r > i && (n > i ? (c = d(n), u = !1) : (c = i, u = !0), s > r ? (l = d(r), f = !1) : (l = s, f = !0), v.push({event: o, start: c, end: l, isStart: u, isEnd: f, msLength: l - c}));
        return v.sort(E)
    }

    function k(t) {
        var e, n, r, a, o, i = [], s = t.length;
        for (e = 0; s > e; e++) {
            for (n = t[e], r = 0; ;) {
                if (a = !1, i[r])for (o = 0; i[r].length > o; o++)if (x(i[r][o], n)) {
                    a = !0;
                    break
                }
                if (!a)break;
                r++
            }
            i[r] ? i[r].push(n) : i[r] = [n]
        }
        return i
    }

    function H(n, r, a) {
        n.unbind("mouseover").mouseover(function (n) {
            for (var o, i, s, c = n.target; c != this;)o = c, c = c.parentNode;
            (i = o._fci) !== e && (o._fci = e, s = r[i], a(s.event, s.element, s), t(n.target).trigger(n)), n.stopPropagation()
        })
    }

    function z(e, n, r) {
        for (var a, o = 0; e.length > o; o++)a = t(e[o]), a.width(Math.max(0, n - R(a, r)))
    }

    function F(e, n, r) {
        for (var a, o = 0; e.length > o; o++)a = t(e[o]), a.height(Math.max(0, n - L(a, r)))
    }

    function R(t, e) {
        return N(t) + A(t) + (e ? W(t) : 0)
    }

    function N(e) {
        return(parseFloat(t.css(e[0], "paddingLeft", !0)) || 0) + (parseFloat(t.css(e[0], "paddingRight", !0)) || 0)
    }

    function W(e) {
        return(parseFloat(t.css(e[0], "marginLeft", !0)) || 0) + (parseFloat(t.css(e[0], "marginRight", !0)) || 0)
    }

    function A(e) {
        return(parseFloat(t.css(e[0], "borderLeftWidth", !0)) || 0) + (parseFloat(t.css(e[0], "borderRightWidth", !0)) || 0)
    }

    function L(t, e) {
        return _(t) + B(t) + (e ? O(t) : 0)
    }

    function _(e) {
        return(parseFloat(t.css(e[0], "paddingTop", !0)) || 0) + (parseFloat(t.css(e[0], "paddingBottom", !0)) || 0)
    }

    function O(e) {
        return(parseFloat(t.css(e[0], "marginTop", !0)) || 0) + (parseFloat(t.css(e[0], "marginBottom", !0)) || 0)
    }

    function B(e) {
        return(parseFloat(t.css(e[0], "borderTopWidth", !0)) || 0) + (parseFloat(t.css(e[0], "borderBottomWidth", !0)) || 0)
    }

    function q(t, e) {
        e = "number" == typeof e ? e + "px" : e, t.each(function (t, n) {
            n.style.cssText += ";min-height:" + e + ";_height:" + e
        })
    }

    function I() {
    }

    function Y(t, e) {
        return t - e
    }

    function j(t) {
        return Math.max.apply(Math, t)
    }

    function P(t) {
        return(10 > t ? "0" : "") + t
    }

    function J(t, n) {
        if (t[n] !== e)return t[n];
        for (var r, a = n.split(/(?=[A-Z])/), o = a.length - 1; o >= 0; o--)if (r = t[a[o].toLowerCase()], r !== e)return r;
        return t[""]
    }

    function V(t) {
        return t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#039;").replace(/"/g, "&quot;").replace(/\n/g, "<br />")
    }

    function X(t) {
        return t.id + "/" + t.className + "/" + t.style.cssText.replace(/(^|;)\s*(top|left|width|height)\s*:[^;]*/gi, "")
    }

    function U(t) {
        t.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.ui", function () {
            return!1
        })
    }

    function Z(t) {
        t.children().removeClass("fc-first fc-last").filter(":first-child").addClass("fc-first").end().filter(":last-child").addClass("fc-last")
    }

    function $(t, e) {
        t.each(function (t, n) {
            n.className = n.className.replace(/^fc-\w*/, "fc-" + Se[e.getDay()])
        })
    }

    function Q(t, e) {
        var n = t.source || {}, r = t.color, a = n.color, o = e("eventColor"), i = t.backgroundColor || r || n.backgroundColor || a || e("eventBackgroundColor") || o, s = t.borderColor || r || n.borderColor || a || e("eventBorderColor") || o, c = t.textColor || n.textColor || e("eventTextColor"), l = [];
        return i && l.push("background-color:" + i), s && l.push("border-color:" + s), c && l.push("color:" + c), l.join(";")
    }

    function G(e, n, r) {
        if (t.isFunction(e) && (e = [e]), e) {
            var a, o;
            for (a = 0; e.length > a; a++)o = e[a].apply(n, r) || o;
            return o
        }
    }

    function K() {
        for (var t = 0; arguments.length > t; t++)if (arguments[t] !== e)return arguments[t]
    }

    function te(t, e) {
        function n(t, e) {
            e && (s(t, e), t.setDate(1));
            var n = d(t, !0);
            n.setDate(1);
            var l = s(d(n), 1), u = d(n), f = d(l), v = a("firstDay"), g = a("weekends") ? 0 : 1;
            g && (h(u), h(f, -1, !0)), c(u, -((u.getDay() - Math.max(v, g) + 7) % 7)), c(f, (7 - f.getDay() + Math.max(v, g)) % 7);
            var p = Math.round((f - u) / (7 * Ee));
            "fixed" == a("weekMode") && (c(f, 7 * (6 - p)), p = 6), r.title = i(n, a("titleFormat")), r.start = n, r.end = l, r.visStart = u, r.visEnd = f, o(p, g ? 5 : 7, !0)
        }

        var r = this;
        r.render = n, re.call(r, t, e, "month");
        var a = r.opt, o = r.renderBasic, i = e.formatDate
    }

    function ee(t, e) {
        function n(t, e) {
            e && c(t, 7 * e);
            var n = c(d(t), -((t.getDay() - a("firstDay") + 7) % 7)), s = c(d(n), 7), l = d(n), u = d(s), f = a("weekends");
            f || (h(l), h(u, -1, !0)), r.title = i(l, c(d(u), -1), a("titleFormat")), r.start = n, r.end = s, r.visStart = l, r.visEnd = u, o(1, f ? 7 : 5, !1)
        }

        var r = this;
        r.render = n, re.call(r, t, e, "basicWeek");
        var a = r.opt, o = r.renderBasic, i = e.formatDates
    }

    function ne(t, e) {
        function n(t, e) {
            e && (c(t, e), a("weekends") || h(t, 0 > e ? -1 : 1)), r.title = i(t, a("titleFormat")), r.start = r.visStart = d(t, !0), r.end = r.visEnd = c(d(r.start), 1), o(1, 1, !1)
        }

        var r = this;
        r.render = n, re.call(r, t, e, "basicDay");
        var a = r.opt, o = r.renderBasic, i = e.formatDate
    }

    function re(e, n, r) {
        function a(t, e, n) {
            ne = t, re = e, o();
            var r = !P;
            r ? i() : Te(), s(n)
        }

        function o() {
            ce = Ee("isRTL"), ce ? (le = -1, fe = re - 1) : (le = 1, fe = 0), pe = Ee("firstDay"), ye = Ee("weekends") ? 0 : 1, be = Ee("theme") ? "ui" : "fc", we = Ee("columnFormat"), De = Ee("weekNumbers"), Me = Ee("weekNumberTitle"), Ce = "iso" != Ee("weekNumberCalculation") ? "w" : "W"
        }

        function i() {
            Q = t("<div style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(e)
        }

        function s(n) {
            var r, a, o, i, s = "", c = be + "-widget-header", l = be + "-widget-content", u = B.start.getMonth(), d = f(new Date);
            for (s += "<table class='fc-border-separate' style='width:100%' cellspacing='0'><thead><tr>", De && (s += "<th class='fc-week-number " + c + "'/>"), r = 0; re > r; r++)o = F(0, r), s += "<th class='fc-day-header fc-" + Se[o.getDay()] + " " + c + "'/>";
            for (s += "</tr></thead><tbody>", r = 0; ne > r; r++) {
                for (s += "<tr class='fc-week'>", De && (s += "<td class='fc-week-number " + l + "'>" + "<div/>" + "</td>"), a = 0; re > a; a++)o = F(r, a), i = ["fc-day", "fc-" + Se[o.getDay()], l], o.getMonth() != u && i.push("fc-other-month"), +o == +d && (i.push("fc-today"), i.push(be + "-state-highlight")), s += "<td class='" + i.join(" ") + "'" + " data-date='" + Fe(o, "yyyy-MM-dd") + "'" + ">" + "<div>", n && (s += "<div class='fc-day-number'>" + o.getDate() + "</div>"), s += "<div class='fc-day-content'><div style='position:relative'>&nbsp;</div></div></div></td>";
                s += "</tr>"
            }
            s += "</tbody></table>", _(), I && I.remove(), I = t(s).appendTo(e), Y = I.find("thead"), j = Y.find(".fc-day-header"), P = I.find("tbody"), J = P.find("tr"), V = P.find(".fc-day"), X = J.find("td:first-child"), $ = J.eq(0).find(".fc-day-content > div"), Z(Y.add(Y.find("tr"))), Z(J), J.eq(0).addClass("fc-first"), J.filter(":last").addClass("fc-last"), De && Y.find(".fc-week-number").text(Me), j.each(function (e, n) {
                var r = R(e);
                t(n).text(Fe(r, we))
            }), De && P.find(".fc-week-number > div").each(function (e, n) {
                var r = F(e, 0);
                t(n).text(Fe(r, Ce))
            }), V.each(function (e, n) {
                var r = R(e);
                xe("dayRender", B, r, t(n))
            }), v(V)
        }

        function l(e) {
            K = e;
            var n, r, a, o = K - Y.height();
            "variable" == Ee("weekMode") ? n = r = Math.floor(o / (1 == ne ? 2 : 6)) : (n = Math.floor(o / ne), r = o - n * (ne - 1)), X.each(function (e, o) {
                ne > e && (a = t(o), q(a.find("> div"), (e == ne - 1 ? r : n) - L(a)))
            }), O()
        }

        function u(t) {
            G = t, se.clear(), ee = 0, De && (ee = Y.find("th.fc-week-number").outerWidth()), te = Math.floor((G - ee) / re), z(j.slice(0, -1), te)
        }

        function v(t) {
            t.click(h).mousedown(ze)
        }

        function h(e) {
            if (!Ee("selectable")) {
                var n = y(t(this).data("date"));
                xe("dayClick", this, n, !0, e)
            }
        }

        function p(t, e, n) {
            n && oe.build();
            for (var r = d(B.visStart), a = c(d(r), re), o = 0; ne > o; o++) {
                var i = new Date(Math.max(r, t)), s = new Date(Math.min(a, e));
                if (s > i) {
                    var l, u;
                    ce ? (l = g(s, r) * le + fe + 1, u = g(i, r) * le + fe + 1) : (l = g(i, r), u = g(s, r)), v(m(o, l, o, u - 1))
                }
                c(r, 7), c(a, 7)
            }
        }

        function m(t, n, r, a) {
            var o = oe.rect(t, n, r, a, e);
            return ke(o, e)
        }

        function b(t) {
            return d(t)
        }

        function w(t, e) {
            p(t, c(d(e), 1), !0)
        }

        function D() {
            He()
        }

        function M(t, e, n) {
            var r = k(t), a = V[r.row * re + r.col];
            xe("dayClick", a, t, e, n)
        }

        function C(t, e) {
            ie.start(function (t) {
                He(), t && m(t.row, t.col, t.row, t.col)
            }, e)
        }

        function S(t, e, n) {
            var r = ie.stop();
            if (He(), r) {
                var a = H(r);
                xe("drop", t, a, !0, e, n)
            }
        }

        function E(t) {
            return d(t.start)
        }

        function x(t) {
            return se.left(t)
        }

        function T(t) {
            return se.right(t)
        }

        function k(t) {
            return{row: Math.floor(g(t, B.visStart) / 7), col: N(t.getDay())}
        }

        function H(t) {
            return F(t.row, t.col)
        }

        function F(t, e) {
            return c(d(B.visStart), 7 * t + e * le + fe)
        }

        function R(t) {
            return F(Math.floor(t / re), t % re)
        }

        function N(t) {
            return(t - Math.max(pe, ye) + re) % re * le + fe
        }

        function W(t) {
            return J.eq(t)
        }

        function A() {
            var t = 0;
            return De && (t += ee), {left: t, right: G}
        }

        function _() {
            q(e, e.height())
        }

        function O() {
            q(e, 1)
        }

        var B = this;
        B.renderBasic = a, B.setHeight = l, B.setWidth = u, B.renderDayOverlay = p, B.defaultSelectionEnd = b, B.renderSelection = w, B.clearSelection = D, B.reportDayClick = M, B.dragStart = C, B.dragStop = S, B.defaultEventEnd = E, B.getHoverListener = function () {
            return ie
        }, B.colContentLeft = x, B.colContentRight = T, B.dayOfWeekCol = N, B.dateCell = k, B.cellDate = H, B.cellIsAllDay = function () {
            return!0
        }, B.allDayRow = W, B.allDayBounds = A, B.getRowCnt = function () {
            return ne
        }, B.getColCnt = function () {
            return re
        }, B.getColWidth = function () {
            return te
        }, B.getDaySegmentContainer = function () {
            return Q
        }, ue.call(B, e, n, r), ve.call(B), de.call(B), ae.call(B);
        var I, Y, j, P, J, V, X, $, Q, G, K, te, ee, ne, re, oe, ie, se, ce, le, fe, pe, ye, be, we, De, Me, Ce, Ee = B.opt, xe = B.trigger, Te = B.clearEvents, ke = B.renderOverlay, He = B.clearOverlays, ze = B.daySelectionMousedown, Fe = n.formatDate;
        U(e.addClass("fc-grid")), oe = new he(function (e, n) {
            var r, a, o;
            j.each(function (e, i) {
                r = t(i), a = r.offset().left, e && (o[1] = a), o = [a], n[e] = o
            }), o[1] = a + r.outerWidth(), J.each(function (n, i) {
                ne > n && (r = t(i), a = r.offset().top, n && (o[1] = a), o = [a], e[n] = o)
            }), o[1] = a + r.outerHeight()
        }), ie = new ge(oe), se = new me(function (t) {
            return $.eq(t)
        })
    }

    function ae() {
        function e(t, e) {
            v(t), x(r(t), e), l("eventAfterAllRender")
        }

        function n() {
            h(), b().empty()
        }

        function r(e) {
            var n, r, a, o, s, l, u = S(), f = E(), v = d(i.visStart), h = c(d(v), f), g = t.map(e, C), p = [];
            for (n = 0; u > n; n++) {
                for (r = k(T(e, g, v, h)), a = 0; r.length > a; a++)for (o = r[a], s = 0; o.length > s; s++)l = o[s], l.row = n, l.level = a, p.push(l);
                c(v, 7), c(h, 7)
            }
            return p
        }

        function a(t, e, n) {
            u(t) && o(t, e), n.isEnd && f(t) && H(t, e, n), g(t, e)
        }

        function o(t, e) {
            var n, r = w();
            e.draggable({zIndex: 9, delay: 50, opacity: s("dragOpacity"), revertDuration: s("dragRevertDuration"), start: function (a, o) {
                l("eventDragStart", e, t, a, o), m(t, e), r.start(function (r, a, o, i) {
                    e.draggable("option", "revert", !r || !o && !i), M(), r ? (n = 7 * o + i * (s("isRTL") ? -1 : 1), D(c(d(t.start), n), c(C(t), n))) : n = 0
                }, a, "drag")
            }, stop: function (a, o) {
                r.stop(), M(), l("eventDragStop", e, t, a, o), n ? y(this, t, n, 0, t.allDay, a, o) : (e.css("filter", ""), p(t, e))
            }})
        }

        var i = this;
        i.renderEvents = e, i.compileDaySegs = r, i.clearEvents = n, i.bindDaySeg = a, fe.call(i);
        var s = i.opt, l = i.trigger, u = i.isEventDraggable, f = i.isEventResizable, v = i.reportEvents, h = i.reportEventClear, g = i.eventElementHandlers, p = i.showEvents, m = i.hideEvents, y = i.eventDrop, b = i.getDaySegmentContainer, w = i.getHoverListener, D = i.renderDayOverlay, M = i.clearOverlays, S = i.getRowCnt, E = i.getColCnt, x = i.renderDaySegs, H = i.resizableDayEvent
    }

    function oe(t, e) {
        function n(t, e) {
            e && c(t, 7 * e);
            var n = c(d(t), -((t.getDay() - a("firstDay") + 7) % 7)), s = c(d(n), 7), l = d(n), u = d(s), f = a("weekends");
            f || (h(l), h(u, -1, !0)), r.title = i(l, c(d(u), -1), a("titleFormat")), r.start = n, r.end = s, r.visStart = l, r.visEnd = u, o(f ? 7 : 5)
        }

        var r = this;
        r.render = n, se.call(r, t, e, "agendaWeek");
        var a = r.opt, o = r.renderAgenda, i = e.formatDates
    }

    function ie(t, e) {
        function n(t, e) {
            e && (c(t, e), a("weekends") || h(t, 0 > e ? -1 : 1));
            var n = d(t, !0), s = c(d(n), 1);
            r.title = i(t, a("titleFormat")), r.start = r.visStart = n, r.end = r.visEnd = s, o(1)
        }

        var r = this;
        r.render = n, se.call(r, t, e, "agendaDay");
        var a = r.opt, o = r.renderAgenda, i = e.formatDate
    }

    function se(n, r, a) {
        function o(t) {
            Le = t, i(), te ? nn() : s(), l()
        }

        function i() {
            Ye = tn("theme") ? "ui" : "fc", Pe = tn("weekends") ? 0 : 1, je = tn("firstDay"), (Je = tn("isRTL")) ? (Ve = -1, Xe = Le - 1) : (Ve = 1, Xe = 0), Ue = b(tn("minTime")), Ze = b(tn("maxTime")), $e = tn("columnFormat"), Qe = tn("weekNumbers"), Ge = tn("weekNumberTitle"), Ke = "iso" != tn("weekNumberCalculation") ? "w" : "W", Ne = tn("snapMinutes") || tn("slotMinutes")
        }

        function s() {
            var e, r, a, o, i, s = Ye + "-widget-header", c = Ye + "-widget-content", l = 0 == tn("slotMinutes") % 15;
            for (e = "<table style='width:100%' class='fc-agenda-days fc-border-separate' cellspacing='0'><thead><tr>", e += Qe ? "<th class='fc-agenda-axis fc-week-number " + s + "'/>" : "<th class='fc-agenda-axis " + s + "'>&nbsp;</th>", r = 0; Le > r; r++)e += "<th class='fc- fc-col" + r + " " + s + "'/>";
            for (e += "<th class='fc-agenda-gutter " + s + "'>&nbsp;</th>" + "</tr>" + "</thead>" + "<tbody>" + "<tr>" + "<th class='fc-agenda-axis " + s + "'>&nbsp;</th>", r = 0; Le > r; r++)e += "<td class='fc- fc-col" + r + " " + c + "'>" + "<div>" + "<div class='fc-day-content'>" + "<div style='position:relative'>&nbsp;</div>" + "</div>" + "</div>" + "</td>";
            for (e += "<td class='fc-agenda-gutter " + c + "'>&nbsp;</td>" + "</tr>" + "</tbody>" + "</table>", te = t(e).appendTo(n), ee = te.find("thead"), ne = ee.find("th").slice(1, -1), re = te.find("tbody"), ae = re.find("td").slice(0, -1), oe = ae.find("div.fc-day-content div"), ie = ae.eq(0), se = ie.find("> div"), Z(ee.add(ee.find("tr"))), Z(re.add(re.find("tr"))), Se = ee.find("th:first"), Ee = te.find(".fc-agenda-gutter"), le = t("<div style='position:absolute;z-index:2;left:0;width:100%'/>").appendTo(n), tn("allDaySlot") ? (fe = t("<div style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(le), e = "<table style='width:100%' class='fc-agenda-allday' cellspacing='0'><tr><th class='" + s + " fc-agenda-axis'>" + tn("allDayText") + "</th>" + "<td>" + "<div class='fc-day-content'><div style='position:relative'/></div>" + "</td>" + "<th class='" + s + " fc-agenda-gutter'>&nbsp;</th>" + "</tr>" + "</table>", pe = t(e).appendTo(le), ye = pe.find("tr"), D(ye.find("td")), Se = Se.add(pe.find("th:first")), Ee = Ee.add(pe.find("th.fc-agenda-gutter")), le.append("<div class='fc-agenda-divider " + s + "'>" + "<div class='fc-agenda-divider-inner'/>" + "</div>")) : fe = t([]), be = t("<div style='position:absolute;width:100%;overflow-x:hidden;overflow-y:auto'/>").appendTo(le), we = t("<div style='position:relative;width:100%;overflow:hidden'/>").appendTo(be), De = t("<div style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(we), e = "<table class='fc-agenda-slots' style='width:100%' cellspacing='0'><tbody>", a = v(), o = u(d(a), Ze), u(a, Ue), _e = 0, r = 0; o > a; r++)i = a.getMinutes(), e += "<tr class='fc-slot" + r + " " + (i ? "fc-minor" : "") + "'>" + "<th class='fc-agenda-axis " + s + "'>" + (l && i ? "&nbsp;" : un(a, tn("axisFormat"))) + "</th>" + "<td class='" + c + "'>" + "<div style='position:relative'>&nbsp;</div>" + "</td>" + "</tr>", u(a, tn("slotMinutes")), _e++;
            e += "</tbody></table>", Me = t(e).appendTo(we), Ce = Me.find("div:first"), M(Me.find("td")), Se = Se.add(Me.find("th:first"))
        }

        function l() {
            var t, e, n, r, a = f(new Date);
            if (Qe) {
                var o = un(N(0), Ke);
                Je ? o += Ge : o = Ge + o, ee.find(".fc-week-number").text(o)
            }
            for (t = 0; Le > t; t++)r = N(t), e = ne.eq(t), e.html(un(r, $e)), n = ae.eq(t), +r == +a ? n.addClass(Ye + "-state-highlight fc-today") : n.removeClass(Ye + "-state-highlight fc-today"), $(e.add(n), r)
        }

        function h(t, n) {
            t === e && (t = ke), ke = t, fn = {};
            var r = re.position().top, a = be.position().top, o = Math.min(t - r, Me.height() + a + 1);
            se.height(o - L(ie)), le.css("top", r), be.height(o - a - 1), Re = Ce.height() + 1, We = tn("slotMinutes") / Ne, Ae = Re / We, n && m()
        }

        function p(e) {
            Te = e, qe.clear(), He = 0, z(Se.width("").each(function (e, n) {
                He = Math.max(He, t(n).outerWidth())
            }), He);
            var n = be[0].clientWidth;
            Fe = be.width() - n, Fe ? (z(Ee, Fe), Ee.show().prev().removeClass("fc-last")) : Ee.hide().prev().addClass("fc-last"), ze = Math.floor((n - He) / Le), z(ne.slice(0, -1), ze)
        }

        function m() {
            function t() {
                be.scrollTop(r)
            }

            var e = v(), n = d(e);
            n.setHours(tn("firstHour"));
            var r = _(e, n) + 1;
            t(), setTimeout(t, 0)
        }

        function y() {
            Ie = be.scrollTop()
        }

        function w() {
            be.scrollTop(Ie)
        }

        function D(t) {
            t.click(C).mousedown(cn)
        }

        function M(t) {
            t.click(C).mousedown(V)
        }

        function C(t) {
            if (!tn("selectable")) {
                var e = Math.min(Le - 1, Math.floor((t.pageX - te.offset().left - He) / ze)), n = N(e), r = this.parentNode.className.match(/fc-slot(\d+)/);
                if (r) {
                    var a = parseInt(r[1]) * tn("slotMinutes"), o = Math.floor(a / 60);
                    n.setHours(o), n.setMinutes(a % 60 + Ue), en("dayClick", ae[e], n, !1, t)
                } else en("dayClick", ae[e], n, !0, t)
            }
        }

        function S(t, e, n) {
            n && Oe.build();
            var r, a, o = d(K.visStart);
            Je ? (r = g(e, o) * Ve + Xe + 1, a = g(t, o) * Ve + Xe + 1) : (r = g(t, o), a = g(e, o)), r = Math.max(0, r), a = Math.min(Le, a), a > r && D(E(0, r, 0, a - 1))
        }

        function E(t, e, n, r) {
            var a = Oe.rect(t, e, n, r, le);
            return rn(a, le)
        }

        function x(t, e) {
            for (var n = d(K.visStart), r = c(d(n), 1), a = 0; Le > a; a++) {
                var o = new Date(Math.max(n, t)), i = new Date(Math.min(r, e));
                if (i > o) {
                    var s = a * Ve + Xe, l = Oe.rect(0, s, 0, s, we), u = _(n, o), f = _(n, i);
                    l.top = u, l.height = f - u, M(rn(l, we))
                }
                c(n, 1), c(r, 1)
            }
        }

        function T(t) {
            return qe.left(t)
        }

        function k(t) {
            return qe.right(t)
        }

        function H(t) {
            return{row: Math.floor(g(t, K.visStart) / 7), col: A(t.getDay())}
        }

        function R(t) {
            var e = N(t.col), n = t.row;
            return tn("allDaySlot") && n--, n >= 0 && u(e, Ue + n * Ne), e
        }

        function N(t) {
            return c(d(K.visStart), t * Ve + Xe)
        }

        function W(t) {
            return tn("allDaySlot") && !t.row
        }

        function A(t) {
            return(t - Math.max(je, Pe) + Le) % Le * Ve + Xe
        }

        function _(t, n) {
            if (t = d(t, !0), u(d(t), Ue) > n)return 0;
            if (n >= u(d(t), Ze))return Me.height();
            var r = tn("slotMinutes"), a = 60 * n.getHours() + n.getMinutes() - Ue, o = Math.floor(a / r), i = fn[o];
            return i === e && (i = fn[o] = Me.find("tr:eq(" + o + ") td div")[0].offsetTop), Math.max(0, Math.round(i - 1 + Re * (a % r / r)))
        }

        function O() {
            return{left: He, right: Te - Fe}
        }

        function B() {
            return ye
        }

        function q(t) {
            var e = d(t.start);
            return t.allDay ? e : u(e, tn("defaultEventMinutes"))
        }

        function I(t, e) {
            return e ? d(t) : u(d(t), tn("slotMinutes"))
        }

        function j(t, e, n) {
            n ? tn("allDaySlot") && S(t, c(d(e), 1), !0) : P(t, e)
        }

        function P(e, n) {
            var r = tn("selectHelper");
            if (Oe.build(), r) {
                var a = g(e, K.visStart) * Ve + Xe;
                if (a >= 0 && Le > a) {
                    var o = Oe.rect(0, a, 0, a, we), i = _(e, e), s = _(e, n);
                    if (s > i) {
                        if (o.top = i, o.height = s - i, o.left += 2, o.width -= 5, t.isFunction(r)) {
                            var c = r(e, n);
                            c && (o.position = "absolute", o.zIndex = 8, xe = t(c).css(o).appendTo(we))
                        } else o.isStart = !0, o.isEnd = !0, xe = t(ln({title: "", start: e, end: n, className: ["fc-select-helper"], editable: !1}, o)), xe.css("opacity", tn("dragOpacity"));
                        xe && (M(xe), we.append(xe), z(xe, o.width, !0), F(xe, o.height, !0))
                    }
                }
            } else x(e, n)
        }

        function J() {
            an(), xe && (xe.remove(), xe = null)
        }

        function V(e) {
            if (1 == e.which && tn("selectable")) {
                sn(e);
                var n;
                Be.start(function (t, e) {
                    if (J(), t && t.col == e.col && !W(t)) {
                        var r = R(e), a = R(t);
                        n = [r, u(d(r), Ne), a, u(d(a), Ne)].sort(Y), P(n[0], n[3])
                    } else n = null
                }, e), t(document).one("mouseup", function (t) {
                    Be.stop(), n && (+n[0] == +n[1] && X(n[0], !1, t), on(n[0], n[3], !1, t))
                })
            }
        }

        function X(t, e, n) {
            en("dayClick", ae[A(t.getDay())], t, e, n)
        }

        function Q(t, e) {
            Be.start(function (t) {
                if (an(), t)if (W(t))E(t.row, t.col, t.row, t.col); else {
                    var e = R(t), n = u(d(e), tn("defaultEventMinutes"));
                    x(e, n)
                }
            }, e)
        }

        function G(t, e, n) {
            var r = Be.stop();
            an(), r && en("drop", t, R(r), W(r), e, n)
        }

        var K = this;
        K.renderAgenda = o, K.setWidth = p, K.setHeight = h, K.beforeHide = y, K.afterShow = w, K.defaultEventEnd = q, K.timePosition = _, K.dayOfWeekCol = A, K.dateCell = H, K.cellDate = R, K.cellIsAllDay = W, K.allDayRow = B, K.allDayBounds = O, K.getHoverListener = function () {
            return Be
        }, K.colContentLeft = T, K.colContentRight = k, K.getDaySegmentContainer = function () {
            return fe
        }, K.getSlotSegmentContainer = function () {
            return De
        }, K.getMinMinute = function () {
            return Ue
        }, K.getMaxMinute = function () {
            return Ze
        }, K.getBodyContent = function () {
            return we
        }, K.getRowCnt = function () {
            return 1
        }, K.getColCnt = function () {
            return Le
        }, K.getColWidth = function () {
            return ze
        }, K.getSnapHeight = function () {
            return Ae
        }, K.getSnapMinutes = function () {
            return Ne
        }, K.defaultSelectionEnd = I, K.renderDayOverlay = S, K.renderSelection = j, K.clearSelection = J, K.reportDayClick = X, K.dragStart = Q, K.dragStop = G, ue.call(K, n, r, a), ve.call(K), de.call(K), ce.call(K);
        var te, ee, ne, re, ae, oe, ie, se, le, fe, pe, ye, be, we, De, Me, Ce, Se, Ee, xe, Te, ke, He, ze, Fe, Re, Ne, We, Ae, Le, _e, Oe, Be, qe, Ie, Ye, je, Pe, Je, Ve, Xe, Ue, Ze, $e, Qe, Ge, Ke, tn = K.opt, en = K.trigger, nn = K.clearEvents, rn = K.renderOverlay, an = K.clearOverlays, on = K.reportSelection, sn = K.unselect, cn = K.daySelectionMousedown, ln = K.slotSegHtml, un = r.formatDate, fn = {};
        U(n.addClass("fc-agenda")), Oe = new he(function (e, n) {
            function r(t) {
                return Math.max(c, Math.min(l, t))
            }

            var a, o, i;
            ne.each(function (e, r) {
                a = t(r), o = a.offset().left, e && (i[1] = o), i = [o], n[e] = i
            }), i[1] = o + a.outerWidth(), tn("allDaySlot") && (a = ye, o = a.offset().top, e[0] = [o, o + a.outerHeight()]);
            for (var s = we.offset().top, c = be.offset().top, l = c + be.outerHeight(), u = 0; _e * We > u; u++)e.push([r(s + Ae * u), r(s + Ae * (u + 1))])
        }), Be = new ge(Oe), qe = new me(function (t) {
            return oe.eq(t)
        })
    }

    function ce() {
        function n(t, e) {
            S(t);
            var n, r = t.length, i = [], c = [];
            for (n = 0; r > n; n++)t[n].allDay ? i.push(t[n]) : c.push(t[n]);
            y("allDaySlot") && (Y(a(i), e), z()), s(o(c), e), b("eventAfterAllRender")
        }

        function r() {
            E(), N().empty(), W().empty()
        }

        function a(e) {
            var n, r, a, o, i = k(T(e, t.map(e, C), m.visStart, m.visEnd)), s = i.length, c = [];
            for (n = 0; s > n; n++)for (r = i[n], a = 0; r.length > a; a++)o = r[a], o.row = 0, o.level = n, c.push(o);
            return c
        }

        function o(e) {
            var n, r, a, o, s, l, f = P(), v = O(), h = _(), g = u(d(m.visStart), v), p = t.map(e, i), y = [];
            for (n = 0; f > n; n++) {
                for (r = k(T(e, p, g, u(d(g), h - v))), le(r), a = 0; r.length > a; a++)for (o = r[a], s = 0; o.length > s; s++)l = o[s], l.col = n, l.level = a, y.push(l);
                c(g, 1, !0)
            }
            return y
        }

        function i(t) {
            return t.end ? d(t.end) : u(d(t.start), y("defaultEventMinutes"))
        }

        function s(n, r) {
            var a, o, i, s, c, u, f, d, h, g, p, m, w, D, M, C, S, E, x, T, k, z, F = n.length, N = "", A = {}, _ = {}, O = W(), Y = P();
            for ((T = y("isRTL")) ? (k = -1, z = Y - 1) : (k = 1, z = 0), a = 0; F > a; a++)o = n[a], i = o.event, s = B(o.start, o.start), c = B(o.start, o.end), u = o.col, f = o.level, d = o.forward || 0, h = q(u * k + z), g = I(u * k + z) - h, g = Math.min(g - 6, .95 * g), p = f ? g / (f + d + 1) : d ? 2 * (g / (d + 1) - 6) : g, m = h + g / (f + d + 1) * f * k + (T ? g - p : 0), o.top = s, o.left = m, o.outerWidth = p, o.outerHeight = c - s, N += l(i, o);
            for (O[0].innerHTML = N, w = O.children(), a = 0; F > a; a++)o = n[a], i = o.event, D = t(w[a]), M = b("eventRender", i, i, D), M === !1 ? D.remove() : (M && M !== !0 && (D.remove(), D = t(M).css({position: "absolute", top: o.top, left: o.left}).appendTo(O)), o.element = D, i._id === r ? v(i, D, o) : D[0]._fci = a, G(i, D));
            for (H(O, n, v), a = 0; F > a; a++)o = n[a], (D = o.element) && (S = A[C = o.key = X(D[0])], o.vsides = S === e ? A[C] = L(D, !0) : S, S = _[C], o.hsides = S === e ? _[C] = R(D, !0) : S, E = D.find(".fc-event-title"), E.length && (o.contentTop = E[0].offsetTop));
            for (a = 0; F > a; a++)o = n[a], (D = o.element) && (D[0].style.width = Math.max(0, o.outerWidth - o.hsides) + "px", x = Math.max(0, o.outerHeight - o.vsides), D[0].style.height = x + "px", i = o.event, o.contentTop !== e && 10 > x - o.contentTop && (D.find("div.fc-event-time").text(ie(i.start, y("timeFormat")) + " - " + i.title), D.find("div.fc-event-title").remove()), b("eventAfterRender", i, i, D))
        }

        function l(t, e) {
            var n = "<", r = t.url, a = Q(t, y), o = ["fc-event", "fc-event-vert"];
            return w(t) && o.push("fc-event-draggable"), e.isStart && o.push("fc-event-start"), e.isEnd && o.push("fc-event-end"), o = o.concat(t.className), t.source && (o = o.concat(t.source.className || [])), n += r ? "a href='" + V(t.url) + "'" : "div", n += " class='" + o.join(" ") + "'" + " style='position:absolute;z-index:8;top:" + e.top + "px;left:" + e.left + "px;" + a + "'" + ">" + "<div class='fc-event-inner'>" + "<div class='fc-event-time'>" + V(se(t.start, t.end, y("timeFormat"))) + "</div>" + "<div class='fc-event-title'>" + V(t.title) + "</div>" + "</div>" + "<div class='fc-event-bg'></div>", e.isEnd && D(t) && (n += "<div class='ui-resizable-handle ui-resizable-s'>=</div>"), n += "</" + (r ? "a" : "div") + ">"
        }

        function f(t, e, n) {
            w(t) && h(t, e, n.isStart), n.isEnd && D(t) && j(t, e, n), x(t, e)
        }

        function v(t, e, n) {
            var r = e.find("div.fc-event-time");
            w(t) && g(t, e, r), n.isEnd && D(t) && p(t, e, r), x(t, e)
        }

        function h(t, e, n) {
            function r() {
                s || (e.width(a).height("").draggable("option", "grid", null), s = !0)
            }

            var a, o, i, s = !0, l = y("isRTL") ? -1 : 1, u = A(), f = J(), v = U(), h = Z(), g = O();
            e.draggable({zIndex: 9, opacity: y("dragOpacity", "month"), revertDuration: y("dragRevertDuration"), start: function (g, p) {
                b("eventDragStart", e, t, g, p), te(t, e), a = e.width(), u.start(function (a, u, g, p) {
                    ae(), a ? (o = !1, i = p * l, a.row ? n ? s && (e.width(f - 10), F(e, v * Math.round((t.end ? (t.end - t.start) / Te : y("defaultEventMinutes")) / h)), e.draggable("option", "grid", [f, 1]), s = !1) : o = !0 : (re(c(d(t.start), i), c(C(t), i)), r()), o = o || s && !i) : (r(), o = !0), e.draggable("option", "revert", o)
                }, g, "drag")
            }, stop: function (n, a) {
                if (u.stop(), ae(), b("eventDragStop", e, t, n, a), o)r(), e.css("filter", ""), K(t, e); else {
                    var c = 0;
                    s || (c = Math.round((e.offset().top - $().offset().top) / v) * h + g - (60 * t.start.getHours() + t.start.getMinutes())), ee(this, t, i, c, s, n, a)
                }
            }})
        }

        function g(t, e, n) {
            function r(e) {
                var r, a = u(d(t.start), e);
                t.end && (r = u(d(t.end), e)), n.text(se(a, r, y("timeFormat")))
            }

            function a() {
                f && (n.css("display", ""), e.draggable("option", "grid", [p, m]), f = !1)
            }

            var o, i, s, l, f = !1, v = y("isRTL") ? -1 : 1, h = A(), g = P(), p = J(), m = U(), w = Z();
            e.draggable({zIndex: 9, scroll: !1, grid: [p, m], axis: 1 == g ? "y" : !1, opacity: y("dragOpacity"), revertDuration: y("dragRevertDuration"), start: function (r, u) {
                b("eventDragStart", e, t, r, u), te(t, e), o = e.position(), s = l = 0, h.start(function (r, o, s, l) {
                    e.draggable("option", "revert", !r), ae(), r && (i = l * v, y("allDaySlot") && !r.row ? (f || (f = !0, n.hide(), e.draggable("option", "grid", null)), re(c(d(t.start), i), c(C(t), i))) : a())
                }, r, "drag")
            }, drag: function (t, e) {
                s = Math.round((e.position.top - o.top) / m) * w, s != l && (f || r(s), l = s)
            }, stop: function (n, c) {
                var l = h.stop();
                ae(), b("eventDragStop", e, t, n, c), l && (i || s || f) ? ee(this, t, i, f ? 0 : s, f, n, c) : (a(), e.css("filter", ""), e.css(o), r(0), K(t, e))
            }})
        }

        function p(t, e, n) {
            var r, a, o = U(), i = Z();
            e.resizable({handles: {s: ".ui-resizable-handle"}, grid: o, start: function (n, o) {
                r = a = 0, te(t, e), e.css("z-index", 9), b("eventResizeStart", this, t, n, o)
            }, resize: function (s, c) {
                r = Math.round((Math.max(o, e.height()) - c.originalSize.height) / o), r != a && (n.text(se(t.start, r || t.end ? u(M(t), i * r) : null, y("timeFormat"))), a = r)
            }, stop: function (n, a) {
                b("eventResizeStop", this, t, n, a), r ? ne(this, t, 0, i * r, n, a) : (e.css("z-index", 8), K(t, e))
            }})
        }

        var m = this;
        m.renderEvents = n, m.compileDaySegs = a, m.clearEvents = r, m.slotSegHtml = l, m.bindDaySeg = f, fe.call(m);
        var y = m.opt, b = m.trigger, w = m.isEventDraggable, D = m.isEventResizable, M = m.eventEnd, S = m.reportEvents, E = m.reportEventClear, x = m.eventElementHandlers, z = m.setHeight, N = m.getDaySegmentContainer, W = m.getSlotSegmentContainer, A = m.getHoverListener, _ = m.getMaxMinute, O = m.getMinMinute, B = m.timePosition, q = m.colContentLeft, I = m.colContentRight, Y = m.renderDaySegs, j = m.resizableDayEvent, P = m.getColCnt, J = m.getColWidth, U = m.getSnapHeight, Z = m.getSnapMinutes, $ = m.getBodyContent, G = m.reportEventElement, K = m.showEvents, te = m.hideEvents, ee = m.eventDrop, ne = m.eventResize, re = m.renderDayOverlay, ae = m.clearOverlays, oe = m.calendar, ie = oe.formatDate, se = oe.formatDates
    }

    function le(t) {
        var e, n, r, a, o, i;
        for (e = t.length - 1; e > 0; e--)for (a = t[e], n = 0; a.length > n; n++)for (o = a[n], r = 0; t[e - 1].length > r; r++)i = t[e - 1][r], x(o, i) && (i.forward = Math.max(i.forward || 0, (o.forward || 0) + 1))
    }

    function ue(t, n, r) {
        function a(t, e) {
            var n = F[t];
            return"object" == typeof n ? J(n, e || r) : n
        }

        function o(t, e) {
            return n.trigger.apply(n, [t, e || S].concat(Array.prototype.slice.call(arguments, 2), [S]))
        }

        function i(t) {
            return l(t) && !a("disableDragging")
        }

        function s(t) {
            return l(t) && !a("disableResizing")
        }

        function l(t) {
            return K(t.editable, (t.source || {}).editable, a("editable"))
        }

        function f(t) {
            k = {};
            var e, n, r = t.length;
            for (e = 0; r > e; e++)n = t[e], k[n._id] ? k[n._id].push(n) : k[n._id] = [n]
        }

        function v(t) {
            return t.end ? d(t.end) : E(t)
        }

        function h(t, e) {
            H.push(e), z[t._id] ? z[t._id].push(e) : z[t._id] = [e]
        }

        function g() {
            H = [], z = {}
        }

        function p(t, n) {
            n.click(function (r) {
                return n.hasClass("ui-draggable-dragging") || n.hasClass("ui-resizable-resizing") ? e : o("eventClick", this, t, r)
            }).hover(function (e) {
                o("eventMouseover", this, t, e)
            }, function (e) {
                o("eventMouseout", this, t, e)
            })
        }

        function m(t, e) {
            b(t, e, "show")
        }

        function y(t, e) {
            b(t, e, "hide")
        }

        function b(t, e, n) {
            var r, a = z[t._id], o = a.length;
            for (r = 0; o > r; r++)e && a[r][0] == e[0] || a[r][n]()
        }

        function w(t, e, n, r, a, i, s) {
            var c = e.allDay, l = e._id;
            M(k[l], n, r, a), o("eventDrop", t, e, n, r, a, function () {
                M(k[l], -n, -r, c), T(l)
            }, i, s), T(l)
        }

        function D(t, e, n, r, a, i) {
            var s = e._id;
            C(k[s], n, r), o("eventResize", t, e, n, r, function () {
                C(k[s], -n, -r), T(s)
            }, a, i), T(s)
        }

        function M(t, n, r, a) {
            r = r || 0;
            for (var o, i = t.length, s = 0; i > s; s++)o = t[s], a !== e && (o.allDay = a), u(c(o.start, n, !0), r), o.end && (o.end = u(c(o.end, n, !0), r)), x(o, F)
        }

        function C(t, e, n) {
            n = n || 0;
            for (var r, a = t.length, o = 0; a > o; o++)r = t[o], r.end = u(c(v(r), e, !0), n), x(r, F)
        }

        var S = this;
        S.element = t, S.calendar = n, S.name = r, S.opt = a, S.trigger = o, S.isEventDraggable = i, S.isEventResizable = s, S.reportEvents = f, S.eventEnd = v, S.reportEventElement = h, S.reportEventClear = g, S.eventElementHandlers = p, S.showEvents = m, S.hideEvents = y, S.eventDrop = w, S.eventResize = D;
        var E = S.defaultEventEnd, x = n.normalizeEvent, T = n.reportEventChange, k = {}, H = [], z = {}, F = n.options
    }

    function fe() {
        function n(t, e) {
            var n, r, c, d, p, m, y, b, w = B(), D = T(), M = k(), C = 0, S = t.length;
            for (w[0].innerHTML = a(t), o(t, w.children()), i(t), s(t, w, e), l(t), u(t), f(t), n = v(), r = 0; D > r; r++) {
                for (c = 0, d = [], p = 0; M > p; p++)d[p] = 0;
                for (; S > C && (m = t[C]).row == r;) {
                    for (y = j(d.slice(m.startCol, m.endCol)), m.top = y, y += m.outerHeight, b = m.startCol; m.endCol > b; b++)d[b] = y;
                    C++
                }
                n[r].height(j(d))
            }
            g(t, h(n))
        }

        function r(e, n, r) {
            var i, s, c, d = t("<div/>"), p = B(), m = e.length;
            for (d[0].innerHTML = a(e), i = d.children(), p.append(i), o(e, i), l(e), u(e), f(e), g(e, h(v())), i = [], s = 0; m > s; s++)c = e[s].element, c && (e[s].row === n && c.css("top", r), i.push(c[0]));
            return t(i)
        }

        function a(t) {
            var e, n, r, a, o, i, s, c, l, u, f = y("isRTL"), d = t.length, v = F(), h = v.left, g = v.right, p = "";
            for (e = 0; d > e; e++)n = t[e], r = n.event, o = ["fc-event", "fc-event-hori"], w(r) && o.push("fc-event-draggable"), n.isStart && o.push("fc-event-start"), n.isEnd && o.push("fc-event-end"), f ? (i = A(n.end.getDay() - 1), s = A(n.start.getDay()), c = n.isEnd ? N(i) : h, l = n.isStart ? W(s) : g) : (i = A(n.start.getDay()), s = A(n.end.getDay() - 1), c = n.isStart ? N(i) : h, l = n.isEnd ? W(s) : g), o = o.concat(r.className), r.source && (o = o.concat(r.source.className || [])), a = r.url, u = Q(r, y), p += a ? "<a href='" + V(a) + "'" : "<div", p += " class='" + o.join(" ") + "'" + " style='position:absolute;z-index:8;left:" + c + "px;" + u + "'" + ">" + "<div class='fc-event-inner'>", !r.allDay && n.isStart && (p += "<span class='fc-event-time'>" + V(I(r.start, r.end, y("timeFormat"))) + "</span>"), p += "<span class='fc-event-title'>" + V(r.title) + "</span>" + "</div>", n.isEnd && D(r) && (p += "<div class='ui-resizable-handle ui-resizable-" + (f ? "w" : "e") + "'>" + "&nbsp;&nbsp;&nbsp;" + "</div>"), p += "</" + (a ? "a" : "div") + ">", n.left = c, n.outerWidth = l - c, n.startCol = i, n.endCol = s + 1;
            return p
        }

        function o(e, n) {
            var r, a, o, i, s, c = e.length;
            for (r = 0; c > r; r++)a = e[r], o = a.event, i = t(n[r]), s = b("eventRender", o, o, i), s === !1 ? i.remove() : (s && s !== !0 && (s = t(s).css({position: "absolute", left: a.left}), i.replaceWith(s), i = s), a.element = i)
        }

        function i(t) {
            var e, n, r, a = t.length;
            for (e = 0; a > e; e++)n = t[e], r = n.element, r && C(n.event, r)
        }

        function s(t, e, n) {
            var r, a, o, i, s = t.length;
            for (r = 0; s > r; r++)a = t[r], o = a.element, o && (i = a.event, i._id === n ? q(i, o, a) : o[0]._fci = r);
            H(e, t, q)
        }

        function l(t) {
            var n, r, a, o, i, s = t.length, c = {};
            for (n = 0; s > n; n++)r = t[n], a = r.element, a && (o = r.key = X(a[0]), i = c[o], i === e && (i = c[o] = R(a, !0)), r.hsides = i)
        }

        function u(t) {
            var e, n, r, a = t.length;
            for (e = 0; a > e; e++)n = t[e], r = n.element, r && (r[0].style.width = Math.max(0, n.outerWidth - n.hsides) + "px")
        }

        function f(t) {
            var n, r, a, o, i, s = t.length, c = {};
            for (n = 0; s > n; n++)r = t[n], a = r.element, a && (o = r.key, i = c[o], i === e && (i = c[o] = O(a)), r.outerHeight = a[0].offsetHeight + i)
        }

        function v() {
            var t, e = T(), n = [];
            for (t = 0; e > t; t++)n[t] = z(t).find("div.fc-day-content > div");
            return n
        }

        function h(t) {
            var e, n = t.length, r = [];
            for (e = 0; n > e; e++)r[e] = t[e][0].offsetTop;
            return r
        }

        function g(t, e) {
            var n, r, a, o, i = t.length;
            for (n = 0; i > n; n++)r = t[n], a = r.element, a && (a[0].style.top = e[r.row] + (r.top || 0) + "px", o = r.event, b("eventAfterRender", o, o, a))
        }

        function p(e, n, a) {
            var o = y("isRTL"), i = o ? "w" : "e", s = n.find(".ui-resizable-" + i), l = !1;
            U(n), n.mousedown(function (t) {
                t.preventDefault()
            }).click(function (t) {
                l && (t.preventDefault(), t.stopImmediatePropagation())
            }), s.mousedown(function (s) {
                function u(n) {
                    b("eventResizeStop", this, e, n), t("body").css("cursor", ""), h.stop(), P(), f && x(this, e, f, 0, n), setTimeout(function () {
                        l = !1
                    }, 0)
                }

                if (1 == s.which) {
                    l = !0;
                    var f, v, h = m.getHoverListener(), g = T(), p = k(), y = o ? -1 : 1, w = o ? p - 1 : 0, D = n.css("top"), C = t.extend({}, e), H = L(e.start);
                    J(), t("body").css("cursor", i + "-resize").one("mouseup", u), b("eventResizeStart", this, e, s), h.start(function (t, n) {
                        if (t) {
                            var s = Math.max(H.row, t.row), l = t.col;
                            1 == g && (s = 0), s == H.row && (l = o ? Math.min(H.col, l) : Math.max(H.col, l)), f = 7 * s + l * y + w - (7 * n.row + n.col * y + w);
                            var u = c(M(e), f, !0);
                            if (f) {
                                C.end = u;
                                var h = v;
                                v = r(_([C]), a.row, D), v.find("*").css("cursor", i + "-resize"), h && h.remove(), E(e)
                            } else v && (S(e), v.remove(), v = null);
                            P(), Y(e.start, c(d(u), 1))
                        }
                    }, s)
                }
            })
        }

        var m = this;
        m.renderDaySegs = n, m.resizableDayEvent = p;
        var y = m.opt, b = m.trigger, w = m.isEventDraggable, D = m.isEventResizable, M = m.eventEnd, C = m.reportEventElement, S = m.showEvents, E = m.hideEvents, x = m.eventResize, T = m.getRowCnt, k = m.getColCnt;
        m.getColWidth;
        var z = m.allDayRow, F = m.allDayBounds, N = m.colContentLeft, W = m.colContentRight, A = m.dayOfWeekCol, L = m.dateCell, _ = m.compileDaySegs, B = m.getDaySegmentContainer, q = m.bindDaySeg, I = m.calendar.formatDates, Y = m.renderDayOverlay, P = m.clearOverlays, J = m.clearSelection
    }

    function de() {
        function e(t, e, a) {
            n(), e || (e = c(t, a)), l(t, e, a), r(t, e, a)
        }

        function n(t) {
            f && (f = !1, u(), s("unselect", null, t))
        }

        function r(t, e, n, r) {
            f = !0, s("select", null, t, e, n, r)
        }

        function a(e) {
            var a = o.cellDate, s = o.cellIsAllDay, c = o.getHoverListener(), f = o.reportDayClick;
            if (1 == e.which && i("selectable")) {
                n(e);
                var d;
                c.start(function (t, e) {
                    u(), t && s(t) ? (d = [a(e), a(t)].sort(Y), l(d[0], d[1], !0)) : d = null
                }, e), t(document).one("mouseup", function (t) {
                    c.stop(), d && (+d[0] == +d[1] && f(d[0], !0, t), r(d[0], d[1], !0, t))
                })
            }
        }

        var o = this;
        o.select = e, o.unselect = n, o.reportSelection = r, o.daySelectionMousedown = a;
        var i = o.opt, s = o.trigger, c = o.defaultSelectionEnd, l = o.renderSelection, u = o.clearSelection, f = !1;
        i("selectable") && i("unselectAuto") && t(document).mousedown(function (e) {
            var r = i("unselectCancel");
            r && t(e.target).parents(r).length || n(e)
        })
    }

    function ve() {
        function e(e, n) {
            var r = o.shift();
            return r || (r = t("<div class='fc-cell-overlay' style='position:absolute;z-index:3'/>")), r[0].parentNode != n[0] && r.appendTo(n), a.push(r.css(e).show()), r
        }

        function n() {
            for (var t; t = a.shift();)o.push(t.hide().unbind())
        }

        var r = this;
        r.renderOverlay = e, r.clearOverlays = n;
        var a = [], o = []
    }

    function he(t) {
        var e, n, r = this;
        r.build = function () {
            e = [], n = [], t(e, n)
        }, r.cell = function (t, r) {
            var a, o = e.length, i = n.length, s = -1, c = -1;
            for (a = 0; o > a; a++)if (r >= e[a][0] && e[a][1] > r) {
                s = a;
                break
            }
            for (a = 0; i > a; a++)if (t >= n[a][0] && n[a][1] > t) {
                c = a;
                break
            }
            return s >= 0 && c >= 0 ? {row: s, col: c} : null
        }, r.rect = function (t, r, a, o, i) {
            var s = i.offset();
            return{top: e[t][0] - s.top, left: n[r][0] - s.left, width: n[o][1] - n[r][0], height: e[a][1] - e[t][0]}
        }
    }

    function ge(e) {
        function n(t) {
            pe(t);
            var n = e.cell(t.pageX, t.pageY);
            (!n != !i || n && (n.row != i.row || n.col != i.col)) && (n ? (o || (o = n), a(n, o, n.row - o.row, n.col - o.col)) : a(n, o), i = n)
        }

        var r, a, o, i, s = this;
        s.start = function (s, c, l) {
            a = s, o = i = null, e.build(), n(c), r = l || "mousemove", t(document).bind(r, n)
        }, s.stop = function () {
            return t(document).unbind(r, n), i
        }
    }

    function pe(t) {
        t.pageX === e && (t.pageX = t.originalEvent.pageX, t.pageY = t.originalEvent.pageY)
    }

    function me(t) {
        function n(e) {
            return a[e] = a[e] || t(e)
        }

        var r = this, a = {}, o = {}, i = {};
        r.left = function (t) {
            return o[t] = o[t] === e ? n(t).position().left : o[t]
        }, r.right = function (t) {
            return i[t] = i[t] === e ? r.left(t) + n(t).width() : i[t]
        }, r.clear = function () {
            a = {}, o = {}, i = {}
        }
    }

    var ye = {defaultView: "month", aspectRatio: 1.35, header: {left: "title", center: "", right: "today prev,next"}, weekends: !0, weekNumbers: !1, weekNumberCalculation: "iso", weekNumberTitle: "W", allDayDefault: !0, ignoreTimezone: !0, lazyFetching: !0, startParam: "start", endParam: "end", titleFormat: {month: "MMMM yyyy", week: "MMM d[ yyyy]{ '&#8212;'[ MMM] d yyyy}", day: "dddd, MMM d, yyyy"}, columnFormat: {month: "ddd", week: "ddd M/d", day: "dddd M/d"}, timeFormat: {"": "h(:mm)t"}, isRTL: !1, firstDay: 0, monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], buttonText: {prev: "<span class='fc-text-arrow'>&lsaquo;</span>", next: "<span class='fc-text-arrow'>&rsaquo;</span>", prevYear: "<span class='fc-text-arrow'>&laquo;</span>", nextYear: "<span class='fc-text-arrow'>&raquo;</span>", today: "today", month: "month", week: "week", day: "day"}, theme: !1, buttonIcons: {prev: "circle-triangle-w", next: "circle-triangle-e"}, unselectAuto: !0, dropAccept: "*"}, be = {header: {left: "next,prev today", center: "", right: "title"}, buttonText: {prev: "<span class='fc-text-arrow'>&rsaquo;</span>", next: "<span class='fc-text-arrow'>&lsaquo;</span>", prevYear: "<span class='fc-text-arrow'>&raquo;</span>", nextYear: "<span class='fc-text-arrow'>&laquo;</span>"}, buttonIcons: {prev: "circle-triangle-e", next: "circle-triangle-w"}}, we = t.fullCalendar = {version: "1.6.1"}, De = we.views = {};
    t.fn.fullCalendar = function (n) {
        if ("string" == typeof n) {
            var a, o = Array.prototype.slice.call(arguments, 1);
            return this.each(function () {
                var r = t.data(this, "fullCalendar");
                if (r && t.isFunction(r[n])) {
                    var i = r[n].apply(r, o);
                    a === e && (a = i), "destroy" == n && t.removeData(this, "fullCalendar")
                }
            }), a !== e ? a : this
        }
        var i = n.eventSources || [];
        return delete n.eventSources, n.events && (i.push(n.events), delete n.events), n = t.extend(!0, {}, ye, n.isRTL || n.isRTL === e && ye.isRTL ? be : {}, n), this.each(function (e, a) {
            var o = t(a), s = new r(o, n, i);
            o.data("fullCalendar", s), s.render()
        }), this
    }, we.sourceNormalizers = [], we.sourceFetchers = [];
    var Me = {dataType: "json", cache: !1}, Ce = 1;
    we.addDays = c, we.cloneDate = d, we.parseDate = m, we.parseISO8601 = y, we.parseTime = b, we.formatDate = w, we.formatDates = D;
    var Se = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"], Ee = 864e5, xe = 36e5, Te = 6e4, ke = {s: function (t) {
        return t.getSeconds()
    }, ss: function (t) {
        return P(t.getSeconds())
    }, m: function (t) {
        return t.getMinutes()
    }, mm: function (t) {
        return P(t.getMinutes())
    }, h: function (t) {
        return t.getHours() % 12 || 12
    }, hh: function (t) {
        return P(t.getHours() % 12 || 12)
    }, H: function (t) {
        return t.getHours()
    }, HH: function (t) {
        return P(t.getHours())
    }, d: function (t) {
        return t.getDate()
    }, dd: function (t) {
        return P(t.getDate())
    }, ddd: function (t, e) {
        return e.dayNamesShort[t.getDay()]
    }, dddd: function (t, e) {
        return e.dayNames[t.getDay()]
    }, M: function (t) {
        return t.getMonth() + 1
    }, MM: function (t) {
        return P(t.getMonth() + 1)
    }, MMM: function (t, e) {
        return e.monthNamesShort[t.getMonth()]
    }, MMMM: function (t, e) {
        return e.monthNames[t.getMonth()]
    }, yy: function (t) {
        return(t.getFullYear() + "").substring(2)
    }, yyyy: function (t) {
        return t.getFullYear()
    }, t: function (t) {
        return 12 > t.getHours() ? "a" : "p"
    }, tt: function (t) {
        return 12 > t.getHours() ? "am" : "pm"
    }, T: function (t) {
        return 12 > t.getHours() ? "A" : "P"
    }, TT: function (t) {
        return 12 > t.getHours() ? "AM" : "PM"
    }, u: function (t) {
        return w(t, "yyyy-MM-dd'T'HH:mm:ss'Z'")
    }, S: function (t) {
        var e = t.getDate();
        return e > 10 && 20 > e ? "th" : ["st", "nd", "rd"][e % 10 - 1] || "th"
    }, w: function (t, e) {
        return e.weekNumberCalculation(t)
    }, W: function (t) {
        return M(t)
    }};
    we.dateFormatters = ke, we.applyAll = G, De.month = te, De.basicWeek = ee, De.basicDay = ne, n({weekMode: "fixed"}), De.agendaWeek = oe, De.agendaDay = ie, n({allDaySlot: !0, allDayText: "all-day", firstHour: 6, slotMinutes: 30, defaultEventMinutes: 120, axisFormat: "h(:mm)tt", timeFormat: {agenda: "h:mm{ - h:mm}"}, dragOpacity: {agenda: .5}, minTime: 0, maxTime: 24})
})(jQuery);
// Generated by CoffeeScript 1.4.0

/*
 Easy pie chart is a jquery plugin to display simple animated pie charts for only one value

 Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.

 Built on top of the jQuery library (http://jquery.com)

 @source: http://github.com/rendro/easy-pie-chart/
 @autor: Robert Fleischmann
 @version: 1.0.1

 Inspired by: http://dribbble.com/shots/631074-Simple-Pie-Charts-II?list=popular&offset=210
 Thanks to Philip Thrasher for the jquery plugin boilerplate for coffee script
 */


(function () {

    (function ($) {
        $.easyPieChart = function (el, options) {
            var addScaleLine, animateLine, drawLine, easeInOutQuad, renderBackground, renderScale, renderTrack,
                _this = this;
            this.el = el;
            this.$el = $(el);
            this.$el.data("easyPieChart", this);
            this.init = function () {
                var percent;
                _this.options = $.extend({}, $.easyPieChart.defaultOptions, options);
                percent = parseInt(_this.$el.data('percent'), 10);
                _this.percentage = 0;
                _this.canvas = $("<canvas width='" + _this.options.size + "' height='" + _this.options.size + "'></canvas>").get(0);
                _this.$el.append(_this.canvas);
                if (typeof G_vmlCanvasManager !== "undefined" && G_vmlCanvasManager !== null) {
                    G_vmlCanvasManager.initElement(_this.canvas);
                }
                _this.ctx = _this.canvas.getContext('2d');
                if (window.devicePixelRatio > 1.5) {
                    $(_this.canvas).css({
                        width: _this.options.size,
                        height: _this.options.size
                    });
                    _this.canvas.width *= 2;
                    _this.canvas.height *= 2;
                    _this.ctx.scale(2, 2);
                }
                _this.ctx.translate(_this.options.size / 2, _this.options.size / 2);
                _this.$el.addClass('easyPieChart');
                _this.$el.css({
                    width: _this.options.size,
                    height: _this.options.size,
                    lineHeight: "" + _this.options.size + "px"
                });
                _this.update(percent);
                return _this;
            };
            this.update = function (percent) {
                if (_this.options.animate === false) {
                    return drawLine(percent);
                } else {
                    return animateLine(_this.percentage, percent);
                }
            };
            renderScale = function () {
                var i, _i, _results;
                _this.ctx.fillStyle = _this.options.scaleColor;
                _this.ctx.lineWidth = 1;
                _results = [];
                for (i = _i = 0; _i <= 24; i = ++_i) {
                    _results.push(addScaleLine(i));
                }
                return _results;
            };
            addScaleLine = function (i) {
                var offset;
                offset = i % 6 === 0 ? 0 : _this.options.size * 0.017;
                _this.ctx.save();
                _this.ctx.rotate(i * Math.PI / 12);
                _this.ctx.fillRect(_this.options.size / 2 - offset, 0, -_this.options.size * 0.05 + offset, 1);
                return _this.ctx.restore();
            };
            renderTrack = function () {
                var offset;
                offset = _this.options.size / 2 - _this.options.lineWidth / 2;
                if (_this.options.scaleColor !== false) {
                    offset -= _this.options.size * 0.08;
                }
                _this.ctx.beginPath();
                _this.ctx.arc(0, 0, offset, 0, Math.PI * 2, true);
                _this.ctx.closePath();
                _this.ctx.strokeStyle = _this.options.trackColor;
                _this.ctx.lineWidth = _this.options.lineWidth;
                return _this.ctx.stroke();
            };
            renderBackground = function () {
                if (_this.options.scaleColor !== false) {
                    renderScale();
                }
                if (_this.options.trackColor !== false) {
                    return renderTrack();
                }
            };
            drawLine = function (percent) {
                var offset;
                renderBackground();
                _this.ctx.strokeStyle = $.isFunction(_this.options.barColor) ? _this.options.barColor(percent) : _this.options.barColor;
                _this.ctx.lineCap = _this.options.lineCap;
                _this.ctx.lineWidth = _this.options.lineWidth;
                offset = _this.options.size / 2 - _this.options.lineWidth / 2;
                if (_this.options.scaleColor !== false) {
                    offset -= _this.options.size * 0.08;
                }
                _this.ctx.save();
                _this.ctx.rotate(-Math.PI / 2);
                _this.ctx.beginPath();
                _this.ctx.arc(0, 0, offset, 0, Math.PI * 2 * percent / 100, false);
                _this.ctx.stroke();
                return _this.ctx.restore();
            };
            animateLine = function (from, to) {
                var currentStep, fps, steps;
                fps = 30;
                steps = fps * _this.options.animate / 1000;
                currentStep = 0;
                _this.options.onStart.call(_this);
                _this.percentage = to;
                if (_this.animation) {
                    clearInterval(_this.animation);
                    _this.animation = false;
                }
                return _this.animation = setInterval(function () {
                    _this.ctx.clearRect(-_this.options.size / 2, -_this.options.size / 2, _this.options.size, _this.options.size);
                    renderBackground.call(_this);
                    drawLine.call(_this, [easeInOutQuad(currentStep, from, to - from, steps)]);
                    currentStep++;
                    if ((currentStep / steps) > 1) {
                        clearInterval(_this.animation);
                        _this.animation = false;
                        return _this.options.onStop.call(_this);
                    }
                }, 1000 / fps);
            };
            easeInOutQuad = function (t, b, c, d) {
                var easeIn, easing;
                easeIn = function (t) {
                    return Math.pow(t, 2);
                };
                easing = function (t) {
                    if (t < 1) {
                        return easeIn(t);
                    } else {
                        return 2 - easeIn((t / 2) * -2 + 2);
                    }
                };
                t /= d / 2;
                return c / 2 * easing(t) + b;
            };
            return this.init();
        };
        $.easyPieChart.defaultOptions = {
            barColor: '#ef1e25',
            trackColor: '#f2f2f2',
            scaleColor: '#dfe0e0',
            lineCap: 'round',
            size: 110,
            lineWidth: 3,
            animate: false,
            onStart: $.noop,
            onStop: $.noop
        };
        $.fn.easyPieChart = function (options) {
            return $.each(this, function (i, el) {
                var $el;
                $el = $(el);
                if (!$el.data('easyPieChart')) {
                    return $el.data('easyPieChart', new $.easyPieChart(el, options));
                }
            });
        };
        return void 0;
    })(jQuery);

}).call(this);

/* jquery.sparkline 2.1.2 - http://omnipotent.net/jquery.sparkline/ 
 ** Licensed under the New BSD License - see above site for details */

(function (a, b, c) {
    (function (a) {
        typeof define == "function" && define.amd ? define(["jquery"], a) : jQuery && !jQuery.fn.sparkline && a(jQuery)
    })(function (d) {
        "use strict";
        var e = {}, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L = 0;
        f = function () {
            return{common: {type: "line", lineColor: "#00f", fillColor: "#cdf", defaultPixelsPerValue: 3, width: "auto", height: "auto", composite: !1, tagValuesAttribute: "values", tagOptionsPrefix: "spark", enableTagOptions: !1, enableHighlight: !0, highlightLighten: 1.4, tooltipSkipNull: !0, tooltipPrefix: "", tooltipSuffix: "", disableHiddenCheck: !1, numberFormatter: !1, numberDigitGroupCount: 3, numberDigitGroupSep: ",", numberDecimalMark: ".", disableTooltips: !1, disableInteraction: !1}, line: {spotColor: "#f80", highlightSpotColor: "#5f5", highlightLineColor: "#f22", spotRadius: 1.5, minSpotColor: "#f80", maxSpotColor: "#f80", lineWidth: 1, normalRangeMin: c, normalRangeMax: c, normalRangeColor: "#ccc", drawNormalOnTop: !1, chartRangeMin: c, chartRangeMax: c, chartRangeMinX: c, chartRangeMaxX: c, tooltipFormat: new h('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')}, bar: {barColor: "#3366cc", negBarColor: "#f44", stackedBarColor: ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"], zeroColor: c, nullColor: c, zeroAxis: !0, barWidth: 4, barSpacing: 1, chartRangeMax: c, chartRangeMin: c, chartRangeClip: !1, colorMap: c, tooltipFormat: new h('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')}, tristate: {barWidth: 4, barSpacing: 1, posBarColor: "#6f6", negBarColor: "#f44", zeroBarColor: "#999", colorMap: {}, tooltipFormat: new h('<span style="color: {{color}}">&#9679;</span> {{value:map}}'), tooltipValueLookups: {map: {"-1": "Loss", 0: "Draw", 1: "Win"}}}, discrete: {lineHeight: "auto", thresholdColor: c, thresholdValue: 0, chartRangeMax: c, chartRangeMin: c, chartRangeClip: !1, tooltipFormat: new h("{{prefix}}{{value}}{{suffix}}")}, bullet: {targetColor: "#f33", targetWidth: 3, performanceColor: "#33f", rangeColors: ["#d3dafe", "#a8b6ff", "#7f94ff"], base: c, tooltipFormat: new h("{{fieldkey:fields}} - {{value}}"), tooltipValueLookups: {fields: {r: "Range", p: "Performance", t: "Target"}}}, pie: {offset: 0, sliceColors: ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"], borderWidth: 0, borderColor: "#000", tooltipFormat: new h('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')}, box: {raw: !1, boxLineColor: "#000", boxFillColor: "#cdf", whiskerColor: "#000", outlierLineColor: "#333", outlierFillColor: "#fff", medianColor: "#f00", showOutliers: !0, outlierIQR: 1.5, spotRadius: 1.5, target: c, targetColor: "#4a2", chartRangeMax: c, chartRangeMin: c, tooltipFormat: new h("{{field:fields}}: {{value}}"), tooltipFormatFieldlistKey: "field", tooltipValueLookups: {fields: {lq: "Lower Quartile", med: "Median", uq: "Upper Quartile", lo: "Left Outlier", ro: "Right Outlier", lw: "Left Whisker", rw: "Right Whisker"}}}}
        }, E = '.jqstooltip { position: absolute;left: 0px;top: 0px;visibility: hidden;background: rgb(0, 0, 0) transparent;background-color: rgba(0,0,0,0.6);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";color: white;font: 10px arial, san serif;text-align: left;white-space: nowrap;padding: 5px;border: 1px solid white;z-index: 10000;}.jqsfield { color: white;font: 10px arial, san serif;text-align: left;}', g = function () {
            var a, b;
            return a = function () {
                this.init.apply(this, arguments)
            }, arguments.length > 1 ? (arguments[0] ? (a.prototype = d.extend(new arguments[0], arguments[arguments.length - 1]), a._super = arguments[0].prototype) : a.prototype = arguments[arguments.length - 1], arguments.length > 2 && (b = Array.prototype.slice.call(arguments, 1, -1), b.unshift(a.prototype), d.extend.apply(d, b))) : a.prototype = arguments[0], a.prototype.cls = a, a
        }, d.SPFormatClass = h = g({fre: /\{\{([\w.]+?)(:(.+?))?\}\}/g, precre: /(\w+)\.(\d+)/, init: function (a, b) {
            this.format = a, this.fclass = b
        }, render: function (a, b, d) {
            var e = this, f = a, g, h, i, j, k;
            return this.format.replace(this.fre, function () {
                var a;
                return h = arguments[1], i = arguments[3], g = e.precre.exec(h), g ? (k = g[2], h = g[1]) : k = !1, j = f[h], j === c ? "" : i && b && b[i] ? (a = b[i], a.get ? b[i].get(j) || j : b[i][j] || j) : (n(j) && (d.get("numberFormatter") ? j = d.get("numberFormatter")(j) : j = s(j, k, d.get("numberDigitGroupCount"), d.get("numberDigitGroupSep"), d.get("numberDecimalMark"))), j)
            })
        }}), d.spformat = function (a, b) {
            return new h(a, b)
        }, i = function (a, b, c) {
            return a < b ? b : a > c ? c : a
        }, j = function (a, c) {
            var d;
            return c === 2 ? (d = b.floor(a.length / 2), a.length % 2 ? a[d] : (a[d - 1] + a[d]) / 2) : a.length % 2 ? (d = (a.length * c + c) / 4, d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1]) : (d = (a.length * c + 2) / 4, d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1])
        }, k = function (a) {
            var b;
            switch (a) {
                case"undefined":
                    a = c;
                    break;
                case"null":
                    a = null;
                    break;
                case"true":
                    a = !0;
                    break;
                case"false":
                    a = !1;
                    break;
                default:
                    b = parseFloat(a), a == b && (a = b)
            }
            return a
        }, l = function (a) {
            var b, c = [];
            for (b = a.length; b--;)c[b] = k(a[b]);
            return c
        }, m = function (a, b) {
            var c, d, e = [];
            for (c = 0, d = a.length; c < d; c++)a[c] !== b && e.push(a[c]);
            return e
        }, n = function (a) {
            return!isNaN(parseFloat(a)) && isFinite(a)
        }, s = function (a, b, c, e, f) {
            var g, h;
            a = (b === !1 ? parseFloat(a).toString() : a.toFixed(b)).split(""), g = (g = d.inArray(".", a)) < 0 ? a.length : g, g < a.length && (a[g] = f);
            for (h = g - c; h > 0; h -= c)a.splice(h, 0, e);
            return a.join("")
        }, o = function (a, b, c) {
            var d;
            for (d = b.length; d--;) {
                if (c && b[d] === null)continue;
                if (b[d] !== a)return!1
            }
            return!0
        }, p = function (a) {
            var b = 0, c;
            for (c = a.length; c--;)b += typeof a[c] == "number" ? a[c] : 0;
            return b
        }, r = function (a) {
            return d.isArray(a) ? a : [a]
        }, q = function (b) {
            var c;
            a.createStyleSheet ? a.createStyleSheet().cssText = b : (c = a.createElement("style"), c.type = "text/css", a.getElementsByTagName("head")[0].appendChild(c), c[typeof a.body.style.WebkitAppearance == "string" ? "innerText" : "innerHTML"] = b)
        }, d.fn.simpledraw = function (b, e, f, g) {
            var h, i;
            if (f && (h = this.data("_jqs_vcanvas")))return h;
            if (d.fn.sparkline.canvas === !1)return!1;
            if (d.fn.sparkline.canvas === c) {
                var j = a.createElement("canvas");
                if (!j.getContext || !j.getContext("2d")) {
                    if (!a.namespaces || !!a.namespaces.v)return d.fn.sparkline.canvas = !1, !1;
                    a.namespaces.add("v", "urn:schemas-microsoft-com:vml", "#default#VML"), d.fn.sparkline.canvas = function (a, b, c, d) {
                        return new J(a, b, c)
                    }
                } else d.fn.sparkline.canvas = function (a, b, c, d) {
                    return new I(a, b, c, d)
                }
            }
            return b === c && (b = d(this).innerWidth()), e === c && (e = d(this).innerHeight()), h = d.fn.sparkline.canvas(b, e, this, g), i = d(this).data("_jqs_mhandler"), i && i.registerCanvas(h), h
        }, d.fn.cleardraw = function () {
            var a = this.data("_jqs_vcanvas");
            a && a.reset()
        }, d.RangeMapClass = t = g({init: function (a) {
            var b, c, d = [];
            for (b in a)a.hasOwnProperty(b) && typeof b == "string" && b.indexOf(":") > -1 && (c = b.split(":"), c[0] = c[0].length === 0 ? -Infinity : parseFloat(c[0]), c[1] = c[1].length === 0 ? Infinity : parseFloat(c[1]), c[2] = a[b], d.push(c));
            this.map = a, this.rangelist = d || !1
        }, get: function (a) {
            var b = this.rangelist, d, e, f;
            if ((f = this.map[a]) !== c)return f;
            if (b)for (d = b.length; d--;) {
                e = b[d];
                if (e[0] <= a && e[1] >= a)return e[2]
            }
            return c
        }}), d.range_map = function (a) {
            return new t(a)
        }, u = g({init: function (a, b) {
            var c = d(a);
            this.$el = c, this.options = b, this.currentPageX = 0, this.currentPageY = 0, this.el = a, this.splist = [], this.tooltip = null, this.over = !1, this.displayTooltips = !b.get("disableTooltips"), this.highlightEnabled = !b.get("disableHighlight")
        }, registerSparkline: function (a) {
            this.splist.push(a), this.over && this.updateDisplay()
        }, registerCanvas: function (a) {
            var b = d(a.canvas);
            this.canvas = a, this.$canvas = b, b.mouseenter(d.proxy(this.mouseenter, this)), b.mouseleave(d.proxy(this.mouseleave, this)), b.click(d.proxy(this.mouseclick, this))
        }, reset: function (a) {
            this.splist = [], this.tooltip && a && (this.tooltip.remove(), this.tooltip = c)
        }, mouseclick: function (a) {
            var b = d.Event("sparklineClick");
            b.originalEvent = a, b.sparklines = this.splist, this.$el.trigger(b)
        }, mouseenter: function (b) {
            d(a.body).unbind("mousemove.jqs"), d(a.body).bind("mousemove.jqs", d.proxy(this.mousemove, this)), this.over = !0, this.currentPageX = b.pageX, this.currentPageY = b.pageY, this.currentEl = b.target, !this.tooltip && this.displayTooltips && (this.tooltip = new v(this.options), this.tooltip.updatePosition(b.pageX, b.pageY)), this.updateDisplay()
        }, mouseleave: function () {
            d(a.body).unbind("mousemove.jqs");
            var b = this.splist, c = b.length, e = !1, f, g;
            this.over = !1, this.currentEl = null, this.tooltip && (this.tooltip.remove(), this.tooltip = null);
            for (g = 0; g < c; g++)f = b[g], f.clearRegionHighlight() && (e = !0);
            e && this.canvas.render()
        }, mousemove: function (a) {
            this.currentPageX = a.pageX, this.currentPageY = a.pageY, this.currentEl = a.target, this.tooltip && this.tooltip.updatePosition(a.pageX, a.pageY), this.updateDisplay()
        }, updateDisplay: function () {
            var a = this.splist, b = a.length, c = !1, e = this.$canvas.offset(), f = this.currentPageX - e.left, g = this.currentPageY - e.top, h, i, j, k, l;
            if (!this.over)return;
            for (j = 0; j < b; j++)i = a[j], k = i.setRegionHighlight(this.currentEl, f, g), k && (c = !0);
            if (c) {
                l = d.Event("sparklineRegionChange"), l.sparklines = this.splist, this.$el.trigger(l);
                if (this.tooltip) {
                    h = "";
                    for (j = 0; j < b; j++)i = a[j], h += i.getCurrentRegionTooltip();
                    this.tooltip.setContent(h)
                }
                this.disableHighlight || this.canvas.render()
            }
            k === null && this.mouseleave()
        }}), v = g({sizeStyle: "position: static !important;display: block !important;visibility: hidden !important;float: left !important;", init: function (b) {
            var c = b.get("tooltipClassname", "jqstooltip"), e = this.sizeStyle, f;
            this.container = b.get("tooltipContainer") || a.body, this.tooltipOffsetX = b.get("tooltipOffsetX", 10), this.tooltipOffsetY = b.get("tooltipOffsetY", 12), d("#jqssizetip").remove(), d("#jqstooltip").remove(), this.sizetip = d("<div/>", {id: "jqssizetip", style: e, "class": c}), this.tooltip = d("<div/>", {id: "jqstooltip", "class": c}).appendTo(this.container), f = this.tooltip.offset(), this.offsetLeft = f.left, this.offsetTop = f.top, this.hidden = !0, d(window).unbind("resize.jqs scroll.jqs"), d(window).bind("resize.jqs scroll.jqs", d.proxy(this.updateWindowDims, this)), this.updateWindowDims()
        }, updateWindowDims: function () {
            this.scrollTop = d(window).scrollTop(), this.scrollLeft = d(window).scrollLeft(), this.scrollRight = this.scrollLeft + d(window).width(), this.updatePosition()
        }, getSize: function (a) {
            this.sizetip.html(a).appendTo(this.container), this.width = this.sizetip.width() + 1, this.height = this.sizetip.height(), this.sizetip.remove()
        }, setContent: function (a) {
            if (!a) {
                this.tooltip.css("visibility", "hidden"), this.hidden = !0;
                return
            }
            this.getSize(a), this.tooltip.html(a).css({width: this.width, height: this.height, visibility: "visible"}), this.hidden && (this.hidden = !1, this.updatePosition())
        }, updatePosition: function (a, b) {
            if (a === c) {
                if (this.mousex === c)return;
                a = this.mousex - this.offsetLeft, b = this.mousey - this.offsetTop
            } else this.mousex = a -= this.offsetLeft, this.mousey = b -= this.offsetTop;
            if (!this.height || !this.width || this.hidden)return;
            b -= this.height + this.tooltipOffsetY, a += this.tooltipOffsetX, b < this.scrollTop && (b = this.scrollTop), a < this.scrollLeft ? a = this.scrollLeft : a + this.width > this.scrollRight && (a = this.scrollRight - this.width), this.tooltip.css({left: a, top: b})
        }, remove: function () {
            this.tooltip.remove(), this.sizetip.remove(), this.sizetip = this.tooltip = c, d(window).unbind("resize.jqs scroll.jqs")
        }}), F = function () {
            q(E)
        }, d(F), K = [], d.fn.sparkline = function (b, e) {
            return this.each(function () {
                var f = new d.fn.sparkline.options(this, e), g = d(this), h, i;
                h = function () {
                    var e, h, i, j, k, l, m;
                    if (b === "html" || b === c) {
                        m = this.getAttribute(f.get("tagValuesAttribute"));
                        if (m === c || m === null)m = g.html();
                        e = m.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, "").split(",")
                    } else e = b;
                    h = f.get("width") === "auto" ? e.length * f.get("defaultPixelsPerValue") : f.get("width");
                    if (f.get("height") === "auto") {
                        if (!f.get("composite") || !d.data(this, "_jqs_vcanvas"))j = a.createElement("span"), j.innerHTML = "a", g.html(j), i = d(j).innerHeight() || d(j).height(), d(j).remove(), j = null
                    } else i = f.get("height");
                    f.get("disableInteraction") ? k = !1 : (k = d.data(this, "_jqs_mhandler"), k ? f.get("composite") || k.reset() : (k = new u(this, f), d.data(this, "_jqs_mhandler", k)));
                    if (f.get("composite") && !d.data(this, "_jqs_vcanvas")) {
                        d.data(this, "_jqs_errnotify") || (alert("Attempted to attach a composite sparkline to an element with no existing sparkline"), d.data(this, "_jqs_errnotify", !0));
                        return
                    }
                    l = new (d.fn.sparkline[f.get("type")])(this, e, f, h, i), l.render(), k && k.registerSparkline(l)
                };
                if (d(this).html() && !f.get("disableHiddenCheck") && d(this).is(":hidden") || !d(this).parents("body").length) {
                    if (!f.get("composite") && d.data(this, "_jqs_pending"))for (i = K.length; i; i--)K[i - 1][0] == this && K.splice(i - 1, 1);
                    K.push([this, h]), d.data(this, "_jqs_pending", !0)
                } else h.call(this)
            })
        }, d.fn.sparkline.defaults = f(), d.sparkline_display_visible = function () {
            var a, b, c, e = [];
            for (b = 0, c = K.length; b < c; b++)a = K[b][0], d(a).is(":visible") && !d(a).parents().is(":hidden") ? (K[b][1].call(a), d.data(K[b][0], "_jqs_pending", !1), e.push(b)) : !d(a).closest("html").length && !d.data(a, "_jqs_pending") && (d.data(K[b][0], "_jqs_pending", !1), e.push(b));
            for (b = e.length; b; b--)K.splice(e[b - 1], 1)
        }, d.fn.sparkline.options = g({init: function (a, b) {
            var c, f, g, h;
            this.userOptions = b = b || {}, this.tag = a, this.tagValCache = {}, f = d.fn.sparkline.defaults, g = f.common, this.tagOptionsPrefix = b.enableTagOptions && (b.tagOptionsPrefix || g.tagOptionsPrefix), h = this.getTagSetting("type"), h === e ? c = f[b.type || g.type] : c = f[h], this.mergedOptions = d.extend({}, g, c, b)
        }, getTagSetting: function (a) {
            var b = this.tagOptionsPrefix, d, f, g, h;
            if (b === !1 || b === c)return e;
            if (this.tagValCache.hasOwnProperty(a))d = this.tagValCache.key; else {
                d = this.tag.getAttribute(b + a);
                if (d === c || d === null)d = e; else if (d.substr(0, 1) === "[") {
                    d = d.substr(1, d.length - 2).split(",");
                    for (f = d.length; f--;)d[f] = k(d[f].replace(/(^\s*)|(\s*$)/g, ""))
                } else if (d.substr(0, 1) === "{") {
                    g = d.substr(1, d.length - 2).split(","), d = {};
                    for (f = g.length; f--;)h = g[f].split(":", 2), d[h[0].replace(/(^\s*)|(\s*$)/g, "")] = k(h[1].replace(/(^\s*)|(\s*$)/g, ""))
                } else d = k(d);
                this.tagValCache.key = d
            }
            return d
        }, get: function (a, b) {
            var d = this.getTagSetting(a), f;
            return d !== e ? d : (f = this.mergedOptions[a]) === c ? b : f
        }}), d.fn.sparkline._base = g({disabled: !1, init: function (a, b, e, f, g) {
            this.el = a, this.$el = d(a), this.values = b, this.options = e, this.width = f, this.height = g, this.currentRegion = c
        }, initTarget: function () {
            var a = !this.options.get("disableInteraction");
            (this.target = this.$el.simpledraw(this.width, this.height, this.options.get("composite"), a)) ? (this.canvasWidth = this.target.pixelWidth, this.canvasHeight = this.target.pixelHeight) : this.disabled = !0
        }, render: function () {
            return this.disabled ? (this.el.innerHTML = "", !1) : !0
        }, getRegion: function (a, b) {
        }, setRegionHighlight: function (a, b, d) {
            var e = this.currentRegion, f = !this.options.get("disableHighlight"), g;
            return b > this.canvasWidth || d > this.canvasHeight || b < 0 || d < 0 ? null : (g = this.getRegion(a, b, d), e !== g ? (e !== c && f && this.removeHighlight(), this.currentRegion = g, g !== c && f && this.renderHighlight(), !0) : !1)
        }, clearRegionHighlight: function () {
            return this.currentRegion !== c ? (this.removeHighlight(), this.currentRegion = c, !0) : !1
        }, renderHighlight: function () {
            this.changeHighlight(!0)
        }, removeHighlight: function () {
            this.changeHighlight(!1)
        }, changeHighlight: function (a) {
        }, getCurrentRegionTooltip: function () {
            var a = this.options, b = "", e = [], f, g, i, j, k, l, m, n, o, p, q, r, s, t;
            if (this.currentRegion === c)return"";
            f = this.getCurrentRegionFields(), q = a.get("tooltipFormatter");
            if (q)return q(this, a, f);
            a.get("tooltipChartTitle") && (b += '<div class="jqs jqstitle">' + a.get("tooltipChartTitle") + "</div>\n"), g = this.options.get("tooltipFormat");
            if (!g)return"";
            d.isArray(g) || (g = [g]), d.isArray(f) || (f = [f]), m = this.options.get("tooltipFormatFieldlist"), n = this.options.get("tooltipFormatFieldlistKey");
            if (m && n) {
                o = [];
                for (l = f.length; l--;)p = f[l][n], (t = d.inArray(p, m)) != -1 && (o[t] = f[l]);
                f = o
            }
            i = g.length, s = f.length;
            for (l = 0; l < i; l++) {
                r = g[l], typeof r == "string" && (r = new h(r)), j = r.fclass || "jqsfield";
                for (t = 0; t < s; t++)if (!f[t].isNull || !a.get("tooltipSkipNull"))d.extend(f[t], {prefix: a.get("tooltipPrefix"), suffix: a.get("tooltipSuffix")}), k = r.render(f[t], a.get("tooltipValueLookups"), a), e.push('<div class="' + j + '">' + k + "</div>")
            }
            return e.length ? b + e.join("\n") : ""
        }, getCurrentRegionFields: function () {
        }, calcHighlightColor: function (a, c) {
            var d = c.get("highlightColor"), e = c.get("highlightLighten"), f, g, h, j;
            if (d)return d;
            if (e) {
                f = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(a);
                if (f) {
                    h = [], g = a.length === 4 ? 16 : 1;
                    for (j = 0; j < 3; j++)h[j] = i(b.round(parseInt(f[j + 1], 16) * g * e), 0, 255);
                    return"rgb(" + h.join(",") + ")"
                }
            }
            return a
        }}), w = {changeHighlight: function (a) {
            var b = this.currentRegion, c = this.target, e = this.regionShapes[b], f;
            e && (f = this.renderRegion(b, a), d.isArray(f) || d.isArray(e) ? (c.replaceWithShapes(e, f), this.regionShapes[b] = d.map(f, function (a) {
                return a.id
            })) : (c.replaceWithShape(e, f), this.regionShapes[b] = f.id))
        }, render: function () {
            var a = this.values, b = this.target, c = this.regionShapes, e, f, g, h;
            if (!this.cls._super.render.call(this))return;
            for (g = a.length; g--;) {
                e = this.renderRegion(g);
                if (e)if (d.isArray(e)) {
                    f = [];
                    for (h = e.length; h--;)e[h].append(), f.push(e[h].id);
                    c[g] = f
                } else e.append(), c[g] = e.id; else c[g] = null
            }
            b.render()
        }}, d.fn.sparkline.line = x = g(d.fn.sparkline._base, {type: "line", init: function (a, b, c, d, e) {
            x._super.init.call(this, a, b, c, d, e), this.vertices = [], this.regionMap = [], this.xvalues = [], this.yvalues = [], this.yminmax = [], this.hightlightSpotId = null, this.lastShapeId = null, this.initTarget()
        }, getRegion: function (a, b, d) {
            var e, f = this.regionMap;
            for (e = f.length; e--;)if (f[e] !== null && b >= f[e][0] && b <= f[e][1])return f[e][2];
            return c
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion;
            return{isNull: this.yvalues[a] === null, x: this.xvalues[a], y: this.yvalues[a], color: this.options.get("lineColor"), fillColor: this.options.get("fillColor"), offset: a}
        }, renderHighlight: function () {
            var a = this.currentRegion, b = this.target, d = this.vertices[a], e = this.options, f = e.get("spotRadius"), g = e.get("highlightSpotColor"), h = e.get("highlightLineColor"), i, j;
            if (!d)return;
            f && g && (i = b.drawCircle(d[0], d[1], f, c, g), this.highlightSpotId = i.id, b.insertAfterShape(this.lastShapeId, i)), h && (j = b.drawLine(d[0], this.canvasTop, d[0], this.canvasTop + this.canvasHeight, h), this.highlightLineId = j.id, b.insertAfterShape(this.lastShapeId, j))
        }, removeHighlight: function () {
            var a = this.target;
            this.highlightSpotId && (a.removeShapeId(this.highlightSpotId), this.highlightSpotId = null), this.highlightLineId && (a.removeShapeId(this.highlightLineId), this.highlightLineId = null)
        }, scanValues: function () {
            var a = this.values, c = a.length, d = this.xvalues, e = this.yvalues, f = this.yminmax, g, h, i, j, k;
            for (g = 0; g < c; g++)h = a[g], i = typeof a[g] == "string", j = typeof a[g] == "object" && a[g]instanceof Array, k = i && a[g].split(":"), i && k.length === 2 ? (d.push(Number(k[0])), e.push(Number(k[1])), f.push(Number(k[1]))) : j ? (d.push(h[0]), e.push(h[1]), f.push(h[1])) : (d.push(g), a[g] === null || a[g] === "null" ? e.push(null) : (e.push(Number(h)), f.push(Number(h))));
            this.options.get("xvalues") && (d = this.options.get("xvalues")), this.maxy = this.maxyorg = b.max.apply(b, f), this.miny = this.minyorg = b.min.apply(b, f), this.maxx = b.max.apply(b, d), this.minx = b.min.apply(b, d), this.xvalues = d, this.yvalues = e, this.yminmax = f
        }, processRangeOptions: function () {
            var a = this.options, b = a.get("normalRangeMin"), d = a.get("normalRangeMax");
            b !== c && (b < this.miny && (this.miny = b), d > this.maxy && (this.maxy = d)), a.get("chartRangeMin") !== c && (a.get("chartRangeClip") || a.get("chartRangeMin") < this.miny) && (this.miny = a.get("chartRangeMin")), a.get("chartRangeMax") !== c && (a.get("chartRangeClip") || a.get("chartRangeMax") > this.maxy) && (this.maxy = a.get("chartRangeMax")), a.get("chartRangeMinX") !== c && (a.get("chartRangeClipX") || a.get("chartRangeMinX") < this.minx) && (this.minx = a.get("chartRangeMinX")), a.get("chartRangeMaxX") !== c && (a.get("chartRangeClipX") || a.get("chartRangeMaxX") > this.maxx) && (this.maxx = a.get("chartRangeMaxX"))
        }, drawNormalRange: function (a, d, e, f, g) {
            var h = this.options.get("normalRangeMin"), i = this.options.get("normalRangeMax"), j = d + b.round(e - e * ((i - this.miny) / g)), k = b.round(e * (i - h) / g);
            this.target.drawRect(a, j, f, k, c, this.options.get("normalRangeColor")).append()
        }, render: function () {
            var a = this.options, e = this.target, f = this.canvasWidth, g = this.canvasHeight, h = this.vertices, i = a.get("spotRadius"), j = this.regionMap, k, l, m, n, o, p, q, r, s, u, v, w, y, z, A, B, C, D, E, F, G, H, I, J, K;
            if (!x._super.render.call(this))return;
            this.scanValues(), this.processRangeOptions(), I = this.xvalues, J = this.yvalues;
            if (!this.yminmax.length || this.yvalues.length < 2)return;
            n = o = 0, k = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx, l = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny, m = this.yvalues.length - 1, i && (f < i * 4 || g < i * 4) && (i = 0);
            if (i) {
                G = a.get("highlightSpotColor") && !a.get("disableInteraction");
                if (G || a.get("minSpotColor") || a.get("spotColor") && J[m] === this.miny)g -= b.ceil(i);
                if (G || a.get("maxSpotColor") || a.get("spotColor") && J[m] === this.maxy)g -= b.ceil(i), n += b.ceil(i);
                if (G || (a.get("minSpotColor") || a.get("maxSpotColor")) && (J[0] === this.miny || J[0] === this.maxy))o += b.ceil(i), f -= b.ceil(i);
                if (G || a.get("spotColor") || a.get("minSpotColor") || a.get("maxSpotColor") && (J[m] === this.miny || J[m] === this.maxy))f -= b.ceil(i)
            }
            g--, a.get("normalRangeMin") !== c && !a.get("drawNormalOnTop") && this.drawNormalRange(o, n, g, f, l), q = [], r = [q], z = A = null, B = J.length;
            for (K = 0; K < B; K++)s = I[K], v = I[K + 1], u = J[K], w = o + b.round((s - this.minx) * (f / k)), y = K < B - 1 ? o + b.round((v - this.minx) * (f / k)) : f, A = w + (y - w) / 2, j[K] = [z || 0, A, K], z = A, u === null ? K && (J[K - 1] !== null && (q = [], r.push(q)), h.push(null)) : (u < this.miny && (u = this.miny), u > this.maxy && (u = this.maxy), q.length || q.push([w, n + g]), p = [w, n + b.round(g - g * ((u - this.miny) / l))], q.push(p), h.push(p));
            C = [], D = [], E = r.length;
            for (K = 0; K < E; K++)q = r[K], q.length && (a.get("fillColor") && (q.push([q[q.length - 1][0], n + g]), D.push(q.slice(0)), q.pop()), q.length > 2 && (q[0] = [q[0][0], q[1][1]]), C.push(q));
            E = D.length;
            for (K = 0; K < E; K++)e.drawShape(D[K], a.get("fillColor"), a.get("fillColor")).append();
            a.get("normalRangeMin") !== c && a.get("drawNormalOnTop") && this.drawNormalRange(o, n, g, f, l), E = C.length;
            for (K = 0; K < E; K++)e.drawShape(C[K], a.get("lineColor"), c, a.get("lineWidth")).append();
            if (i && a.get("valueSpots")) {
                F = a.get("valueSpots"), F.get === c && (F = new t(F));
                for (K = 0; K < B; K++)H = F.get(J[K]), H && e.drawCircle(o + b.round((I[K] - this.minx) * (f / k)), n + b.round(g - g * ((J[K] - this.miny) / l)), i, c, H).append()
            }
            i && a.get("spotColor") && J[m] !== null && e.drawCircle(o + b.round((I[I.length - 1] - this.minx) * (f / k)), n + b.round(g - g * ((J[m] - this.miny) / l)), i, c, a.get("spotColor")).append(), this.maxy !== this.minyorg && (i && a.get("minSpotColor") && (s = I[d.inArray(this.minyorg, J)], e.drawCircle(o + b.round((s - this.minx) * (f / k)), n + b.round(g - g * ((this.minyorg - this.miny) / l)), i, c, a.get("minSpotColor")).append()), i && a.get("maxSpotColor") && (s = I[d.inArray(this.maxyorg, J)], e.drawCircle(o + b.round((s - this.minx) * (f / k)), n + b.round(g - g * ((this.maxyorg - this.miny) / l)), i, c, a.get("maxSpotColor")).append())), this.lastShapeId = e.getLastShapeId(), this.canvasTop = n, e.render()
        }}), d.fn.sparkline.bar = y = g(d.fn.sparkline._base, w, {type: "bar", init: function (a, e, f, g, h) {
            var j = parseInt(f.get("barWidth"), 10), n = parseInt(f.get("barSpacing"), 10), o = f.get("chartRangeMin"), p = f.get("chartRangeMax"), q = f.get("chartRangeClip"), r = Infinity, s = -Infinity, u, v, w, x, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R;
            y._super.init.call(this, a, e, f, g, h);
            for (A = 0, B = e.length; A < B; A++) {
                O = e[A], u = typeof O == "string" && O.indexOf(":") > -1;
                if (u || d.isArray(O))J = !0, u && (O = e[A] = l(O.split(":"))), O = m(O, null), v = b.min.apply(b, O), w = b.max.apply(b, O), v < r && (r = v), w > s && (s = w)
            }
            this.stacked = J, this.regionShapes = {}, this.barWidth = j, this.barSpacing = n, this.totalBarWidth = j + n, this.width = g = e.length * j + (e.length - 1) * n, this.initTarget(), q && (H = o === c ? -Infinity : o, I = p === c ? Infinity : p), z = [], x = J ? [] : z;
            var S = [], T = [];
            for (A = 0, B = e.length; A < B; A++)if (J) {
                K = e[A], e[A] = N = [], S[A] = 0, x[A] = T[A] = 0;
                for (L = 0, M = K.length; L < M; L++)O = N[L] = q ? i(K[L], H, I) : K[L], O !== null && (O > 0 && (S[A] += O), r < 0 && s > 0 ? O < 0 ? T[A] += b.abs(O) : x[A] += O : x[A] += b.abs(O - (O < 0 ? s : r)), z.push(O))
            } else O = q ? i(e[A], H, I) : e[A], O = e[A] = k(O), O !== null && z.push(O);
            this.max = G = b.max.apply(b, z), this.min = F = b.min.apply(b, z), this.stackMax = s = J ? b.max.apply(b, S) : G, this.stackMin = r = J ? b.min.apply(b, z) : F, f.get("chartRangeMin") !== c && (f.get("chartRangeClip") || f.get("chartRangeMin") < F) && (F = f.get("chartRangeMin")), f.get("chartRangeMax") !== c && (f.get("chartRangeClip") || f.get("chartRangeMax") > G) && (G = f.get("chartRangeMax")), this.zeroAxis = D = f.get("zeroAxis", !0), F <= 0 && G >= 0 && D ? E = 0 : D == 0 ? E = F : F > 0 ? E = F : E = G, this.xaxisOffset = E, C = J ? b.max.apply(b, x) + b.max.apply(b, T) : G - F, this.canvasHeightEf = D && F < 0 ? this.canvasHeight - 2 : this.canvasHeight - 1, F < E ? (Q = J && G >= 0 ? s : G, P = (Q - E) / C * this.canvasHeight, P !== b.ceil(P) && (this.canvasHeightEf -= 2, P = b.ceil(P))) : P = this.canvasHeight, this.yoffset = P, d.isArray(f.get("colorMap")) ? (this.colorMapByIndex = f.get("colorMap"), this.colorMapByValue = null) : (this.colorMapByIndex = null, this.colorMapByValue = f.get("colorMap"), this.colorMapByValue && this.colorMapByValue.get === c && (this.colorMapByValue = new t(this.colorMapByValue))), this.range = C
        }, getRegion: function (a, d, e) {
            var f = b.floor(d / this.totalBarWidth);
            return f < 0 || f >= this.values.length ? c : f
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion, b = r(this.values[a]), c = [], d, e;
            for (e = b.length; e--;)d = b[e], c.push({isNull: d === null, value: d, color: this.calcColor(e, d, a), offset: a});
            return c
        }, calcColor: function (a, b, e) {
            var f = this.colorMapByIndex, g = this.colorMapByValue, h = this.options, i, j;
            return this.stacked ? i = h.get("stackedBarColor") : i = b < 0 ? h.get("negBarColor") : h.get("barColor"), b === 0 && h.get("zeroColor") !== c && (i = h.get("zeroColor")), g && (j = g.get(b)) ? i = j : f && f.length > e && (i = f[e]), d.isArray(i) ? i[a % i.length] : i
        }, renderRegion: function (a, e) {
            var f = this.values[a], g = this.options, h = this.xaxisOffset, i = [], j = this.range, k = this.stacked, l = this.target, m = a * this.totalBarWidth, n = this.canvasHeightEf, p = this.yoffset, q, r, s, t, u, v, w, x, y, z;
            f = d.isArray(f) ? f : [f], w = f.length, x = f[0], t = o(null, f), z = o(h, f, !0);
            if (t)return g.get("nullColor") ? (s = e ? g.get("nullColor") : this.calcHighlightColor(g.get("nullColor"), g), q = p > 0 ? p - 1 : p, l.drawRect(m, q, this.barWidth - 1, 0, s, s)) : c;
            u = p;
            for (v = 0; v < w; v++) {
                x = f[v];
                if (k && x === h) {
                    if (!z || y)continue;
                    y = !0
                }
                j > 0 ? r = b.floor(n * (b.abs(x - h) / j)) + 1 : r = 1, x < h || x === h && p === 0 ? (q = u, u += r) : (q = p - r, p -= r), s = this.calcColor(v, x, a), e && (s = this.calcHighlightColor(s, g)), i.push(l.drawRect(m, q, this.barWidth - 1, r - 1, s, s))
            }
            return i.length === 1 ? i[0] : i
        }}), d.fn.sparkline.tristate = z = g(d.fn.sparkline._base, w, {type: "tristate", init: function (a, b, e, f, g) {
            var h = parseInt(e.get("barWidth"), 10), i = parseInt(e.get("barSpacing"), 10);
            z._super.init.call(this, a, b, e, f, g), this.regionShapes = {}, this.barWidth = h, this.barSpacing = i, this.totalBarWidth = h + i, this.values = d.map(b, Number), this.width = f = b.length * h + (b.length - 1) * i, d.isArray(e.get("colorMap")) ? (this.colorMapByIndex = e.get("colorMap"), this.colorMapByValue = null) : (this.colorMapByIndex = null, this.colorMapByValue = e.get("colorMap"), this.colorMapByValue && this.colorMapByValue.get === c && (this.colorMapByValue = new t(this.colorMapByValue))), this.initTarget()
        }, getRegion: function (a, c, d) {
            return b.floor(c / this.totalBarWidth)
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion;
            return{isNull: this.values[a] === c, value: this.values[a], color: this.calcColor(this.values[a], a), offset: a}
        }, calcColor: function (a, b) {
            var c = this.values, d = this.options, e = this.colorMapByIndex, f = this.colorMapByValue, g, h;
            return f && (h = f.get(a)) ? g = h : e && e.length > b ? g = e[b] : c[b] < 0 ? g = d.get("negBarColor") : c[b] > 0 ? g = d.get("posBarColor") : g = d.get("zeroBarColor"), g
        }, renderRegion: function (a, c) {
            var d = this.values, e = this.options, f = this.target, g, h, i, j, k, l;
            g = f.pixelHeight, i = b.round(g / 2), j = a * this.totalBarWidth, d[a] < 0 ? (k = i, h = i - 1) : d[a] > 0 ? (k = 0, h = i - 1) : (k = i - 1, h = 2), l = this.calcColor(d[a], a);
            if (l === null)return;
            return c && (l = this.calcHighlightColor(l, e)), f.drawRect(j, k, this.barWidth - 1, h - 1, l, l)
        }}), d.fn.sparkline.discrete = A = g(d.fn.sparkline._base, w, {type: "discrete", init: function (a, e, f, g, h) {
            A._super.init.call(this, a, e, f, g, h), this.regionShapes = {}, this.values = e = d.map(e, Number), this.min = b.min.apply(b, e), this.max = b.max.apply(b, e), this.range = this.max - this.min, this.width = g = f.get("width") === "auto" ? e.length * 2 : this.width, this.interval = b.floor(g / e.length), this.itemWidth = g / e.length, f.get("chartRangeMin") !== c && (f.get("chartRangeClip") || f.get("chartRangeMin") < this.min) && (this.min = f.get("chartRangeMin")), f.get("chartRangeMax") !== c && (f.get("chartRangeClip") || f.get("chartRangeMax") > this.max) && (this.max = f.get("chartRangeMax")), this.initTarget(), this.target && (this.lineHeight = f.get("lineHeight") === "auto" ? b.round(this.canvasHeight * .3) : f.get("lineHeight"))
        }, getRegion: function (a, c, d) {
            return b.floor(c / this.itemWidth)
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion;
            return{isNull: this.values[a] === c, value: this.values[a], offset: a}
        }, renderRegion: function (a, c) {
            var d = this.values, e = this.options, f = this.min, g = this.max, h = this.range, j = this.interval, k = this.target, l = this.canvasHeight, m = this.lineHeight, n = l - m, o, p, q, r;
            return p = i(d[a], f, g), r = a * j, o = b.round(n - n * ((p - f) / h)), q = e.get("thresholdColor") && p < e.get("thresholdValue") ? e.get("thresholdColor") : e.get("lineColor"), c && (q = this.calcHighlightColor(q, e)), k.drawLine(r, o, r, o + m, q)
        }}), d.fn.sparkline.bullet = B = g(d.fn.sparkline._base, {type: "bullet", init: function (a, d, e, f, g) {
            var h, i, j;
            B._super.init.call(this, a, d, e, f, g), this.values = d = l(d), j = d.slice(), j[0] = j[0] === null ? j[2] : j[0], j[1] = d[1] === null ? j[2] : j[1], h = b.min.apply(b, d), i = b.max.apply(b, d), e.get("base") === c ? h = h < 0 ? h : 0 : h = e.get("base"), this.min = h, this.max = i, this.range = i - h, this.shapes = {}, this.valueShapes = {}, this.regiondata = {}, this.width = f = e.get("width") === "auto" ? "4.0em" : f, this.target = this.$el.simpledraw(f, g, e.get("composite")), d.length || (this.disabled = !0), this.initTarget()
        }, getRegion: function (a, b, d) {
            var e = this.target.getShapeAt(a, b, d);
            return e !== c && this.shapes[e] !== c ? this.shapes[e] : c
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion;
            return{fieldkey: a.substr(0, 1), value: this.values[a.substr(1)], region: a}
        }, changeHighlight: function (a) {
            var b = this.currentRegion, c = this.valueShapes[b], d;
            delete this.shapes[c];
            switch (b.substr(0, 1)) {
                case"r":
                    d = this.renderRange(b.substr(1), a);
                    break;
                case"p":
                    d = this.renderPerformance(a);
                    break;
                case"t":
                    d = this.renderTarget(a)
            }
            this.valueShapes[b] = d.id, this.shapes[d.id] = b, this.target.replaceWithShape(c, d)
        }, renderRange: function (a, c) {
            var d = this.values[a], e = b.round(this.canvasWidth * ((d - this.min) / this.range)), f = this.options.get("rangeColors")[a - 2];
            return c && (f = this.calcHighlightColor(f, this.options)), this.target.drawRect(0, 0, e - 1, this.canvasHeight - 1, f, f)
        }, renderPerformance: function (a) {
            var c = this.values[1], d = b.round(this.canvasWidth * ((c - this.min) / this.range)), e = this.options.get("performanceColor");
            return a && (e = this.calcHighlightColor(e, this.options)), this.target.drawRect(0, b.round(this.canvasHeight * .3), d - 1, b.round(this.canvasHeight * .4) - 1, e, e)
        }, renderTarget: function (a) {
            var c = this.values[0], d = b.round(this.canvasWidth * ((c - this.min) / this.range) - this.options.get("targetWidth") / 2), e = b.round(this.canvasHeight * .1), f = this.canvasHeight - e * 2, g = this.options.get("targetColor");
            return a && (g = this.calcHighlightColor(g, this.options)), this.target.drawRect(d, e, this.options.get("targetWidth") - 1, f - 1, g, g)
        }, render: function () {
            var a = this.values.length, b = this.target, c, d;
            if (!B._super.render.call(this))return;
            for (c = 2; c < a; c++)d = this.renderRange(c).append(), this.shapes[d.id] = "r" + c, this.valueShapes["r" + c] = d.id;
            this.values[1] !== null && (d = this.renderPerformance().append(), this.shapes[d.id] = "p1", this.valueShapes.p1 = d.id), this.values[0] !== null && (d = this.renderTarget().append(), this.shapes[d.id] = "t0", this.valueShapes.t0 = d.id), b.render()
        }}), d.fn.sparkline.pie = C = g(d.fn.sparkline._base, {type: "pie", init: function (a, c, e, f, g) {
            var h = 0, i;
            C._super.init.call(this, a, c, e, f, g), this.shapes = {}, this.valueShapes = {}, this.values = c = d.map(c, Number), e.get("width") === "auto" && (this.width = this.height);
            if (c.length > 0)for (i = c.length; i--;)h += c[i];
            this.total = h, this.initTarget(), this.radius = b.floor(b.min(this.canvasWidth, this.canvasHeight) / 2)
        }, getRegion: function (a, b, d) {
            var e = this.target.getShapeAt(a, b, d);
            return e !== c && this.shapes[e] !== c ? this.shapes[e] : c
        }, getCurrentRegionFields: function () {
            var a = this.currentRegion;
            return{isNull: this.values[a] === c, value: this.values[a], percent: this.values[a] / this.total * 100, color: this.options.get("sliceColors")[a % this.options.get("sliceColors").length], offset: a}
        }, changeHighlight: function (a) {
            var b = this.currentRegion, c = this.renderSlice(b, a), d = this.valueShapes[b];
            delete this.shapes[d], this.target.replaceWithShape(d, c), this.valueShapes[b] = c.id, this.shapes[c.id] = b
        }, renderSlice: function (a, d) {
            var e = this.target, f = this.options, g = this.radius, h = f.get("borderWidth"), i = f.get("offset"), j = 2 * b.PI, k = this.values, l = this.total, m = i ? 2 * b.PI * (i / 360) : 0, n, o, p, q, r;
            q = k.length;
            for (p = 0; p < q; p++) {
                n = m, o = m, l > 0 && (o = m + j * (k[p] / l));
                if (a === p)return r = f.get("sliceColors")[p % f.get("sliceColors").length], d && (r = this.calcHighlightColor(r, f)), e.drawPieSlice(g, g, g - h, n, o, c, r);
                m = o
            }
        }, render: function () {
            var a = this.target, d = this.values, e = this.options, f = this.radius, g = e.get("borderWidth"), h, i;
            if (!C._super.render.call(this))return;
            g && a.drawCircle(f, f, b.floor(f - g / 2), e.get("borderColor"), c, g).append();
            for (i = d.length; i--;)d[i] && (h = this.renderSlice(i).append(), this.valueShapes[i] = h.id, this.shapes[h.id] = i);
            a.render()
        }}), d.fn.sparkline.box = D = g(d.fn.sparkline._base, {type: "box", init: function (a, b, c, e, f) {
            D._super.init.call(this, a, b, c, e, f), this.values = d.map(b, Number), this.width = c.get("width") === "auto" ? "4.0em" : e, this.initTarget(), this.values.length || (this.disabled = 1)
        }, getRegion: function () {
            return 1
        }, getCurrentRegionFields: function () {
            var a = [
                {field: "lq", value: this.quartiles[0]},
                {field: "med", value: this.quartiles
                    [1]},
                {field: "uq", value: this.quartiles[2]}
            ];
            return this.loutlier !== c && a.push({field: "lo", value: this.loutlier}), this.routlier !== c && a.push({field: "ro", value: this.routlier}), this.lwhisker !== c && a.push({field: "lw", value: this.lwhisker}), this.rwhisker !== c && a.push({field: "rw", value: this.rwhisker}), a
        }, render: function () {
            var a = this.target, d = this.values, e = d.length, f = this.options, g = this.canvasWidth, h = this.canvasHeight, i = f.get("chartRangeMin") === c ? b.min.apply(b, d) : f.get("chartRangeMin"), k = f.get("chartRangeMax") === c ? b.max.apply(b, d) : f.get("chartRangeMax"), l = 0, m, n, o, p, q, r, s, t, u, v, w;
            if (!D._super.render.call(this))return;
            if (f.get("raw"))f.get("showOutliers") && d.length > 5 ? (n = d[0], m = d[1], p = d[2], q = d[3], r = d[4], s = d[5], t = d[6]) : (m = d[0], p = d[1], q = d[2], r = d[3], s = d[4]); else {
                d.sort(function (a, b) {
                    return a - b
                }), p = j(d, 1), q = j(d, 2), r = j(d, 3), o = r - p;
                if (f.get("showOutliers")) {
                    m = s = c;
                    for (u = 0; u < e; u++)m === c && d[u] > p - o * f.get("outlierIQR") && (m = d[u]), d[u] < r + o * f.get("outlierIQR") && (s = d[u]);
                    n = d[0], t = d[e - 1]
                } else m = d[0], s = d[e - 1]
            }
            this.quartiles = [p, q, r], this.lwhisker = m, this.rwhisker = s, this.loutlier = n, this.routlier = t, w = g / (k - i + 1), f.get("showOutliers") && (l = b.ceil(f.get("spotRadius")), g -= 2 * b.ceil(f.get("spotRadius")), w = g / (k - i + 1), n < m && a.drawCircle((n - i) * w + l, h / 2, f.get("spotRadius"), f.get("outlierLineColor"), f.get("outlierFillColor")).append(), t > s && a.drawCircle((t - i) * w + l, h / 2, f.get("spotRadius"), f.get("outlierLineColor"), f.get("outlierFillColor")).append()), a.drawRect(b.round((p - i) * w + l), b.round(h * .1), b.round((r - p) * w), b.round(h * .8), f.get("boxLineColor"), f.get("boxFillColor")).append(), a.drawLine(b.round((m - i) * w + l), b.round(h / 2), b.round((p - i) * w + l), b.round(h / 2), f.get("lineColor")).append(), a.drawLine(b.round((m - i) * w + l), b.round(h / 4), b.round((m - i) * w + l), b.round(h - h / 4), f.get("whiskerColor")).append(), a.drawLine(b.round((s - i) * w + l), b.round(h / 2), b.round((r - i) * w + l), b.round(h / 2), f.get("lineColor")).append(), a.drawLine(b.round((s - i) * w + l), b.round(h / 4), b.round((s - i) * w + l), b.round(h - h / 4), f.get("whiskerColor")).append(), a.drawLine(b.round((q - i) * w + l), b.round(h * .1), b.round((q - i) * w + l), b.round(h * .9), f.get("medianColor")).append(), f.get("target") && (v = b.ceil(f.get("spotRadius")), a.drawLine(b.round((f.get("target") - i) * w + l), b.round(h / 2 - v), b.round((f.get("target") - i) * w + l), b.round(h / 2 + v), f.get("targetColor")).append(), a.drawLine(b.round((f.get("target") - i) * w + l - v), b.round(h / 2), b.round((f.get("target") - i) * w + l + v), b.round(h / 2), f.get("targetColor")).append()), a.render()
        }}), G = g({init: function (a, b, c, d) {
            this.target = a, this.id = b, this.type = c, this.args = d
        }, append: function () {
            return this.target.appendShape(this), this
        }}), H = g({_pxregex: /(\d+)(px)?\s*$/i, init: function (a, b, c) {
            if (!a)return;
            this.width = a, this.height = b, this.target = c, this.lastShapeId = null, c[0] && (c = c[0]), d.data(c, "_jqs_vcanvas", this)
        }, drawLine: function (a, b, c, d, e, f) {
            return this.drawShape([
                [a, b],
                [c, d]
            ], e, f)
        }, drawShape: function (a, b, c, d) {
            return this._genShape("Shape", [a, b, c, d])
        }, drawCircle: function (a, b, c, d, e, f) {
            return this._genShape("Circle", [a, b, c, d, e, f])
        }, drawPieSlice: function (a, b, c, d, e, f, g) {
            return this._genShape("PieSlice", [a, b, c, d, e, f, g])
        }, drawRect: function (a, b, c, d, e, f) {
            return this._genShape("Rect", [a, b, c, d, e, f])
        }, getElement: function () {
            return this.canvas
        }, getLastShapeId: function () {
            return this.lastShapeId
        }, reset: function () {
            alert("reset not implemented")
        }, _insert: function (a, b) {
            d(b).html(a)
        }, _calculatePixelDims: function (a, b, c) {
            var e;
            e = this._pxregex.exec(b), e ? this.pixelHeight = e[1] : this.pixelHeight = d(c).height(), e = this._pxregex.exec(a), e ? this.pixelWidth = e[1] : this.pixelWidth = d(c).width()
        }, _genShape: function (a, b) {
            var c = L++;
            return b.unshift(c), new G(this, c, a, b)
        }, appendShape: function (a) {
            alert("appendShape not implemented")
        }, replaceWithShape: function (a, b) {
            alert("replaceWithShape not implemented")
        }, insertAfterShape: function (a, b) {
            alert("insertAfterShape not implemented")
        }, removeShapeId: function (a) {
            alert("removeShapeId not implemented")
        }, getShapeAt: function (a, b, c) {
            alert("getShapeAt not implemented")
        }, render: function () {
            alert("render not implemented")
        }}), I = g(H, {init: function (b, e, f, g) {
            I._super.init.call(this, b, e, f), this.canvas = a.createElement("canvas"), f[0] && (f = f[0]), d.data(f, "_jqs_vcanvas", this), d(this.canvas).css({display: "inline-block", width: b, height: e, verticalAlign: "top"}), this._insert(this.canvas, f), this._calculatePixelDims(b, e, this.canvas), this.canvas.width = this.pixelWidth, this.canvas.height = this.pixelHeight, this.interact = g, this.shapes = {}, this.shapeseq = [], this.currentTargetShapeId = c, d(this.canvas).css({width: this.pixelWidth, height: this.pixelHeight})
        }, _getContext: function (a, b, d) {
            var e = this.canvas.getContext("2d");
            return a !== c && (e.strokeStyle = a), e.lineWidth = d === c ? 1 : d, b !== c && (e.fillStyle = b), e
        }, reset: function () {
            var a = this._getContext();
            a.clearRect(0, 0, this.pixelWidth, this.pixelHeight), this.shapes = {}, this.shapeseq = [], this.currentTargetShapeId = c
        }, _drawShape: function (a, b, d, e, f) {
            var g = this._getContext(d, e, f), h, i;
            g.beginPath(), g.moveTo(b[0][0] + .5, b[0][1] + .5);
            for (h = 1, i = b.length; h < i; h++)g.lineTo(b[h][0] + .5, b[h][1] + .5);
            d !== c && g.stroke(), e !== c && g.fill(), this.targetX !== c && this.targetY !== c && g.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a)
        }, _drawCircle: function (a, d, e, f, g, h, i) {
            var j = this._getContext(g, h, i);
            j.beginPath(), j.arc(d, e, f, 0, 2 * b.PI, !1), this.targetX !== c && this.targetY !== c && j.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a), g !== c && j.stroke(), h !== c && j.fill()
        }, _drawPieSlice: function (a, b, d, e, f, g, h, i) {
            var j = this._getContext(h, i);
            j.beginPath(), j.moveTo(b, d), j.arc(b, d, e, f, g, !1), j.lineTo(b, d), j.closePath(), h !== c && j.stroke(), i && j.fill(), this.targetX !== c && this.targetY !== c && j.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a)
        }, _drawRect: function (a, b, c, d, e, f, g) {
            return this._drawShape(a, [
                [b, c],
                [b + d, c],
                [b + d, c + e],
                [b, c + e],
                [b, c]
            ], f, g)
        }, appendShape: function (a) {
            return this.shapes[a.id] = a, this.shapeseq.push(a.id), this.lastShapeId = a.id, a.id
        }, replaceWithShape: function (a, b) {
            var c = this.shapeseq, d;
            this.shapes[b.id] = b;
            for (d = c.length; d--;)c[d] == a && (c[d] = b.id);
            delete this.shapes[a]
        }, replaceWithShapes: function (a, b) {
            var c = this.shapeseq, d = {}, e, f, g;
            for (f = a.length; f--;)d[a[f]] = !0;
            for (f = c.length; f--;)e = c[f], d[e] && (c.splice(f, 1), delete this.shapes[e], g = f);
            for (f = b.length; f--;)c.splice(g, 0, b[f].id), this.shapes[b[f].id] = b[f]
        }, insertAfterShape: function (a, b) {
            var c = this.shapeseq, d;
            for (d = c.length; d--;)if (c[d] === a) {
                c.splice(d + 1, 0, b.id), this.shapes[b.id] = b;
                return
            }
        }, removeShapeId: function (a) {
            var b = this.shapeseq, c;
            for (c = b.length; c--;)if (b[c] === a) {
                b.splice(c, 1);
                break
            }
            delete this.shapes[a]
        }, getShapeAt: function (a, b, c) {
            return this.targetX = b, this.targetY = c, this.render(), this.currentTargetShapeId
        }, render: function () {
            var a = this.shapeseq, b = this.shapes, c = a.length, d = this._getContext(), e, f, g;
            d.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
            for (g = 0; g < c; g++)e = a[g], f = b[e], this["_draw" + f.type].apply(this, f.args);
            this.interact || (this.shapes = {}, this.shapeseq = [])
        }}), J = g(H, {init: function (b, c, e) {
            var f;
            J._super.init.call(this, b, c, e), e[0] && (e = e[0]), d.data(e, "_jqs_vcanvas", this), this.canvas = a.createElement("span"), d(this.canvas).css({display: "inline-block", position: "relative", overflow: "hidden", width: b, height: c, margin: "0px", padding: "0px", verticalAlign: "top"}), this._insert(this.canvas, e), this._calculatePixelDims(b, c, this.canvas), this.canvas.width = this.pixelWidth, this.canvas.height = this.pixelHeight, f = '<v:group coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '"' + ' style="position:absolute;top:0;left:0;width:' + this.pixelWidth + "px;height=" + this.pixelHeight + 'px;"></v:group>', this.canvas.insertAdjacentHTML("beforeEnd", f), this.group = d(this.canvas).children()[0], this.rendered = !1, this.prerender = ""
        }, _drawShape: function (a, b, d, e, f) {
            var g = [], h, i, j, k, l, m, n;
            for (n = 0, m = b.length; n < m; n++)g[n] = "" + b[n][0] + "," + b[n][1];
            return h = g.splice(0, 1), f = f === c ? 1 : f, i = d === c ? ' stroked="false" ' : ' strokeWeight="' + f + 'px" strokeColor="' + d + '" ', j = e === c ? ' filled="false"' : ' fillColor="' + e + '" filled="true" ', k = g[0] === g[g.length - 1] ? "x " : "", l = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '" ' + ' id="jqsshape' + a + '" ' + i + j + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;" ' + ' path="m ' + h + " l " + g.join(", ") + " " + k + 'e">' + " </v:shape>", l
        }, _drawCircle: function (a, b, d, e, f, g, h) {
            var i, j, k;
            return b -= e, d -= e, i = f === c ? ' stroked="false" ' : ' strokeWeight="' + h + 'px" strokeColor="' + f + '" ', j = g === c ? ' filled="false"' : ' fillColor="' + g + '" filled="true" ', k = '<v:oval  id="jqsshape' + a + '" ' + i + j + ' style="position:absolute;top:' + d + "px; left:" + b + "px; width:" + e * 2 + "px; height:" + e * 2 + 'px"></v:oval>', k
        }, _drawPieSlice: function (a, d, e, f, g, h, i, j) {
            var k, l, m, n, o, p, q, r;
            if (g === h)return"";
            h - g === 2 * b.PI && (g = 0, h = 2 * b.PI), l = d + b.round(b.cos(g) * f), m = e + b.round(b.sin(g) * f), n = d + b.round(b.cos(h) * f), o = e + b.round(b.sin(h) * f);
            if (l === n && m === o) {
                if (h - g < b.PI)return"";
                l = n = d + f, m = o = e
            }
            return l === n && m === o && h - g < b.PI ? "" : (k = [d - f, e - f, d + f, e + f, l, m, n, o], p = i === c ? ' stroked="false" ' : ' strokeWeight="1px" strokeColor="' + i + '" ', q = j === c ? ' filled="false"' : ' fillColor="' + j + '" filled="true" ', r = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '" ' + ' id="jqsshape' + a + '" ' + p + q + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;" ' + ' path="m ' + d + "," + e + " wa " + k.join(", ") + ' x e">' + " </v:shape>", r)
        }, _drawRect: function (a, b, c, d, e, f, g) {
            return this._drawShape(a, [
                [b, c],
                [b, c + e],
                [b + d, c + e],
                [b + d, c],
                [b, c]
            ], f, g)
        }, reset: function () {
            this.group.innerHTML = ""
        }, appendShape: function (a) {
            var b = this["_draw" + a.type].apply(this, a.args);
            return this.rendered ? this.group.insertAdjacentHTML("beforeEnd", b) : this.prerender += b, this.lastShapeId = a.id, a.id
        }, replaceWithShape: function (a, b) {
            var c = d("#jqsshape" + a), e = this["_draw" + b.type].apply(this, b.args);
            c[0].outerHTML = e
        }, replaceWithShapes: function (a, b) {
            var c = d("#jqsshape" + a[0]), e = "", f = b.length, g;
            for (g = 0; g < f; g++)e += this["_draw" + b[g].type].apply(this, b[g].args);
            c[0].outerHTML = e;
            for (g = 1; g < a.length; g++)d("#jqsshape" + a[g]).remove()
        }, insertAfterShape: function (a, b) {
            var c = d("#jqsshape" + a), e = this["_draw" + b.type].apply(this, b.args);
            c[0].insertAdjacentHTML("afterEnd", e)
        }, removeShapeId: function (a) {
            var b = d("#jqsshape" + a);
            this.group.removeChild(b[0])
        }, getShapeAt: function (a, b, c) {
            var d = a.id.substr(8);
            return d
        }, render: function () {
            this.rendered || (this.group.innerHTML = this.prerender, this.rendered = !0)
        }})
    })
})(document, Math);
/**
 Core script to handle the entire theme and core functions
 **/
var App = function () {

    // IE mode
    var isRTL = false;
    var isIE8 = false;
    var isIE9 = false;
    var isIE10 = false;

    var sidebarWidth = 225;
    var sidebarCollapsedWidth = 35;

    var responsiveHandlers = [];

    // theme layout color set
    var layoutColorCodes = {
        'blue': '#4b8df8',
        'red': '#e02222',
        'green': '#35aa47',
        'purple': '#852b99',
        'grey': '#555555',
        'light-grey': '#fafafa',
        'yellow': '#ffb848'
    };

    // To get the correct viewport width based on  http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/
    var _getViewPort = function () {
        var e = window, a = 'inner';
        if (!('innerWidth' in window)) {
            a = 'client';
            e = document.documentElement || document.body;
        }
        return {
            width: e[a + 'Width'],
            height: e[a + 'Height']
        }
    }

    // initializes main settings
    var handleInit = function () {

        if ($('body').css('direction') === 'rtl') {
            isRTL = true;
        }

        isIE8 = !!navigator.userAgent.match(/MSIE 8.0/);
        isIE9 = !!navigator.userAgent.match(/MSIE 9.0/);
        isIE10 = !!navigator.userAgent.match(/MSIE 10.0/);

        if (isIE10) {
            jQuery('html').addClass('ie10'); // detect IE10 version
        }

        if (isIE10 || isIE9 || isIE8) {
            jQuery('html').addClass('ie'); // detect IE10 version
        }

        /*
         Virtual keyboards:
         Also, note that if you're using inputs in your modal – iOS has a rendering bug which doesn't
         update the position of fixed elements when the virtual keyboard is triggered
         */
        var deviceAgent = navigator.userAgent.toLowerCase();
        if (deviceAgent.match(/(iphone|ipod|ipad)/)) {
            $(document).on('focus', 'input, textarea', function () {
                $('.header').hide();
                $('.footer').hide();
            });
            $(document).on('blur', 'input, textarea', function () {
                $('.header').show();
                $('.footer').show();
            });
        }
    }

    var handleSidebarState = function () {
        // remove sidebar toggler if window width smaller than 992(for tablet and phone mode)
        var viewport = _getViewPort();
        if (viewport.width < 992) {
            $('body').removeClass("page-sidebar-closed");
        }
    }

    // runs callback functions set by App.addResponsiveHandler().
    var runResponsiveHandlers = function () {
        // reinitialize other subscribed elements
        for (var i in responsiveHandlers) {
            var each = responsiveHandlers[i];
            each.call();
        }
    }

    // reinitialize the laypot on window resize
    var handleResponsive = function () {
        handleSidebarState();
        handleSidebarAndContentHeight();
        handleFixedSidebar();
        runResponsiveHandlers();
    }

    // initialize the layout on page load
    var handleResponsiveOnInit = function () {
        handleSidebarState();
        handleSidebarAndContentHeight();
    }

    // handle the layout reinitialization on window resize
    var handleResponsiveOnResize = function () {
        var resize;
        if (isIE8) {
            var currheight;
            $(window).resize(function () {
                if (currheight == document.documentElement.clientHeight) {
                    return; //quite event since only body resized not window.
                }
                if (resize) {
                    clearTimeout(resize);
                }
                resize = setTimeout(function () {
                    handleResponsive();
                }, 50); // wait 50ms until window resize finishes.                
                currheight = document.documentElement.clientHeight; // store last body client height
            });
        } else {
            $(window).resize(function () {
                if (resize) {
                    clearTimeout(resize);
                }
                resize = setTimeout(function () {
                    handleResponsive();
                }, 50); // wait 50ms until window resize finishes.
            });
        }
    }

    //* BEGIN:CORE HANDLERS *//
    // this function handles responsive layout on screen size resize or mobile device rotate.

    // Set proper height for sidebar and content. The content and sidebar height must be synced always.
    var handleSidebarAndContentHeight = function () {
        var content = $('.page-content');
        var sidebar = $('.page-sidebar');
        var body = $('body');
        var height;

        if (body.hasClass("page-footer-fixed") === true && body.hasClass("page-sidebar-fixed") === false) {
            var available_height = $(window).height() - $('.footer').outerHeight();
            if (content.height() < available_height) {
                content.attr('style', 'min-height:' + available_height + 'px !important');
            }
        } else {
            if (body.hasClass('page-sidebar-fixed')) {
                height = _calculateFixedSidebarViewportHeight();
            } else {
                height = sidebar.height() + 20;
            }
            if (height >= content.height()) {
                content.attr('style', 'min-height:' + height + 'px !important');
            }
        }
    }

    // Handle sidebar menu
    var handleSidebarMenu = function () {
        jQuery('.page-sidebar').on('click', 'li > a', function (e) {
            if ($(this).next().hasClass('sub-menu') == false) {
                if ($('.btn-navbar').hasClass('collapsed') == false) {
                    $('.btn-navbar').click();
                }
                return;
            }

            if ($(this).next().hasClass('sub-menu always-open')) {
                return;
            }

            var parent = $(this).parent().parent();
            var the = $(this);

            parent.children('li.open').children('a').children('.arrow').removeClass('open');
            parent.children('li.open').children('.sub-menu').slideUp(200);
            parent.children('li.open').removeClass('open');

            var sub = jQuery(this).next();
            var slideOffeset = -200;
            var slideSpeed = 200;

            if (sub.is(":visible")) {
                jQuery('.arrow', jQuery(this)).removeClass("open");
                jQuery(this).parent().removeClass("open");
                sub.slideUp(slideSpeed, function () {
                    if ($('body').hasClass('page-sidebar-fixed') == false && $('body').hasClass('page-sidebar-closed') == false) {
                        App.scrollTo(the, slideOffeset);
                    }
                    handleSidebarAndContentHeight();
                });
            } else {
                jQuery('.arrow', jQuery(this)).addClass("open");
                jQuery(this).parent().addClass("open");
                sub.slideDown(slideSpeed, function () {
                    if ($('body').hasClass('page-sidebar-fixed') == false && $('body').hasClass('page-sidebar-closed') == false) {
                        App.scrollTo(the, slideOffeset);
                    }
                    handleSidebarAndContentHeight();
                });
            }

            e.preventDefault();
        });

        // handle ajax links
        jQuery('.page-sidebar').on('click', ' li > a.ajaxify', function (e) {
            e.preventDefault();
            App.scrollTop();

            var url = $(this).attr("href");
            var menuContainer = jQuery('.page-sidebar ul');
            var pageContent = $('.page-content');
            var pageContentBody = $('.page-content .page-content-body');

            menuContainer.children('li.active').removeClass('active');
            menuContainer.children('arrow.open').removeClass('open');

            $(this).parents('li').each(function () {
                $(this).addClass('active');
                $(this).children('a > span.arrow').addClass('open');
            });
            $(this).parents('li').addClass('active');

            App.blockUI(pageContent, false);

            $.ajax({
                type: "GET",
                cache: false,
                url: url,
                dataType: "html",
                success: function (res) {
                    App.unblockUI(pageContent);
                    pageContentBody.html(res);
                    App.fixContentHeight(); // fix content height
                    App.initAjax(); // initialize core stuff
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    pageContentBody.html('<h4>Could not load the requested content.</h4>');
                    App.unblockUI(pageContent);
                },
                async: false
            });
        });
    }

    // Helper function to calculate sidebar height for fixed sidebar layout.
    var _calculateFixedSidebarViewportHeight = function () {
        var sidebarHeight = $(window).height() - $('.header').height() + 1;
        if ($('body').hasClass("page-footer-fixed")) {
            sidebarHeight = sidebarHeight - $('.footer').outerHeight();
        }

        return sidebarHeight;
    }

    // Handles fixed sidebar
    var handleFixedSidebar = function () {
        var menu = $('.page-sidebar-menu');

        if (menu.parent('.slimScrollDiv').size() === 1) { // destroy existing instance before updating the height
            menu.slimScroll({
                destroy: true
            });
            menu.removeAttr('style');
            $('.page-sidebar').removeAttr('style');
        }

        if ($('.page-sidebar-fixed').size() === 0) {
            handleSidebarAndContentHeight();
            return;
        }

        var viewport = _getViewPort();
        if (viewport.width >= 992) {
            var sidebarHeight = _calculateFixedSidebarViewportHeight();

            menu.slimScroll({
                size: '7px',
                color: '#a1b2bd',
                opacity: .3,
                position: isRTL ? 'left' : 'right',
                height: sidebarHeight,
                allowPageScroll: false,
                disableFadeOut: false
            });
            handleSidebarAndContentHeight();
        }
    }

    // Handles the sidebar menu hover effect for fixed sidebar.
    var handleFixedSidebarHoverable = function () {
        if ($('body').hasClass('page-sidebar-fixed') === false) {
            return;
        }

        $('.page-sidebar').off('mouseenter').on('mouseenter', function () {
            var body = $('body');

            if ((body.hasClass('page-sidebar-closed') === false || body.hasClass('page-sidebar-fixed') === false) || $(this).hasClass('page-sidebar-hovering')) {
                return;
            }

            body.removeClass('page-sidebar-closed').addClass('page-sidebar-hover-on');
            $(this).addClass('page-sidebar-hovering');
            $(this).animate({
                width: sidebarWidth
            }, 400, '', function () {
                $(this).removeClass('page-sidebar-hovering');
            });
        });

        $('.page-sidebar').off('mouseleave').on('mouseleave', function () {
            var body = $('body');

            if ((body.hasClass('page-sidebar-hover-on') === false || body.hasClass('page-sidebar-fixed') === false) || $(this).hasClass('page-sidebar-hovering')) {
                return;
            }

            $(this).addClass('page-sidebar-hovering');
            $(this).animate({
                width: sidebarCollapsedWidth
            }, 400, '', function () {
                $('body').addClass('page-sidebar-closed').removeClass('page-sidebar-hover-on');
                $(this).removeClass('page-sidebar-hovering');
            });
        });
    }

    // Handles sidebar toggler to close/hide the sidebar.
    var handleSidebarToggler = function () {
        var viewport = _getViewPort();
        if ($.cookie('sidebar_closed') === '1' && viewport.width >= 992) {
            $('body').addClass('page-sidebar-closed');
        }

        // handle sidebar show/hide
        $('.page-sidebar').on('click', '.sidebar-toggler', function (e) {
            var body = $('body');
            var sidebar = $('.page-sidebar');

            if ((body.hasClass("page-sidebar-hover-on") && body.hasClass('page-sidebar-fixed')) || sidebar.hasClass('page-sidebar-hovering')) {
                body.removeClass('page-sidebar-hover-on');
                sidebar.css('width', '').hide().show();
                $.cookie('sidebar_closed', '0');
                e.stopPropagation();
                runResponsiveHandlers();
                return;
            }

            $(".sidebar-search", sidebar).removeClass("open");

            if (body.hasClass("page-sidebar-closed")) {
                body.removeClass("page-sidebar-closed");
                if (body.hasClass('page-sidebar-fixed')) {
                    sidebar.css('width', '');
                }
                $.cookie('sidebar_closed', '0');
            } else {
                body.addClass("page-sidebar-closed");
                $.cookie('sidebar_closed', '1');
            }
            runResponsiveHandlers();
        });

        // handle the search bar close
        $('.page-sidebar').on('click', '.sidebar-search .remove', function (e) {
            e.preventDefault();
            $('.sidebar-search').removeClass("open");
        });

        // handle the search query submit on enter press
        $('.page-sidebar').on('keypress', '.sidebar-search input', function (e) {
            if (e.which == 13) {
                $('.sidebar-search').submit();
                return false; //<---- Add this line
            }
        });

        // handle the search submit
        $('.sidebar-search .submit').on('click', function (e) {
            e.preventDefault();
            if ($('body').hasClass("page-sidebar-closed")) {
                if ($('.sidebar-search').hasClass('open') == false) {
                    if ($('.page-sidebar-fixed').size() === 1) {
                        $('.page-sidebar .sidebar-toggler').click(); //trigger sidebar toggle button
                    }
                    $('.sidebar-search').addClass("open");
                } else {
                    $('.sidebar-search').submit();
                }
            } else {
                $('.sidebar-search').submit();
            }
        });
    }

    // Handles the horizontal menu
    var handleHorizontalMenu = function () {
        //handle hor menu search form toggler click
        $('.header').on('click', '.hor-menu .hor-menu-search-form-toggler', function (e) {
            if ($(this).hasClass('off')) {
                $(this).removeClass('off');
                $('.header .hor-menu .search-form').hide();
            } else {
                $(this).addClass('off');
                $('.header .hor-menu .search-form').show();
            }
            e.preventDefault();
        });

        //handle hor menu search button click
        $('.header').on('click', '.hor-menu .search-form .btn', function (e) {
            $('.form-search').submit();
            e.preventDefault();
        });

        //handle hor menu search form on enter press
        $('.header').on('keypress', '.hor-menu .search-form input', function (e) {
            if (e.which == 13) {
                $('.form-search').submit();
                return false;
            }
        });
    }

    // Handles the go to top button at the footer
    var handleGoTop = function () {
        /* set variables locally for increased performance */
        jQuery('.footer').on('click', '.go-top', function (e) {
            App.scrollTo();
            e.preventDefault();
        });
    }

    // Handles portlet tools & actions
    var handlePortletTools = function () {
        jQuery('body').on('click', '.portlet > .portlet-title > .tools > a.remove', function (e) {
            e.preventDefault();
            jQuery(this).closest(".portlet").remove();
        });

        jQuery('body').on('click', '.portlet > .portlet-title > .tools > a.reload', function (e) {
            e.preventDefault();
            var el = jQuery(this).closest(".portlet").children(".portlet-body");
            App.blockUI(el);
            window.setTimeout(function () {
                App.unblockUI(el);
            }, 1000);
        });

        jQuery('body').on('click', '.portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand', function (e) {
            e.preventDefault();
            var el = jQuery(this).closest(".portlet").children(".portlet-body");
            if (jQuery(this).hasClass("collapse")) {
                jQuery(this).removeClass("collapse").addClass("expand");
                el.slideUp(200);
            } else {
                jQuery(this).removeClass("expand").addClass("collapse");
                el.slideDown(200);
            }
        });
    }

    // Handles custom checkboxes & radios using jQuery Uniform plugin
    var handleUniform = function () {
        if (!jQuery().uniform) {
            return;
        }
        var test = $("input[type=checkbox]:not(.toggle), input[type=radio]:not(.toggle, .star)");
        if (test.size() > 0) {
            test.each(function () {
                if ($(this).parents(".checker").size() == 0) {
                    $(this).show();
                    $(this).uniform();
                }
            });
        }
    }

    // Handles Bootstrap Accordions.
    var handleAccordions = function () {
        var lastClicked;
        //add scrollable class name if you need scrollable panes
        jQuery('body').on('click', '.accordion.scrollable .accordion-toggle', function () {
            lastClicked = jQuery(this);
        }); //move to faq section

        jQuery('body').on('show.bs.collapse', '.accordion.scrollable', function () {
            jQuery('html,body').animate({
                scrollTop: lastClicked.offset().top - 150
            }, 'slow');
        });
    }

    // Handles Bootstrap Tabs.
    var handleTabs = function () {
        // fix content height on tab click
        $('body').on('shown.bs.tab', '.nav.nav-tabs', function () {
            handleSidebarAndContentHeight();
        });

        //activate tab if tab id provided in the URL
        if (location.hash) {
            var tabid = location.hash.substr(1);
            $('a[href="#' + tabid + '"]').click();
        }
    }

    // Handles Bootstrap Modals.
    var handleModals = function () {

        // fix stackable modal issue: when 2 or more modals opened, closing one of modal will remove .modal-open class. 
        $('body').on('hide.bs.modal', function () {
            if ($('.modal:visible').size() > 1 && $('html').hasClass('modal-open') == false) {
                $('html').addClass('modal-open');
            } else if ($('.modal:visible').size() <= 1) {
                $('html').removeClass('modal-open');
            }
        });
    }

    // Handles Bootstrap Tooltips.
    var handleTooltips = function () {
        jQuery('.tooltips').tooltip();
    }

    // Handles Bootstrap Dropdowns
    var handleDropdowns = function () {
        /*
         For touch supported devices disable the
         hoverable dropdowns - data-hover="dropdown"
         */
        if (App.isTouchDevice()) {
            $('[data-hover="dropdown"]').each(function () {
                $(this).parent().off("hover");
                $(this).off("hover");
            });
        }
        /*
         Hold dropdown on click
         */
        $('body').on('click', '.dropdown-menu.hold-on-click', function (e) {
            e.stopPropagation();
        });
    }

    // Handle Hower Dropdowns
    var handleDropdownHover = function () {
        $('[data-hover="dropdown"]').dropdownHover();
    }

    var handleAlerts = function () {
        $('body').on('click', '[data-close="alert"]', function (e) {
            $(this).parent('.alert').hide();
            e.preventDefault();
        });
    }

    // Handles Bootstrap Popovers

    // last popep popover
    var lastPopedPopover;

    var handlePopovers = function () {
        jQuery('.popovers').popover();

        // close last poped popover

        $(document).on('click.bs.popover.data-api', function (e) {
            if (lastPopedPopover) {
                lastPopedPopover.popover('hide');
            }
        });
    }

    // Handles scrollable contents using jQuery SlimScroll plugin.
    var handleScrollers = function () {
        $('.scroller').each(function () {
            var height;
            if ($(this).attr("data-height")) {
                height = $(this).attr("data-height");
            } else {
                height = $(this).css('height');
            }
            $(this).slimScroll({
                size: '7px',
                color: ($(this).attr("data-handle-color") ? $(this).attr("data-handle-color") : '#a1b2bd'),
                railColor: ($(this).attr("data-rail-color") ? $(this).attr("data-rail-color") : '#333'),
                position: isRTL ? 'left' : 'right',
                height: height,
                alwaysVisible: ($(this).attr("data-always-visible") == "1" ? true : false),
                railVisible: ($(this).attr("data-rail-visible") == "1" ? true : false),
                disableFadeOut: true
            });
        });
    }

    // Handles Image Preview using jQuery Fancybox plugin
    var handleFancybox = function () {
        if (!jQuery.fancybox) {
            return;
        }

        if (jQuery(".fancybox-button").size() > 0) {
            jQuery(".fancybox-button").fancybox({
                groupAttr: 'data-rel',
                prevEffect: 'none',
                nextEffect: 'none',
                closeBtn: true,
                helpers: {
                    title: {
                        type: 'inside'
                    }
                }
            });
        }
    }

    // Fix input placeholder issue for IE8 and IE9
    var handleFixInputPlaceholderForIE = function () {
        //fix html5 placeholder attribute for ie7 & ie8
        if (isIE8 || isIE9) { // ie8 & ie9
            // this is html5 placeholder fix for inputs, inputs with placeholder-no-fix class will be skipped(e.g: we need this for password fields)
            jQuery('input[placeholder]:not(.placeholder-no-fix), textarea[placeholder]:not(.placeholder-no-fix)').each(function () {

                var input = jQuery(this);

                if (input.val() == '' && input.attr("placeholder") != '') {
                    input.addClass("placeholder").val(input.attr('placeholder'));
                }

                input.focus(function () {
                    if (input.val() == input.attr('placeholder')) {
                        input.val('');
                    }
                });

                input.blur(function () {
                    if (input.val() == '' || input.val() == input.attr('placeholder')) {
                        input.val(input.attr('placeholder'));
                    }
                });
            });
        }
    }

    // Handle full screen mode toggle
    var handleFullScreenMode = function () {
        // mozfullscreenerror event handler

        // toggle full screen
        function toggleFullScreen() {
            if (!document.fullscreenElement &&    // alternative standard method
                !document.mozFullScreenElement && !document.webkitFullscreenElement) {  // current working methods
                if (document.documentElement.requestFullscreen) {
                    document.documentElement.requestFullscreen();
                } else if (document.documentElement.mozRequestFullScreen) {
                    document.documentElement.mozRequestFullScreen();
                } else if (document.documentElement.webkitRequestFullscreen) {
                    document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                }
            } else {
                if (document.cancelFullScreen) {
                    document.cancelFullScreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.webkitCancelFullScreen) {
                    document.webkitCancelFullScreen();
                }
            }
        }

        $('#trigger_fullscreen').click(function () {
            toggleFullScreen();
        });
    }

    // Handle Select2 Dropdowns
    var handleSelect2 = function () {
        if (jQuery().select2) {
            $('.select2me').select2({
                placeholder: "Select",
                allowClear: true
            });
        }
    }

    // Handle Theme Settings
    var handleTheme = function () {

        var panel = $('.theme-panel');

        if ($('body').hasClass('page-boxed') == false) {
            $('.layout-option', panel).val("fluid");
        }

        $('.sidebar-option', panel).val("default");
        $('.header-option', panel).val("fixed");
        $('.footer-option', panel).val("default");

        //handle theme layout
        var resetLayout = function () {
            $("body").
                removeClass("page-boxed").
                removeClass("page-footer-fixed").
                removeClass("page-sidebar-fixed").
                removeClass("page-header-fixed");

            $('.header > .header-inner').removeClass("container");

            if ($('.page-container').parent(".container").size() === 1) {
                $('.page-container').insertAfter('body > .clearfix');
            }

            if ($('.footer > .container').size() === 1) {
                $('.footer').html($('.footer > .container').html());
            } else if ($('.footer').parent(".container").size() === 1) {
                $('.footer').insertAfter('.page-container');
            }

            $('body > .container').remove();
        }

        var lastSelectedLayout = '';

        var setLayout = function () {

            var layoutOption = $('.layout-option', panel).val();
            var sidebarOption = $('.sidebar-option', panel).val();
            var headerOption = $('.header-option', panel).val();
            var footerOption = $('.footer-option', panel).val();

            if (sidebarOption == "fixed" && headerOption == "default") {
                alert('Default Header with Fixed Sidebar option is not supported. Proceed with Fixed Header with Fixed Sidebar.');
                $('.header-option', panel).val("fixed");
                $('.sidebar-option', panel).val("fixed");
                sidebarOption = 'fixed';
                headerOption = 'fixed';
            }

            resetLayout(); // reset layout to default state

            if (layoutOption === "boxed") {
                $("body").addClass("page-boxed");

                // set header
                $('.header > .header-inner').addClass("container");
                var cont = $('body > .clearfix').after('<div class="container"></div>');

                // set content
                $('.page-container').appendTo('body > .container');

                // set footer
                if (footerOption === 'fixed') {
                    $('.footer').html('<div class="container">' + $('.footer').html() + '</div>');
                } else {
                    $('.footer').appendTo('body > .container');
                }
            }

            if (lastSelectedLayout != layoutOption) {
                //layout changed, run responsive handler:
                runResponsiveHandlers();
            }
            lastSelectedLayout = layoutOption;

            //header
            if (headerOption === 'fixed') {
                $("body").addClass("page-header-fixed");
                $(".header").removeClass("navbar-static-top").addClass("navbar-fixed-top");
            } else {
                $("body").removeClass("page-header-fixed");
                $(".header").removeClass("navbar-fixed-top").addClass("navbar-static-top");
            }

            //sidebar
            if (sidebarOption === 'fixed') {
                $("body").addClass("page-sidebar-fixed");
            } else {
                $("body").removeClass("page-sidebar-fixed");
            }

            //footer 
            if (footerOption === 'fixed') {
                $("body").addClass("page-footer-fixed");
            } else {
                $("body").removeClass("page-footer-fixed");
            }

            handleSidebarAndContentHeight(); // fix content height            
            handleFixedSidebar(); // reinitialize fixed sidebar
            handleFixedSidebarHoverable(); // reinitialize fixed sidebar hover effect
        }

        // handle theme colors
        var setColor = function (color) {
            $('#style_color').attr("href", "assets/css/themes/" + color + ".css");
            $.cookie('style_color', color);
        }

        $('.toggler', panel).click(function () {
            $('.toggler').hide();
            $('.toggler-close').show();
            $('.theme-panel > .theme-options').show();
        });

        $('.toggler-close', panel).click(function () {
            $('.toggler').show();
            $('.toggler-close').hide();
            $('.theme-panel > .theme-options').hide();
        });

        $('.theme-colors > ul > li', panel).click(function () {
            var color = $(this).attr("data-style");
            setColor(color);
            $('ul > li', panel).removeClass("current");
            $(this).addClass("current");
        });

        $('.layout-option, .header-option, .sidebar-option, .footer-option', panel).change(setLayout);

        if ($.cookie('style_color')) {
            setColor($.cookie('style_color'));
        }
    }

    //* END:CORE HANDLERS *//

    return {

        //main function to initiate the theme
        init: function () {

            //IMPORTANT!!!: Do not modify the core handlers call order.

            //core handlers
            handleInit(); // initialize core variables
            handleResponsiveOnResize(); // set and handle responsive    
            handleUniform(); // hanfle custom radio & checkboxes
            handleScrollers(); // handles slim scrolling contents 
            handleResponsiveOnInit(); // handler responsive elements on page load

            //layout handlers
            handleFixedSidebar(); // handles fixed sidebar menu
            handleFixedSidebarHoverable(); // handles fixed sidebar on hover effect 
            handleSidebarMenu(); // handles main menu
            handleHorizontalMenu(); // handles horizontal menu
            handleSidebarToggler(); // handles sidebar hide/show            
            handleFixInputPlaceholderForIE(); // fixes/enables html5 placeholder attribute for IE9, IE8
            handleGoTop(); //handles scroll to top functionality in the footer
            handleTheme(); // handles style customer tool

            //ui component handlers
            handleFancybox() // handle fancy box
            handleSelect2(); // handle custom Select2 dropdowns
            handlePortletTools(); // handles portlet action bar functionality(refresh, configure, toggle, remove)
            handleAlerts(); //handle closabled alerts
            handleDropdowns(); // handle dropdowns
            handleTabs(); // handle tabs
            handleTooltips(); // handle bootstrap tooltips
            handlePopovers(); // handles bootstrap popovers
            handleAccordions(); //handles accordions 
            handleModals(); // handle modals
            handleFullScreenMode(); // handles full screen
        },

        //main function to initiate core javascript after ajax complete
        initAjax: function () {
            handleSelect2(); // handle custom Select2 dropdowns
            handleDropdowns(); // handle dropdowns
            handleTooltips(); // handle bootstrap tooltips
            handlePopovers(); // handles bootstrap popovers
            handleAccordions(); //handles accordions 
            handleUniform(); // hanfle custom radio & checkboxes     
            handleDropdownHover() // handles dropdown hover       
        },

        //public function to fix the sidebar and content height accordingly
        fixContentHeight: function () {
            handleSidebarAndContentHeight();
        },

        //public function to remember last opened popover that needs to be closed on click
        setLastPopedPopover: function (el) {
            lastPopedPopover = el;
        },

        //public function to add callback a function which will be called on window resize
        addResponsiveHandler: function (func) {
            responsiveHandlers.push(func);
        },

        // useful function to make equal height for contacts stand side by side
        setEqualHeight: function (els) {
            var tallestEl = 0;
            els = jQuery(els);
            els.each(function () {
                var currentHeight = $(this).height();
                if (currentHeight > tallestEl) {
                    tallestColumn = currentHeight;
                }
            });
            els.height(tallestEl);
        },

        // wrapper function to scroll(focus) to an element
        scrollTo: function (el, offeset) {
            pos = (el && el.size() > 0) ? el.offset().top : 0;
            jQuery('html,body').animate({
                scrollTop: pos + (offeset ? offeset : 0)
            }, 'slow');
        },

        // function to scroll to the top
        scrollTop: function () {
            App.scrollTo();
        },

        // wrapper function to  block element(indicate loading)
        blockUI: function (el, centerY) {
            var el = jQuery(el);
            if (el.height() <= 400) {
                centerY = true;
            }
            el.block({
                message: '<img src="/img/ajax-loading.gif" align="">',
                centerY: centerY != undefined ? centerY : true,
                css: {
                    top: '10%',
                    border: 'none',
                    padding: '2px',
                    backgroundColor: 'none'
                },
                overlayCSS: {
                    backgroundColor: '#000',
                    opacity: 0.05,
                    cursor: 'wait'
                }
            });
        },

        // wrapper function to  un-block element(finish loading)
        unblockUI: function (el, clean) {
            jQuery(el).unblock({
                onUnblock: function () {
                    jQuery(el).css('position', '');
                    jQuery(el).css('zoom', '');
                }
            });
        },

        // initializes uniform elements
        initUniform: function (els) {
            if (els) {
                jQuery(els).each(function () {
                    if ($(this).parents(".checker").size() == 0) {
                        $(this).show();
                        $(this).uniform();
                    }
                });
            } else {
                handleUniform();
            }
        },

        //wrapper function to update/sync jquery uniform checkbox & radios
        updateUniform: function (els) {
            $.uniform.update(els); // update the uniform checkbox & radios UI after the actual input control state changed
        },

        //public function to initialize the fancybox plugin
        initFancybox: function () {
            handleFancybox();
        },

        //public helper function to get actual input value(used in IE9 and IE8 due to placeholder attribute not supported)
        getActualVal: function (el) {
            var el = jQuery(el);
            if (el.val() === el.attr("placeholder")) {
                return "";
            }
            return el.val();
        },

        //public function to get a paremeter by name from URL
        getURLParameter: function (paramName) {
            var searchString = window.location.search.substring(1),
                i, val, params = searchString.split("&");

            for (i = 0; i < params.length; i++) {
                val = params[i].split("=");
                if (val[0] == paramName) {
                    return unescape(val[1]);
                }
            }
            return null;
        },

        // check for device touch support
        isTouchDevice: function () {
            try {
                document.createEvent("TouchEvent");
                return true;
            } catch (e) {
                return false;
            }
        },

        // check IE8 mode
        isIE8: function () {
            return isIE8;
        },

        // check IE9 mode
        isIE9: function () {
            return isIE9;
        },

        //check RTL mode
        isRTL: function () {
            return isRTL;
        },

        // get layout color code by color name
        getLayoutColorCode: function (name) {
            if (layoutColorCodes[name]) {
                return layoutColorCodes[name];
            } else {
                return '';
            }
        }

    };

}();
var Index = function () {


    return {

        //main function
        init: function () {
            App.addResponsiveHandler(function () {
                jQuery('.vmaps').each(function () {
                    var map = jQuery(this);
                    map.width(map.parent().width());
                });
            });
        },

        initJQVMAP: function () {

            var showMap = function (name) {
                jQuery('.vmaps').hide();
                jQuery('#vmap_' + name).show();
            }

            var setMap = function (name) {
                var data = {
                    map: 'world_en',
                    backgroundColor: null,
                    borderColor: '#333333',
                    borderOpacity: 0.5,
                    borderWidth: 1,
                    color: '#c6c6c6',
                    enableZoom: true,
                    hoverColor: '#c9dfaf',
                    hoverOpacity: null,
                    values: sample_data,
                    normalizeFunction: 'linear',
                    scaleColors: ['#b6da93', '#909cae'],
                    selectedColor: '#c9dfaf',
                    selectedRegion: null,
                    showTooltip: true,
                    onLabelShow: function (event, label, code) {

                    },
                    onRegionOver: function (event, code) {
                        if (code == 'ca') {
                            event.preventDefault();
                        }
                    },
                    onRegionClick: function (element, code, region) {
                        var message = 'You clicked "' + region + '" which has the code: ' + code.toUpperCase();
                        alert(message);
                    }
                };

                data.map = name + '_en';
                var map = jQuery('#vmap_' + name);
                if (!map) {
                    return;
                }
                map.width(map.parent().parent().width());
                map.show();
                map.vectorMap(data);
                map.hide();
            }

            setMap("world");
            setMap("usa");
            setMap("europe");
            setMap("russia");
            setMap("germany");
            showMap("world");

            jQuery('#regional_stat_world').click(function () {
                showMap("world");
            });

            jQuery('#regional_stat_usa').click(function () {
                showMap("usa");
            });

            jQuery('#regional_stat_europe').click(function () {
                showMap("europe");
            });
            jQuery('#regional_stat_russia').click(function () {
                showMap("russia");
            });
            jQuery('#regional_stat_germany').click(function () {
                showMap("germany");
            });

            $('#region_statistics_loading').hide();
            $('#region_statistics_content').show();
        },

        initCalendar: function () {
            if (!jQuery().fullCalendar) {
                return;
            }

            var date = new Date();
            var d = date.getDate();
            var m = date.getMonth();
            var y = date.getFullYear();

            var h = {};

            if ($('#calendar').width() <= 400) {
                $('#calendar').addClass("mobile");
                h = {
                    left: 'title, prev, next',
                    center: '',
                    right: 'today,month,agendaWeek,agendaDay'
                };
            } else {
                $('#calendar').removeClass("mobile");
                if (App.isRTL()) {
                    h = {
                        right: 'title',
                        center: '',
                        left: 'prev,next,today,month,agendaWeek,agendaDay'
                    };
                } else {
                    h = {
                        left: 'title',
                        center: '',
                        right: 'prev,next,today,month,agendaWeek,agendaDay'
                    };
                }
            }

            $('#calendar').fullCalendar('destroy'); // destroy the calendar
            $('#calendar').fullCalendar({ //re-initialize the calendar
                disableDragging: false,
                header: h,
                editable: true,
                events: [
                    {
                        title: 'All Day Event',
                        start: new Date(y, m, 1),
                        backgroundColor: App.getLayoutColorCode('yellow')
                    },
                    {
                        title: 'Long Event',
                        start: new Date(y, m, d - 5),
                        end: new Date(y, m, d - 2),
                        backgroundColor: App.getLayoutColorCode('green')
                    },
                    {
                        title: 'Repeating Event',
                        start: new Date(y, m, d - 3, 16, 0),
                        allDay: false,
                        backgroundColor: App.getLayoutColorCode('red')
                    },
                    {
                        title: 'Repeating Event',
                        start: new Date(y, m, d + 4, 16, 0),
                        allDay: false,
                        backgroundColor: App.getLayoutColorCode('green')
                    },
                    {
                        title: 'Meeting',
                        start: new Date(y, m, d, 10, 30),
                        allDay: false,
                    },
                    {
                        title: 'Lunch',
                        start: new Date(y, m, d, 12, 0),
                        end: new Date(y, m, d, 14, 0),
                        backgroundColor: App.getLayoutColorCode('grey'),
                        allDay: false,
                    },
                    {
                        title: 'Birthday Party',
                        start: new Date(y, m, d + 1, 19, 0),
                        end: new Date(y, m, d + 1, 22, 30),
                        backgroundColor: App.getLayoutColorCode('purple'),
                        allDay: false,
                    },
                    {
                        title: 'Click for Google',
                        start: new Date(y, m, 28),
                        end: new Date(y, m, 29),
                        backgroundColor: App.getLayoutColorCode('yellow'),
                        url: 'http://google.com/',
                    }
                ]
            });
        },

        initCharts: function () {
            if (!jQuery.plot) {
                return;
            }

            var data = [];
            var totalPoints = 250;

            // random data generator for plot charts

            function getRandomData() {
                if (data.length > 0) data = data.slice(1);
                // do a random walk
                while (data.length < totalPoints) {
                    var prev = data.length > 0 ? data[data.length - 1] : 50;
                    var y = prev + Math.random() * 10 - 5;
                    if (y < 0) y = 0;
                    if (y > 100) y = 100;
                    data.push(y);
                }
                // zip the generated y values with the x values
                var res = [];
                for (var i = 0; i < data.length; ++i) res.push([i, data[i]])
                return res;
            }

            function showTooltip(title, x, y, contents) {
                $('<div id="tooltip" class="chart-tooltip"><div class="date">' + title + '<\/div><div class="label label-success">CTR: ' + x / 10 + '%<\/div><div class="label label-danger">Imp: ' + x * 12 + '<\/div><\/div>').css({
                    position: 'absolute',
                    display: 'none',
                    top: y - 100,
                    width: 80,
                    left: x - 40,
                    border: '0px solid #ccc',
                    padding: '2px 6px',
                    'background-color': '#fff',
                }).appendTo("body").fadeIn(200);
            }

            function randValue() {
                return (Math.floor(Math.random() * (1 + 50 - 20))) + 10;
            }

            var pageviews = [
                [1, randValue()],
                [2, randValue()],
                [3, 2 + randValue()],
                [4, 3 + randValue()],
                [5, 5 + randValue()],
                [6, 10 + randValue()],
                [7, 15 + randValue()],
                [8, 20 + randValue()],
                [9, 25 + randValue()],
                [10, 30 + randValue()],
                [11, 35 + randValue()],
                [12, 25 + randValue()],
                [13, 15 + randValue()],
                [14, 20 + randValue()],
                [15, 45 + randValue()],
                [16, 50 + randValue()],
                [17, 65 + randValue()],
                [18, 70 + randValue()],
                [19, 85 + randValue()],
                [20, 80 + randValue()],
                [21, 75 + randValue()],
                [22, 80 + randValue()],
                [23, 75 + randValue()],
                [24, 70 + randValue()],
                [25, 65 + randValue()],
                [26, 75 + randValue()],
                [27, 80 + randValue()],
                [28, 85 + randValue()],
                [29, 90 + randValue()],
                [30, 95 + randValue()]
            ];

            var visitors = [
                [1, randValue() - 5],
                [2, randValue() - 5],
                [3, randValue() - 5],
                [4, 6 + randValue()],
                [5, 5 + randValue()],
                [6, 20 + randValue()],
                [7, 25 + randValue()],
                [8, 36 + randValue()],
                [9, 26 + randValue()],
                [10, 38 + randValue()],
                [11, 39 + randValue()],
                [12, 50 + randValue()],
                [13, 51 + randValue()],
                [14, 12 + randValue()],
                [15, 13 + randValue()],
                [16, 14 + randValue()],
                [17, 15 + randValue()],
                [18, 15 + randValue()],
                [19, 16 + randValue()],
                [20, 17 + randValue()],
                [21, 18 + randValue()],
                [22, 19 + randValue()],
                [23, 20 + randValue()],
                [24, 21 + randValue()],
                [25, 14 + randValue()],
                [26, 24 + randValue()],
                [27, 25 + randValue()],
                [28, 26 + randValue()],
                [29, 27 + randValue()],
                [30, 31 + randValue()]
            ];

            if ($('#site_statistics').size() != 0) {

                $('#site_statistics_loading').hide();
                $('#site_statistics_content').show();

                var plot_statistics = $.plot($("#site_statistics"), [
                    {
                        data: pageviews,
                        label: "Unique Visits"
                    },
                    {
                        data: visitors,
                        label: "Page Views"
                    }
                ], {
                    series: {
                        lines: {
                            show: true,
                            lineWidth: 2,
                            fill: true,
                            fillColor: {
                                colors: [
                                    {
                                        opacity: 0.05
                                    },
                                    {
                                        opacity: 0.01
                                    }
                                ]
                            }
                        },
                        points: {
                            show: true
                        },
                        shadowSize: 2
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        tickColor: "#eee",
                        borderWidth: 0
                    },
                    colors: ["#d12610", "#37b7f3", "#52e136"],
                    xaxis: {
                        ticks: 11,
                        tickDecimals: 0
                    },
                    yaxis: {
                        ticks: 11,
                        tickDecimals: 0
                    }
                });

                var previousPoint = null;
                $("#site_statistics").bind("plothover", function (event, pos, item) {
                    $("#x").text(pos.x.toFixed(2));
                    $("#y").text(pos.y.toFixed(2));
                    if (item) {
                        if (previousPoint != item.dataIndex) {
                            previousPoint = item.dataIndex;

                            $("#tooltip").remove();
                            var x = item.datapoint[0].toFixed(2),
                                y = item.datapoint[1].toFixed(2);

                            showTooltip('24 Jan 2013', item.pageX, item.pageY, item.series.label + " of " + x + " = " + y);
                        }
                    } else {
                        $("#tooltip").remove();
                        previousPoint = null;
                    }
                });
            }

            if ($('#load_statistics').size() != 0) {
                //server load
                $('#load_statistics_loading').hide();
                $('#load_statistics_content').show();

                var updateInterval = 30;
                var plot_statistics = $.plot($("#load_statistics"), [getRandomData()], {
                    series: {
                        shadowSize: 1
                    },
                    lines: {
                        show: true,
                        lineWidth: 0.2,
                        fill: true,
                        fillColor: {
                            colors: [
                                {
                                    opacity: 0.1
                                },
                                {
                                    opacity: 1
                                }
                            ]
                        }
                    },
                    yaxis: {
                        min: 0,
                        max: 100,
                        tickFormatter: function (v) {
                            return v + "%";
                        }
                    },
                    xaxis: {
                        show: false
                    },
                    colors: ["#e14e3d"],
                    grid: {
                        tickColor: "#a8a3a3",
                        borderWidth: 0
                    }
                });

                function statisticsUpdate() {
                    plot_statistics.setData([getRandomData()]);
                    plot_statistics.draw();
                    setTimeout(statisticsUpdate, updateInterval);

                }

                statisticsUpdate();

                $('#load_statistics').bind("mouseleave", function () {
                    $("#tooltip").remove();
                });
            }

            if ($('#site_activities').size() != 0) {
                //site activities
                var previousPoint2 = null;
                $('#site_activities_loading').hide();
                $('#site_activities_content').show();

                var activities = [
                    [1, 10],
                    [2, 9],
                    [3, 8],
                    [4, 6],
                    [5, 5],
                    [6, 3],
                    [7, 9],
                    [8, 10],
                    [9, 12],
                    [10, 14],
                    [11, 15],
                    [12, 13],
                    [13, 11],
                    [14, 10],
                    [15, 9],
                    [16, 8],
                    [17, 12],
                    [18, 14],
                    [19, 16],
                    [20, 19],
                    [21, 20],
                    [22, 20],
                    [23, 19],
                    [24, 17],
                    [25, 15],
                    [25, 14],
                    [26, 12],
                    [27, 10],
                    [28, 8],
                    [29, 10],
                    [30, 12],
                    [31, 10],
                    [32, 9],
                    [33, 8],
                    [34, 6],
                    [35, 5],
                    [36, 3],
                    [37, 9],
                    [38, 10],
                    [39, 12],
                    [40, 14],
                    [41, 15],
                    [42, 13],
                    [43, 11],
                    [44, 10],
                    [45, 9],
                    [46, 8],
                    [47, 12],
                    [48, 14],
                    [49, 16],
                    [50, 12],
                    [51, 10]
                ];

                var plot_activities = $.plot(
                    $("#site_activities"), [
                        {
                            data: activities,
                            color: "rgba(107,207,123, 0.9)",
                            shadowSize: 0,
                            bars: {
                                show: true,
                                lineWidth: 0,
                                fill: true,
                                fillColor: {
                                    colors: [
                                        {
                                            opacity: 1
                                        },
                                        {
                                            opacity: 1
                                        }
                                    ]
                                }
                            }
                        }
                    ], {
                        series: {
                            bars: {
                                show: true,
                                barWidth: 0.9
                            }
                        },
                        grid: {
                            show: false,
                            hoverable: true,
                            clickable: false,
                            autoHighlight: true,
                            borderWidth: 0
                        },
                        yaxis: {
                            min: 0,
                            max: 20
                        }
                    });

                $("#site_activities").bind("plothover", function (event, pos, item) {
                    $("#x").text(pos.x.toFixed(2));
                    $("#y").text(pos.y.toFixed(2));
                    if (item) {
                        if (previousPoint2 != item.dataIndex) {
                            previousPoint2 = item.dataIndex;
                            $("#tooltip").remove();
                            var x = item.datapoint[0].toFixed(2),
                                y = item.datapoint[1].toFixed(2);
                            showTooltip('24 Feb 2013', item.pageX, item.pageY, x);
                        }
                    }
                });

                $('#site_activities').bind("mouseleave", function () {
                    $("#tooltip").remove();
                });
            }
        },

        initMiniCharts: function () {

            $('.easy-pie-chart .number.transactions').easyPieChart({
                animate: 1000,
                size: 75,
                lineWidth: 3,
                barColor: App.getLayoutColorCode('yellow')
            });

            $('.easy-pie-chart .number.visits').easyPieChart({
                animate: 1000,
                size: 75,
                lineWidth: 3,
                barColor: App.getLayoutColorCode('green')
            });

            $('.easy-pie-chart .number.bounce').easyPieChart({
                animate: 1000,
                size: 75,
                lineWidth: 3,
                barColor: App.getLayoutColorCode('red')
            });

            $('.easy-pie-chart-reload').click(function () {
                $('.easy-pie-chart .number').each(function () {
                    var newValue = Math.floor(100 * Math.random());
                    $(this).data('easyPieChart').update(newValue);
                    $('span', this).text(newValue);
                });
            });

            $("#sparkline_bar").sparkline([8, 9, 10, 11, 10, 10, 12, 10, 10, 11, 9, 12, 11, 10, 9, 11, 13, 13, 12], {
                    type: 'bar',
                    width: '100',
                    barWidth: 5,
                    height: '55',
                    barColor: '#35aa47',
                    negBarColor: '#e02222'}
            );

            $("#sparkline_bar2").sparkline([9, 11, 12, 13, 12, 13, 10, 14, 13, 11, 11, 12, 11, 11, 10, 12, 11, 10], {
                    type: 'bar',
                    width: '100',
                    barWidth: 5,
                    height: '55',
                    barColor: '#ffb848',
                    negBarColor: '#e02222'}
            );

            $("#sparkline_line").sparkline([9, 10, 9, 10, 10, 11, 12, 10, 10, 11, 11, 12, 11, 10, 12, 11, 10, 12], {
                type: 'line',
                width: '100',
                height: '55',
                lineColor: '#ffb848'
            });

        },

        initChat: function () {

            var cont = $('#chats');
            var list = $('.chats', cont);
            var form = $('.chat-form', cont);
            var input = $('input', form);
            var btn = $('.btn', form);

            var handleClick = function (e) {
                e.preventDefault();

                var text = input.val();
                if (text.length == 0) {
                    return;
                }

                var time = new Date();
                var time_str = time.toString('MMM dd, yyyy hh:mm');
                var tpl = '';
                tpl += '<li class="out">';
                tpl += '<img class="avatar" alt="" src="assets/img/avatar1.jpg"/>';
                tpl += '<div class="message">';
                tpl += '<span class="arrow"></span>';
                tpl += '<a href="#" class="name">Bob Nilson</a>&nbsp;';
                tpl += '<span class="datetime">at ' + time_str + '</span>';
                tpl += '<span class="body">';
                tpl += text;
                tpl += '</span>';
                tpl += '</div>';
                tpl += '</li>';

                var msg = list.append(tpl);
                input.val("");
                $('.scroller', cont).slimScroll({
                    scrollTo: list.height()
                });
            }

            /*
             $('.scroller', cont).slimScroll({
             scrollTo: list.height()
             });
             */

            $('body').on('click', '.message .name', function (e) {
                e.preventDefault(); // prevent click event

                var name = $(this).text(); // get clicked user's full name
                input.val('@' + name + ':'); // set it into the input field
                App.scrollTo(input); // scroll to input if needed
            });

            btn.click(handleClick);
            input.keypress(function (e) {
                if (e.which == 13) {
                    handleClick();
                    return false; //<---- Add this line
                }
            });
        },

        initDashboardDaterange: function () {

            $('#dashboard-report-range').daterangepicker({
                    opens: (App.isRTL() ? 'right' : 'left'),
                    startDate: moment().subtract('days', 29),
                    endDate: moment(),
                    minDate: '01/01/2012',
                    maxDate: '12/31/2014',
                    dateLimit: {
                        days: 60
                    },
                    showDropdowns: false,
                    showWeekNumbers: true,
                    timePicker: false,
                    timePickerIncrement: 1,
                    timePicker12Hour: true,
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
                        'Last 7 Days': [moment().subtract('days', 6), moment()],
                        'Last 30 Days': [moment().subtract('days', 29), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                    },
                    buttonClasses: ['btn'],
                    applyClass: 'blue',
                    cancelClass: 'default',
                    format: 'MM/DD/YYYY',
                    separator: ' to ',
                    locale: {
                        applyLabel: 'Apply',
                        fromLabel: 'From',
                        toLabel: 'To',
                        customRangeLabel: 'Custom Range',
                        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                        firstDay: 1
                    }
                },
                function (start, end) {
                    console.log("Callback has been called!");
                    $('#dashboard-report-range span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                }
            );


            $('#dashboard-report-range span').html(moment().subtract('days', 29).format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));
            $('#dashboard-report-range').show();
        },

        initIntro: function () {
            if ($.cookie('intro_show')) {
                return;
            }

            $.cookie('intro_show', 1);

            setTimeout(function () {
                var unique_id = $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: 'Meet Metronic!',
                    // (string | mandatory) the text inside the notification
                    text: 'Metronic is a brand new Responsive Admin Dashboard Template you have always been looking for!',
                    // (string | optional) the image to display on the left
                    image: './assets/img/avatar1.jpg',
                    // (bool | optional) if you want it to fade out on its own or just sit there
                    sticky: true,
                    // (int | optional) the time you want it to be alive for before fading out
                    time: '',
                    // (string | optional) the class name you want to apply to that specific message
                    class_name: 'my-sticky-class'
                });

                // You can have it return a unique id, this can be used to manually remove it later using
                setTimeout(function () {
                    $.gritter.remove(unique_id, {
                        fade: true,
                        speed: 'slow'
                    });
                }, 12000);
            }, 2000);

            setTimeout(function () {
                var unique_id = $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: 'Buy Metronic!',
                    // (string | mandatory) the text inside the notification
                    text: 'Metronic comes with a huge collection of reusable and easy customizable UI components and plugins. Buy Metronic today!',
                    // (string | optional) the image to display on the left
                    image: './assets/img/avatar1.jpg',
                    // (bool | optional) if you want it to fade out on its own or just sit there
                    sticky: true,
                    // (int | optional) the time you want it to be alive for before fading out
                    time: '',
                    // (string | optional) the class name you want to apply to that specific message
                    class_name: 'my-sticky-class'
                });

                // You can have it return a unique id, this can be used to manually remove it later using
                setTimeout(function () {
                    $.gritter.remove(unique_id, {
                        fade: true,
                        speed: 'slow'
                    });
                }, 13000);
            }, 8000);

            setTimeout(function () {

                $('#styler').pulsate({
                    color: "#bb3319",
                    repeat: 10
                });

                $.extend($.gritter.options, {
                    position: 'top-left'
                });

                var unique_id = $.gritter.add({
                    position: 'top-left',
                    // (string | mandatory) the heading of the notification
                    title: 'Customize Metronic!',
                    // (string | mandatory) the text inside the notification
                    text: 'Metronic allows you to easily customize the theme colors and layout settings.',
                    // (string | optional) the image to display on the left
                    image1: './assets/img/avatar1.png',
                    // (bool | optional) if you want it to fade out on its own or just sit there
                    sticky: true,
                    // (int | optional) the time you want it to be alive for before fading out
                    time: '',
                    // (string | optional) the class name you want to apply to that specific message
                    class_name: 'my-sticky-class'
                });

                $.extend($.gritter.options, {
                    position: 'top-right'
                });

                // You can have it return a unique id, this can be used to manually remove it later using
                setTimeout(function () {
                    $.gritter.remove(unique_id, {
                        fade: true,
                        speed: 'slow'
                    });
                }, 15000);

            }, 23000);

            setTimeout(function () {

                $.extend($.gritter.options, {
                    position: 'top-left'
                });

                var unique_id = $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: 'Notification',
                    // (string | mandatory) the text inside the notification
                    text: 'You have 3 new notifications.',
                    // (string | optional) the image to display on the left
                    image1: './assets/img/image1.jpg',
                    // (bool | optional) if you want it to fade out on its own or just sit there
                    sticky: true,
                    // (int | optional) the time you want it to be alive for before fading out
                    time: '',
                    // (string | optional) the class name you want to apply to that specific message
                    class_name: 'my-sticky-class'
                });

                setTimeout(function () {
                    $.gritter.remove(unique_id, {
                        fade: true,
                        speed: 'slow'
                    });
                }, 4000);

                $.extend($.gritter.options, {
                    position: 'top-right'
                });

                var number = $('#header_notification_bar .badge').text();
                number = parseInt(number);
                number = number + 3;
                $('#header_notification_bar .badge').text(number);
                $('#header_notification_bar').pulsate({
                    color: "#66bce6",
                    repeat: 5
                });

            }, 40000);

            setTimeout(function () {

                $.extend($.gritter.options, {
                    position: 'top-left'
                });

                var unique_id = $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: 'Inbox',
                    // (string | mandatory) the text inside the notification
                    text: 'You have 2 new messages in your inbox.',
                    // (string | optional) the image to display on the left
                    image1: './assets/img/avatar1.jpg',
                    // (bool | optional) if you want it to fade out on its own or just sit there
                    sticky: true,
                    // (int | optional) the time you want it to be alive for before fading out
                    time: '',
                    // (string | optional) the class name you want to apply to that specific message
                    class_name: 'my-sticky-class'
                });

                $.extend($.gritter.options, {
                    position: 'top-right'
                });

                setTimeout(function () {
                    $.gritter.remove(unique_id, {
                        fade: true,
                        speed: 'slow'
                    });
                }, 4000);

                var number = $('#header_inbox_bar .badge').text();
                number = parseInt(number);
                number = number + 2;
                $('#header_inbox_bar .badge').text(number);
                $('#header_inbox_bar').pulsate({
                    color: "#dd5131",
                    repeat: 5
                });

            }, 60000);
        }

    };

}();
var Tasks = function () {


    return {

        //main function to initiate the module
        initDashboardWidget: function () {
            $('input.liChild').change(function () {
                if ($(this).is(':checked')) {
                    $(this).parents('li').addClass("task-done");
                } else {
                    $(this).parents('li').removeClass("task-done");
                }
            });
        }

    };

}();
/*!
 * jQuery Validation Plugin 1.11.1
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright 2013 Jörn Zaefferer
 * Modified by KeenThemes(refer line #665)
 * Released under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 */
(function (a) {
    a.extend(a.fn, {validate: function (b) {
        if (!this.length) {
            if (b && b.debug && window.console) {
                console.warn("Nothing selected, can't validate, returning nothing.")
            }
            return
        }
        var c = a.data(this[0], "validator");
        if (c) {
            return c
        }
        this.attr("novalidate", "novalidate");
        c = new a.validator(b, this[0]);
        a.data(this[0], "validator", c);
        if (c.settings.onsubmit) {
            this.validateDelegate(":submit", "click", function (d) {
                if (c.settings.submitHandler) {
                    c.submitButton = d.target
                }
                if (a(d.target).hasClass("cancel")) {
                    c.cancelSubmit = true
                }
                if (a(d.target).attr("formnovalidate") !== undefined) {
                    c.cancelSubmit = true
                }
            });
            this.submit(function (d) {
                if (c.settings.debug) {
                    d.preventDefault()
                }
                function e() {
                    var f;
                    if (c.settings.submitHandler) {
                        if (c.submitButton) {
                            f = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)
                        }
                        c.settings.submitHandler.call(c, c.currentForm, d);
                        if (c.submitButton) {
                            f.remove()
                        }
                        return false
                    }
                    return true
                }

                if (c.cancelSubmit) {
                    c.cancelSubmit = false;
                    return e()
                }
                if (c.form()) {
                    if (c.pendingRequest) {
                        c.formSubmitted = true;
                        return false
                    }
                    return e()
                } else {
                    c.focusInvalid();
                    return false
                }
            })
        }
        return c
    }, valid: function () {
        if (a(this[0]).is("form")) {
            return this.validate().form()
        } else {
            var c = true;
            var b = a(this[0].form).validate();
            this.each(function () {
                c = c && b.element(this)
            });
            return c
        }
    }, removeAttrs: function (d) {
        var b = {}, c = this;
        a.each(d.split(/\s/), function (e, f) {
            b[f] = c.attr(f);
            c.removeAttr(f)
        });
        return b
    }, rules: function (e, b) {
        var g = this[0];
        if (e) {
            var d = a.data(g.form, "validator").settings;
            var i = d.rules;
            var j = a.validator.staticRules(g);
            switch (e) {
                case"add":
                    a.extend(j, a.validator.normalizeRule(b));
                    delete j.messages;
                    i[g.name] = j;
                    if (b.messages) {
                        d.messages[g.name] = a.extend(d.messages[g.name], b.messages)
                    }
                    break;
                case"remove":
                    if (!b) {
                        delete i[g.name];
                        return j
                    }
                    var h = {};
                    a.each(b.split(/\s/), function (k, l) {
                        h[l] = j[l];
                        delete j[l]
                    });
                    return h
            }
        }
        var f = a.validator.normalizeRules(a.extend({}, a.validator.classRules(g), a.validator.attributeRules(g), a.validator.dataRules(g), a.validator.staticRules(g)), g);
        if (f.required) {
            var c = f.required;
            delete f.required;
            f = a.extend({required: c}, f)
        }
        return f
    }});
    a.extend(a.expr[":"], {blank: function (b) {
        return !a.trim("" + a(b).val())
    }, filled: function (b) {
        return !!a.trim("" + a(b).val())
    }, unchecked: function (b) {
        return !a(b).prop("checked")
    }});
    a.validator = function (b, c) {
        this.settings = a.extend(true, {}, a.validator.defaults, b);
        this.currentForm = c;
        this.init()
    };
    a.validator.format = function (b, c) {
        if (arguments.length === 1) {
            return function () {
                var d = a.makeArray(arguments);
                d.unshift(b);
                return a.validator.format.apply(this, d)
            }
        }
        if (arguments.length > 2 && c.constructor !== Array) {
            c = a.makeArray(arguments).slice(1)
        }
        if (c.constructor !== Array) {
            c = [c]
        }
        a.each(c, function (d, e) {
            b = b.replace(new RegExp("\\{" + d + "\\}", "g"), function () {
                return e
            })
        });
        return b
    };
    a.extend(a.validator, {defaults: {messages: {}, groups: {}, rules: {}, errorClass: "error", validClass: "valid", errorElement: "label", focusInvalid: true, errorContainer: a([]), errorLabelContainer: a([]), onsubmit: true, ignore: ":hidden", ignoreTitle: false, onfocusin: function (b, c) {
        this.lastActive = b;
        if (this.settings.focusCleanup && !this.blockFocusCleanup) {
            if (this.settings.unhighlight) {
                this.settings.unhighlight.call(this, b, this.settings.errorClass, this.settings.validClass)
            }
            this.addWrapper(this.errorsFor(b)).hide()
        }
    }, onfocusout: function (b, c) {
        if (!this.checkable(b) && (b.name in this.submitted || !this.optional(b))) {
            this.element(b)
        }
    }, onkeyup: function (b, c) {
        if (c.which === 9 && this.elementValue(b) === "") {
            return
        } else {
            if (b.name in this.submitted || b === this.lastElement) {
                this.element(b)
            }
        }
    }, onclick: function (b, c) {
        if (b.name in this.submitted) {
            this.element(b)
        } else {
            if (b.parentNode.name in this.submitted) {
                this.element(b.parentNode)
            }
        }
    }, highlight: function (d, b, c) {
        if (d.type === "radio") {
            this.findByName(d.name).addClass(b).removeClass(c)
        } else {
            a(d).addClass(b).removeClass(c)
        }
    }, unhighlight: function (d, b, c) {
        if (d.type === "radio") {
            this.findByName(d.name).removeClass(b).addClass(c)
        } else {
            a(d).removeClass(b).addClass(c)
        }
    }}, setDefaults: function (b) {
        a.extend(a.validator.defaults, b)
    }, messages: {required: "This field is required.", remote: "Please fix this field.", email: "Please enter a valid email address.", url: "Please enter a valid URL.", date: "Please enter a valid date.", dateISO: "Please enter a valid date (ISO).", number: "Please enter a valid number.", digits: "Please enter only digits.", creditcard: "Please enter a valid credit card number.", equalTo: "Please enter the same value again.", maxlength: a.validator.format("Please enter no more than {0} characters."), minlength: a.validator.format("Please enter at least {0} characters."), rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."), range: a.validator.format("Please enter a value between {0} and {1}."), max: a.validator.format("Please enter a value less than or equal to {0}."), min: a.validator.format("Please enter a value greater than or equal to {0}.")}, autoCreateRanges: false, prototype: {init: function () {
        this.labelContainer = a(this.settings.errorLabelContainer);
        this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm);
        this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer);
        this.submitted = {};
        this.valueCache = {};
        this.pendingRequest = 0;
        this.pending = {};
        this.invalid = {};
        this.reset();
        var b = (this.groups = {});
        a.each(this.settings.groups, function (e, f) {
            if (typeof f === "string") {
                f = f.split(/\s/)
            }
            a.each(f, function (h, g) {
                b[g] = e
            })
        });
        var d = this.settings.rules;
        a.each(d, function (e, f) {
            d[e] = a.validator.normalizeRule(f)
        });
        function c(g) {
            var f = a.data(this[0].form, "validator"), e = "on" + g.type.replace(/^validate/, "");
            if (f.settings[e]) {
                f.settings[e].call(f, this[0], g)
            }
        }

        a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", c).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", c);
        if (this.settings.invalidHandler) {
            a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
        }
    }, form: function () {
        this.checkForm();
        a.extend(this.submitted, this.errorMap);
        this.invalid = a.extend({}, this.errorMap);
        if (!this.valid()) {
            a(this.currentForm).triggerHandler("invalid-form", [this])
        }
        this.showErrors();
        return this.valid()
    }, checkForm: function () {
        this.prepareForm();
        for (var b = 0, c = (this.currentElements = this.elements()); c[b]; b++) {
            this.check(c[b])
        }
        return this.valid()
    }, element: function (c) {
        c = this.validationTargetFor(this.clean(c));
        this.lastElement = c;
        this.prepareElement(c);
        this.currentElements = a(c);
        var b = this.check(c) !== false;
        if (b) {
            delete this.invalid[c.name]
        } else {
            this.invalid[c.name] = true
        }
        if (!this.numberOfInvalids()) {
            this.toHide = this.toHide.add(this.containers)
        }
        this.showErrors();
        return b
    }, showErrors: function (c) {
        if (c) {
            a.extend(this.errorMap, c);
            this.errorList = [];
            for (var b in c) {
                this.errorList.push({message: c[b], element: this.findByName(b)[0]})
            }
            this.successList = a.grep(this.successList, function (d) {
                return !(d.name in c)
            })
        }
        if (this.settings.showErrors) {
            this.settings.showErrors.call(this, this.errorMap, this.errorList)
        } else {
            this.defaultShowErrors()
        }
    }, resetForm: function () {
        if (a.fn.resetForm) {
            a(this.currentForm).resetForm()
        }
        this.submitted = {};
        this.lastElement = null;
        this.prepareForm();
        this.hideErrors();
        this.elements().removeClass(this.settings.errorClass).removeData("previousValue")
    }, numberOfInvalids: function () {
        return this.objectLength(this.invalid)
    }, objectLength: function (d) {
        var c = 0;
        for (var b in d) {
            c++
        }
        return c
    }, hideErrors: function () {
        this.addWrapper(this.toHide).hide()
    }, valid: function () {
        return this.size() === 0
    }, size: function () {
        return this.errorList.length
    }, focusInvalid: function () {
        if (this.settings.focusInvalid) {
            try {
                a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
            } catch (b) {
            }
        }
    }, findLastActive: function () {
        var b = this.lastActive;
        return b && a.grep(this.errorList,function (c) {
            return c.element.name === b.name
        }).length === 1 && b
    }, elements: function () {
        var c = this, b = {};
        return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function () {
            if (!this.name && c.settings.debug && window.console) {
                console.error("%o has no name assigned", this)
            }
            if (this.name in b || !c.objectLength(a(this).rules())) {
                return false
            }
            b[this.name] = true;
            return true
        })
    }, clean: function (b) {
        return a(b)[0]
    }, errors: function () {
        var b = this.settings.errorClass.replace(" ", ".");
        return a(this.settings.errorElement + "." + b, this.errorContext)
    }, reset: function () {
        this.successList = [];
        this.errorList = [];
        this.errorMap = {};
        this.toShow = a([]);
        this.toHide = a([]);
        this.currentElements = a([])
    }, prepareForm: function () {
        this.reset();
        this.toHide = this.errors().add(this.containers)
    }, prepareElement: function (b) {
        this.reset();
        this.toHide = this.errorsFor(b)
    }, elementValue: function (b) {
        var c = a(b).attr("type"), d = a(b).val();
        if (c === "radio" || c === "checkbox") {
            return a("input[name='" + a(b).attr("name") + "']:checked").val()
        }
        if (typeof d === "string") {
            return d.replace(/\r/g, "")
        }
        return d
    }, check: function (c) {
        c = this.validationTargetFor(this.clean(c));
        var i = a(c).rules();
        var d = false;
        var h = this.elementValue(c);
        var b;
        for (var j in i) {
            var g = {method: j, parameters: i[j]};
            try {
                b = a.validator.methods[j].call(this, h, c, g.parameters);
                if (b === "dependency-mismatch") {
                    d = true;
                    continue
                }
                d = false;
                if (b === "pending") {
                    this.toHide = this.toHide.not(this.errorsFor(c));
                    return
                }
                if (!b) {
                    this.formatAndAdd(c, g);
                    return false
                }
            } catch (f) {
                if (this.settings.debug && window.console) {
                    console.log("Exception occurred when checking element " + c.id + ", check the '" + g.method + "' method.", f)
                }
                throw f
            }
        }
        if (d) {
            return
        }
        if (this.objectLength(i)) {
            this.successList.push(c)
        }
        return true
    }, customDataMessage: function (b, c) {
        return a(b).data("msg-" + c.toLowerCase()) || (b.attributes && a(b).attr("data-msg-" + c.toLowerCase()))
    }, customMessage: function (c, d) {
        var b = this.settings.messages[c];
        return b && (b.constructor === String ? b : b[d])
    }, findDefined: function () {
        for (var b = 0; b < arguments.length; b++) {
            if (arguments[b] !== undefined) {
                return arguments[b]
            }
        }
        return undefined
    }, defaultMessage: function (b, c) {
        return this.findDefined(this.customMessage(b.name, c), this.customDataMessage(b, c), !this.settings.ignoreTitle && b.title || undefined, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>")
    }, formatAndAdd: function (c, e) {
        var d = this.defaultMessage(c, e.method), b = /\$?\{(\d+)\}/g;
        if (typeof d === "function") {
            d = d.call(this, e.parameters, c)
        } else {
            if (b.test(d)) {
                d = a.validator.format(d.replace(b, "{$1}"), e.parameters)
            }
        }
        this.errorList.push({message: d, element: c});
        this.errorMap[c.name] = d;
        this.submitted[c.name] = d
    }, addWrapper: function (b) {
        if (this.settings.wrapper) {
            b = b.add(b.parent(this.settings.wrapper))
        }
        return b
    }, defaultShowErrors: function () {
        var c, d;
        for (c = 0; this.errorList[c]; c++) {
            var b = this.errorList[c];
            if (this.settings.highlight) {
                this.settings.highlight.call(this, b.element, this.settings.errorClass, this.settings.validClass)
            }
            this.showLabel(b.element, b.message)
        }
        if (this.errorList.length) {
            this.toShow = this.toShow.add(this.containers)
        }
        if (this.settings.success) {
            for (c = 0; this.successList[c]; c++) {
                this.showLabel(this.successList[c])
            }
        }
        if (this.settings.unhighlight) {
            for (c = 0, d = this.validElements(); d[c]; c++) {
                this.settings.unhighlight.call(this, d[c], this.settings.errorClass, this.settings.validClass)
            }
        }
        this.toHide = this.toHide.not(this.toShow);
        if (this.settings.doNotHideMessage == true) {
        } else {
            this.hideErrors()
        }
        this.addWrapper(this.toShow).show()
    }, validElements: function () {
        return this.currentElements.not(this.invalidElements())
    }, invalidElements: function () {
        return a(this.errorList).map(function () {
            return this.element
        })
    }, showLabel: function (c, d) {
        var b = this.errorsFor(c);
        if (b.length) {
            b.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
            b.html(d)
        } else {
            b = a("<" + this.settings.errorElement + ">").attr("for", this.idOrName(c)).addClass(this.settings.errorClass).html(d || "");
            if (this.settings.wrapper) {
                b = b.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()
            }
            if (!this.labelContainer.append(b).length) {
                if (this.settings.errorPlacement) {
                    this.settings.errorPlacement(b, a(c))
                } else {
                    b.insertAfter(c)
                }
            }
        }
        if (!d && this.settings.success) {
            b.text("");
            if (typeof this.settings.success === "string") {
                b.addClass(this.settings.success)
            } else {
                this.settings.success(b, c)
            }
        }
        this.toShow = this.toShow.add(b)
    }, errorsFor: function (c) {
        var b = this.idOrName(c);
        return this.errors().filter(function () {
            return a(this).attr("for") === b
        })
    }, idOrName: function (b) {
        return this.groups[b.name] || (this.checkable(b) ? b.name : b.id || b.name)
    }, validationTargetFor: function (b) {
        if (this.checkable(b)) {
            b = this.findByName(b.name).not(this.settings.ignore)[0]
        }
        return b
    }, checkable: function (b) {
        return(/radio|checkbox/i).test(b.type)
    }, findByName: function (b) {
        return a(this.currentForm).find("[name='" + b + "']")
    }, getLength: function (c, b) {
        switch (b.nodeName.toLowerCase()) {
            case"select":
                return a("option:selected", b).length;
            case"input":
                if (this.checkable(b)) {
                    return this.findByName(b.name).filter(":checked").length
                }
        }
        return c.length
    }, depend: function (c, b) {
        return this.dependTypes[typeof c] ? this.dependTypes[typeof c](c, b) : true
    }, dependTypes: {"boolean": function (c, b) {
        return c
    }, string: function (c, b) {
        return !!a(c, b.form).length
    }, "function": function (c, b) {
        return c(b)
    }}, optional: function (b) {
        var c = this.elementValue(b);
        return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch"
    }, startRequest: function (b) {
        if (!this.pending[b.name]) {
            this.pendingRequest++;
            this.pending[b.name] = true
        }
    }, stopRequest: function (b, c) {
        this.pendingRequest--;
        if (this.pendingRequest < 0) {
            this.pendingRequest = 0
        }
        delete this.pending[b.name];
        if (c && this.pendingRequest === 0 && this.formSubmitted && this.form()) {
            a(this.currentForm).submit();
            this.formSubmitted = false
        } else {
            if (!c && this.pendingRequest === 0 && this.formSubmitted) {
                a(this.currentForm).triggerHandler("invalid-form", [this]);
                this.formSubmitted = false
            }
        }
    }, previousValue: function (b) {
        return a.data(b, "previousValue") || a.data(b, "previousValue", {old: null, valid: true, message: this.defaultMessage(b, "remote")})
    }}, classRuleSettings: {required: {required: true}, email: {email: true}, url: {url: true}, date: {date: true}, dateISO: {dateISO: true}, number: {number: true}, digits: {digits: true}, creditcard: {creditcard: true}}, addClassRules: function (b, c) {
        if (b.constructor === String) {
            this.classRuleSettings[b] = c
        } else {
            a.extend(this.classRuleSettings, b)
        }
    }, classRules: function (c) {
        var d = {};
        var b = a(c).attr("class");
        if (b) {
            a.each(b.split(" "), function () {
                if (this in a.validator.classRuleSettings) {
                    a.extend(d, a.validator.classRuleSettings[this])
                }
            })
        }
        return d
    }, attributeRules: function (c) {
        var f = {};
        var b = a(c);
        var d = b[0].getAttribute("type");
        for (var g in a.validator.methods) {
            var e;
            if (g === "required") {
                e = b.get(0).getAttribute(g);
                if (e === "") {
                    e = true
                }
                e = !!e
            } else {
                e = b.attr(g)
            }
            if (/min|max/.test(g) && (d === null || /number|range|text/.test(d))) {
                e = Number(e)
            }
            if (e) {
                f[g] = e
            } else {
                if (d === g && d !== "range") {
                    f[g] = true
                }
            }
        }
        if (f.maxlength && /-1|2147483647|524288/.test(f.maxlength)) {
            delete f.maxlength
        }
        return f
    }, dataRules: function (c) {
        var f, d, e = {}, b = a(c);
        for (f in a.validator.methods) {
            d = b.data("rule-" + f.toLowerCase());
            if (d !== undefined) {
                e[f] = d
            }
        }
        return e
    }, staticRules: function (c) {
        var d = {};
        var b = a.data(c.form, "validator");
        if (b.settings.rules) {
            d = a.validator.normalizeRule(b.settings.rules[c.name]) || {}
        }
        return d
    }, normalizeRules: function (c, b) {
        a.each(c, function (f, e) {
            if (e === false) {
                delete c[f];
                return
            }
            if (e.param || e.depends) {
                var d = true;
                switch (typeof e.depends) {
                    case"string":
                        d = !!a(e.depends, b.form).length;
                        break;
                    case"function":
                        d = e.depends.call(b, b);
                        break
                }
                if (d) {
                    c[f] = e.param !== undefined ? e.param : true
                } else {
                    delete c[f]
                }
            }
        });
        a.each(c, function (d, e) {
            c[d] = a.isFunction(e) ? e(b) : e
        });
        a.each(["minlength", "maxlength"], function () {
            if (c[this]) {
                c[this] = Number(c[this])
            }
        });
        a.each(["rangelength", "range"], function () {
            var d;
            if (c[this]) {
                if (a.isArray(c[this])) {
                    c[this] = [Number(c[this][0]), Number(c[this][1])]
                } else {
                    if (typeof c[this] === "string") {
                        d = c[this].split(/[\s,]+/);
                        c[this] = [Number(d[0]), Number(d[1])]
                    }
                }
            }
        });
        if (a.validator.autoCreateRanges) {
            if (c.min && c.max) {
                c.range = [c.min, c.max];
                delete c.min;
                delete c.max
            }
            if (c.minlength && c.maxlength) {
                c.rangelength = [c.minlength, c.maxlength];
                delete c.minlength;
                delete c.maxlength
            }
        }
        return c
    }, normalizeRule: function (c) {
        if (typeof c === "string") {
            var b = {};
            a.each(c.split(/\s/), function () {
                b[this] = true
            });
            c = b
        }
        return c
    }, addMethod: function (b, d, c) {
        a.validator.methods[b] = d;
        a.validator.messages[b] = c !== undefined ? c : a.validator.messages[b];
        if (d.length < 3) {
            a.validator.addClassRules(b, a.validator.normalizeRule(b))
        }
    }, methods: {required: function (c, b, e) {
        if (!this.depend(e, b)) {
            return"dependency-mismatch"
        }
        if (b.nodeName.toLowerCase() === "select") {
            var d = a(b).val();
            return d && d.length > 0
        }
        if (this.checkable(b)) {
            return this.getLength(c, b) > 0
        }
        return a.trim(c).length > 0
    }, email: function (c, b) {
        return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(c)
    }, url: function (c, b) {
        return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(c)
    }, date: function (c, b) {
        return this.optional(b) || !/Invalid|NaN/.test(new Date(c).toString())
    }, dateISO: function (c, b) {
        return this.optional(b) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(c)
    }, number: function (c, b) {
        return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(c)
    }, digits: function (c, b) {
        return this.optional(b) || /^\d+$/.test(c)
    }, creditcard: function (f, c) {
        if (this.optional(c)) {
            return"dependency-mismatch"
        }
        if (/[^0-9 \-]+/.test(f)) {
            return false
        }
        var g = 0, e = 0, b = false;
        f = f.replace(/\D/g, "");
        for (var h = f.length - 1; h >= 0; h--) {
            var d = f.charAt(h);
            e = parseInt(d, 10);
            if (b) {
                if ((e *= 2) > 9) {
                    e -= 9
                }
            }
            g += e;
            b = !b
        }
        return(g % 10) === 0
    }, minlength: function (d, b, e) {
        var c = a.isArray(d) ? d.length : this.getLength(a.trim(d), b);
        return this.optional(b) || c >= e
    }, maxlength: function (d, b, e) {
        var c = a.isArray(d) ? d.length : this.getLength(a.trim(d), b);
        return this.optional(b) || c <= e
    }, rangelength: function (d, b, e) {
        var c = a.isArray(d) ? d.length : this.getLength(a.trim(d), b);
        return this.optional(b) || (c >= e[0] && c <= e[1])
    }, min: function (c, b, d) {
        return this.optional(b) || c >= d
    }, max: function (c, b, d) {
        return this.optional(b) || c <= d
    }, range: function (c, b, d) {
        return this.optional(b) || (c >= d[0] && c <= d[1])
    }, equalTo: function (c, b, e) {
        var d = a(e);
        if (this.settings.onfocusout) {
            d.unbind(".validate-equalTo").bind("blur.validate-equalTo", function () {
                a(b).valid()
            })
        }
        return c === d.val()
    }, remote: function (f, c, g) {
        if (this.optional(c)) {
            return"dependency-mismatch"
        }
        var d = this.previousValue(c);
        if (!this.settings.messages[c.name]) {
            this.settings.messages[c.name] = {}
        }
        d.originalMessage = this.settings.messages[c.name].remote;
        this.settings.messages[c.name].remote = d.message;
        g = typeof g === "string" && {url: g} || g;
        if (d.old === f) {
            return d.valid
        }
        d.old = f;
        var b = this;
        this.startRequest(c);
        var e = {};
        e[c.name] = f;
        a.ajax(a.extend(true, {url: g, mode: "abort", port: "validate" + c.name, dataType: "json", data: e, success: function (i) {
            b.settings.messages[c.name].remote = d.originalMessage;
            var k = i === true || i === "true";
            if (k) {
                var h = b.formSubmitted;
                b.prepareElement(c);
                b.formSubmitted = h;
                b.successList.push(c);
                delete b.invalid[c.name];
                b.showErrors()
            } else {
                var l = {};
                var j = i || b.defaultMessage(c, "remote");
                l[c.name] = d.message = a.isFunction(j) ? j(f) : j;
                b.invalid[c.name] = true;
                b.showErrors(l)
            }
            d.valid = k;
            b.stopRequest(c, k)
        }}, g));
        return"pending"
    }}});
    a.format = a.validator.format
}(jQuery));
(function (c) {
    var a = {};
    if (c.ajaxPrefilter) {
        c.ajaxPrefilter(function (f, e, g) {
            var d = f.port;
            if (f.mode === "abort") {
                if (a[d]) {
                    a[d].abort()
                }
                a[d] = g
            }
        })
    } else {
        var b = c.ajax;
        c.ajax = function (e) {
            var f = ("mode" in e ? e : c.ajaxSettings).mode, d = ("port" in e ? e : c.ajaxSettings).port;
            if (f === "abort") {
                if (a[d]) {
                    a[d].abort()
                }
                a[d] = b.apply(this, arguments);
                return a[d]
            }
            return b.apply(this, arguments)
        }
    }
}(jQuery));
(function (a) {
    a.extend(a.fn, {validateDelegate: function (d, c, b) {
        return this.bind(c, function (e) {
            var f = a(e.target);
            if (f.is(d)) {
                return b.apply(f, arguments)
            }
        })
    }})
}(jQuery));
/*
 Copyright 2012 Igor Vaynberg
 Modifed by keenthemes for Metronic theme integration.

 Version: 3.4.3 Timestamp: Tue Sep 17 06:47:14 PDT 2013

 This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
 General Public License version 2 (the "GPL License"). You may choose either license to govern your
 use of this software only upon the condition that you accept all of the terms of either the Apache
 License or the GPL License.

 You may obtain a copy of the Apache License and the GPL License at:

 http://www.apache.org/licenses/LICENSE-2.0
 http://www.gnu.org/licenses/gpl-2.0.html

 Unless required by applicable law or agreed to in writing, software distributed under the Apache License
 or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the Apache License and the GPL License for the specific language governing
 permissions and limitations under the Apache License and the GPL License.
 */
!function (e) {
    "undefined" == typeof e.fn.each2 && e.extend(e.fn, {each2: function (t) {
        for (var i = e([0]), n = -1, a = this.length; ++n < a && (i.context = i[0] = this[n]) && t.call(i[0], n, i) !== !1;);
        return this
    }})
}(jQuery), function (e, t) {
    "use strict";
    function i(e) {
        var t, i, n, a;
        if (!e || e.length < 1)return e;
        for (t = "", i = 0, n = e.length; n > i; i++)a = e.charAt(i), t += B[a] || a;
        return t
    }

    function n(e, t) {
        for (var i = 0, n = t.length; n > i; i += 1)if (r(e, t[i]))return i;
        return-1
    }

    function a() {
        var t = e(H);
        t.appendTo("body");
        var i = {width: t.width() - t[0].clientWidth, height: t.height() - t[0].clientHeight};
        return t.remove(), i
    }

    function r(e, i) {
        return e === i ? !0 : e === t || i === t ? !1 : null === e || null === i ? !1 : e.constructor === String ? e + "" == i + "" : i.constructor === String ? i + "" == e + "" : !1
    }

    function o(t, i) {
        var n, a, r;
        if (null === t || t.length < 1)return[];
        for (n = t.split(i), a = 0, r = n.length; r > a; a += 1)n[a] = e.trim(n[a]);
        return n
    }

    function s(e) {
        return e.outerWidth(!1) - e.width()
    }

    function l(i) {
        var n = "keyup-change-value";
        i.on("keydown", function () {
            e.data(i, n) === t && e.data(i, n, i.val())
        }), i.on("keyup", function () {
            var a = e.data(i, n);
            a !== t && i.val() !== a && (e.removeData(i, n), i.trigger("keyup-change"))
        })
    }

    function d(i) {
        i.on("mousemove", function (i) {
            var n = O;
            (n === t || n.x !== i.pageX || n.y !== i.pageY) && e(i.target).trigger("mousemove-filtered", i)
        })
    }

    function h(e, i, n) {
        n = n || t;
        var a;
        return function () {
            var t = arguments;
            window.clearTimeout(a), a = window.setTimeout(function () {
                i.apply(n, t)
            }, e)
        }
    }

    function c(e) {
        var t, i = !1;
        return function () {
            return i === !1 && (t = e(), i = !0), t
        }
    }

    function u(e, t) {
        var i = h(e, function (e) {
            t.trigger("scroll-debounced", e)
        });
        t.on("scroll", function (e) {
            n(e.target, t.get()) >= 0 && i(e)
        })
    }

    function p(e) {
        e[0] !== document.activeElement && window.setTimeout(function () {
            var t, i = e[0], n = e.val().length;
            e.focus(), e.is(":visible") && i === document.activeElement && (i.setSelectionRange ? i.setSelectionRange(n, n) : i.createTextRange && (t = i.createTextRange(), t.collapse(!1), t.select()))
        }, 0)
    }

    function g(t) {
        t = e(t)[0];
        var i = 0, n = 0;
        if ("selectionStart"in t)i = t.selectionStart, n = t.selectionEnd - i; else if ("selection"in document) {
            t.focus();
            var a = document.selection.createRange();
            n = document.selection.createRange().text.length, a.moveStart("character", -t.value.length), i = a.text.length - n
        }
        return{offset: i, length: n}
    }

    function f(e) {
        e.preventDefault(), e.stopPropagation()
    }

    function m(e) {
        e.preventDefault(), e.stopImmediatePropagation()
    }

    function v(t) {
        if (!j) {
            var i = t[0].currentStyle || window.getComputedStyle(t[0], null);
            j = e(document.createElement("div")).css({position: "absolute", left: "-10000px", top: "-10000px", display: "none", fontSize: i.fontSize, fontFamily: i.fontFamily, fontStyle: i.fontStyle, fontWeight: i.fontWeight, letterSpacing: i.letterSpacing, textTransform: i.textTransform, whiteSpace: "nowrap"}), j.attr("class", "select2-sizer"), e("body").append(j)
        }
        return j.text(t.val()), j.width()
    }

    function y(t, i, n) {
        var a, r, o = [];
        a = t.attr("class"), a && (a = "" + a, e(a.split(" ")).each2(function () {
            0 === this.indexOf("select2-") && o.push(this)
        })), a = i.attr("class"), a && (a = "" + a, e(a.split(" ")).each2(function () {
            0 !== this.indexOf("select2-") && (r = n(this), r && o.push(this))
        })), t.attr("class", o.join(" "))
    }

    function b(e, t, n, a) {
        var r = i(e.toUpperCase()).indexOf(i(t.toUpperCase())), o = t.length;
        return 0 > r ? (n.push(a(e)), void 0) : (n.push(a(e.substring(0, r))), n.push("<span class='select2-match'>"), n.push(a(e.substring(r, r + o))), n.push("</span>"), n.push(a(e.substring(r + o, e.length))), void 0)
    }

    function x(e) {
        var t = {"\\": "&#92;", "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#47;"};
        return String(e).replace(/[&<>"'\/\\]/g, function (e) {
            return t[e]
        })
    }

    function w(i) {
        var n, a = null, r = i.quietMillis || 100, o = i.url, s = this;
        return function (l) {
            window.clearTimeout(n), n = window.setTimeout(function () {
                var n = i.data, r = o, d = i.transport || e.fn.select2.ajaxDefaults.transport, h = {type: i.type || "GET", cache: i.cache || !1, jsonpCallback: i.jsonpCallback || t, dataType: i.dataType || "json"}, c = e.extend({}, e.fn.select2.ajaxDefaults.params, h);
                n = n ? n.call(s, l.term, l.page, l.context) : null, r = "function" == typeof r ? r.call(s, l.term, l.page, l.context) : r, a && a.abort(), i.params && (e.isFunction(i.params) ? e.extend(c, i.params.call(s)) : e.extend(c, i.params)), e.extend(c, {url: r, dataType: i.dataType, data: n, success: function (e) {
                    var t = i.results(e, l.page);
                    l.callback(t)
                }}), a = d.call(s, c)
            }, r)
        }
    }

    function C(t) {
        var i, n, a = t, r = function (e) {
            return"" + e.text
        };
        e.isArray(a) && (n = a, a = {results: n}), e.isFunction(a) === !1 && (n = a, a = function () {
            return n
        });
        var o = a();
        return o.text && (r = o.text, e.isFunction(r) || (i = o.text, r = function (e) {
            return e[i]
        })), function (t) {
            var i, n = t.term, o = {results: []};
            return"" === n ? (t.callback(a()), void 0) : (i = function (a, o) {
                var s, l;
                if (a = a[0], a.children) {
                    s = {};
                    for (l in a)a.hasOwnProperty(l) && (s[l] = a[l]);
                    s.children = [], e(a.children).each2(function (e, t) {
                        i(t, s.children)
                    }), (s.children.length || t.matcher(n, r(s), a)) && o.push(s)
                } else t.matcher(n, r(a), a) && o.push(a)
            }, e(a().results).each2(function (e, t) {
                i(t, o.results)
            }), t.callback(o), void 0)
        }
    }

    function _(i) {
        var n = e.isFunction(i);
        return function (a) {
            var r = a.term, o = {results: []};
            e(n ? i() : i).each(function () {
                var e = this.text !== t, i = e ? this.text : this;
                ("" === r || a.matcher(r, i)) && o.results.push(e ? this : {id: this, text: this})
            }), a.callback(o)
        }
    }

    function T(t, i) {
        if (e.isFunction(t))return!0;
        if (!t)return!1;
        throw new Error(i + " must be a function or a falsy value")
    }

    function k(t) {
        return e.isFunction(t) ? t() : t
    }

    function M(t) {
        var i = 0;
        return e.each(t, function (e, t) {
            t.children ? i += M(t.children) : i++
        }), i
    }

    function S(e, i, n, a) {
        var o, s, l, d, h, c = e, u = !1;
        if (!a.createSearchChoice || !a.tokenSeparators || a.tokenSeparators.length < 1)return t;
        for (; ;) {
            for (s = -1, l = 0, d = a.tokenSeparators.length; d > l && (h = a.tokenSeparators[l], s = e.indexOf(h), !(s >= 0)); l++);
            if (0 > s)break;
            if (o = e.substring(0, s), e = e.substring(s + h.length), o.length > 0 && (o = a.createSearchChoice.call(this, o, i), o !== t && null !== o && a.id(o) !== t && null !== a.id(o))) {
                for (u = !1, l = 0, d = i.length; d > l; l++)if (r(a.id(o), a.id(i[l]))) {
                    u = !0;
                    break
                }
                u || n(o)
            }
        }
        return c !== e ? e : void 0
    }

    function E(t, i) {
        var n = function () {
        };
        return n.prototype = new t, n.prototype.constructor = n, n.prototype.parent = t.prototype, n.prototype = e.extend(n.prototype, i), n
    }

    if (window.Select2 === t) {
        var A, I, R, N, D, j, P, L, O = {x: 0, y: 0}, A = {TAB: 9, ENTER: 13, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, SHIFT: 16, CTRL: 17, ALT: 18, PAGE_UP: 33, PAGE_DOWN: 34, HOME: 36, END: 35, BACKSPACE: 8, DELETE: 46, isArrow: function (e) {
            switch (e = e.which ? e.which : e) {
                case A.LEFT:
                case A.RIGHT:
                case A.UP:
                case A.DOWN:
                    return!0
            }
            return!1
        }, isControl: function (e) {
            var t = e.which;
            switch (t) {
                case A.SHIFT:
                case A.CTRL:
                case A.ALT:
                    return!0
            }
            return e.metaKey ? !0 : !1
        }, isFunctionKey: function (e) {
            return e = e.which ? e.which : e, e >= 112 && 123 >= e
        }}, H = "<div class='select2-measure-scrollbar'></div>", B = {"Ⓐ": "A", "Ａ": "A", "À": "A", "Á": "A", "Â": "A", "Ầ": "A", "Ấ": "A", "Ẫ": "A", "Ẩ": "A", "Ã": "A", "Ā": "A", "Ă": "A", "Ằ": "A", "Ắ": "A", "Ẵ": "A", "Ẳ": "A", "Ȧ": "A", "Ǡ": "A", "Ä": "A", "Ǟ": "A", "Ả": "A", "Å": "A", "Ǻ": "A", "Ǎ": "A", "Ȁ": "A", "Ȃ": "A", "Ạ": "A", "Ậ": "A", "Ặ": "A", "Ḁ": "A", "Ą": "A", "Ⱥ": "A", "Ɐ": "A", "Ꜳ": "AA", "Æ": "AE", "Ǽ": "AE", "Ǣ": "AE", "Ꜵ": "AO", "Ꜷ": "AU", "Ꜹ": "AV", "Ꜻ": "AV", "Ꜽ": "AY", "Ⓑ": "B", "Ｂ": "B", "Ḃ": "B", "Ḅ": "B", "Ḇ": "B", "Ƀ": "B", "Ƃ": "B", "Ɓ": "B", "Ⓒ": "C", "Ｃ": "C", "Ć": "C", "Ĉ": "C", "Ċ": "C", "Č": "C", "Ç": "C", "Ḉ": "C", "Ƈ": "C", "Ȼ": "C", "Ꜿ": "C", "Ⓓ": "D", "Ｄ": "D", "Ḋ": "D", "Ď": "D", "Ḍ": "D", "Ḑ": "D", "Ḓ": "D", "Ḏ": "D", "Đ": "D", "Ƌ": "D", "Ɗ": "D", "Ɖ": "D", "Ꝺ": "D", "Ǳ": "DZ", "Ǆ": "DZ", "ǲ": "Dz", "ǅ": "Dz", "Ⓔ": "E", "Ｅ": "E", "È": "E", "É": "E", "Ê": "E", "Ề": "E", "Ế": "E", "Ễ": "E", "Ể": "E", "Ẽ": "E", "Ē": "E", "Ḕ": "E", "Ḗ": "E", "Ĕ": "E", "Ė": "E", "Ë": "E", "Ẻ": "E", "Ě": "E", "Ȅ": "E", "Ȇ": "E", "Ẹ": "E", "Ệ": "E", "Ȩ": "E", "Ḝ": "E", "Ę": "E", "Ḙ": "E", "Ḛ": "E", "Ɛ": "E", "Ǝ": "E", "Ⓕ": "F", "Ｆ": "F", "Ḟ": "F", "Ƒ": "F", "Ꝼ": "F", "Ⓖ": "G", "Ｇ": "G", "Ǵ": "G", "Ĝ": "G", "Ḡ": "G", "Ğ": "G", "Ġ": "G", "Ǧ": "G", "Ģ": "G", "Ǥ": "G", "Ɠ": "G", "Ꞡ": "G", "Ᵹ": "G", "Ꝿ": "G", "Ⓗ": "H", "Ｈ": "H", "Ĥ": "H", "Ḣ": "H", "Ḧ": "H", "Ȟ": "H", "Ḥ": "H", "Ḩ": "H", "Ḫ": "H", "Ħ": "H", "Ⱨ": "H", "Ⱶ": "H", "Ɥ": "H", "Ⓘ": "I", "Ｉ": "I", "Ì": "I", "Í": "I", "Î": "I", "Ĩ": "I", "Ī": "I", "Ĭ": "I", "İ": "I", "Ï": "I", "Ḯ": "I", "Ỉ": "I", "Ǐ": "I", "Ȉ": "I", "Ȋ": "I", "Ị": "I", "Į": "I", "Ḭ": "I", "Ɨ": "I", "Ⓙ": "J", "Ｊ": "J", "Ĵ": "J", "Ɉ": "J", "Ⓚ": "K", "Ｋ": "K", "Ḱ": "K", "Ǩ": "K", "Ḳ": "K", "Ķ": "K", "Ḵ": "K", "Ƙ": "K", "Ⱪ": "K", "Ꝁ": "K", "Ꝃ": "K", "Ꝅ": "K", "Ꞣ": "K", "Ⓛ": "L", "Ｌ": "L", "Ŀ": "L", "Ĺ": "L", "Ľ": "L", "Ḷ": "L", "Ḹ": "L", "Ļ": "L", "Ḽ": "L", "Ḻ": "L", "Ł": "L", "Ƚ": "L", "Ɫ": "L", "Ⱡ": "L", "Ꝉ": "L", "Ꝇ": "L", "Ꞁ": "L", "Ǉ": "LJ", "ǈ": "Lj", "Ⓜ": "M", "Ｍ": "M", "Ḿ": "M", "Ṁ": "M", "Ṃ": "M", "Ɱ": "M", "Ɯ": "M", "Ⓝ": "N", "Ｎ": "N", "Ǹ": "N", "Ń": "N", "Ñ": "N", "Ṅ": "N", "Ň": "N", "Ṇ": "N", "Ņ": "N", "Ṋ": "N", "Ṉ": "N", "Ƞ": "N", "Ɲ": "N", "Ꞑ": "N", "Ꞥ": "N", "Ǌ": "NJ", "ǋ": "Nj", "Ⓞ": "O", "Ｏ": "O", "Ò": "O", "Ó": "O", "Ô": "O", "Ồ": "O", "Ố": "O", "Ỗ": "O", "Ổ": "O", "Õ": "O", "Ṍ": "O", "Ȭ": "O", "Ṏ": "O", "Ō": "O", "Ṑ": "O", "Ṓ": "O", "Ŏ": "O", "Ȯ": "O", "Ȱ": "O", "Ö": "O", "Ȫ": "O", "Ỏ": "O", "Ő": "O", "Ǒ": "O", "Ȍ": "O", "Ȏ": "O", "Ơ": "O", "Ờ": "O", "Ớ": "O", "Ỡ": "O", "Ở": "O", "Ợ": "O", "Ọ": "O", "Ộ": "O", "Ǫ": "O", "Ǭ": "O", "Ø": "O", "Ǿ": "O", "Ɔ": "O", "Ɵ": "O", "Ꝋ": "O", "Ꝍ": "O", "Ƣ": "OI", "Ꝏ": "OO", "Ȣ": "OU", "Ⓟ": "P", "Ｐ": "P", "Ṕ": "P", "Ṗ": "P", "Ƥ": "P", "Ᵽ": "P", "Ꝑ": "P", "Ꝓ": "P", "Ꝕ": "P", "Ⓠ": "Q", "Ｑ": "Q", "Ꝗ": "Q", "Ꝙ": "Q", "Ɋ": "Q", "Ⓡ": "R", "Ｒ": "R", "Ŕ": "R", "Ṙ": "R", "Ř": "R", "Ȑ": "R", "Ȓ": "R", "Ṛ": "R", "Ṝ": "R", "Ŗ": "R", "Ṟ": "R", "Ɍ": "R", "Ɽ": "R", "Ꝛ": "R", "Ꞧ": "R", "Ꞃ": "R", "Ⓢ": "S", "Ｓ": "S", "ẞ": "S", "Ś": "S", "Ṥ": "S", "Ŝ": "S", "Ṡ": "S", "Š": "S", "Ṧ": "S", "Ṣ": "S", "Ṩ": "S", "Ș": "S", "Ş": "S", "Ȿ": "S", "Ꞩ": "S", "Ꞅ": "S", "Ⓣ": "T", "Ｔ": "T", "Ṫ": "T", "Ť": "T", "Ṭ": "T", "Ț": "T", "Ţ": "T", "Ṱ": "T", "Ṯ": "T", "Ŧ": "T", "Ƭ": "T", "Ʈ": "T", "Ⱦ": "T", "Ꞇ": "T", "Ꜩ": "TZ", "Ⓤ": "U", "Ｕ": "U", "Ù": "U", "Ú": "U", "Û": "U", "Ũ": "U", "Ṹ": "U", "Ū": "U", "Ṻ": "U", "Ŭ": "U", "Ü": "U", "Ǜ": "U", "Ǘ": "U", "Ǖ": "U", "Ǚ": "U", "Ủ": "U", "Ů": "U", "Ű": "U", "Ǔ": "U", "Ȕ": "U", "Ȗ": "U", "Ư": "U", "Ừ": "U", "Ứ": "U", "Ữ": "U", "Ử": "U", "Ự": "U", "Ụ": "U", "Ṳ": "U", "Ų": "U", "Ṷ": "U", "Ṵ": "U", "Ʉ": "U", "Ⓥ": "V", "Ｖ": "V", "Ṽ": "V", "Ṿ": "V", "Ʋ": "V", "Ꝟ": "V", "Ʌ": "V", "Ꝡ": "VY", "Ⓦ": "W", "Ｗ": "W", "Ẁ": "W", "Ẃ": "W", "Ŵ": "W", "Ẇ": "W", "Ẅ": "W", "Ẉ": "W", "Ⱳ": "W", "Ⓧ": "X", "Ｘ": "X", "Ẋ": "X", "Ẍ": "X", "Ⓨ": "Y", "Ｙ": "Y", "Ỳ": "Y", "Ý": "Y", "Ŷ": "Y", "Ỹ": "Y", "Ȳ": "Y", "Ẏ": "Y", "Ÿ": "Y", "Ỷ": "Y", "Ỵ": "Y", "Ƴ": "Y", "Ɏ": "Y", "Ỿ": "Y", "Ⓩ": "Z", "Ｚ": "Z", "Ź": "Z", "Ẑ": "Z", "Ż": "Z", "Ž": "Z", "Ẓ": "Z", "Ẕ": "Z", "Ƶ": "Z", "Ȥ": "Z", "Ɀ": "Z", "Ⱬ": "Z", "Ꝣ": "Z", "ⓐ": "a", "ａ": "a", "ẚ": "a", "à": "a", "á": "a", "â": "a", "ầ": "a", "ấ": "a", "ẫ": "a", "ẩ": "a", "ã": "a", "ā": "a", "ă": "a", "ằ": "a", "ắ": "a", "ẵ": "a", "ẳ": "a", "ȧ": "a", "ǡ": "a", "ä": "a", "ǟ": "a", "ả": "a", "å": "a", "ǻ": "a", "ǎ": "a", "ȁ": "a", "ȃ": "a", "ạ": "a", "ậ": "a", "ặ": "a", "ḁ": "a", "ą": "a", "ⱥ": "a", "ɐ": "a", "ꜳ": "aa", "æ": "ae", "ǽ": "ae", "ǣ": "ae", "ꜵ": "ao", "ꜷ": "au", "ꜹ": "av", "ꜻ": "av", "ꜽ": "ay", "ⓑ": "b", "ｂ": "b", "ḃ": "b", "ḅ": "b", "ḇ": "b", "ƀ": "b", "ƃ": "b", "ɓ": "b", "ⓒ": "c", "ｃ": "c", "ć": "c", "ĉ": "c", "ċ": "c", "č": "c", "ç": "c", "ḉ": "c", "ƈ": "c", "ȼ": "c", "ꜿ": "c", "ↄ": "c", "ⓓ": "d", "ｄ": "d", "ḋ": "d", "ď": "d", "ḍ": "d", "ḑ": "d", "ḓ": "d", "ḏ": "d", "đ": "d", "ƌ": "d", "ɖ": "d", "ɗ": "d", "ꝺ": "d", "ǳ": "dz", "ǆ": "dz", "ⓔ": "e", "ｅ": "e", "è": "e", "é": "e", "ê": "e", "ề": "e", "ế": "e", "ễ": "e", "ể": "e", "ẽ": "e", "ē": "e", "ḕ": "e", "ḗ": "e", "ĕ": "e", "ė": "e", "ë": "e", "ẻ": "e", "ě": "e", "ȅ": "e", "ȇ": "e", "ẹ": "e", "ệ": "e", "ȩ": "e", "ḝ": "e", "ę": "e", "ḙ": "e", "ḛ": "e", "ɇ": "e", "ɛ": "e", "ǝ": "e", "ⓕ": "f", "ｆ": "f", "ḟ": "f", "ƒ": "f", "ꝼ": "f", "ⓖ": "g", "ｇ": "g", "ǵ": "g", "ĝ": "g", "ḡ": "g", "ğ": "g", "ġ": "g", "ǧ": "g", "ģ": "g", "ǥ": "g", "ɠ": "g", "ꞡ": "g", "ᵹ": "g", "ꝿ": "g", "ⓗ": "h", "ｈ": "h", "ĥ": "h", "ḣ": "h", "ḧ": "h", "ȟ": "h", "ḥ": "h", "ḩ": "h", "ḫ": "h", "ẖ": "h", "ħ": "h", "ⱨ": "h", "ⱶ": "h", "ɥ": "h", "ƕ": "hv", "ⓘ": "i", "ｉ": "i", "ì": "i", "í": "i", "î": "i", "ĩ": "i", "ī": "i", "ĭ": "i", "ï": "i", "ḯ": "i", "ỉ": "i", "ǐ": "i", "ȉ": "i", "ȋ": "i", "ị": "i", "į": "i", "ḭ": "i", "ɨ": "i", "ı": "i", "ⓙ": "j", "ｊ": "j", "ĵ": "j", "ǰ": "j", "ɉ": "j", "ⓚ": "k", "ｋ": "k", "ḱ": "k", "ǩ": "k", "ḳ": "k", "ķ": "k", "ḵ": "k", "ƙ": "k", "ⱪ": "k", "ꝁ": "k", "ꝃ": "k", "ꝅ": "k", "ꞣ": "k", "ⓛ": "l", "ｌ": "l", "ŀ": "l", "ĺ": "l", "ľ": "l", "ḷ": "l", "ḹ": "l", "ļ": "l", "ḽ": "l", "ḻ": "l", "ſ": "l", "ł": "l", "ƚ": "l", "ɫ": "l", "ⱡ": "l", "ꝉ": "l", "ꞁ": "l", "ꝇ": "l", "ǉ": "lj", "ⓜ": "m", "ｍ": "m", "ḿ": "m", "ṁ": "m", "ṃ": "m", "ɱ": "m", "ɯ": "m", "ⓝ": "n", "ｎ": "n", "ǹ": "n", "ń": "n", "ñ": "n", "ṅ": "n", "ň": "n", "ṇ": "n", "ņ": "n", "ṋ": "n", "ṉ": "n", "ƞ": "n", "ɲ": "n", "ŉ": "n", "ꞑ": "n", "ꞥ": "n", "ǌ": "nj", "ⓞ": "o", "ｏ": "o", "ò": "o", "ó": "o", "ô": "o", "ồ": "o", "ố": "o", "ỗ": "o", "ổ": "o", "õ": "o", "ṍ": "o", "ȭ": "o", "ṏ": "o", "ō": "o", "ṑ": "o", "ṓ": "o", "ŏ": "o", "ȯ": "o", "ȱ": "o", "ö": "o", "ȫ": "o", "ỏ": "o", "ő": "o", "ǒ": "o", "ȍ": "o", "ȏ": "o", "ơ": "o", "ờ": "o", "ớ": "o", "ỡ": "o", "ở": "o", "ợ": "o", "ọ": "o", "ộ": "o", "ǫ": "o", "ǭ": "o", "ø": "o", "ǿ": "o", "ɔ": "o", "ꝋ": "o", "ꝍ": "o", "ɵ": "o", "ƣ": "oi", "ȣ": "ou", "ꝏ": "oo", "ⓟ": "p", "ｐ": "p", "ṕ": "p", "ṗ": "p", "ƥ": "p", "ᵽ": "p", "ꝑ": "p", "ꝓ": "p", "ꝕ": "p", "ⓠ": "q", "ｑ": "q", "ɋ": "q", "ꝗ": "q", "ꝙ": "q", "ⓡ": "r", "ｒ": "r", "ŕ": "r", "ṙ": "r", "ř": "r", "ȑ": "r", "ȓ": "r", "ṛ": "r", "ṝ": "r", "ŗ": "r", "ṟ": "r", "ɍ": "r", "ɽ": "r", "ꝛ": "r", "ꞧ": "r", "ꞃ": "r", "ⓢ": "s", "ｓ": "s", "ß": "s", "ś": "s", "ṥ": "s", "ŝ": "s", "ṡ": "s", "š": "s", "ṧ": "s", "ṣ": "s", "ṩ": "s", "ș": "s", "ş": "s", "ȿ": "s", "ꞩ": "s", "ꞅ": "s", "ẛ": "s", "ⓣ": "t", "ｔ": "t", "ṫ": "t", "ẗ": "t", "ť": "t", "ṭ": "t", "ț": "t", "ţ": "t", "ṱ": "t", "ṯ": "t", "ŧ": "t", "ƭ": "t", "ʈ": "t", "ⱦ": "t", "ꞇ": "t", "ꜩ": "tz", "ⓤ": "u", "ｕ": "u", "ù": "u", "ú": "u", "û": "u", "ũ": "u", "ṹ": "u", "ū": "u", "ṻ": "u", "ŭ": "u", "ü": "u", "ǜ": "u", "ǘ": "u", "ǖ": "u", "ǚ": "u", "ủ": "u", "ů": "u", "ű": "u", "ǔ": "u", "ȕ": "u", "ȗ": "u", "ư": "u", "ừ": "u", "ứ": "u", "ữ": "u", "ử": "u", "ự": "u", "ụ": "u", "ṳ": "u", "ų": "u", "ṷ": "u", "ṵ": "u", "ʉ": "u", "ⓥ": "v", "ｖ": "v", "ṽ": "v", "ṿ": "v", "ʋ": "v", "ꝟ": "v", "ʌ": "v", "ꝡ": "vy", "ⓦ": "w", "ｗ": "w", "ẁ": "w", "ẃ": "w", "ŵ": "w", "ẇ": "w", "ẅ": "w", "ẘ": "w", "ẉ": "w", "ⱳ": "w", "ⓧ": "x", "ｘ": "x", "ẋ": "x", "ẍ": "x", "ⓨ": "y", "ｙ": "y", "ỳ": "y", "ý": "y", "ŷ": "y", "ỹ": "y", "ȳ": "y", "ẏ": "y", "ÿ": "y", "ỷ": "y", "ẙ": "y", "ỵ": "y", "ƴ": "y", "ɏ": "y", "ỿ": "y", "ⓩ": "z", "ｚ": "z", "ź": "z", "ẑ": "z", "ż": "z", "ž": "z", "ẓ": "z", "ẕ": "z", "ƶ": "z", "ȥ": "z", "ɀ": "z", "ⱬ": "z", "ꝣ": "z"};
        P = e(document), D = function () {
            var e = 1;
            return function () {
                return e++
            }
        }(), P.on("mousemove", function (e) {
            O.x = e.pageX, O.y = e.pageY
        }), I = E(Object, {bind: function (e) {
            var t = this;
            return function () {
                e.apply(t, arguments)
            }
        }, init: function (i) {
            var n, r, o, s, h = ".select2-results";
            this.opts = i = this.prepareOpts(i), this.id = i.id, i.element.data("select2") !== t && null !== i.element.data("select2") && i.element.data("select2").destroy(), this.container = this.createContainer(), this.containerId = "s2id_" + (i.element.attr("id") || "autogen" + D()), this.containerSelector = "#" + this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1"), this.container.attr("id", this.containerId), this.body = c(function () {
                return i.element.closest("body")
            }), y(this.container, this.opts.element, this.opts.adaptContainerCssClass), this.container.attr("style", i.element.attr("style")), this.container.css(k(i.containerCss)), this.container.addClass(k(i.containerCssClass)), this.elementTabIndex = this.opts.element.attr("tabindex"), this.opts.element.data("select2", this).attr("tabindex", "-1").before(this.container).on("click.select2", f), this.container.data("select2", this), this.dropdown = this.container.find(".select2-drop"), y(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), this.dropdown.addClass(k(i.dropdownCssClass)), this.dropdown.data("select2", this), this.dropdown.on("click", f), this.results = n = this.container.find(h), this.search = r = this.container.find("input.select2-input"), this.queryCount = 0, this.resultsPage = 0, this.context = null, this.initContainer(), this.container.on("click", f), d(this.results), this.dropdown.on("mousemove-filtered touchstart touchmove touchend", h, this.bind(this.highlightUnderEvent)), u(80, this.results), this.dropdown.on("scroll-debounced", h, this.bind(this.loadMoreIfNeeded)), e(this.container).on("change", ".select2-input", function (e) {
                e.stopPropagation()
            }), e(this.dropdown).on("change", ".select2-input", function (e) {
                e.stopPropagation()
            }), e.fn.mousewheel && n.mousewheel(function (e, t, i, a) {
                var r = n.scrollTop();
                a > 0 && 0 >= r - a ? (n.scrollTop(0), f(e)) : 0 > a && n.get(0).scrollHeight - n.scrollTop() + a <= n.height() && (n.scrollTop(n.get(0).scrollHeight - n.height()), f(e))
            }), l(r), r.on("keyup-change input paste", this.bind(this.updateResults)), r.on("focus", function () {
                r.addClass("select2-focused")
            }), r.on("blur", function () {
                r.removeClass("select2-focused")
            }), this.dropdown.on("mouseup", h, this.bind(function (t) {
                e(t.target).closest(".select2-result-selectable").length > 0 && (this.highlightUnderEvent(t), this.selectHighlighted(t))
            })), this.dropdown.on("click mouseup mousedown", function (e) {
                e.stopPropagation()
            }), e.isFunction(this.opts.initSelection) && (this.initSelection(), this.monitorSource()), null !== i.maximumInputLength && this.search.attr("maxlength", i.maximumInputLength);
            var o = i.element.prop("disabled");
            o === t && (o = !1), this.enable(!o);
            var s = i.element.prop("readonly");
            s === t && (s = !1), this.readonly(s), L = L || a(), this.autofocus = i.element.prop("autofocus"), i.element.prop("autofocus", !1), this.autofocus && this.focus(), this.nextSearchTerm = t
        }, destroy: function () {
            var e = this.opts.element, i = e.data("select2");
            this.close(), this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null), i !== t && (i.container.remove(), i.dropdown.remove(), e.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus", this.autofocus || !1), this.elementTabIndex ? e.attr({tabindex: this.elementTabIndex}) : e.removeAttr("tabindex"), e.show())
        }, optionToData: function (e) {
            return e.is("option") ? {id: e.prop("value"), text: e.text(), element: e.get(), css: e.attr("class"), disabled: e.prop("disabled"), locked: r(e.attr("locked"), "locked") || r(e.data("locked"), !0)} : e.is("optgroup") ? {text: e.attr("label"), children: [], element: e.get(), css: e.attr("class")} : void 0
        }, prepareOpts: function (i) {
            var n, a, s, l, d = this;
            if (n = i.element, "select" === n.get(0).tagName.toLowerCase() && (this.select = a = i.element), a && e.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function () {
                if (this in i)throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.")
            }), i = e.extend({}, {populateResults: function (n, a, r) {
                var o, s = this.opts.id;
                o = function (n, a, l) {
                    var h, c, u, p, g, f, m, v, y, b;
                    for (n = i.sortResults(n, a, r), h = 0, c = n.length; c > h; h += 1)u = n[h], g = u.disabled === !0, p = !g && s(u) !== t, f = u.children && u.children.length > 0, m = e("<li></li>"), m.addClass("select2-results-dept-" + l), m.addClass("select2-result"), m.addClass(p ? "select2-result-selectable" : "select2-result-unselectable"), g && m.addClass("select2-disabled"), f && m.addClass("select2-result-with-children"), m.addClass(d.opts.formatResultCssClass(u)), v = e(document.createElement("div")), v.addClass("select2-result-label"), b = i.formatResult(u, v, r, d.opts.escapeMarkup), b !== t && v.html(b), m.append(v), f && (y = e("<ul></ul>"), y.addClass("select2-result-sub"), o(u.children, y, l + 1), m.append(y)), m.data("select2-data", u), a.append(m)
                }, o(a, n, 0)
            }}, e.fn.select2.defaults, i), "function" != typeof i.id && (s = i.id, i.id = function (e) {
                return e[s]
            }), e.isArray(i.element.data("select2Tags"))) {
                if ("tags"in i)throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + i.element.attr("id");
                i.tags = i.element.data("select2Tags")
            }
            if (a ? (i.query = this.bind(function (e) {
                var i, a, r, o = {results: [], more: !1}, s = e.term;
                r = function (t, i) {
                    var n;
                    t.is("option") ? e.matcher(s, t.text(), t) && i.push(d.optionToData(t)) : t.is("optgroup") && (n = d.optionToData(t), t.children().each2(function (e, t) {
                        r(t, n.children)
                    }), n.children.length > 0 && i.push(n))
                }, i = n.children(), this.getPlaceholder() !== t && i.length > 0 && (a = this.getPlaceholderOption(), a && (i = i.not(a))), i.each2(function (e, t) {
                    r(t, o.results)
                }), e.callback(o)
            }), i.id = function (e) {
                return e.id
            }, i.formatResultCssClass = function (e) {
                return e.css
            }) : "query"in i || ("ajax"in i ? (l = i.element.data("ajax-url"), l && l.length > 0 && (i.ajax.url = l), i.query = w.call(i.element, i.ajax)) : "data"in i ? i.query = C(i.data) : "tags"in i && (i.query = _(i.tags), i.createSearchChoice === t && (i.createSearchChoice = function (t) {
                return{id: e.trim(t), text: e.trim(t)}
            }), i.initSelection === t && (i.initSelection = function (t, n) {
                var a = [];
                e(o(t.val(), i.separator)).each(function () {
                    var t = {id: this, text: this}, n = i.tags;
                    e.isFunction(n) && (n = n()), e(n).each(function () {
                        return r(this.id, t.id) ? (t = this, !1) : void 0
                    }), a.push(t)
                }), n(a)
            }))), "function" != typeof i.query)throw"query function not defined for Select2 " + i.element.attr("id");
            return i
        }, monitorSource: function () {
            var e, i = this.opts.element;
            i.on("change.select2", this.bind(function () {
                this.opts.element.data("select2-change-triggered") !== !0 && this.initSelection()
            })), e = this.bind(function () {
                var e, n = i.prop("disabled");
                n === t && (n = !1), this.enable(!n);
                var e = i.prop("readonly");
                e === t && (e = !1), this.readonly(e), y(this.container, this.opts.element, this.opts.adaptContainerCssClass), this.container.addClass(k(this.opts.containerCssClass)), y(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), this.dropdown.addClass(k(this.opts.dropdownCssClass))
            }), i.on("propertychange.select2 DOMAttrModified.select2", e), this.mutationCallback === t && (this.mutationCallback = function (t) {
                t.forEach(e)
            }), "undefined" != typeof WebKitMutationObserver && (this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null), this.propertyObserver = new WebKitMutationObserver(this.mutationCallback), this.propertyObserver.observe(i.get(0), {attributes: !0, subtree: !1}))
        }, triggerSelect: function (t) {
            var i = e.Event("select2-selecting", {val: this.id(t), object: t});
            return this.opts.element.trigger(i), !i.isDefaultPrevented()
        }, triggerChange: function (t) {
            t = t || {}, t = e.extend({}, t, {type: "change", val: this.val()}), this.opts.element.data("select2-change-triggered", !0), this.opts.element.trigger(t), this.opts.element.data("select2-change-triggered", !1), this.opts.element.click(), this.opts.blurOnChange && this.opts.element.blur()
        }, isInterfaceEnabled: function () {
            return this.enabledInterface === !0
        }, enableInterface: function () {
            var e = this._enabled && !this._readonly, t = !e;
            return e === this.enabledInterface ? !1 : (this.container.toggleClass("select2-container-disabled", t), this.close(), this.enabledInterface = e, !0)
        }, enable: function (e) {
            e === t && (e = !0), this._enabled !== e && (this._enabled = e, this.opts.element.prop("disabled", !e), this.enableInterface())
        }, disable: function () {
            this.enable(!1)
        }, readonly: function (e) {
            return e === t && (e = !1), this._readonly === e ? !1 : (this._readonly = e, this.opts.element.prop("readonly", e), this.enableInterface(), !0)
        }, opened: function () {
            return this.container.hasClass("select2-dropdown-open")
        }, positionDropdown: function () {
            var t, i, n, a, r = this.dropdown, o = this.container.offset(), s = this.container.outerHeight(!1), l = r.outerHeight(!1), d = e(window).scrollLeft() + e(window).width(), h = e(window).scrollTop() + e(window).height(), c = o.top + s, u = o.left, p = h >= c + l, g = o.top - l >= this.body().scrollTop(), f = r.outerWidth(!1), m = d >= u + f, v = r.hasClass("select2-drop-above");
            if (App.isIE8() || App.isIE9())var y = this.container.outerWidth(!1); else var y = window.getComputedStyle(this.container[0]).width;
            this.opts.dropdownAutoWidth ? (a = e(".select2-results", r)[0], r.addClass("select2-drop-auto-width"), r.css("width", ""), f = r.outerWidth(!1) + (a.scrollHeight === a.clientHeight ? 0 : L.width), f > y ? y = f : f = y, m = d >= u + f) : this.container.removeClass("select2-drop-auto-width"), "static" !== this.body().css("position") && (t = this.body().offset(), c -= t.top, u -= t.left), v ? (i = !0, !g && p && (i = !1)) : (i = !1, !p && g && (i = !0)), m || (u = o.left + y - f), i ? (c = o.top - l, this.container.addClass("select2-drop-above"), r.addClass("select2-drop-above")) : (this.container.removeClass("select2-drop-above"), r.removeClass("select2-drop-above")), n = e.extend({top: c, left: u, width: y}, k(this.opts.dropdownCss)), r.css(n)
        }, shouldOpen: function () {
            var t;
            return this.opened() ? !1 : this._enabled === !1 || this._readonly === !0 ? !1 : (t = e.Event("select2-opening"), this.opts.element.trigger(t), !t.isDefaultPrevented())
        }, clearDropdownAlignmentPreference: function () {
            this.container.removeClass("select2-drop-above"), this.dropdown.removeClass("select2-drop-above")
        }, open: function () {
            return this.shouldOpen() ? (this.opening(), !0) : !1
        }, opening: function () {
            var t, i = this.containerId, n = "scroll." + i, a = "resize." + i, r = "orientationchange." + i;
            this.container.addClass("select2-dropdown-open").addClass("select2-container-active"), this.clearDropdownAlignmentPreference(), this.dropdown[0] !== this.body().children().last()[0] && this.dropdown.detach().appendTo(this.body()), t = e("#select2-drop-mask"), 0 == t.length && (t = e(document.createElement("div")), t.attr("id", "select2-drop-mask").attr("class", "select2-drop-mask"), t.hide(), t.appendTo(this.body()), t.on("mousedown touchstart click", function (t) {
                var i, n = e("#select2-drop");
                n.length > 0 && (i = n.data("select2"), i.opts.selectOnBlur && i.selectHighlighted({noFocus: !0}), i.close({focus: !1}), t.preventDefault(), t.stopPropagation())
            })), this.dropdown.prev()[0] !== t[0] && this.dropdown.before(t), e("#select2-drop").removeAttr("id"), this.dropdown.attr("id", "select2-drop"), t.show(), this.positionDropdown(), this.dropdown.show(), this.positionDropdown(), this.dropdown.addClass("select2-drop-active");
            var o = this;
            this.container.parents().add(window).each(function () {
                e(this).on(a + " " + n + " " + r, function () {
                    o.positionDropdown()
                })
            })
        }, close: function () {
            if (this.opened()) {
                var t = this.containerId, i = "scroll." + t, n = "resize." + t, a = "orientationchange." + t;
                this.container.parents().add(window).each(function () {
                    e(this).off(i).off(n).off(a)
                }), this.clearDropdownAlignmentPreference(), e("#select2-drop-mask").hide(), this.dropdown.removeAttr("id"), this.dropdown.hide(), this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"), this.results.empty(), this.clearSearch(), this.search.removeClass("select2-active"), this.opts.element.trigger(e.Event("select2-close"))
            }
        }, externalSearch: function (e) {
            this.open(), this.search.val(e), this.updateResults(!1)
        }, clearSearch: function () {
        }, getMaximumSelectionSize: function () {
            return k(this.opts.maximumSelectionSize)
        }, ensureHighlightVisible: function () {
            var t, i, n, a, r, o, s, l = this.results;
            if (i = this.highlight(), !(0 > i)) {
                if (0 == i)return l.scrollTop(0), void 0;
                t = this.findHighlightableChoices().find(".select2-result-label"), n = e(t[i]), a = n.offset().top + n.outerHeight(!0), i === t.length - 1 && (s = l.find("li.select2-more-results"), s.length > 0 && (a = s.offset().top + s.outerHeight(!0))), r = l.offset().top + l.outerHeight(!0), a > r && l.scrollTop(l.scrollTop() + (a - r)), o = n.offset().top - l.offset().top, 0 > o && "none" != n.css("display") && l.scrollTop(l.scrollTop() + o)
            }
        }, findHighlightableChoices: function () {
            return this.results.find(".select2-result-selectable:not(.select2-disabled)")
        }, moveHighlight: function (t) {
            for (var i = this.findHighlightableChoices(), n = this.highlight(); n > -1 && n < i.length;) {
                n += t;
                var a = e(i[n]);
                if (a.hasClass("select2-result-selectable") && !a.hasClass("select2-disabled") && !a.hasClass("select2-selected")) {
                    this.highlight(n);
                    break
                }
            }
        }, highlight: function (t) {
            var i, a, r = this.findHighlightableChoices();
            return 0 === arguments.length ? n(r.filter(".select2-highlighted")[0], r.get()) : (t >= r.length && (t = r.length - 1), 0 > t && (t = 0), this.removeHighlight(), i = e(r[t]), i.addClass("select2-highlighted"), this.ensureHighlightVisible(), a = i.data("select2-data"), a && this.opts.element.trigger({type: "select2-highlight", val: this.id(a), choice: a}), void 0)
        }, removeHighlight: function () {
            this.results.find(".select2-highlighted").removeClass("select2-highlighted")
        }, countSelectableResults: function () {
            return this.findHighlightableChoices().length
        }, highlightUnderEvent: function (t) {
            var i = e(t.target).closest(".select2-result-selectable");
            if (i.length > 0 && !i.is(".select2-highlighted")) {
                var n = this.findHighlightableChoices();
                this.highlight(n.index(i))
            } else 0 == i.length && this.removeHighlight()
        }, loadMoreIfNeeded: function () {
            var e, t = this.results, i = t.find("li.select2-more-results"), n = this.resultsPage + 1, a = this, r = this.search.val(), o = this.context;
            0 !== i.length && (e = i.offset().top - t.offset().top - t.height(), e <= this.opts.loadMorePadding && (i.addClass("select2-active"), this.opts.query({element: this.opts.element, term: r, page: n, context: o, matcher: this.opts.matcher, callback: this.bind(function (e) {
                a.opened() && (a.opts.populateResults.call(this, t, e.results, {term: r, page: n, context: o}), a.postprocessResults(e, !1, !1), e.more === !0 ? (i.detach().appendTo(t).text(a.opts.formatLoadMore(n + 1)), window.setTimeout(function () {
                    a.loadMoreIfNeeded()
                }, 10)) : i.remove(), a.positionDropdown(), a.resultsPage = n, a.context = e.context, this.opts.element.trigger({type: "select2-loaded", items: e}))
            })})))
        }, tokenize: function () {
        }, updateResults: function (i) {
            function n() {
                d.removeClass("select2-active"), u.positionDropdown()
            }

            function a(e) {
                h.html(e), n()
            }

            var o, s, l, d = this.search, h = this.results, c = this.opts, u = this, p = d.val(), g = e.data(this.container, "select2-last-term");
            if ((i === !0 || !g || !r(p, g)) && (e.data(this.container, "select2-last-term", p), i === !0 || this.showSearchInput !== !1 && this.opened())) {
                l = ++this.queryCount;
                var f = this.getMaximumSelectionSize();
                if (f >= 1 && (o = this.data(), e.isArray(o) && o.length >= f && T(c.formatSelectionTooBig, "formatSelectionTooBig")))return a("<li class='select2-selection-limit'>" + c.formatSelectionTooBig(f) + "</li>"), void 0;
                if (d.val().length < c.minimumInputLength)return T(c.formatInputTooShort, "formatInputTooShort") ? a("<li class='select2-no-results'>" + c.formatInputTooShort(d.val(), c.minimumInputLength) + "</li>") : a(""), i && this.showSearch && this.showSearch(!0), void 0;
                if (c.maximumInputLength && d.val().length > c.maximumInputLength)return T(c.formatInputTooLong, "formatInputTooLong") ? a("<li class='select2-no-results'>" + c.formatInputTooLong(d.val(), c.maximumInputLength) + "</li>") : a(""), void 0;
                c.formatSearching && 0 === this.findHighlightableChoices().length && a("<li class='select2-searching'>" + c.formatSearching() + "</li>"), d.addClass("select2-active"), this.removeHighlight(), s = this.tokenize(), s != t && null != s && d.val(s), this.resultsPage = 1, c.query({element: c.element, term: d.val(), page: this.resultsPage, context: null, matcher: c.matcher, callback: this.bind(function (o) {
                    var s;
                    if (l == this.queryCount) {
                        if (!this.opened())return this.search.removeClass("select2-active"), void 0;
                        if (this.context = o.context === t ? null : o.context, this.opts.createSearchChoice && "" !== d.val() && (s = this.opts.createSearchChoice.call(u, d.val(), o.results), s !== t && null !== s && u.id(s) !== t && null !== u.id(s) && 0 === e(o.results).filter(function () {
                            return r(u.id(this), u.id(s))
                        }).length && o.results.unshift(s)), 0 === o.results.length && T(c.formatNoMatches, "formatNoMatches"))return a("<li class='select2-no-results'>" + c.formatNoMatches(d.val()) + "</li>"), void 0;
                        h.empty(), u.opts.populateResults.call(this, h, o.results, {term: d.val(), page: this.resultsPage, context: null}), o.more === !0 && T(c.formatLoadMore, "formatLoadMore") && (h.append("<li class='select2-more-results'>" + u.opts.escapeMarkup(c.formatLoadMore(this.resultsPage)) + "</li>"), window.setTimeout(function () {
                            u.loadMoreIfNeeded()
                        }, 10)), this.postprocessResults(o, i), n(), this.opts.element.trigger({type: "select2-loaded", items: o})
                    }
                })})
            }
        }, cancel: function () {
            this.close()
        }, blur: function () {
            this.opts.selectOnBlur && this.selectHighlighted({noFocus: !0}), this.close(), this.container.removeClass("select2-container-active"), this.search[0] === document.activeElement && this.search.blur(), this.clearSearch(), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")
        }, focusSearch: function () {
            p(this.search)
        }, selectHighlighted: function (e) {
            var t = this.highlight(), i = this.results.find(".select2-highlighted"), n = i.closest(".select2-result").data("select2-data");
            n ? (this.highlight(t), this.onSelect(n, e)) : e && e.noFocus && this.close()
        }, getPlaceholder: function () {
            var e;
            return this.opts.element.attr("placeholder") || this.opts.element.attr("data-placeholder") || this.opts.element.data("placeholder") || this.opts.placeholder || ((e = this.getPlaceholderOption()) !== t ? e.text() : t)
        }, getPlaceholderOption: function () {
            if (this.select) {
                var e = this.select.children().first();
                if (this.opts.placeholderOption !== t)return"first" === this.opts.placeholderOption && e || "function" == typeof this.opts.placeholderOption && this.opts.placeholderOption(this.select);
                if ("" === e.text() && "" === e.val())return e
            }
        }, initContainerWidth: function () {
            function i() {
                var i, n, a, r, o;
                if ("off" === this.opts.width)return null;
                if ("element" === this.opts.width)return 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px";
                if ("copy" === this.opts.width || "resolve" === this.opts.width) {
                    if (i = this.opts.element.attr("style"), i !== t)for (n = i.split(";"), r = 0, o = n.length; o > r; r += 1)if (a = n[r].replace(/\s/g, "").match(/[^-]width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i), null !== a && a.length >= 1)return a[1];
                    return"resolve" === this.opts.width ? (i = this.opts.element.css("width"), i.indexOf("%") > 0 ? i : 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px") : null
                }
                return e.isFunction(this.opts.width) ? this.opts.width() : this.opts.width
            }

            var n = i.call(this);
            null !== n && this.container.css("width", n)
        }}), R = E(I, {createContainer: function () {
            var t = e(document.createElement("div")).attr({"class": "select2-container"}).html(["<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow'><b></b></span>", "</a>", "<input class='select2-focusser select2-offscreen' type='text'/>", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>", "   </div>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
            return t
        }, enableInterface: function () {
            this.parent.enableInterface.apply(this, arguments) && this.focusser.prop("disabled", !this.isInterfaceEnabled())
        }, opening: function () {
            var i, n, a;
            this.opts.minimumResultsForSearch >= 0 && this.showSearch(!0), this.parent.opening.apply(this, arguments), this.showSearchInput !== !1 && this.search.val(this.focusser.val()), this.search.focus(), i = this.search.get(0), i.createTextRange ? (n = i.createTextRange(), n.collapse(!1), n.select()) : i.setSelectionRange && (a = this.search.val().length, i.setSelectionRange(a, a)), "" === this.search.val() && this.nextSearchTerm != t && (this.search.val(this.nextSearchTerm), this.search.select()), this.focusser.prop("disabled", !0).val(""), this.updateResults(!0), this.opts.element.trigger(e.Event("select2-open"))
        }, close: function (e) {
            this.opened() && (this.parent.close.apply(this, arguments), e = e || {focus: !0}, this.focusser.removeAttr("disabled"), e.focus && this.focusser.focus())
        }, focus: function () {
            this.opened() ? this.close() : (this.focusser.removeAttr("disabled"), this.focusser.focus())
        }, isFocused: function () {
            return this.container.hasClass("select2-container-active")
        }, cancel: function () {
            this.parent.cancel.apply(this, arguments), this.focusser.removeAttr("disabled"), this.focusser.focus()
        }, destroy: function () {
            e("label[for='" + this.focusser.attr("id") + "']").attr("for", this.opts.element.attr("id")), this.parent.destroy.apply(this, arguments)
        }, initContainer: function () {
            var t, i = this.container, n = this.dropdown;
            this.opts.minimumResultsForSearch < 0 ? this.showSearch(!1) : this.showSearch(!0), this.selection = t = i.find(".select2-choice"), this.focusser = i.find(".select2-focusser"), this.focusser.attr("id", "s2id_autogen" + D()), e("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.focusser.attr("id")), this.focusser.attr("tabindex", this.elementTabIndex), this.search.on("keydown", this.bind(function (e) {
                if (this.isInterfaceEnabled()) {
                    if (e.which === A.PAGE_UP || e.which === A.PAGE_DOWN)return f(e), void 0;
                    switch (e.which) {
                        case A.UP:
                        case A.DOWN:
                            return this.moveHighlight(e.which === A.UP ? -1 : 1), f(e), void 0;
                        case A.ENTER:
                            return this.selectHighlighted(), f(e), void 0;
                        case A.TAB:
                            return this.selectHighlighted({noFocus: !0}), void 0;
                        case A.ESC:
                            return this.cancel(e), f(e), void 0
                    }
                }
            })), this.search.on("blur", this.bind(function () {
                document.activeElement === this.body().get(0) && window.setTimeout(this.bind(function () {
                    this.search.focus()
                }), 0)
            })), this.focusser.on("keydown", this.bind(function (e) {
                if (this.isInterfaceEnabled() && e.which !== A.TAB && !A.isControl(e) && !A.isFunctionKey(e) && e.which !== A.ESC) {
                    if (this.opts.openOnEnter === !1 && e.which === A.ENTER)return f(e), void 0;
                    if (e.which == A.DOWN || e.which == A.UP || e.which == A.ENTER && this.opts.openOnEnter) {
                        if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey)return;
                        return this.open(), f(e), void 0
                    }
                    return e.which == A.DELETE || e.which == A.BACKSPACE ? (this.opts.allowClear && this.clear(), f(e), void 0) : void 0
                }
            })), l(this.focusser), this.focusser.on("keyup-change input", this.bind(function (e) {
                if (this.opts.minimumResultsForSearch >= 0) {
                    if (e.stopPropagation(), this.opened())return;
                    this.open()
                }
            })), t.on("mousedown", "abbr", this.bind(function (e) {
                this.isInterfaceEnabled() && (this.clear(), m(e), this.close(), this.selection.focus())
            })), t.on("mousedown", this.bind(function (t) {
                this.container.hasClass("select2-container-active") || this.opts.element.trigger(e.Event("select2-focus")), this.opened() ? this.close() : this.isInterfaceEnabled() && this.open(), f(t)
            })), n.on("mousedown", this.bind(function () {
                this.search.focus()
            })), t.on("focus", this.bind(function (e) {
                f(e)
            })), this.focusser.on("focus", this.bind(function () {
                this.container.hasClass("select2-container-active") || this.opts.element.trigger(e.Event("select2-focus")), this.container.addClass("select2-container-active")
            })).on("blur", this.bind(function () {
                this.opened() || (this.container.removeClass("select2-container-active"), this.opts.element.trigger(e.Event("select2-blur")))
            })), this.search.on("focus", this.bind(function () {
                this.container.hasClass("select2-container-active") || this.opts.element.trigger(e.Event("select2-focus")), this.container.addClass("select2-container-active")
            })), this.initContainerWidth(), this.opts.element.addClass("select2-offscreen"), this.setPlaceholder()
        }, clear: function (t) {
            var i = this.selection.data("select2-data");
            if (i) {
                var n = e.Event("select2-clearing");
                if (this.opts.element.trigger(n), n.isDefaultPrevented())return;
                var a = this.getPlaceholderOption();
                this.opts.element.val(a ? a.val() : ""), this.selection.find(".select2-chosen").empty(), this.selection.removeData("select2-data"), this.setPlaceholder(), t !== !1 && (this.opts.element.trigger({type: "select2-removed", val: this.id(i), choice: i}), this.triggerChange({removed: i}))
            }
        }, initSelection: function () {
            if (this.isPlaceholderOptionSelected())this.updateSelection(null), this.close(), this.setPlaceholder(); else {
                var e = this;
                this.opts.initSelection.call(null, this.opts.element, function (i) {
                    i !== t && null !== i && (e.updateSelection(i), e.close(), e.setPlaceholder())
                })
            }
        }, isPlaceholderOptionSelected: function () {
            var e;
            return this.getPlaceholder() ? (e = this.getPlaceholderOption()) !== t && e.is(":selected") || "" === this.opts.element.val() || this.opts.element.val() === t || null === this.opts.element.val() : !1
        }, prepareOpts: function () {
            var t = this.parent.prepareOpts.apply(this, arguments), i = this;
            return"select" === t.element.get(0).tagName.toLowerCase() ? t.initSelection = function (e, t) {
                var n = e.find(":selected");
                t(i.optionToData(n))
            } : "data"in t && (t.initSelection = t.initSelection || function (i, n) {
                var a = i.val(), o = null;
                t.query({matcher: function (e, i, n) {
                    var s = r(a, t.id(n));
                    return s && (o = n), s
                }, callback: e.isFunction(n) ? function () {
                    n(o)
                } : e.noop})
            }), t
        }, getPlaceholder: function () {
            return this.select && this.getPlaceholderOption() === t ? t : this.parent.getPlaceholder.apply(this, arguments)
        }, setPlaceholder: function () {
            var e = this.getPlaceholder();
            if (this.isPlaceholderOptionSelected() && e !== t) {
                if (this.select && this.getPlaceholderOption() === t)return;
                this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(e)), this.selection.addClass("select2-default"), this.container.removeClass("select2-allowclear")
            }
        }, postprocessResults: function (e, t, i) {
            var n = 0, a = this;
            if (this.findHighlightableChoices().each2(function (e, t) {
                return r(a.id(t.data("select2-data")), a.opts.element.val()) ? (n = e, !1) : void 0
            }), i !== !1 && (t === !0 && n >= 0 ? this.highlight(n) : this.highlight(0)), t === !0) {
                var o = this.opts.minimumResultsForSearch;
                o >= 0 && this.showSearch(M(e.results) >= o)
            }
        }, showSearch: function (t) {
            this.showSearchInput !== t && (this.showSearchInput = t, this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !t), this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !t), e(this.dropdown, this.container).toggleClass("select2-with-searchbox", t))
        }, onSelect: function (e, t) {
            if (this.triggerSelect(e)) {
                var i = this.opts.element.val(), n = this.data();
                this.opts.element.val(this.id(e)), this.updateSelection(e), this.opts.element.trigger({type: "select2-selected", val: this.id(e), choice: e}), this.nextSearchTerm = this.opts.nextSearchTerm(e, this.search.val()), this.close(), t && t.noFocus || this.focusser.focus(), r(i, this.id(e)) || this.triggerChange({added: e, removed: n})
            }
        }, updateSelection: function (e) {
            var i, n, a = this.selection.find(".select2-chosen");
            this.selection.data("select2-data", e), a.empty(), null !== e && (i = this.opts.formatSelection(e, a, this.opts.escapeMarkup)), i !== t && a.append(i), n = this.opts.formatSelectionCssClass(e, a), n !== t && a.addClass(n), this.selection.removeClass("select2-default"), this.opts.allowClear && this.getPlaceholder() !== t && this.container.addClass("select2-allowclear")
        }, val: function () {
            var e, i = !1, n = null, a = this, r = this.data();
            if (0 === arguments.length)return this.opts.element.val();
            if (e = arguments[0], arguments.length > 1 && (i = arguments[1]), this.select)this.select.val(e).find(":selected").each2(function (e, t) {
                return n = a.optionToData(t), !1
            }), this.updateSelection(n), this.setPlaceholder(), i && this.triggerChange({added: n, removed: r}); else {
                if (!e && 0 !== e)return this.clear(i), void 0;
                if (this.opts.initSelection === t)throw new Error("cannot call val() if initSelection() is not defined");
                this.opts.element.val(e), this.opts.initSelection(this.opts.element, function (e) {
                    a.opts.element.val(e ? a.id(e) : ""), a.updateSelection(e), a.setPlaceholder(), i && a.triggerChange({added: e, removed: r})
                })
            }
        }, clearSearch: function () {
            this.search.val(""), this.focusser.val("")
        }, data: function (e) {
            var i, n = !1;
            return 0 === arguments.length ? (i = this.selection.data("select2-data"), i == t && (i = null), i) : (arguments.length > 1 && (n = arguments[1]), e ? (i = this.data(), this.opts.element.val(e ? this.id(e) : ""), this.updateSelection(e), n && this.triggerChange({added: e, removed: i})) : this.clear(n), void 0)
        }}), N = E(I, {createContainer: function () {
            var t = e(document.createElement("div")).attr({"class": "select2-container select2-container-multi"}).html(["<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>", "  </li>", "</ul>", "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
            return t
        }, prepareOpts: function () {
            var t = this.parent.prepareOpts.apply(this, arguments), i = this;
            return"select" === t.element.get(0).tagName.toLowerCase() ? t.initSelection = function (e, t) {
                var n = [];
                e.find(":selected").each2(function (e, t) {
                    n.push(i.optionToData(t))
                }), t(n)
            } : "data"in t && (t.initSelection = t.initSelection || function (i, n) {
                var a = o(i.val(), t.separator), s = [];
                t.query({matcher: function (i, n, o) {
                    var l = e.grep(a,function (e) {
                        return r(e, t.id(o))
                    }).length;
                    return l && s.push(o), l
                }, callback: e.isFunction(n) ? function () {
                    for (var e = [], i = 0; i < a.length; i++)for (var o = a[i], l = 0; l < s.length; l++) {
                        var d = s[l];
                        if (r(o, t.id(d))) {
                            e.push(d), s.splice(l, 1);
                            break
                        }
                    }
                    n(e)
                } : e.noop})
            }), t
        }, selectChoice: function (e) {
            var t = this.container.find(".select2-search-choice-focus");
            t.length && e && e[0] == t[0] || (t.length && this.opts.element.trigger("choice-deselected", t), t.removeClass("select2-search-choice-focus"), e && e.length && (this.close(), e.addClass("select2-search-choice-focus"), this.opts.element.trigger("choice-selected", e)))
        }, destroy: function () {
            e("label[for='" + this.search.attr("id") + "']").attr("for", this.opts.element.attr("id")), this.parent.destroy.apply(this, arguments)
        }, initContainer: function () {
            var t, i = ".select2-choices";
            this.searchContainer = this.container.find(".select2-search-field"), this.selection = t = this.container.find(i);
            var n = this;
            this.selection.on("click", ".select2-search-choice:not(.select2-locked)", function () {
                n.search[0].focus(), n.selectChoice(e(this))
            }), this.search.attr("id", "s2id_autogen" + D()), e("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.search.attr("id")), this.search.on("input paste", this.bind(function () {
                this.isInterfaceEnabled() && (this.opened() || this.open())
            })), this.search.attr("tabindex", this.elementTabIndex), this.keydowns = 0, this.search.on("keydown", this.bind(function (e) {
                if (this.isInterfaceEnabled()) {
                    ++this.keydowns;
                    var i = t.find(".select2-search-choice-focus"), n = i.prev(".select2-search-choice:not(.select2-locked)"), a = i.next(".select2-search-choice:not(.select2-locked)"), r = g(this.search);
                    if (i.length && (e.which == A.LEFT || e.which == A.RIGHT || e.which == A.BACKSPACE || e.which == A.DELETE || e.which == A.ENTER)) {
                        var o = i;
                        return e.which == A.LEFT && n.length ? o = n : e.which == A.RIGHT ? o = a.length ? a : null : e.which === A.BACKSPACE ? (this.unselect(i.first()), this.search.width(10), o = n.length ? n : a) : e.which == A.DELETE ? (this.unselect(i.first()), this.search.width(10), o = a.length ? a : null) : e.which == A.ENTER && (o = null), this.selectChoice(o), f(e), o && o.length || this.open(), void 0
                    }
                    if ((e.which === A.BACKSPACE && 1 == this.keydowns || e.which == A.LEFT) && 0 == r.offset && !r.length)return this.selectChoice(t.find(".select2-search-choice:not(.select2-locked)").last()), f(e), void 0;
                    if (this.selectChoice(null), this.opened())switch (e.which) {
                        case A.UP:
                        case A.DOWN:
                            return this.moveHighlight(e.which === A.UP ? -1 : 1), f(e), void 0;
                        case A.ENTER:
                            return this.selectHighlighted(), f(e), void 0;
                        case A.TAB:
                            return this.selectHighlighted({noFocus: !0}), this.close(), void 0;
                        case A.ESC:
                            return this.cancel(e), f(e), void 0
                    }
                    if (e.which !== A.TAB && !A.isControl(e) && !A.isFunctionKey(e) && e.which !== A.BACKSPACE && e.which !== A.ESC) {
                        if (e.which === A.ENTER) {
                            if (this.opts.openOnEnter === !1)return;
                            if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey)return
                        }
                        this.open(), (e.which === A.PAGE_UP || e.which === A.PAGE_DOWN) && f(e), e.which === A.ENTER && f(e)
                    }
                }
            })), this.search.on("keyup", this.bind(function () {
                this.keydowns = 0, this.resizeSearch()
            })), this.search.on("blur", this.bind(function (t) {
                this.container.removeClass("select2-container-active"), this.search.removeClass("select2-focused"), this.selectChoice(null), this.opened() || this.clearSearch(), t.stopImmediatePropagation(), this.opts.element.trigger(e.Event("select2-blur"))
            })), this.container.on("click", i, this.bind(function (t) {
                this.isInterfaceEnabled() && (e(t.target).closest(".select2-search-choice").length > 0 || (this.selectChoice(null), this.clearPlaceholder(), this.container.hasClass("select2-container-active") || this.opts.element.trigger(e.Event("select2-focus")), this.open(), this.focusSearch(), t.preventDefault()))
            })), this.container.on("focus", i, this.bind(function () {
                this.isInterfaceEnabled() && (this.container.hasClass("select2-container-active") || this.opts.element.trigger(e.Event("select2-focus")), this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"), this.clearPlaceholder())
            })), this.initContainerWidth(), this.opts.element.addClass("select2-offscreen"), this.clearSearch()
        }, enableInterface: function () {
            this.parent.enableInterface.apply(this, arguments) && this.search.prop("disabled", !this.isInterfaceEnabled())
        }, initSelection: function () {
            if ("" === this.opts.element.val() && "" === this.opts.element.text() && (this.updateSelection([]), this.close(), this.clearSearch()), this.select || "" !== this.opts.element.val()) {
                var e = this;
                this.opts.initSelection.call(null, this.opts.element, function (i) {
                    i !== t && null !== i && (e.updateSelection(i), e.close(), e.clearSearch())
                })
            }
        }, clearSearch: function () {
            var e = this.getPlaceholder(), i = this.getMaxSearchWidth();
            e !== t && 0 === this.getVal().length && this.search.hasClass("select2-focused") === !1 ? (this.search.val(e).addClass("select2-default"), this.search.width(i > 0 ? i : this.container.css("width"))) : this.search.val("").width(10)
        }, clearPlaceholder: function () {
            this.search.hasClass("select2-default") && this.search.val("").removeClass("select2-default")
        }, opening: function () {
            this.clearPlaceholder(), this.resizeSearch(), this.parent.opening.apply(this, arguments), this.focusSearch(), this.updateResults(!0), this.search.focus(), this.opts.element.trigger(e.Event("select2-open"))
        }, close: function () {
            this.opened() && this.parent.close.apply(this, arguments)
        }, focus: function () {
            this.close(), this.search.focus()
        }, isFocused: function () {
            return this.search.hasClass("select2-focused")
        }, updateSelection: function (t) {
            var i = [], a = [], r = this;
            e(t).each(function () {
                n(r.id(this), i) < 0 && (i.push(r.id(this)), a.push(this))
            }), t = a, this.selection.find(".select2-search-choice").remove(), e(t).each(function () {
                r.addSelectedChoice(this)
            }), r.postprocessResults()
        }, tokenize: function () {
            var e = this.search.val();
            e = this.opts.tokenizer.call(this, e, this.data(), this.bind(this.onSelect), this.opts), null != e && e != t && (this.search.val(e), e.length > 0 && this.open())
        }, onSelect: function (e, t) {
            this.triggerSelect(e) && (this.addSelectedChoice(e), this.opts.element.trigger({type: "selected", val: this.id(e), choice: e}), (this.select || !this.opts.closeOnSelect) && this.postprocessResults(e, !1, this.opts.closeOnSelect === !0), this.opts.closeOnSelect ? (this.close(), this.search.width(10)) : this.countSelectableResults() > 0 ? (this.search.width(10), this.resizeSearch(), this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize() && this.updateResults(!0), this.positionDropdown()) : (this.close(), this.search.width(10)), this.triggerChange({added: e}), t && t.noFocus || this.focusSearch())
        }, cancel: function () {
            this.close(), this.focusSearch()
        }, addSelectedChoice: function (i) {
            var n, a, r = !i.locked, o = e("<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"), s = e("<li class='select2-search-choice select2-locked'><div></div></li>"), l = r ? o : s, d = this.id(i), h = this.getVal();
            n = this.opts.formatSelection(i, l.find("div"), this.opts.escapeMarkup), n != t && l.find("div").replaceWith("<div>" + n + "</div>"), a = this.opts.formatSelectionCssClass(i, l.find("div")), a != t && l.addClass(a), r && l.find(".select2-search-choice-close").on("mousedown", f).on("click dblclick", this.bind(function (t) {
                this.isInterfaceEnabled() && (e(t.target).closest(".select2-search-choice").fadeOut("fast", this.bind(function () {
                    this.unselect(e(t.target)), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"), this.close(), this.focusSearch()
                })).dequeue(), f(t))
            })).on("focus", this.bind(function () {
                this.isInterfaceEnabled() && (this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"))
            })), l.data("select2-data", i), l.insertBefore(this.searchContainer), h.push(d), this.setVal(h)
        }, unselect: function (e) {
            var t, i, a = this.getVal();
            if (e = e.closest(".select2-search-choice"), 0 === e.length)throw"Invalid argument: " + e + ". Must be .select2-search-choice";
            if (t = e.data("select2-data")) {
                for (; (i = n(this.id(t), a)) >= 0;)a.splice(i, 1), this.setVal(a), this.select && this.postprocessResults();
                e.remove(), this.opts.element.trigger({type: "removed", val: this.id(t), choice: t}), this.triggerChange({removed: t})
            }
        }, postprocessResults: function (e, t, i) {
            var a = this.getVal(), r = this.results.find(".select2-result"), o = this.results.find(".select2-result-with-children"), s = this;
            r.each2(function (e, t) {
                var i = s.id(t.data("select2-data"));
                n(i, a) >= 0 && (t.addClass("select2-selected"), t.find(".select2-result-selectable").addClass("select2-selected"))
            }), o.each2(function (e, t) {
                t.is(".select2-result-selectable") || 0 !== t.find(".select2-result-selectable:not(.select2-selected)").length || t.addClass("select2-selected")
            }), -1 == this.highlight() && i !== !1 && s.highlight(0), !this.opts.createSearchChoice && !r.filter(".select2-result:not(.select2-selected)").length > 0 && (!e || e && !e.more && 0 === this.results.find(".select2-no-results").length) && T(s.opts.formatNoMatches, "formatNoMatches") && this.results.append("<li class='select2-no-results'>" + s.opts.formatNoMatches(s.search.val()) + "</li>")
        }, getMaxSearchWidth: function () {
            return this.selection.width() - s(this.search)
        }, resizeSearch: function () {
            var e, t, i, n, a, r = s(this.search);
            e = v(this.search) + 10, t = this.search.offset().left, i = this.selection.width(), n = this.selection.offset().left, a = i - (t - n) - r, e > a && (a = i - r), 40 > a && (a = i - r), 0 >= a && (a = e), this.search.width(Math.floor(a))
        }, getVal: function () {
            var e;
            return this.select ? (e = this.select.val(), null === e ? [] : e) : (e = this.opts.element.val(), o(e, this.opts.separator))
        }, setVal: function (t) {
            var i;
            this.select ? this.select.val(t) : (i = [], e(t).each(function () {
                n(this, i) < 0 && i.push(this)
            }), this.opts.element.val(0 === i.length ? "" : i.join(this.opts.separator)))
        }, buildChangeDetails: function (e, t) {
            for (var t = t.slice(0), e = e.slice(0), i = 0; i < t.length; i++)for (var n = 0; n < e.length; n++)r(this.opts.id(t[i]), this.opts.id(e[n])) && (t.splice(i, 1), i--, e.splice(n, 1), n--);
            return{added: t, removed: e}
        }, val: function (i, n) {
            var a, r = this;
            if (0 === arguments.length)return this.getVal();
            if (a = this.data(), a.length || (a = []), !i && 0 !== i)return this.opts.element.val(""), this.updateSelection([]), this.clearSearch(), n && this.triggerChange({added: this.data(), removed: a}), void 0;
            if (this.setVal(i), this.select)this.opts.initSelection(this.select, this.bind(this.updateSelection)), n && this.triggerChange(this.buildChangeDetails(a, this.data())); else {
                if (this.opts.initSelection === t)throw new Error("val() cannot be called if initSelection() is not defined");
                this.opts.initSelection(this.opts.element, function (t) {
                    var i = e.map(t, r.id);
                    r.setVal(i), r.updateSelection(t), r.clearSearch(), n && r.triggerChange(r.buildChangeDetails(a, this.data()))
                })
            }
            this.clearSearch()
        }, onSortStart: function () {
            if (this.select)throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
            this.search.width(0), this.searchContainer.hide()
        }, onSortEnd: function () {
            var t = [], i = this;
            this.searchContainer.show(), this.searchContainer.appendTo(this.searchContainer.parent()), this.resizeSearch(), this.selection.find(".select2-search-choice").each(function () {
                t.push(i.opts.id(e(this).data("select2-data")))
            }), this.setVal(t), this.triggerChange()
        }, data: function (t, i) {
            var n, a, r = this;
            return 0 === arguments.length ? this.selection.find(".select2-search-choice").map(function () {
                return e(this).data("select2-data")
            }).get() : (a = this.data(), t || (t = []), n = e.map(t, function (e) {
                return r.opts.id(e)
            }), this.setVal(n), this.updateSelection(t), this.clearSearch(), i && this.triggerChange(this.buildChangeDetails(a, this.data())), void 0)
        }}), e.fn.select2 = function () {
            var i, a, r, o, s, l = Array.prototype.slice.call(arguments, 0), d = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search"], h = ["opened", "isFocused", "container", "dropdown"], c = ["val", "data"], u = {search: "externalSearch"};
            return this.each(function () {
                if (0 === l.length || "object" == typeof l[0])i = 0 === l.length ? {} : e.extend({}, l[0]), i.element = e(this), "select" === i.element.get(0).tagName.toLowerCase() ? s = i.element.prop("multiple") : (s = i.multiple || !1, "tags"in i && (i.multiple = s = !0)), a = s ? new N : new R, a.init(i); else {
                    if ("string" != typeof l[0])throw"Invalid arguments to select2 plugin: " + l;
                    if (n(l[0], d) < 0)throw"Unknown method: " + l[0];
                    if (o = t, a = e(this).data("select2"), a === t)return;
                    if (r = l[0], "container" === r ? o = a.container : "dropdown" === r ? o = a.dropdown : (u[r] && (r = u[r]), o = a[r].apply(a, l.slice(1))), n(l[0], h) >= 0 || n(l[0], c) && 1 == l.length)return!1
                }
            }), o === t ? this : o
        }, e.fn.select2.defaults = {width: "copy", loadMorePadding: 0, closeOnSelect: !0, openOnEnter: !0, containerCss: {}, dropdownCss: {}, containerCssClass: "", dropdownCssClass: "", formatResult: function (e, t, i, n) {
            var a = [];
            return b(e.text, i.term, a, n), a.join("")
        }, formatSelection: function (e, i, n) {
            return e ? n(e.text) : t
        }, sortResults: function (e) {
            return e
        }, formatResultCssClass: function () {
            return t
        }, formatSelectionCssClass: function () {
            return t
        }, formatNoMatches: function () {
            return"No matches found"
        }, formatInputTooShort: function (e, t) {
            var i = t - e.length;
            return"Please enter " + i + " more character" + (1 == i ? "" : "s")
        }, formatInputTooLong: function (e, t) {
            var i = e.length - t;
            return"Please delete " + i + " character" + (1 == i ? "" : "s")
        }, formatSelectionTooBig: function (e) {
            return"You can only select " + e + " item" + (1 == e ? "" : "s")
        }, formatLoadMore: function () {
            return"Loading more results..."
        }, formatSearching: function () {
            return"Searching..."
        }, minimumResultsForSearch: 0, minimumInputLength: 0, maximumInputLength: null, maximumSelectionSize: 0, id: function (e) {
            return e.id
        }, matcher: function (e, t) {
            return i("" + t).toUpperCase().indexOf(i("" + e).toUpperCase()) >= 0
        }, separator: ",", tokenSeparators: [], tokenizer: S, escapeMarkup: x, blurOnChange: !1, selectOnBlur: !1, adaptContainerCssClass: function (e) {
            return e
        }, adaptDropdownCssClass: function () {
            return null
        }, nextSearchTerm: function () {
            return t
        }}, e.fn.select2.ajaxDefaults = {transport: e.ajax, params: {type: "GET", cache: !1, dataType: "json"}}, window.Select2 = {query: {ajax: w, local: C, tags: _}, util: {debounce: h, markMatch: b, escapeMarkup: x, stripDiacritics: i}, "class": {"abstract": I, single: R, multi: N}}
    }
}(jQuery);
/*!
 * jQuery Validation Plugin 1.11.1
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright 2013 Jörn Zaefferer
 * Released under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 */
(function () {
    function a(b) {
        return b.replace(/<.[^<>]*?>/g, " ").replace(/ | /gi, " ").replace(/[.(),;:!?%#$'"_+=\/\-]*/g, "")
    }

    jQuery.validator.addMethod("maxWords", function (c, b, d) {
        return this.optional(b) || a(c).match(/\b\w+\b/g).length <= d
    }, jQuery.validator.format("Please enter {0} words or less."));
    jQuery.validator.addMethod("minWords", function (c, b, d) {
        return this.optional(b) || a(c).match(/\b\w+\b/g).length >= d
    }, jQuery.validator.format("Please enter at least {0} words."));
    jQuery.validator.addMethod("rangeWords", function (e, b, f) {
        var d = a(e);
        var c = /\b\w+\b/g;
        return this.optional(b) || d.match(c).length >= f[0] && d.match(c).length <= f[1]
    }, jQuery.validator.format("Please enter between {0} and {1} words."))
}());
jQuery.validator.addMethod("letterswithbasicpunc", function (b, a) {
    return this.optional(a) || /^[a-z\-.,()'"\s]+$/i.test(b)
}, "Letters or punctuation only please");
jQuery.validator.addMethod("alphanumeric", function (b, a) {
    return this.optional(a) || /^\w+$/i.test(b)
}, "Letters, numbers, and underscores only please");
jQuery.validator.addMethod("lettersonly", function (b, a) {
    return this.optional(a) || /^[a-z]+$/i.test(b)
}, "Letters only please");
jQuery.validator.addMethod("nowhitespace", function (b, a) {
    return this.optional(a) || /^\S+$/i.test(b)
}, "No white space please");
jQuery.validator.addMethod("ziprange", function (b, a) {
    return this.optional(a) || /^90[2-5]\d\{2\}-\d{4}$/.test(b)
}, "Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx");
jQuery.validator.addMethod("zipcodeUS", function (b, a) {
    return this.optional(a) || /\d{5}-\d{4}$|^\d{5}$/.test(b)
}, "The specified US ZIP Code is invalid");
jQuery.validator.addMethod("integer", function (b, a) {
    return this.optional(a) || /^-?\d+$/.test(b)
}, "A positive or negative non-decimal number please");
jQuery.validator.addMethod("vinUS", function (o) {
    if (o.length !== 17) {
        return false
    }
    var h, a, l, j, b, k;
    var c = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
    var m = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];
    var g = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];
    var e = 0;
    for (h = 0; h < 17; h++) {
        j = g[h];
        l = o.slice(h, h + 1);
        if (h === 8) {
            k = l
        }
        if (!isNaN(l)) {
            l *= j
        } else {
            for (a = 0; a < c.length; a++) {
                if (l.toUpperCase() === c[a]) {
                    l = m[a];
                    l *= j;
                    if (isNaN(k) && a === 8) {
                        k = c[a]
                    }
                    break
                }
            }
        }
        e += l
    }
    b = e % 11;
    if (b === 10) {
        b = "X"
    }
    if (b === k) {
        return true
    }
    return false
}, "The specified vehicle identification number (VIN) is invalid.");
jQuery.validator.addMethod("dateITA", function (e, c) {
    var a = false;
    var g = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
    if (g.test(e)) {
        var i = e.split("/");
        var d = parseInt(i[0], 10);
        var b = parseInt(i[1], 10);
        var f = parseInt(i[2], 10);
        var h = new Date(f, b - 1, d);
        if ((h.getFullYear() === f) && (h.getMonth() === b - 1) && (h.getDate() === d)) {
            a = true
        } else {
            a = false
        }
    } else {
        a = false
    }
    return this.optional(c) || a
}, "Please enter a correct date");
jQuery.validator.addMethod("iban", function (q, j) {
    if (this.optional(j)) {
        return true
    }
    if (!(/^([a-zA-Z0-9]{4} ){2,8}[a-zA-Z0-9]{1,4}|[a-zA-Z0-9]{12,34}$/.test(q))) {
        return false
    }
    var g = q.replace(/ /g, "").toUpperCase();
    var c = g.substring(0, 2);
    var a = {AL: "\\d{8}[\\dA-Z]{16}", AD: "\\d{8}[\\dA-Z]{12}", AT: "\\d{16}", AZ: "[\\dA-Z]{4}\\d{20}", BE: "\\d{12}", BH: "[A-Z]{4}[\\dA-Z]{14}", BA: "\\d{16}", BR: "\\d{23}[A-Z][\\dA-Z]", BG: "[A-Z]{4}\\d{6}[\\dA-Z]{8}", CR: "\\d{17}", HR: "\\d{17}", CY: "\\d{8}[\\dA-Z]{16}", CZ: "\\d{20}", DK: "\\d{14}", DO: "[A-Z]{4}\\d{20}", EE: "\\d{16}", FO: "\\d{14}", FI: "\\d{14}", FR: "\\d{10}[\\dA-Z]{11}\\d{2}", GE: "[\\dA-Z]{2}\\d{16}", DE: "\\d{18}", GI: "[A-Z]{4}[\\dA-Z]{15}", GR: "\\d{7}[\\dA-Z]{16}", GL: "\\d{14}", GT: "[\\dA-Z]{4}[\\dA-Z]{20}", HU: "\\d{24}", IS: "\\d{22}", IE: "[\\dA-Z]{4}\\d{14}", IL: "\\d{19}", IT: "[A-Z]\\d{10}[\\dA-Z]{12}", KZ: "\\d{3}[\\dA-Z]{13}", KW: "[A-Z]{4}[\\dA-Z]{22}", LV: "[A-Z]{4}[\\dA-Z]{13}", LB: "\\d{4}[\\dA-Z]{20}", LI: "\\d{5}[\\dA-Z]{12}", LT: "\\d{16}", LU: "\\d{3}[\\dA-Z]{13}", MK: "\\d{3}[\\dA-Z]{10}\\d{2}", MT: "[A-Z]{4}\\d{5}[\\dA-Z]{18}", MR: "\\d{23}", MU: "[A-Z]{4}\\d{19}[A-Z]{3}", MC: "\\d{10}[\\dA-Z]{11}\\d{2}", MD: "[\\dA-Z]{2}\\d{18}", ME: "\\d{18}", NL: "[A-Z]{4}\\d{10}", NO: "\\d{11}", PK: "[\\dA-Z]{4}\\d{16}", PS: "[\\dA-Z]{4}\\d{21}", PL: "\\d{24}", PT: "\\d{21}", RO: "[A-Z]{4}[\\dA-Z]{16}", SM: "[A-Z]\\d{10}[\\dA-Z]{12}", SA: "\\d{2}[\\dA-Z]{18}", RS: "\\d{18}", SK: "\\d{20}", SI: "\\d{15}", ES: "\\d{20}", SE: "\\d{20}", CH: "\\d{5}[\\dA-Z]{12}", TN: "\\d{20}", TR: "\\d{5}[\\dA-Z]{17}", AE: "\\d{3}\\d{16}", GB: "[A-Z]{4}\\d{14}", VG: "[\\dA-Z]{4}\\d{16}"};
    var m = a[c];
    if (typeof m !== "undefined") {
        var k = new RegExp("^[A-Z]{2}\\d{2}" + m + "$", "");
        if (!(k.test(g))) {
            return false
        }
    }
    var e = g.substring(4, g.length) + g.substring(0, 4);
    var f = "";
    var l = true;
    var d;
    for (var h = 0; h < e.length; h++) {
        d = e.charAt(h);
        if (d !== "0") {
            l = false
        }
        if (!l) {
            f += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(d)
        }
    }
    var r = "";
    var o = "";
    for (var b = 0; b < f.length; b++) {
        var n = f.charAt(b);
        o = "" + r + "" + n;
        r = o % 97
    }
    return r === 1
}, "Please specify a valid IBAN");
jQuery.validator.addMethod("dateNL", function (b, a) {
    return this.optional(a) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(b)
}, "Please enter a correct date");
jQuery.validator.addMethod("phoneNL", function (b, a) {
    return this.optional(a) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(b)
}, "Please specify a valid phone number.");
jQuery.validator.addMethod("mobileNL", function (b, a) {
    return this.optional(a) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(b)
}, "Please specify a valid mobile number");
jQuery.validator.addMethod("postalcodeNL", function (b, a) {
    return this.optional(a) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(b)
}, "Please specify a valid postal code");
jQuery.validator.addMethod("bankaccountNL", function (f, c) {
    if (this.optional(c)) {
        return true
    }
    if (!(/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(f))) {
        return false
    }
    var e = f.replace(/ /g, "");
    var d = 0;
    var a = e.length;
    for (var h = 0; h < a; h++) {
        var b = a - h;
        var g = e.substring(h, h + 1);
        d = d + b * g
    }
    return d % 11 === 0
}, "Please specify a valid bank account number");
jQuery.validator.addMethod("giroaccountNL", function (b, a) {
    return this.optional(a) || /^[0-9]{1,7}$/.test(b)
}, "Please specify a valid giro account number");
jQuery.validator.addMethod("bankorgiroaccountNL", function (b, a) {
    return this.optional(a) || ($.validator.methods.bankaccountNL.call(this, b, a)) || ($.validator.methods.giroaccountNL.call(this, b, a))
}, "Please specify a valid bank or giro account number");
jQuery.validator.addMethod("time", function (b, a) {
    return this.optional(a) || /^([01]\d|2[0-3])(:[0-5]\d){1,2}$/.test(b)
}, "Please enter a valid time, between 00:00 and 23:59");
jQuery.validator.addMethod("time12h", function (b, a) {
    return this.optional(a) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(b)
}, "Please enter a valid time in 12-hour am/pm format");
jQuery.validator.addMethod("phoneUS", function (a, b) {
    a = a.replace(/\s+/g, "");
    return this.optional(b) || a.length > 9 && a.match(/^(\+?1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/)
}, "Please specify a valid phone number");
jQuery.validator.addMethod("phoneUK", function (a, b) {
    a = a.replace(/\(|\)|\s+|-/g, "");
    return this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/)
}, "Please specify a valid phone number");
jQuery.validator.addMethod("mobileUK", function (a, b) {
    a = a.replace(/\(|\)|\s+|-/g, "");
    return this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[45789]\d{2}|624)\s?\d{3}\s?\d{3})$/)
}, "Please specify a valid mobile number");
jQuery.validator.addMethod("phonesUK", function (a, b) {
    a = a.replace(/\(|\)|\s+|-/g, "");
    return this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[45789]\d{8}|624\d{6})))$/)
}, "Please specify a valid uk phone number");
jQuery.validator.addMethod("postcodeUK", function (b, a) {
    return this.optional(a) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(b)
}, "Please specify a valid UK postcode");
jQuery.validator.addMethod("strippedminlength", function (b, a, c) {
    return jQuery(b).text().length >= c
}, jQuery.validator.format("Please enter at least {0} characters"));
jQuery.validator.addMethod("email2", function (b, a, c) {
    return this.optional(a) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(b)
}, jQuery.validator.messages.email);
jQuery.validator.addMethod("url2", function (b, a, c) {
    return this.optional(a) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(b)
}, jQuery.validator.messages.url);
jQuery.validator.addMethod("creditcardtypes", function (b, a, c) {
    if (/[^0-9\-]+/.test(b)) {
        return false
    }
    b = b.replace(/\D/g, "");
    var d = 0;
    if (c.mastercard) {
        d |= 1
    }
    if (c.visa) {
        d |= 2
    }
    if (c.amex) {
        d |= 4
    }
    if (c.dinersclub) {
        d |= 8
    }
    if (c.enroute) {
        d |= 16
    }
    if (c.discover) {
        d |= 32
    }
    if (c.jcb) {
        d |= 64
    }
    if (c.unknown) {
        d |= 128
    }
    if (c.all) {
        d = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128
    }
    if (d & 1 && /^(5[12345])/.test(b)) {
        return b.length === 16
    }
    if (d & 2 && /^(4)/.test(b)) {
        return b.length === 16
    }
    if (d & 4 && /^(3[47])/.test(b)) {
        return b.length === 15
    }
    if (d & 8 && /^(3(0[012345]|[68]))/.test(b)) {
        return b.length === 14
    }
    if (d & 16 && /^(2(014|149))/.test(b)) {
        return b.length === 15
    }
    if (d & 32 && /^(6011)/.test(b)) {
        return b.length === 16
    }
    if (d & 64 && /^(3)/.test(b)) {
        return b.length === 16
    }
    if (d & 64 && /^(2131|1800)/.test(b)) {
        return b.length === 15
    }
    if (d & 128) {
        return true
    }
    return false
}, "Please enter a valid credit card number.");
jQuery.validator.addMethod("ipv4", function (b, a, c) {
    return this.optional(a) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(b)
}, "Please enter a valid IP v4 address.");
jQuery.validator.addMethod("ipv6", function (b, a, c) {
    return this.optional(a) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(b)
}, "Please enter a valid IP v6 address.");
jQuery.validator.addMethod("pattern", function (b, a, c) {
    if (this.optional(a)) {
        return true
    }
    if (typeof c === "string") {
        c = new RegExp("^(?:" + c + ")$")
    }
    return c.test(b)
}, "Invalid format.");
jQuery.validator.addMethod("require_from_group", function (g, f, d) {
    var e = this;
    var b = d[1];
    var c = $(b, f.form).filter(function () {
        return e.elementValue(this)
    }).length >= d[0];
    if (!$(f).data("being_validated")) {
        var a = $(b, f.form);
        a.data("being_validated", true);
        a.valid();
        a.data("being_validated", false)
    }
    return c
}, jQuery.format("Please fill at least {0} of these fields."));
jQuery.validator.addMethod("skip_or_fill_minimum", function (h, e, i) {
    var b = this, c = i[0], d = i[1];
    var g = $(d, e.form).filter(function () {
        return b.elementValue(this)
    }).length;
    var a = g >= c || g === 0;
    if (!$(e).data("being_validated")) {
        var f = $(d, e.form);
        f.data("being_validated", true);
        f.valid();
        f.data("being_validated", false)
    }
    return a
}, jQuery.format("Please either skip these fields or fill at least {0} of them."));
jQuery.validator.addMethod("accept", function (e, c, g) {
    var f = typeof g === "string" ? g.replace(/\s/g, "").replace(/,/g, "|") : "image/*", d = this.optional(c), b, a;
    if (d) {
        return d
    }
    if ($(c).attr("type") === "file") {
        f = f.replace(/\*/g, ".*");
        if (c.files && c.files.length) {
            for (b = 0; b < c.files.length; b++) {
                a = c.files[b];
                if (!a.type.match(new RegExp(".?(" + f + ")$", "i"))) {
                    return false
                }
            }
        }
    }
    return true
}, jQuery.format("Please enter a value with a valid mimetype."));
jQuery.validator.addMethod("extension", function (b, a, c) {
    c = typeof c === "string" ? c.replace(/,/g, "|") : "png|jpe?g|gif";
    return this.optional(a) || b.match(new RegExp(".(" + c + ")$", "i"))
}, jQuery.format("Please enter a value with a valid extension."));
/**
 * @license wysihtml5 v0.3.0
 * https://github.com/xing/wysihtml5
 *
 * Author: Christopher Blum (https://github.com/tiff)
 *
 * Copyright (C) 2012 XING AG
 * Licensed under the MIT license (MIT)
 *
 */
var wysihtml5 = {
    version: "0.3.0",

    // namespaces
    commands: {},
    dom: {},
    quirks: {},
    toolbar: {},
    lang: {},
    selection: {},
    views: {},

    INVISIBLE_SPACE: "\uFEFF",

    EMPTY_FUNCTION: function () {
    },

    ELEMENT_NODE: 1,
    TEXT_NODE: 3,

    BACKSPACE_KEY: 8,
    ENTER_KEY: 13,
    ESCAPE_KEY: 27,
    SPACE_KEY: 32,
    DELETE_KEY: 46
};
/**
 * @license Rangy, a cross-browser JavaScript range and selection library
 * http://code.google.com/p/rangy/
 *
 * Copyright 2011, Tim Down
 * Licensed under the MIT license.
 * Version: 1.2.2
 * Build date: 13 November 2011
 */
window['rangy'] = (function () {


    var OBJECT = "object", FUNCTION = "function", UNDEFINED = "undefined";

    var domRangeProperties = ["startContainer", "startOffset", "endContainer", "endOffset", "collapsed",
        "commonAncestorContainer", "START_TO_START", "START_TO_END", "END_TO_START", "END_TO_END"];

    var domRangeMethods = ["setStart", "setStartBefore", "setStartAfter", "setEnd", "setEndBefore",
        "setEndAfter", "collapse", "selectNode", "selectNodeContents", "compareBoundaryPoints", "deleteContents",
        "extractContents", "cloneContents", "insertNode", "surroundContents", "cloneRange", "toString", "detach"];

    var textRangeProperties = ["boundingHeight", "boundingLeft", "boundingTop", "boundingWidth", "htmlText", "text"];

    // Subset of TextRange's full set of methods that we're interested in
    var textRangeMethods = ["collapse", "compareEndPoints", "duplicate", "getBookmark", "moveToBookmark",
        "moveToElementText", "parentElement", "pasteHTML", "select", "setEndPoint", "getBoundingClientRect"];

    /*----------------------------------------------------------------------------------------------------------------*/

    // Trio of functions taken from Peter Michaux's article:
    // http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting
    function isHostMethod(o, p) {
        var t = typeof o[p];
        return t == FUNCTION || (!!(t == OBJECT && o[p])) || t == "unknown";
    }

    function isHostObject(o, p) {
        return !!(typeof o[p] == OBJECT && o[p]);
    }

    function isHostProperty(o, p) {
        return typeof o[p] != UNDEFINED;
    }

    // Creates a convenience function to save verbose repeated calls to tests functions
    function createMultiplePropertyTest(testFunc) {
        return function (o, props) {
            var i = props.length;
            while (i--) {
                if (!testFunc(o, props[i])) {
                    return false;
                }
            }
            return true;
        };
    }

    // Next trio of functions are a convenience to save verbose repeated calls to previous two functions
    var areHostMethods = createMultiplePropertyTest(isHostMethod);
    var areHostObjects = createMultiplePropertyTest(isHostObject);
    var areHostProperties = createMultiplePropertyTest(isHostProperty);

    function isTextRange(range) {
        return range && areHostMethods(range, textRangeMethods) && areHostProperties(range, textRangeProperties);
    }

    var api = {
        version: "1.2.2",
        initialized: false,
        supported: true,

        util: {
            isHostMethod: isHostMethod,
            isHostObject: isHostObject,
            isHostProperty: isHostProperty,
            areHostMethods: areHostMethods,
            areHostObjects: areHostObjects,
            areHostProperties: areHostProperties,
            isTextRange: isTextRange
        },

        features: {},

        modules: {},
        config: {
            alertOnWarn: false,
            preferTextRange: false
        }
    };

    function fail(reason) {
        window.alert("Rangy not supported in your browser. Reason: " + reason);
        api.initialized = true;
        api.supported = false;
    }

    api.fail = fail;

    function warn(msg) {
        var warningMessage = "Rangy warning: " + msg;
        if (api.config.alertOnWarn) {
            window.alert(warningMessage);
        } else if (typeof window.console != UNDEFINED && typeof window.console.log != UNDEFINED) {
            window.console.log(warningMessage);
        }
    }

    api.warn = warn;

    if ({}.hasOwnProperty) {
        api.util.extend = function (o, props) {
            for (var i in props) {
                if (props.hasOwnProperty(i)) {
                    o[i] = props[i];
                }
            }
        };
    } else {
        fail("hasOwnProperty not supported");
    }

    var initListeners = [];
    var moduleInitializers = [];

    // Initialization
    function init() {
        if (api.initialized) {
            return;
        }
        var testRange;
        var implementsDomRange = false, implementsTextRange = false;

        // First, perform basic feature tests

        if (isHostMethod(document, "createRange")) {
            testRange = document.createRange();
            if (areHostMethods(testRange, domRangeMethods) && areHostProperties(testRange, domRangeProperties)) {
                implementsDomRange = true;
            }
            testRange.detach();
        }

        var body = isHostObject(document, "body") ? document.body : document.getElementsByTagName("body")[0];

        if (body && isHostMethod(body, "createTextRange")) {
            testRange = body.createTextRange();
            if (isTextRange(testRange)) {
                implementsTextRange = true;
            }
        }

        if (!implementsDomRange && !implementsTextRange) {
            fail("Neither Range nor TextRange are implemented");
        }

        api.initialized = true;
        api.features = {
            implementsDomRange: implementsDomRange,
            implementsTextRange: implementsTextRange
        };

        // Initialize modules and call init listeners
        var allListeners = moduleInitializers.concat(initListeners);
        for (var i = 0, len = allListeners.length; i < len; ++i) {
            try {
                allListeners[i](api);
            } catch (ex) {
                if (isHostObject(window, "console") && isHostMethod(window.console, "log")) {
                    window.console.log("Init listener threw an exception. Continuing.", ex);
                }

            }
        }
    }

    // Allow external scripts to initialize this library in case it's loaded after the document has loaded
    api.init = init;

    // Execute listener immediately if already initialized
    api.addInitListener = function (listener) {
        if (api.initialized) {
            listener(api);
        } else {
            initListeners.push(listener);
        }
    };

    var createMissingNativeApiListeners = [];

    api.addCreateMissingNativeApiListener = function (listener) {
        createMissingNativeApiListeners.push(listener);
    };

    function createMissingNativeApi(win) {
        win = win || window;
        init();

        // Notify listeners
        for (var i = 0, len = createMissingNativeApiListeners.length; i < len; ++i) {
            createMissingNativeApiListeners[i](win);
        }
    }

    api.createMissingNativeApi = createMissingNativeApi;

    /**
     * @constructor
     */
    function Module(name) {
        this.name = name;
        this.initialized = false;
        this.supported = false;
    }

    Module.prototype.fail = function (reason) {
        this.initialized = true;
        this.supported = false;

        throw new Error("Module '" + this.name + "' failed to load: " + reason);
    };

    Module.prototype.warn = function (msg) {
        api.warn("Module " + this.name + ": " + msg);
    };

    Module.prototype.createError = function (msg) {
        return new Error("Error in Rangy " + this.name + " module: " + msg);
    };

    api.createModule = function (name, initFunc) {
        var module = new Module(name);
        api.modules[name] = module;

        moduleInitializers.push(function (api) {
            initFunc(api, module);
            module.initialized = true;
            module.supported = true;
        });
    };

    api.requireModules = function (modules) {
        for (var i = 0, len = modules.length, module, moduleName; i < len; ++i) {
            moduleName = modules[i];
            module = api.modules[moduleName];
            if (!module || !(module instanceof Module)) {
                throw new Error("Module '" + moduleName + "' not found");
            }
            if (!module.supported) {
                throw new Error("Module '" + moduleName + "' not supported");
            }
        }
    };

    /*----------------------------------------------------------------------------------------------------------------*/

    // Wait for document to load before running tests

    var docReady = false;

    var loadHandler = function (e) {

        if (!docReady) {
            docReady = true;
            if (!api.initialized) {
                init();
            }
        }
    };

    // Test whether we have window and document objects that we will need
    if (typeof window == UNDEFINED) {
        fail("No window found");
        return;
    }
    if (typeof document == UNDEFINED) {
        fail("No document found");
        return;
    }

    if (isHostMethod(document, "addEventListener")) {
        document.addEventListener("DOMContentLoaded", loadHandler, false);
    }

    // Add a fallback in case the DOMContentLoaded event isn't supported
    if (isHostMethod(window, "addEventListener")) {
        window.addEventListener("load", loadHandler, false);
    } else if (isHostMethod(window, "attachEvent")) {
        window.attachEvent("onload", loadHandler);
    } else {
        fail("Window does not have required addEventListener or attachEvent method");
    }

    return api;
})();
rangy.createModule("DomUtil", function (api, module) {

    var UNDEF = "undefined";
    var util = api.util;

    // Perform feature tests
    if (!util.areHostMethods(document, ["createDocumentFragment", "createElement", "createTextNode"])) {
        module.fail("document missing a Node creation method");
    }

    if (!util.isHostMethod(document, "getElementsByTagName")) {
        module.fail("document missing getElementsByTagName method");
    }

    var el = document.createElement("div");
    if (!util.areHostMethods(el, ["insertBefore", "appendChild", "cloneNode"] || !util.areHostObjects(el, ["previousSibling", "nextSibling", "childNodes", "parentNode"]))) {
        module.fail("Incomplete Element implementation");
    }

    // innerHTML is required for Range's createContextualFragment method
    if (!util.isHostProperty(el, "innerHTML")) {
        module.fail("Element is missing innerHTML property");
    }

    var textNode = document.createTextNode("test");
    if (!util.areHostMethods(textNode, ["splitText", "deleteData", "insertData", "appendData", "cloneNode"] || !util.areHostObjects(el, ["previousSibling", "nextSibling", "childNodes", "parentNode"]) || !util.areHostProperties(textNode, ["data"]))) {
        module.fail("Incomplete Text Node implementation");
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    // Removed use of indexOf because of a bizarre bug in Opera that is thrown in one of the Acid3 tests. I haven't been
    // able to replicate it outside of the test. The bug is that indexOf returns -1 when called on an Array that
    // contains just the document as a single element and the value searched for is the document.
    var arrayContains = /*Array.prototype.indexOf ?
     function(arr, val) {
     return arr.indexOf(val) > -1;
     }:*/

        function (arr, val) {
            var i = arr.length;
            while (i--) {
                if (arr[i] === val) {
                    return true;
                }
            }
            return false;
        };

    // Opera 11 puts HTML elements in the null namespace, it seems, and IE 7 has undefined namespaceURI
    function isHtmlNamespace(node) {
        var ns;
        return typeof node.namespaceURI == UNDEF || ((ns = node.namespaceURI) === null || ns == "http://www.w3.org/1999/xhtml");
    }

    function parentElement(node) {
        var parent = node.parentNode;
        return (parent.nodeType == 1) ? parent : null;
    }

    function getNodeIndex(node) {
        var i = 0;
        while ((node = node.previousSibling)) {
            i++;
        }
        return i;
    }

    function getNodeLength(node) {
        var childNodes;
        return isCharacterDataNode(node) ? node.length : ((childNodes = node.childNodes) ? childNodes.length : 0);
    }

    function getCommonAncestor(node1, node2) {
        var ancestors = [], n;
        for (n = node1; n; n = n.parentNode) {
            ancestors.push(n);
        }

        for (n = node2; n; n = n.parentNode) {
            if (arrayContains(ancestors, n)) {
                return n;
            }
        }

        return null;
    }

    function isAncestorOf(ancestor, descendant, selfIsAncestor) {
        var n = selfIsAncestor ? descendant : descendant.parentNode;
        while (n) {
            if (n === ancestor) {
                return true;
            } else {
                n = n.parentNode;
            }
        }
        return false;
    }

    function getClosestAncestorIn(node, ancestor, selfIsAncestor) {
        var p, n = selfIsAncestor ? node : node.parentNode;
        while (n) {
            p = n.parentNode;
            if (p === ancestor) {
                return n;
            }
            n = p;
        }
        return null;
    }

    function isCharacterDataNode(node) {
        var t = node.nodeType;
        return t == 3 || t == 4 || t == 8; // Text, CDataSection or Comment
    }

    function insertAfter(node, precedingNode) {
        var nextNode = precedingNode.nextSibling, parent = precedingNode.parentNode;
        if (nextNode) {
            parent.insertBefore(node, nextNode);
        } else {
            parent.appendChild(node);
        }
        return node;
    }

    // Note that we cannot use splitText() because it is bugridden in IE 9.
    function splitDataNode(node, index) {
        var newNode = node.cloneNode(false);
        newNode.deleteData(0, index);
        node.deleteData(index, node.length - index);
        insertAfter(newNode, node);
        return newNode;
    }

    function getDocument(node) {
        if (node.nodeType == 9) {
            return node;
        } else if (typeof node.ownerDocument != UNDEF) {
            return node.ownerDocument;
        } else if (typeof node.document != UNDEF) {
            return node.document;
        } else if (node.parentNode) {
            return getDocument(node.parentNode);
        } else {
            throw new Error("getDocument: no document found for node");
        }
    }

    function getWindow(node) {
        var doc = getDocument(node);
        if (typeof doc.defaultView != UNDEF) {
            return doc.defaultView;
        } else if (typeof doc.parentWindow != UNDEF) {
            return doc.parentWindow;
        } else {
            throw new Error("Cannot get a window object for node");
        }
    }

    function getIframeDocument(iframeEl) {
        if (typeof iframeEl.contentDocument != UNDEF) {
            return iframeEl.contentDocument;
        } else if (typeof iframeEl.contentWindow != UNDEF) {
            return iframeEl.contentWindow.document;
        } else {
            throw new Error("getIframeWindow: No Document object found for iframe element");
        }
    }

    function getIframeWindow(iframeEl) {
        if (typeof iframeEl.contentWindow != UNDEF) {
            return iframeEl.contentWindow;
        } else if (typeof iframeEl.contentDocument != UNDEF) {
            return iframeEl.contentDocument.defaultView;
        } else {
            throw new Error("getIframeWindow: No Window object found for iframe element");
        }
    }

    function getBody(doc) {
        return util.isHostObject(doc, "body") ? doc.body : doc.getElementsByTagName("body")[0];
    }

    function getRootContainer(node) {
        var parent;
        while ((parent = node.parentNode)) {
            node = parent;
        }
        return node;
    }

    function comparePoints(nodeA, offsetA, nodeB, offsetB) {
        // See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing
        var nodeC, root, childA, childB, n;
        if (nodeA == nodeB) {

            // Case 1: nodes are the same
            return offsetA === offsetB ? 0 : (offsetA < offsetB) ? -1 : 1;
        } else if ((nodeC = getClosestAncestorIn(nodeB, nodeA, true))) {

            // Case 2: node C (container B or an ancestor) is a child node of A
            return offsetA <= getNodeIndex(nodeC) ? -1 : 1;
        } else if ((nodeC = getClosestAncestorIn(nodeA, nodeB, true))) {

            // Case 3: node C (container A or an ancestor) is a child node of B
            return getNodeIndex(nodeC) < offsetB ? -1 : 1;
        } else {

            // Case 4: containers are siblings or descendants of siblings
            root = getCommonAncestor(nodeA, nodeB);
            childA = (nodeA === root) ? root : getClosestAncestorIn(nodeA, root, true);
            childB = (nodeB === root) ? root : getClosestAncestorIn(nodeB, root, true);

            if (childA === childB) {
                // This shouldn't be possible

                throw new Error("comparePoints got to case 4 and childA and childB are the same!");
            } else {
                n = root.firstChild;
                while (n) {
                    if (n === childA) {
                        return -1;
                    } else if (n === childB) {
                        return 1;
                    }
                    n = n.nextSibling;
                }
                throw new Error("Should not be here!");
            }
        }
    }

    function fragmentFromNodeChildren(node) {
        var fragment = getDocument(node).createDocumentFragment(), child;
        while ((child = node.firstChild)) {
            fragment.appendChild(child);
        }
        return fragment;
    }

    function inspectNode(node) {
        if (!node) {
            return "[No node]";
        }
        if (isCharacterDataNode(node)) {
            return '"' + node.data + '"';
        } else if (node.nodeType == 1) {
            var idAttr = node.id ? ' id="' + node.id + '"' : "";
            return "<" + node.nodeName + idAttr + ">[" + node.childNodes.length + "]";
        } else {
            return node.nodeName;
        }
    }

    /**
     * @constructor
     */
    function NodeIterator(root) {
        this.root = root;
        this._next = root;
    }

    NodeIterator.prototype = {
        _current: null,

        hasNext: function () {
            return !!this._next;
        },

        next: function () {
            var n = this._current = this._next;
            var child, next;
            if (this._current) {
                child = n.firstChild;
                if (child) {
                    this._next = child;
                } else {
                    next = null;
                    while ((n !== this.root) && !(next = n.nextSibling)) {
                        n = n.parentNode;
                    }
                    this._next = next;
                }
            }
            return this._current;
        },

        detach: function () {
            this._current = this._next = this.root = null;
        }
    };

    function createIterator(root) {
        return new NodeIterator(root);
    }

    /**
     * @constructor
     */
    function DomPosition(node, offset) {
        this.node = node;
        this.offset = offset;
    }

    DomPosition.prototype = {
        equals: function (pos) {
            return this.node === pos.node & this.offset == pos.offset;
        },

        inspect: function () {
            return "[DomPosition(" + inspectNode(this.node) + ":" + this.offset + ")]";
        }
    };

    /**
     * @constructor
     */
    function DOMException(codeName) {
        this.code = this[codeName];
        this.codeName = codeName;
        this.message = "DOMException: " + this.codeName;
    }

    DOMException.prototype = {
        INDEX_SIZE_ERR: 1,
        HIERARCHY_REQUEST_ERR: 3,
        WRONG_DOCUMENT_ERR: 4,
        NO_MODIFICATION_ALLOWED_ERR: 7,
        NOT_FOUND_ERR: 8,
        NOT_SUPPORTED_ERR: 9,
        INVALID_STATE_ERR: 11
    };

    DOMException.prototype.toString = function () {
        return this.message;
    };

    api.dom = {
        arrayContains: arrayContains,
        isHtmlNamespace: isHtmlNamespace,
        parentElement: parentElement,
        getNodeIndex: getNodeIndex,
        getNodeLength: getNodeLength,
        getCommonAncestor: getCommonAncestor,
        isAncestorOf: isAncestorOf,
        getClosestAncestorIn: getClosestAncestorIn,
        isCharacterDataNode: isCharacterDataNode,
        insertAfter: insertAfter,
        splitDataNode: splitDataNode,
        getDocument: getDocument,
        getWindow: getWindow,
        getIframeWindow: getIframeWindow,
        getIframeDocument: getIframeDocument,
        getBody: getBody,
        getRootContainer: getRootContainer,
        comparePoints: comparePoints,
        inspectNode: inspectNode,
        fragmentFromNodeChildren: fragmentFromNodeChildren,
        createIterator: createIterator,
        DomPosition: DomPosition
    };

    api.DOMException = DOMException;
});
rangy.createModule("DomRange", function (api, module) {
    api.requireModules(["DomUtil"]);


    var dom = api.dom;
    var DomPosition = dom.DomPosition;
    var DOMException = api.DOMException;

    /*----------------------------------------------------------------------------------------------------------------*/

    // Utility functions

    function isNonTextPartiallySelected(node, range) {
        return (node.nodeType != 3) &&
            (dom.isAncestorOf(node, range.startContainer, true) || dom.isAncestorOf(node, range.endContainer, true));
    }

    function getRangeDocument(range) {
        return dom.getDocument(range.startContainer);
    }

    function dispatchEvent(range, type, args) {
        var listeners = range._listeners[type];
        if (listeners) {
            for (var i = 0, len = listeners.length; i < len; ++i) {
                listeners[i].call(range, {target: range, args: args});
            }
        }
    }

    function getBoundaryBeforeNode(node) {
        return new DomPosition(node.parentNode, dom.getNodeIndex(node));
    }

    function getBoundaryAfterNode(node) {
        return new DomPosition(node.parentNode, dom.getNodeIndex(node) + 1);
    }

    function insertNodeAtPosition(node, n, o) {
        var firstNodeInserted = node.nodeType == 11 ? node.firstChild : node;
        if (dom.isCharacterDataNode(n)) {
            if (o == n.length) {
                dom.insertAfter(node, n);
            } else {
                n.parentNode.insertBefore(node, o == 0 ? n : dom.splitDataNode(n, o));
            }
        } else if (o >= n.childNodes.length) {
            n.appendChild(node);
        } else {
            n.insertBefore(node, n.childNodes[o]);
        }
        return firstNodeInserted;
    }

    function cloneSubtree(iterator) {
        var partiallySelected;
        for (var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {
            partiallySelected = iterator.isPartiallySelectedSubtree();

            node = node.cloneNode(!partiallySelected);
            if (partiallySelected) {
                subIterator = iterator.getSubtreeIterator();
                node.appendChild(cloneSubtree(subIterator));
                subIterator.detach(true);
            }

            if (node.nodeType == 10) { // DocumentType
                throw new DOMException("HIERARCHY_REQUEST_ERR");
            }
            frag.appendChild(node);
        }
        return frag;
    }

    function iterateSubtree(rangeIterator, func, iteratorState) {
        var it, n;
        iteratorState = iteratorState || { stop: false };
        for (var node, subRangeIterator; node = rangeIterator.next();) {
            //log.debug("iterateSubtree, partially selected: " + rangeIterator.isPartiallySelectedSubtree(), nodeToString(node));
            if (rangeIterator.isPartiallySelectedSubtree()) {
                // The node is partially selected by the Range, so we can use a new RangeIterator on the portion of the
                // node selected by the Range.
                if (func(node) === false) {
                    iteratorState.stop = true;
                    return;
                } else {
                    subRangeIterator = rangeIterator.getSubtreeIterator();
                    iterateSubtree(subRangeIterator, func, iteratorState);
                    subRangeIterator.detach(true);
                    if (iteratorState.stop) {
                        return;
                    }
                }
            } else {
                // The whole node is selected, so we can use efficient DOM iteration to iterate over the node and its
                // descendant
                it = dom.createIterator(node);
                while ((n = it.next())) {
                    if (func(n) === false) {
                        iteratorState.stop = true;
                        return;
                    }
                }
            }
        }
    }

    function deleteSubtree(iterator) {
        var subIterator;
        while (iterator.next()) {
            if (iterator.isPartiallySelectedSubtree()) {
                subIterator = iterator.getSubtreeIterator();
                deleteSubtree(subIterator);
                subIterator.detach(true);
            } else {
                iterator.remove();
            }
        }
    }

    function extractSubtree(iterator) {

        for (var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {


            if (iterator.isPartiallySelectedSubtree()) {
                node = node.cloneNode(false);
                subIterator = iterator.getSubtreeIterator();
                node.appendChild(extractSubtree(subIterator));
                subIterator.detach(true);
            } else {
                iterator.remove();
            }
            if (node.nodeType == 10) { // DocumentType
                throw new DOMException("HIERARCHY_REQUEST_ERR");
            }
            frag.appendChild(node);
        }
        return frag;
    }

    function getNodesInRange(range, nodeTypes, filter) {
        //log.info("getNodesInRange, " + nodeTypes.join(","));
        var filterNodeTypes = !!(nodeTypes && nodeTypes.length), regex;
        var filterExists = !!filter;
        if (filterNodeTypes) {
            regex = new RegExp("^(" + nodeTypes.join("|") + ")$");
        }

        var nodes = [];
        iterateSubtree(new RangeIterator(range, false), function (node) {
            if ((!filterNodeTypes || regex.test(node.nodeType)) && (!filterExists || filter(node))) {
                nodes.push(node);
            }
        });
        return nodes;
    }

    function inspect(range) {
        var name = (typeof range.getName == "undefined") ? "Range" : range.getName();
        return "[" + name + "(" + dom.inspectNode(range.startContainer) + ":" + range.startOffset + ", " +
            dom.inspectNode(range.endContainer) + ":" + range.endOffset + ")]";
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    // RangeIterator code partially borrows from IERange by Tim Ryan (http://github.com/timcameronryan/IERange)

    /**
     * @constructor
     */
    function RangeIterator(range, clonePartiallySelectedTextNodes) {
        this.range = range;
        this.clonePartiallySelectedTextNodes = clonePartiallySelectedTextNodes;


        if (!range.collapsed) {
            this.sc = range.startContainer;
            this.so = range.startOffset;
            this.ec = range.endContainer;
            this.eo = range.endOffset;
            var root = range.commonAncestorContainer;

            if (this.sc === this.ec && dom.isCharacterDataNode(this.sc)) {
                this.isSingleCharacterDataNode = true;
                this._first = this._last = this._next = this.sc;
            } else {
                this._first = this._next = (this.sc === root && !dom.isCharacterDataNode(this.sc)) ?
                    this.sc.childNodes[this.so] : dom.getClosestAncestorIn(this.sc, root, true);
                this._last = (this.ec === root && !dom.isCharacterDataNode(this.ec)) ?
                    this.ec.childNodes[this.eo - 1] : dom.getClosestAncestorIn(this.ec, root, true);
            }

        }
    }

    RangeIterator.prototype = {
        _current: null,
        _next: null,
        _first: null,
        _last: null,
        isSingleCharacterDataNode: false,

        reset: function () {
            this._current = null;
            this._next = this._first;
        },

        hasNext: function () {
            return !!this._next;
        },

        next: function () {
            // Move to next node
            var current = this._current = this._next;
            if (current) {
                this._next = (current !== this._last) ? current.nextSibling : null;

                // Check for partially selected text nodes
                if (dom.isCharacterDataNode(current) && this.clonePartiallySelectedTextNodes) {
                    if (current === this.ec) {

                        (current = current.cloneNode(true)).deleteData(this.eo, current.length - this.eo);
                    }
                    if (this._current === this.sc) {

                        (current = current.cloneNode(true)).deleteData(0, this.so);
                    }
                }
            }

            return current;
        },

        remove: function () {
            var current = this._current, start, end;

            if (dom.isCharacterDataNode(current) && (current === this.sc || current === this.ec)) {
                start = (current === this.sc) ? this.so : 0;
                end = (current === this.ec) ? this.eo : current.length;
                if (start != end) {
                    current.deleteData(start, end - start);
                }
            } else {
                if (current.parentNode) {
                    current.parentNode.removeChild(current);
                } else {

                }
            }
        },

        // Checks if the current node is partially selected
        isPartiallySelectedSubtree: function () {
            var current = this._current;
            return isNonTextPartiallySelected(current, this.range);
        },

        getSubtreeIterator: function () {
            var subRange;
            if (this.isSingleCharacterDataNode) {
                subRange = this.range.cloneRange();
                subRange.collapse();
            } else {
                subRange = new Range(getRangeDocument(this.range));
                var current = this._current;
                var startContainer = current, startOffset = 0, endContainer = current, endOffset = dom.getNodeLength(current);

                if (dom.isAncestorOf(current, this.sc, true)) {
                    startContainer = this.sc;
                    startOffset = this.so;
                }
                if (dom.isAncestorOf(current, this.ec, true)) {
                    endContainer = this.ec;
                    endOffset = this.eo;
                }

                updateBoundaries(subRange, startContainer, startOffset, endContainer, endOffset);
            }
            return new RangeIterator(subRange, this.clonePartiallySelectedTextNodes);
        },

        detach: function (detachRange) {
            if (detachRange) {
                this.range.detach();
            }
            this.range = this._current = this._next = this._first = this._last = this.sc = this.so = this.ec = this.eo = null;
        }
    };

    /*----------------------------------------------------------------------------------------------------------------*/

    // Exceptions

    /**
     * @constructor
     */
    function RangeException(codeName) {
        this.code = this[codeName];
        this.codeName = codeName;
        this.message = "RangeException: " + this.codeName;
    }

    RangeException.prototype = {
        BAD_BOUNDARYPOINTS_ERR: 1,
        INVALID_NODE_TYPE_ERR: 2
    };

    RangeException.prototype.toString = function () {
        return this.message;
    };

    /*----------------------------------------------------------------------------------------------------------------*/

    /**
     * Currently iterates through all nodes in the range on creation until I think of a decent way to do it
     * TODO: Look into making this a proper iterator, not requiring preloading everything first
     * @constructor
     */
    function RangeNodeIterator(range, nodeTypes, filter) {
        this.nodes = getNodesInRange(range, nodeTypes, filter);
        this._next = this.nodes[0];
        this._position = 0;
    }

    RangeNodeIterator.prototype = {
        _current: null,

        hasNext: function () {
            return !!this._next;
        },

        next: function () {
            this._current = this._next;
            this._next = this.nodes[ ++this._position ];
            return this._current;
        },

        detach: function () {
            this._current = this._next = this.nodes = null;
        }
    };

    var beforeAfterNodeTypes = [1, 3, 4, 5, 7, 8, 10];
    var rootContainerNodeTypes = [2, 9, 11];
    var readonlyNodeTypes = [5, 6, 10, 12];
    var insertableNodeTypes = [1, 3, 4, 5, 7, 8, 10, 11];
    var surroundNodeTypes = [1, 3, 4, 5, 7, 8];

    function createAncestorFinder(nodeTypes) {
        return function (node, selfIsAncestor) {
            var t, n = selfIsAncestor ? node : node.parentNode;
            while (n) {
                t = n.nodeType;
                if (dom.arrayContains(nodeTypes, t)) {
                    return n;
                }
                n = n.parentNode;
            }
            return null;
        };
    }

    var getRootContainer = dom.getRootContainer;
    var getDocumentOrFragmentContainer = createAncestorFinder([9, 11]);
    var getReadonlyAncestor = createAncestorFinder(readonlyNodeTypes);
    var getDocTypeNotationEntityAncestor = createAncestorFinder([6, 10, 12]);

    function assertNoDocTypeNotationEntityAncestor(node, allowSelf) {
        if (getDocTypeNotationEntityAncestor(node, allowSelf)) {
            throw new RangeException("INVALID_NODE_TYPE_ERR");
        }
    }

    function assertNotDetached(range) {
        if (!range.startContainer) {
            throw new DOMException("INVALID_STATE_ERR");
        }
    }

    function assertValidNodeType(node, invalidTypes) {
        if (!dom.arrayContains(invalidTypes, node.nodeType)) {
            throw new RangeException("INVALID_NODE_TYPE_ERR");
        }
    }

    function assertValidOffset(node, offset) {
        if (offset < 0 || offset > (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length)) {
            throw new DOMException("INDEX_SIZE_ERR");
        }
    }

    function assertSameDocumentOrFragment(node1, node2) {
        if (getDocumentOrFragmentContainer(node1, true) !== getDocumentOrFragmentContainer(node2, true)) {
            throw new DOMException("WRONG_DOCUMENT_ERR");
        }
    }

    function assertNodeNotReadOnly(node) {
        if (getReadonlyAncestor(node, true)) {
            throw new DOMException("NO_MODIFICATION_ALLOWED_ERR");
        }
    }

    function assertNode(node, codeName) {
        if (!node) {
            throw new DOMException(codeName);
        }
    }

    function isOrphan(node) {
        return !dom.arrayContains(rootContainerNodeTypes, node.nodeType) && !getDocumentOrFragmentContainer(node, true);
    }

    function isValidOffset(node, offset) {
        return offset <= (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length);
    }

    function assertRangeValid(range) {
        assertNotDetached(range);
        if (isOrphan(range.startContainer) || isOrphan(range.endContainer) || !isValidOffset(range.startContainer, range.startOffset) || !isValidOffset(range.endContainer, range.endOffset)) {
            throw new Error("Range error: Range is no longer valid after DOM mutation (" + range.inspect() + ")");
        }
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    // Test the browser's innerHTML support to decide how to implement createContextualFragment
    var styleEl = document.createElement("style");
    var htmlParsingConforms = false;
    try {
        styleEl.innerHTML = "<b>x</b>";
        htmlParsingConforms = (styleEl.firstChild.nodeType == 3); // Opera incorrectly creates an element node
    } catch (e) {
        // IE 6 and 7 throw
    }

    api.features.htmlParsingConforms = htmlParsingConforms;

    var createContextualFragment = htmlParsingConforms ?

        // Implementation as per HTML parsing spec, trusting in the browser's implementation of innerHTML. See
        // discussion and base code for this implementation at issue 67.
        // Spec: http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface
        // Thanks to Aleks Williams.
        function (fragmentStr) {
            // "Let node the context object's start's node."
            var node = this.startContainer;
            var doc = dom.getDocument(node);

            // "If the context object's start's node is null, raise an INVALID_STATE_ERR
            // exception and abort these steps."
            if (!node) {
                throw new DOMException("INVALID_STATE_ERR");
            }

            // "Let element be as follows, depending on node's interface:"
            // Document, Document Fragment: null
            var el = null;

            // "Element: node"
            if (node.nodeType == 1) {
                el = node;

                // "Text, Comment: node's parentElement"
            } else if (dom.isCharacterDataNode(node)) {
                el = dom.parentElement(node);
            }

            // "If either element is null or element's ownerDocument is an HTML document
            // and element's local name is "html" and element's namespace is the HTML
            // namespace"
            if (el === null || (
                el.nodeName == "HTML"
                    && dom.isHtmlNamespace(dom.getDocument(el).documentElement)
                    && dom.isHtmlNamespace(el)
                )) {

                // "let element be a new Element with "body" as its local name and the HTML
                // namespace as its namespace.""
                el = doc.createElement("body");
            } else {
                el = el.cloneNode(false);
            }

            // "If the node's document is an HTML document: Invoke the HTML fragment parsing algorithm."
            // "If the node's document is an XML document: Invoke the XML fragment parsing algorithm."
            // "In either case, the algorithm must be invoked with fragment as the input
            // and element as the context element."
            el.innerHTML = fragmentStr;

            // "If this raises an exception, then abort these steps. Otherwise, let new
            // children be the nodes returned."

            // "Let fragment be a new DocumentFragment."
            // "Append all new children to fragment."
            // "Return fragment."
            return dom.fragmentFromNodeChildren(el);
        } :

        // In this case, innerHTML cannot be trusted, so fall back to a simpler, non-conformant implementation that
        // previous versions of Rangy used (with the exception of using a body element rather than a div)
        function (fragmentStr) {
            assertNotDetached(this);
            var doc = getRangeDocument(this);
            var el = doc.createElement("body");
            el.innerHTML = fragmentStr;

            return dom.fragmentFromNodeChildren(el);
        };

    /*----------------------------------------------------------------------------------------------------------------*/

    var rangeProperties = ["startContainer", "startOffset", "endContainer", "endOffset", "collapsed",
        "commonAncestorContainer"];

    var s2s = 0, s2e = 1, e2e = 2, e2s = 3;
    var n_b = 0, n_a = 1, n_b_a = 2, n_i = 3;

    function RangePrototype() {
    }

    RangePrototype.prototype = {
        attachListener: function (type, listener) {
            this._listeners[type].push(listener);
        },

        compareBoundaryPoints: function (how, range) {
            assertRangeValid(this);
            assertSameDocumentOrFragment(this.startContainer, range.startContainer);

            var nodeA, offsetA, nodeB, offsetB;
            var prefixA = (how == e2s || how == s2s) ? "start" : "end";
            var prefixB = (how == s2e || how == s2s) ? "start" : "end";
            nodeA = this[prefixA + "Container"];
            offsetA = this[prefixA + "Offset"];
            nodeB = range[prefixB + "Container"];
            offsetB = range[prefixB + "Offset"];
            return dom.comparePoints(nodeA, offsetA, nodeB, offsetB);
        },

        insertNode: function (node) {
            assertRangeValid(this);
            assertValidNodeType(node, insertableNodeTypes);
            assertNodeNotReadOnly(this.startContainer);

            if (dom.isAncestorOf(node, this.startContainer, true)) {
                throw new DOMException("HIERARCHY_REQUEST_ERR");
            }

            // No check for whether the container of the start of the Range is of a type that does not allow
            // children of the type of node: the browser's DOM implementation should do this for us when we attempt
            // to add the node

            var firstNodeInserted = insertNodeAtPosition(node, this.startContainer, this.startOffset);
            this.setStartBefore(firstNodeInserted);
        },

        cloneContents: function () {
            assertRangeValid(this);

            var clone, frag;
            if (this.collapsed) {
                return getRangeDocument(this).createDocumentFragment();
            } else {
                if (this.startContainer === this.endContainer && dom.isCharacterDataNode(this.startContainer)) {
                    clone = this.startContainer.cloneNode(true);
                    clone.data = clone.data.slice(this.startOffset, this.endOffset);
                    frag = getRangeDocument(this).createDocumentFragment();
                    frag.appendChild(clone);
                    return frag;
                } else {
                    var iterator = new RangeIterator(this, true);
                    clone = cloneSubtree(iterator);
                    iterator.detach();
                }
                return clone;
            }
        },

        canSurroundContents: function () {
            assertRangeValid(this);
            assertNodeNotReadOnly(this.startContainer);
            assertNodeNotReadOnly(this.endContainer);

            // Check if the contents can be surrounded. Specifically, this means whether the range partially selects
            // no non-text nodes.
            var iterator = new RangeIterator(this, true);
            var boundariesInvalid = (iterator._first && (isNonTextPartiallySelected(iterator._first, this)) ||
                (iterator._last && isNonTextPartiallySelected(iterator._last, this)));
            iterator.detach();
            return !boundariesInvalid;
        },

        surroundContents: function (node) {
            assertValidNodeType(node, surroundNodeTypes);

            if (!this.canSurroundContents()) {
                throw new RangeException("BAD_BOUNDARYPOINTS_ERR");
            }

            // Extract the contents
            var content = this.extractContents();

            // Clear the children of the node
            if (node.hasChildNodes()) {
                while (node.lastChild) {
                    node.removeChild(node.lastChild);
                }
            }

            // Insert the new node and add the extracted contents
            insertNodeAtPosition(node, this.startContainer, this.startOffset);
            node.appendChild(content);

            this.selectNode(node);
        },

        cloneRange: function () {
            assertRangeValid(this);
            var range = new Range(getRangeDocument(this));
            var i = rangeProperties.length, prop;
            while (i--) {
                prop = rangeProperties[i];
                range[prop] = this[prop];
            }
            return range;
        },

        toString: function () {
            assertRangeValid(this);
            var sc = this.startContainer;
            if (sc === this.endContainer && dom.isCharacterDataNode(sc)) {
                return (sc.nodeType == 3 || sc.nodeType == 4) ? sc.data.slice(this.startOffset, this.endOffset) : "";
            } else {
                var textBits = [], iterator = new RangeIterator(this, true);

                iterateSubtree(iterator, function (node) {
                    // Accept only text or CDATA nodes, not comments

                    if (node.nodeType == 3 || node.nodeType == 4) {
                        textBits.push(node.data);
                    }
                });
                iterator.detach();
                return textBits.join("");
            }
        },

        // The methods below are all non-standard. The following batch were introduced by Mozilla but have since
        // been removed from Mozilla.

        compareNode: function (node) {
            assertRangeValid(this);

            var parent = node.parentNode;
            var nodeIndex = dom.getNodeIndex(node);

            if (!parent) {
                throw new DOMException("NOT_FOUND_ERR");
            }

            var startComparison = this.comparePoint(parent, nodeIndex),
                endComparison = this.comparePoint(parent, nodeIndex + 1);

            if (startComparison < 0) { // Node starts before
                return (endComparison > 0) ? n_b_a : n_b;
            } else {
                return (endComparison > 0) ? n_a : n_i;
            }
        },

        comparePoint: function (node, offset) {
            assertRangeValid(this);
            assertNode(node, "HIERARCHY_REQUEST_ERR");
            assertSameDocumentOrFragment(node, this.startContainer);

            if (dom.comparePoints(node, offset, this.startContainer, this.startOffset) < 0) {
                return -1;
            } else if (dom.comparePoints(node, offset, this.endContainer, this.endOffset) > 0) {
                return 1;
            }
            return 0;
        },

        createContextualFragment: createContextualFragment,

        toHtml: function () {
            assertRangeValid(this);
            var container = getRangeDocument(this).createElement("div");
            container.appendChild(this.cloneContents());
            return container.innerHTML;
        },

        // touchingIsIntersecting determines whether this method considers a node that borders a range intersects
        // with it (as in WebKit) or not (as in Gecko pre-1.9, and the default)
        intersectsNode: function (node, touchingIsIntersecting) {
            assertRangeValid(this);
            assertNode(node, "NOT_FOUND_ERR");
            if (dom.getDocument(node) !== getRangeDocument(this)) {
                return false;
            }

            var parent = node.parentNode, offset = dom.getNodeIndex(node);
            assertNode(parent, "NOT_FOUND_ERR");

            var startComparison = dom.comparePoints(parent, offset, this.endContainer, this.endOffset),
                endComparison = dom.comparePoints(parent, offset + 1, this.startContainer, this.startOffset);

            return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;
        },


        isPointInRange: function (node, offset) {
            assertRangeValid(this);
            assertNode(node, "HIERARCHY_REQUEST_ERR");
            assertSameDocumentOrFragment(node, this.startContainer);

            return (dom.comparePoints(node, offset, this.startContainer, this.startOffset) >= 0) &&
                (dom.comparePoints(node, offset, this.endContainer, this.endOffset) <= 0);
        },

        // The methods below are non-standard and invented by me.

        // Sharing a boundary start-to-end or end-to-start does not count as intersection.
        intersectsRange: function (range, touchingIsIntersecting) {
            assertRangeValid(this);

            if (getRangeDocument(range) != getRangeDocument(this)) {
                throw new DOMException("WRONG_DOCUMENT_ERR");
            }

            var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.endContainer, range.endOffset),
                endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.startContainer, range.startOffset);

            return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;
        },

        intersection: function (range) {
            if (this.intersectsRange(range)) {
                var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.startContainer, range.startOffset),
                    endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.endContainer, range.endOffset);

                var intersectionRange = this.cloneRange();

                if (startComparison == -1) {
                    intersectionRange.setStart(range.startContainer, range.startOffset);
                }
                if (endComparison == 1) {
                    intersectionRange.setEnd(range.endContainer, range.endOffset);
                }
                return intersectionRange;
            }
            return null;
        },

        union: function (range) {
            if (this.intersectsRange(range, true)) {
                var unionRange = this.cloneRange();
                if (dom.comparePoints(range.startContainer, range.startOffset, this.startContainer, this.startOffset) == -1) {
                    unionRange.setStart(range.startContainer, range.startOffset);
                }
                if (dom.comparePoints(range.endContainer, range.endOffset, this.endContainer, this.endOffset) == 1) {
                    unionRange.setEnd(range.endContainer, range.endOffset);
                }
                return unionRange;
            } else {
                throw new RangeException("Ranges do not intersect");
            }
        },

        containsNode: function (node, allowPartial) {
            if (allowPartial) {
                return this.intersectsNode(node, false);
            } else {
                return this.compareNode(node) == n_i;
            }
        },

        containsNodeContents: function (node) {
            return this.comparePoint(node, 0) >= 0 && this.comparePoint(node, dom.getNodeLength(node)) <= 0;
        },

        containsRange: function (range) {
            return this.intersection(range).equals(range);
        },

        containsNodeText: function (node) {
            var nodeRange = this.cloneRange();
            nodeRange.selectNode(node);
            var textNodes = nodeRange.getNodes([3]);
            if (textNodes.length > 0) {
                nodeRange.setStart(textNodes[0], 0);
                var lastTextNode = textNodes.pop();
                nodeRange.setEnd(lastTextNode, lastTextNode.length);
                var contains = this.containsRange(nodeRange);
                nodeRange.detach();
                return contains;
            } else {
                return this.containsNodeContents(node);
            }
        },

        createNodeIterator: function (nodeTypes, filter) {
            assertRangeValid(this);
            return new RangeNodeIterator(this, nodeTypes, filter);
        },

        getNodes: function (nodeTypes, filter) {
            assertRangeValid(this);
            return getNodesInRange(this, nodeTypes, filter);
        },

        getDocument: function () {
            return getRangeDocument(this);
        },

        collapseBefore: function (node) {
            assertNotDetached(this);

            this.setEndBefore(node);
            this.collapse(false);
        },

        collapseAfter: function (node) {
            assertNotDetached(this);

            this.setStartAfter(node);
            this.collapse(true);
        },

        getName: function () {
            return "DomRange";
        },

        equals: function (range) {
            return Range.rangesEqual(this, range);
        },

        inspect: function () {
            return inspect(this);
        }
    };

    function copyComparisonConstantsToObject(obj) {
        obj.START_TO_START = s2s;
        obj.START_TO_END = s2e;
        obj.END_TO_END = e2e;
        obj.END_TO_START = e2s;

        obj.NODE_BEFORE = n_b;
        obj.NODE_AFTER = n_a;
        obj.NODE_BEFORE_AND_AFTER = n_b_a;
        obj.NODE_INSIDE = n_i;
    }

    function copyComparisonConstants(constructor) {
        copyComparisonConstantsToObject(constructor);
        copyComparisonConstantsToObject(constructor.prototype);
    }

    function createRangeContentRemover(remover, boundaryUpdater) {
        return function () {
            assertRangeValid(this);

            var sc = this.startContainer, so = this.startOffset, root = this.commonAncestorContainer;

            var iterator = new RangeIterator(this, true);

            // Work out where to position the range after content removal
            var node, boundary;
            if (sc !== root) {
                node = dom.getClosestAncestorIn(sc, root, true);
                boundary = getBoundaryAfterNode(node);
                sc = boundary.node;
                so = boundary.offset;
            }

            // Check none of the range is read-only
            iterateSubtree(iterator, assertNodeNotReadOnly);

            iterator.reset();

            // Remove the content
            var returnValue = remover(iterator);
            iterator.detach();

            // Move to the new position
            boundaryUpdater(this, sc, so, sc, so);

            return returnValue;
        };
    }

    function createPrototypeRange(constructor, boundaryUpdater, detacher) {
        function createBeforeAfterNodeSetter(isBefore, isStart) {
            return function (node) {
                assertNotDetached(this);
                assertValidNodeType(node, beforeAfterNodeTypes);
                assertValidNodeType(getRootContainer(node), rootContainerNodeTypes);

                var boundary = (isBefore ? getBoundaryBeforeNode : getBoundaryAfterNode)(node);
                (isStart ? setRangeStart : setRangeEnd)(this, boundary.node, boundary.offset);
            };
        }

        function setRangeStart(range, node, offset) {
            var ec = range.endContainer, eo = range.endOffset;
            if (node !== range.startContainer || offset !== range.startOffset) {
                // Check the root containers of the range and the new boundary, and also check whether the new boundary
                // is after the current end. In either case, collapse the range to the new position
                if (getRootContainer(node) != getRootContainer(ec) || dom.comparePoints(node, offset, ec, eo) == 1) {
                    ec = node;
                    eo = offset;
                }
                boundaryUpdater(range, node, offset, ec, eo);
            }
        }

        function setRangeEnd(range, node, offset) {
            var sc = range.startContainer, so = range.startOffset;
            if (node !== range.endContainer || offset !== range.endOffset) {
                // Check the root containers of the range and the new boundary, and also check whether the new boundary
                // is after the current end. In either case, collapse the range to the new position
                if (getRootContainer(node) != getRootContainer(sc) || dom.comparePoints(node, offset, sc, so) == -1) {
                    sc = node;
                    so = offset;
                }
                boundaryUpdater(range, sc, so, node, offset);
            }
        }

        function setRangeStartAndEnd(range, node, offset) {
            if (node !== range.startContainer || offset !== range.startOffset || node !== range.endContainer || offset !== range.endOffset) {
                boundaryUpdater(range, node, offset, node, offset);
            }
        }

        constructor.prototype = new RangePrototype();

        api.util.extend(constructor.prototype, {
            setStart: function (node, offset) {
                assertNotDetached(this);
                assertNoDocTypeNotationEntityAncestor(node, true);
                assertValidOffset(node, offset);

                setRangeStart(this, node, offset);
            },

            setEnd: function (node, offset) {
                assertNotDetached(this);
                assertNoDocTypeNotationEntityAncestor(node, true);
                assertValidOffset(node, offset);

                setRangeEnd(this, node, offset);
            },

            setStartBefore: createBeforeAfterNodeSetter(true, true),
            setStartAfter: createBeforeAfterNodeSetter(false, true),
            setEndBefore: createBeforeAfterNodeSetter(true, false),
            setEndAfter: createBeforeAfterNodeSetter(false, false),

            collapse: function (isStart) {
                assertRangeValid(this);
                if (isStart) {
                    boundaryUpdater(this, this.startContainer, this.startOffset, this.startContainer, this.startOffset);
                } else {
                    boundaryUpdater(this, this.endContainer, this.endOffset, this.endContainer, this.endOffset);
                }
            },

            selectNodeContents: function (node) {
                // This doesn't seem well specified: the spec talks only about selecting the node's contents, which
                // could be taken to mean only its children. However, browsers implement this the same as selectNode for
                // text nodes, so I shall do likewise
                assertNotDetached(this);
                assertNoDocTypeNotationEntityAncestor(node, true);

                boundaryUpdater(this, node, 0, node, dom.getNodeLength(node));
            },

            selectNode: function (node) {
                assertNotDetached(this);
                assertNoDocTypeNotationEntityAncestor(node, false);
                assertValidNodeType(node, beforeAfterNodeTypes);

                var start = getBoundaryBeforeNode(node), end = getBoundaryAfterNode(node);
                boundaryUpdater(this, start.node, start.offset, end.node, end.offset);
            },

            extractContents: createRangeContentRemover(extractSubtree, boundaryUpdater),

            deleteContents: createRangeContentRemover(deleteSubtree, boundaryUpdater),

            canSurroundContents: function () {
                assertRangeValid(this);
                assertNodeNotReadOnly(this.startContainer);
                assertNodeNotReadOnly(this.endContainer);

                // Check if the contents can be surrounded. Specifically, this means whether the range partially selects
                // no non-text nodes.
                var iterator = new RangeIterator(this, true);
                var boundariesInvalid = (iterator._first && (isNonTextPartiallySelected(iterator._first, this)) ||
                    (iterator._last && isNonTextPartiallySelected(iterator._last, this)));
                iterator.detach();
                return !boundariesInvalid;
            },

            detach: function () {
                detacher(this);
            },

            splitBoundaries: function () {
                assertRangeValid(this);


                var sc = this.startContainer, so = this.startOffset, ec = this.endContainer, eo = this.endOffset;
                var startEndSame = (sc === ec);

                if (dom.isCharacterDataNode(ec) && eo > 0 && eo < ec.length) {
                    dom.splitDataNode(ec, eo);

                }

                if (dom.isCharacterDataNode(sc) && so > 0 && so < sc.length) {

                    sc = dom.splitDataNode(sc, so);
                    if (startEndSame) {
                        eo -= so;
                        ec = sc;
                    } else if (ec == sc.parentNode && eo >= dom.getNodeIndex(sc)) {
                        eo++;
                    }
                    so = 0;

                }
                boundaryUpdater(this, sc, so, ec, eo);
            },

            normalizeBoundaries: function () {
                assertRangeValid(this);

                var sc = this.startContainer, so = this.startOffset, ec = this.endContainer, eo = this.endOffset;

                var mergeForward = function (node) {
                    var sibling = node.nextSibling;
                    if (sibling && sibling.nodeType == node.nodeType) {
                        ec = node;
                        eo = node.length;
                        node.appendData(sibling.data);
                        sibling.parentNode.removeChild(sibling);
                    }
                };

                var mergeBackward = function (node) {
                    var sibling = node.previousSibling;
                    if (sibling && sibling.nodeType == node.nodeType) {
                        sc = node;
                        var nodeLength = node.length;
                        so = sibling.length;
                        node.insertData(0, sibling.data);
                        sibling.parentNode.removeChild(sibling);
                        if (sc == ec) {
                            eo += so;
                            ec = sc;
                        } else if (ec == node.parentNode) {
                            var nodeIndex = dom.getNodeIndex(node);
                            if (eo == nodeIndex) {
                                ec = node;
                                eo = nodeLength;
                            } else if (eo > nodeIndex) {
                                eo--;
                            }
                        }
                    }
                };

                var normalizeStart = true;

                if (dom.isCharacterDataNode(ec)) {
                    if (ec.length == eo) {
                        mergeForward(ec);
                    }
                } else {
                    if (eo > 0) {
                        var endNode = ec.childNodes[eo - 1];
                        if (endNode && dom.isCharacterDataNode(endNode)) {
                            mergeForward(endNode);
                        }
                    }
                    normalizeStart = !this.collapsed;
                }

                if (normalizeStart) {
                    if (dom.isCharacterDataNode(sc)) {
                        if (so == 0) {
                            mergeBackward(sc);
                        }
                    } else {
                        if (so < sc.childNodes.length) {
                            var startNode = sc.childNodes[so];
                            if (startNode && dom.isCharacterDataNode(startNode)) {
                                mergeBackward(startNode);
                            }
                        }
                    }
                } else {
                    sc = ec;
                    so = eo;
                }

                boundaryUpdater(this, sc, so, ec, eo);
            },

            collapseToPoint: function (node, offset) {
                assertNotDetached(this);

                assertNoDocTypeNotationEntityAncestor(node, true);
                assertValidOffset(node, offset);

                setRangeStartAndEnd(this, node, offset);
            }
        });

        copyComparisonConstants(constructor);
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    // Updates commonAncestorContainer and collapsed after boundary change
    function updateCollapsedAndCommonAncestor(range) {
        range.collapsed = (range.startContainer === range.endContainer && range.startOffset === range.endOffset);
        range.commonAncestorContainer = range.collapsed ?
            range.startContainer : dom.getCommonAncestor(range.startContainer, range.endContainer);
    }

    function updateBoundaries(range, startContainer, startOffset, endContainer, endOffset) {
        var startMoved = (range.startContainer !== startContainer || range.startOffset !== startOffset);
        var endMoved = (range.endContainer !== endContainer || range.endOffset !== endOffset);

        range.startContainer = startContainer;
        range.startOffset = startOffset;
        range.endContainer = endContainer;
        range.endOffset = endOffset;

        updateCollapsedAndCommonAncestor(range);
        dispatchEvent(range, "boundarychange", {startMoved: startMoved, endMoved: endMoved});
    }

    function detach(range) {
        assertNotDetached(range);
        range.startContainer = range.startOffset = range.endContainer = range.endOffset = null;
        range.collapsed = range.commonAncestorContainer = null;
        dispatchEvent(range, "detach", null);
        range._listeners = null;
    }

    /**
     * @constructor
     */
    function Range(doc) {
        this.startContainer = doc;
        this.startOffset = 0;
        this.endContainer = doc;
        this.endOffset = 0;
        this._listeners = {
            boundarychange: [],
            detach: []
        };
        updateCollapsedAndCommonAncestor(this);
    }

    createPrototypeRange(Range, updateBoundaries, detach);

    api.rangePrototype = RangePrototype.prototype;

    Range.rangeProperties = rangeProperties;
    Range.RangeIterator = RangeIterator;
    Range.copyComparisonConstants = copyComparisonConstants;
    Range.createPrototypeRange = createPrototypeRange;
    Range.inspect = inspect;
    Range.getRangeDocument = getRangeDocument;
    Range.rangesEqual = function (r1, r2) {
        return r1.startContainer === r2.startContainer &&
            r1.startOffset === r2.startOffset &&
            r1.endContainer === r2.endContainer &&
            r1.endOffset === r2.endOffset;
    };

    api.DomRange = Range;
    api.RangeException = RangeException;
});
rangy.createModule("WrappedRange", function (api, module) {
    api.requireModules(["DomUtil", "DomRange"]);

    /**
     * @constructor
     */
    var WrappedRange;
    var dom = api.dom;
    var DomPosition = dom.DomPosition;
    var DomRange = api.DomRange;


    /*----------------------------------------------------------------------------------------------------------------*/

    /*
     This is a workaround for a bug where IE returns the wrong container element from the TextRange's parentElement()
     method. For example, in the following (where pipes denote the selection boundaries):

     <ul id="ul"><li id="a">| a </li><li id="b"> b |</li></ul>

     var range = document.selection.createRange();
     alert(range.parentElement().id); // Should alert "ul" but alerts "b"

     This method returns the common ancestor node of the following:
     - the parentElement() of the textRange
     - the parentElement() of the textRange after calling collapse(true)
     - the parentElement() of the textRange after calling collapse(false)
     */
    function getTextRangeContainerElement(textRange) {
        var parentEl = textRange.parentElement();

        var range = textRange.duplicate();
        range.collapse(true);
        var startEl = range.parentElement();
        range = textRange.duplicate();
        range.collapse(false);
        var endEl = range.parentElement();
        var startEndContainer = (startEl == endEl) ? startEl : dom.getCommonAncestor(startEl, endEl);

        return startEndContainer == parentEl ? startEndContainer : dom.getCommonAncestor(parentEl, startEndContainer);
    }

    function textRangeIsCollapsed(textRange) {
        return textRange.compareEndPoints("StartToEnd", textRange) == 0;
    }

    // Gets the boundary of a TextRange expressed as a node and an offset within that node. This function started out as
    // an improved version of code found in Tim Cameron Ryan's IERange (http://code.google.com/p/ierange/) but has
    // grown, fixing problems with line breaks in preformatted text, adding workaround for IE TextRange bugs, handling
    // for inputs and images, plus optimizations.
    function getTextRangeBoundaryPosition(textRange, wholeRangeContainerElement, isStart, isCollapsed) {
        var workingRange = textRange.duplicate();

        workingRange.collapse(isStart);
        var containerElement = workingRange.parentElement();

        // Sometimes collapsing a TextRange that's at the start of a text node can move it into the previous node, so
        // check for that
        // TODO: Find out when. Workaround for wholeRangeContainerElement may break this
        if (!dom.isAncestorOf(wholeRangeContainerElement, containerElement, true)) {
            containerElement = wholeRangeContainerElement;

        }


        // Deal with nodes that cannot "contain rich HTML markup". In practice, this means form inputs, images and
        // similar. See http://msdn.microsoft.com/en-us/library/aa703950%28VS.85%29.aspx
        if (!containerElement.canHaveHTML) {
            return new DomPosition(containerElement.parentNode, dom.getNodeIndex(containerElement));
        }

        var workingNode = dom.getDocument(containerElement).createElement("span");
        var comparison, workingComparisonType = isStart ? "StartToStart" : "StartToEnd";
        var previousNode, nextNode, boundaryPosition, boundaryNode;

        // Move the working range through the container's children, starting at the end and working backwards, until the
        // working range reaches or goes past the boundary we're interested in
        do {
            containerElement.insertBefore(workingNode, workingNode.previousSibling);
            workingRange.moveToElementText(workingNode);
        } while ((comparison = workingRange.compareEndPoints(workingComparisonType, textRange)) > 0 &&
            workingNode.previousSibling);

        // We've now reached or gone past the boundary of the text range we're interested in
        // so have identified the node we want
        boundaryNode = workingNode.nextSibling;

        if (comparison == -1 && boundaryNode && dom.isCharacterDataNode(boundaryNode)) {
            // This is a character data node (text, comment, cdata). The working range is collapsed at the start of the
            // node containing the text range's boundary, so we move the end of the working range to the boundary point
            // and measure the length of its text to get the boundary's offset within the node.
            workingRange.setEndPoint(isStart ? "EndToStart" : "EndToEnd", textRange);


            var offset;

            if (/[\r\n]/.test(boundaryNode.data)) {
                /*
                 For the particular case of a boundary within a text node containing line breaks (within a <pre> element,
                 for example), we need a slightly complicated approach to get the boundary's offset in IE. The facts:

                 - Each line break is represented as \r in the text node's data/nodeValue properties
                 - Each line break is represented as \r\n in the TextRange's 'text' property
                 - The 'text' property of the TextRange does not contain trailing line breaks

                 To get round the problem presented by the final fact above, we can use the fact that TextRange's
                 moveStart() and moveEnd() methods return the actual number of characters moved, which is not necessarily
                 the same as the number of characters it was instructed to move. The simplest approach is to use this to
                 store the characters moved when moving both the start and end of the range to the start of the document
                 body and subtracting the start offset from the end offset (the "move-negative-gazillion" method).
                 However, this is extremely slow when the document is large and the range is near the end of it. Clearly
                 doing the mirror image (i.e. moving the range boundaries to the end of the document) has the same
                 problem.

                 Another approach that works is to use moveStart() to move the start boundary of the range up to the end
                 boundary one character at a time and incrementing a counter with the value returned by the moveStart()
                 call. However, the check for whether the start boundary has reached the end boundary is expensive, so
                 this method is slow (although unlike "move-negative-gazillion" is largely unaffected by the location of
                 the range within the document).

                 The method below is a hybrid of the two methods above. It uses the fact that a string containing the
                 TextRange's 'text' property with each \r\n converted to a single \r character cannot be longer than the
                 text of the TextRange, so the start of the range is moved that length initially and then a character at
                 a time to make up for any trailing line breaks not contained in the 'text' property. This has good
                 performance in most situations compared to the previous two methods.
                 */
                var tempRange = workingRange.duplicate();
                var rangeLength = tempRange.text.replace(/\r\n/g, "\r").length;

                offset = tempRange.moveStart("character", rangeLength);
                while ((comparison = tempRange.compareEndPoints("StartToEnd", tempRange)) == -1) {
                    offset++;
                    tempRange.moveStart("character", 1);
                }
            } else {
                offset = workingRange.text.length;
            }
            boundaryPosition = new DomPosition(boundaryNode, offset);
        } else {


            // If the boundary immediately follows a character data node and this is the end boundary, we should favour
            // a position within that, and likewise for a start boundary preceding a character data node
            previousNode = (isCollapsed || !isStart) && workingNode.previousSibling;
            nextNode = (isCollapsed || isStart) && workingNode.nextSibling;


            if (nextNode && dom.isCharacterDataNode(nextNode)) {
                boundaryPosition = new DomPosition(nextNode, 0);
            } else if (previousNode && dom.isCharacterDataNode(previousNode)) {
                boundaryPosition = new DomPosition(previousNode, previousNode.length);
            } else {
                boundaryPosition = new DomPosition(containerElement, dom.getNodeIndex(workingNode));
            }
        }

        // Clean up
        workingNode.parentNode.removeChild(workingNode);

        return boundaryPosition;
    }

    // Returns a TextRange representing the boundary of a TextRange expressed as a node and an offset within that node.
    // This function started out as an optimized version of code found in Tim Cameron Ryan's IERange
    // (http://code.google.com/p/ierange/)
    function createBoundaryTextRange(boundaryPosition, isStart) {
        var boundaryNode, boundaryParent, boundaryOffset = boundaryPosition.offset;
        var doc = dom.getDocument(boundaryPosition.node);
        var workingNode, childNodes, workingRange = doc.body.createTextRange();
        var nodeIsDataNode = dom.isCharacterDataNode(boundaryPosition.node);

        if (nodeIsDataNode) {
            boundaryNode = boundaryPosition.node;
            boundaryParent = boundaryNode.parentNode;
        } else {
            childNodes = boundaryPosition.node.childNodes;
            boundaryNode = (boundaryOffset < childNodes.length) ? childNodes[boundaryOffset] : null;
            boundaryParent = boundaryPosition.node;
        }

        // Position the range immediately before the node containing the boundary
        workingNode = doc.createElement("span");

        // Making the working element non-empty element persuades IE to consider the TextRange boundary to be within the
        // element rather than immediately before or after it, which is what we want
        workingNode.innerHTML = "&#feff;";

        // insertBefore is supposed to work like appendChild if the second parameter is null. However, a bug report
        // for IERange suggests that it can crash the browser: http://code.google.com/p/ierange/issues/detail?id=12
        if (boundaryNode) {
            boundaryParent.insertBefore(workingNode, boundaryNode);
        } else {
            boundaryParent.appendChild(workingNode);
        }

        workingRange.moveToElementText(workingNode);
        workingRange.collapse(!isStart);

        // Clean up
        boundaryParent.removeChild(workingNode);

        // Move the working range to the text offset, if required
        if (nodeIsDataNode) {
            workingRange[isStart ? "moveStart" : "moveEnd"]("character", boundaryOffset);
        }

        return workingRange;
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    if (api.features.implementsDomRange && (!api.features.implementsTextRange || !api.config.preferTextRange)) {
        // This is a wrapper around the browser's native DOM Range. It has two aims:
        // - Provide workarounds for specific browser bugs
        // - provide convenient extensions, which are inherited from Rangy's DomRange

        (function () {
            var rangeProto;
            var rangeProperties = DomRange.rangeProperties;
            var canSetRangeStartAfterEnd;

            function updateRangeProperties(range) {
                var i = rangeProperties.length, prop;
                while (i--) {
                    prop = rangeProperties[i];
                    range[prop] = range.nativeRange[prop];
                }
            }

            function updateNativeRange(range, startContainer, startOffset, endContainer, endOffset) {
                var startMoved = (range.startContainer !== startContainer || range.startOffset != startOffset);
                var endMoved = (range.endContainer !== endContainer || range.endOffset != endOffset);

                // Always set both boundaries for the benefit of IE9 (see issue 35)
                if (startMoved || endMoved) {
                    range.setEnd(endContainer, endOffset);
                    range.setStart(startContainer, startOffset);
                }
            }

            function detach(range) {
                range.nativeRange.detach();
                range.detached = true;
                var i = rangeProperties.length, prop;
                while (i--) {
                    prop = rangeProperties[i];
                    range[prop] = null;
                }
            }

            var createBeforeAfterNodeSetter;

            WrappedRange = function (range) {
                if (!range) {
                    throw new Error("Range must be specified");
                }
                this.nativeRange = range;
                updateRangeProperties(this);
            };

            DomRange.createPrototypeRange(WrappedRange, updateNativeRange, detach);

            rangeProto = WrappedRange.prototype;

            rangeProto.selectNode = function (node) {
                this.nativeRange.selectNode(node);
                updateRangeProperties(this);
            };

            rangeProto.deleteContents = function () {
                this.nativeRange.deleteContents();
                updateRangeProperties(this);
            };

            rangeProto.extractContents = function () {
                var frag = this.nativeRange.extractContents();
                updateRangeProperties(this);
                return frag;
            };

            rangeProto.cloneContents = function () {
                return this.nativeRange.cloneContents();
            };

            // TODO: Until I can find a way to programmatically trigger the Firefox bug (apparently long-standing, still
            // present in 3.6.8) that throws "Index or size is negative or greater than the allowed amount" for
            // insertNode in some circumstances, all browsers will have to use the Rangy's own implementation of
            // insertNode, which works but is almost certainly slower than the native implementation.
            /*
             rangeProto.insertNode = function(node) {
             this.nativeRange.insertNode(node);
             updateRangeProperties(this);
             };
             */

            rangeProto.surroundContents = function (node) {
                this.nativeRange.surroundContents(node);
                updateRangeProperties(this);
            };

            rangeProto.collapse = function (isStart) {
                this.nativeRange.collapse(isStart);
                updateRangeProperties(this);
            };

            rangeProto.cloneRange = function () {
                return new WrappedRange(this.nativeRange.cloneRange());
            };

            rangeProto.refresh = function () {
                updateRangeProperties(this);
            };

            rangeProto.toString = function () {
                return this.nativeRange.toString();
            };

            // Create test range and node for feature detection

            var testTextNode = document.createTextNode("test");
            dom.getBody(document).appendChild(testTextNode);
            var range = document.createRange();

            /*--------------------------------------------------------------------------------------------------------*/

            // Test for Firefox 2 bug that prevents moving the start of a Range to a point after its current end and
            // correct for it

            range.setStart(testTextNode, 0);
            range.setEnd(testTextNode, 0);

            try {
                range.setStart(testTextNode, 1);
                canSetRangeStartAfterEnd = true;

                rangeProto.setStart = function (node, offset) {
                    this.nativeRange.setStart(node, offset);
                    updateRangeProperties(this);
                };

                rangeProto.setEnd = function (node, offset) {
                    this.nativeRange.setEnd(node, offset);
                    updateRangeProperties(this);
                };

                createBeforeAfterNodeSetter = function (name) {
                    return function (node) {
                        this.nativeRange[name](node);
                        updateRangeProperties(this);
                    };
                };

            } catch (ex) {


                canSetRangeStartAfterEnd = false;

                rangeProto.setStart = function (node, offset) {
                    try {
                        this.nativeRange.setStart(node, offset);
                    } catch (ex) {
                        this.nativeRange.setEnd(node, offset);
                        this.nativeRange.setStart(node, offset);
                    }
                    updateRangeProperties(this);
                };

                rangeProto.setEnd = function (node, offset) {
                    try {
                        this.nativeRange.setEnd(node, offset);
                    } catch (ex) {
                        this.nativeRange.setStart(node, offset);
                        this.nativeRange.setEnd(node, offset);
                    }
                    updateRangeProperties(this);
                };

                createBeforeAfterNodeSetter = function (name, oppositeName) {
                    return function (node) {
                        try {
                            this.nativeRange[name](node);
                        } catch (ex) {
                            this.nativeRange[oppositeName](node);
                            this.nativeRange[name](node);
                        }
                        updateRangeProperties(this);
                    };
                };
            }

            rangeProto.setStartBefore = createBeforeAfterNodeSetter("setStartBefore", "setEndBefore");
            rangeProto.setStartAfter = createBeforeAfterNodeSetter("setStartAfter", "setEndAfter");
            rangeProto.setEndBefore = createBeforeAfterNodeSetter("setEndBefore", "setStartBefore");
            rangeProto.setEndAfter = createBeforeAfterNodeSetter("setEndAfter", "setStartAfter");

            /*--------------------------------------------------------------------------------------------------------*/

            // Test for and correct Firefox 2 behaviour with selectNodeContents on text nodes: it collapses the range to
            // the 0th character of the text node
            range.selectNodeContents(testTextNode);
            if (range.startContainer == testTextNode && range.endContainer == testTextNode &&
                range.startOffset == 0 && range.endOffset == testTextNode.length) {
                rangeProto.selectNodeContents = function (node) {
                    this.nativeRange.selectNodeContents(node);
                    updateRangeProperties(this);
                };
            } else {
                rangeProto.selectNodeContents = function (node) {
                    this.setStart(node, 0);
                    this.setEnd(node, DomRange.getEndOffset(node));
                };
            }

            /*--------------------------------------------------------------------------------------------------------*/

            // Test for WebKit bug that has the beahviour of compareBoundaryPoints round the wrong way for constants
            // START_TO_END and END_TO_START: https://bugs.webkit.org/show_bug.cgi?id=20738

            range.selectNodeContents(testTextNode);
            range.setEnd(testTextNode, 3);

            var range2 = document.createRange();
            range2.selectNodeContents(testTextNode);
            range2.setEnd(testTextNode, 4);
            range2.setStart(testTextNode, 2);

            if (range.compareBoundaryPoints(range.START_TO_END, range2) == -1 &
                range.compareBoundaryPoints(range.END_TO_START, range2) == 1) {
                // This is the wrong way round, so correct for it


                rangeProto.compareBoundaryPoints = function (type, range) {
                    range = range.nativeRange || range;
                    if (type == range.START_TO_END) {
                        type = range.END_TO_START;
                    } else if (type == range.END_TO_START) {
                        type = range.START_TO_END;
                    }
                    return this.nativeRange.compareBoundaryPoints(type, range);
                };
            } else {
                rangeProto.compareBoundaryPoints = function (type, range) {
                    return this.nativeRange.compareBoundaryPoints(type, range.nativeRange || range);
                };
            }

            /*--------------------------------------------------------------------------------------------------------*/

            // Test for existence of createContextualFragment and delegate to it if it exists
            if (api.util.isHostMethod(range, "createContextualFragment")) {
                rangeProto.createContextualFragment = function (fragmentStr) {
                    return this.nativeRange.createContextualFragment(fragmentStr);
                };
            }

            /*--------------------------------------------------------------------------------------------------------*/

            // Clean up
            dom.getBody(document).removeChild(testTextNode);
            range.detach();
            range2.detach();
        })();

        api.createNativeRange = function (doc) {
            doc = doc || document;
            return doc.createRange();
        };
    } else if (api.features.implementsTextRange) {
        // This is a wrapper around a TextRange, providing full DOM Range functionality using rangy's DomRange as a
        // prototype

        WrappedRange = function (textRange) {
            this.textRange = textRange;
            this.refresh();
        };

        WrappedRange.prototype = new DomRange(document);

        WrappedRange.prototype.refresh = function () {
            var start, end;

            // TextRange's parentElement() method cannot be trusted. getTextRangeContainerElement() works around that.
            var rangeContainerElement = getTextRangeContainerElement(this.textRange);

            if (textRangeIsCollapsed(this.textRange)) {
                end = start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, true);
            } else {

                start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, false);
                end = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, false, false);
            }

            this.setStart(start.node, start.offset);
            this.setEnd(end.node, end.offset);
        };

        DomRange.copyComparisonConstants(WrappedRange);

        // Add WrappedRange as the Range property of the global object to allow expression like Range.END_TO_END to work
        var globalObj = (function () {
            return this;
        })();
        if (typeof globalObj.Range == "undefined") {
            globalObj.Range = WrappedRange;
        }

        api.createNativeRange = function (doc) {
            doc = doc || document;
            return doc.body.createTextRange();
        };
    }

    if (api.features.implementsTextRange) {
        WrappedRange.rangeToTextRange = function (range) {
            if (range.collapsed) {
                var tr = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);


                return tr;

                //return createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);
            } else {
                var startRange = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);
                var endRange = createBoundaryTextRange(new DomPosition(range.endContainer, range.endOffset), false);
                var textRange = dom.getDocument(range.startContainer).body.createTextRange();
                textRange.setEndPoint("StartToStart", startRange);
                textRange.setEndPoint("EndToEnd", endRange);
                return textRange;
            }
        };
    }

    WrappedRange.prototype.getName = function () {
        return "WrappedRange";
    };

    api.WrappedRange = WrappedRange;

    api.createRange = function (doc) {
        doc = doc || document;
        return new WrappedRange(api.createNativeRange(doc));
    };

    api.createRangyRange = function (doc) {
        doc = doc || document;
        return new DomRange(doc);
    };

    api.createIframeRange = function (iframeEl) {
        return api.createRange(dom.getIframeDocument(iframeEl));
    };

    api.createIframeRangyRange = function (iframeEl) {
        return api.createRangyRange(dom.getIframeDocument(iframeEl));
    };

    api.addCreateMissingNativeApiListener(function (win) {
        var doc = win.document;
        if (typeof doc.createRange == "undefined") {
            doc.createRange = function () {
                return api.createRange(this);
            };
        }
        doc = win = null;
    });
});
rangy.createModule("WrappedSelection", function (api, module) {
    // This will create a selection object wrapper that follows the Selection object found in the WHATWG draft DOM Range
    // spec (http://html5.org/specs/dom-range.html)

    api.requireModules(["DomUtil", "DomRange", "WrappedRange"]);

    api.config.checkSelectionRanges = true;

    var BOOLEAN = "boolean",
        windowPropertyName = "_rangySelection",
        dom = api.dom,
        util = api.util,
        DomRange = api.DomRange,
        WrappedRange = api.WrappedRange,
        DOMException = api.DOMException,
        DomPosition = dom.DomPosition,
        getSelection,
        selectionIsCollapsed,
        CONTROL = "Control";


    function getWinSelection(winParam) {
        return (winParam || window).getSelection();
    }

    function getDocSelection(winParam) {
        return (winParam || window).document.selection;
    }

    // Test for the Range/TextRange and Selection features required
    // Test for ability to retrieve selection
    var implementsWinGetSelection = api.util.isHostMethod(window, "getSelection"),
        implementsDocSelection = api.util.isHostObject(document, "selection");

    var useDocumentSelection = implementsDocSelection && (!implementsWinGetSelection || api.config.preferTextRange);

    if (useDocumentSelection) {
        getSelection = getDocSelection;
        api.isSelectionValid = function (winParam) {
            var doc = (winParam || window).document, nativeSel = doc.selection;

            // Check whether the selection TextRange is actually contained within the correct document
            return (nativeSel.type != "None" || dom.getDocument(nativeSel.createRange().parentElement()) == doc);
        };
    } else if (implementsWinGetSelection) {
        getSelection = getWinSelection;
        api.isSelectionValid = function () {
            return true;
        };
    } else {
        module.fail("Neither document.selection or window.getSelection() detected.");
    }

    api.getNativeSelection = getSelection;

    var testSelection = getSelection();
    var testRange = api.createNativeRange(document);
    var body = dom.getBody(document);

    // Obtaining a range from a selection
    var selectionHasAnchorAndFocus = util.areHostObjects(testSelection, ["anchorNode", "focusNode"] &&
        util.areHostProperties(testSelection, ["anchorOffset", "focusOffset"]));
    api.features.selectionHasAnchorAndFocus = selectionHasAnchorAndFocus;

    // Test for existence of native selection extend() method
    var selectionHasExtend = util.isHostMethod(testSelection, "extend");
    api.features.selectionHasExtend = selectionHasExtend;

    // Test if rangeCount exists
    var selectionHasRangeCount = (typeof testSelection.rangeCount == "number");
    api.features.selectionHasRangeCount = selectionHasRangeCount;

    var selectionSupportsMultipleRanges = false;
    var collapsedNonEditableSelectionsSupported = true;

    if (util.areHostMethods(testSelection, ["addRange", "getRangeAt", "removeAllRanges"]) &&
        typeof testSelection.rangeCount == "number" && api.features.implementsDomRange) {

        (function () {
            var iframe = document.createElement("iframe");
            body.appendChild(iframe);

            var iframeDoc = dom.getIframeDocument(iframe);
            iframeDoc.open();
            iframeDoc.write("<html><head></head><body>12</body></html>");
            iframeDoc.close();

            var sel = dom.getIframeWindow(iframe).getSelection();
            var docEl = iframeDoc.documentElement;
            var iframeBody = docEl.lastChild, textNode = iframeBody.firstChild;

            // Test whether the native selection will allow a collapsed selection within a non-editable element
            var r1 = iframeDoc.createRange();
            r1.setStart(textNode, 1);
            r1.collapse(true);
            sel.addRange(r1);
            collapsedNonEditableSelectionsSupported = (sel.rangeCount == 1);
            sel.removeAllRanges();

            // Test whether the native selection is capable of supporting multiple ranges
            var r2 = r1.cloneRange();
            r1.setStart(textNode, 0);
            r2.setEnd(textNode, 2);
            sel.addRange(r1);
            sel.addRange(r2);

            selectionSupportsMultipleRanges = (sel.rangeCount == 2);

            // Clean up
            r1.detach();
            r2.detach();

            body.removeChild(iframe);
        })();
    }

    api.features.selectionSupportsMultipleRanges = selectionSupportsMultipleRanges;
    api.features.collapsedNonEditableSelectionsSupported = collapsedNonEditableSelectionsSupported;

    // ControlRanges
    var implementsControlRange = false, testControlRange;

    if (body && util.isHostMethod(body, "createControlRange")) {
        testControlRange = body.createControlRange();
        if (util.areHostProperties(testControlRange, ["item", "add"])) {
            implementsControlRange = true;
        }
    }
    api.features.implementsControlRange = implementsControlRange;

    // Selection collapsedness
    if (selectionHasAnchorAndFocus) {
        selectionIsCollapsed = function (sel) {
            return sel.anchorNode === sel.focusNode && sel.anchorOffset === sel.focusOffset;
        };
    } else {
        selectionIsCollapsed = function (sel) {
            return sel.rangeCount ? sel.getRangeAt(sel.rangeCount - 1).collapsed : false;
        };
    }

    function updateAnchorAndFocusFromRange(sel, range, backwards) {
        var anchorPrefix = backwards ? "end" : "start", focusPrefix = backwards ? "start" : "end";
        sel.anchorNode = range[anchorPrefix + "Container"];
        sel.anchorOffset = range[anchorPrefix + "Offset"];
        sel.focusNode = range[focusPrefix + "Container"];
        sel.focusOffset = range[focusPrefix + "Offset"];
    }

    function updateAnchorAndFocusFromNativeSelection(sel) {
        var nativeSel = sel.nativeSelection;
        sel.anchorNode = nativeSel.anchorNode;
        sel.anchorOffset = nativeSel.anchorOffset;
        sel.focusNode = nativeSel.focusNode;
        sel.focusOffset = nativeSel.focusOffset;
    }

    function updateEmptySelection(sel) {
        sel.anchorNode = sel.focusNode = null;
        sel.anchorOffset = sel.focusOffset = 0;
        sel.rangeCount = 0;
        sel.isCollapsed = true;
        sel._ranges.length = 0;
    }

    function getNativeRange(range) {
        var nativeRange;
        if (range instanceof DomRange) {
            nativeRange = range._selectionNativeRange;
            if (!nativeRange) {
                nativeRange = api.createNativeRange(dom.getDocument(range.startContainer));
                nativeRange.setEnd(range.endContainer, range.endOffset);
                nativeRange.setStart(range.startContainer, range.startOffset);
                range._selectionNativeRange = nativeRange;
                range.attachListener("detach", function () {

                    this._selectionNativeRange = null;
                });
            }
        } else if (range instanceof WrappedRange) {
            nativeRange = range.nativeRange;
        } else if (api.features.implementsDomRange && (range instanceof dom.getWindow(range.startContainer).Range)) {
            nativeRange = range;
        }
        return nativeRange;
    }

    function rangeContainsSingleElement(rangeNodes) {
        if (!rangeNodes.length || rangeNodes[0].nodeType != 1) {
            return false;
        }
        for (var i = 1, len = rangeNodes.length; i < len; ++i) {
            if (!dom.isAncestorOf(rangeNodes[0], rangeNodes[i])) {
                return false;
            }
        }
        return true;
    }

    function getSingleElementFromRange(range) {
        var nodes = range.getNodes();
        if (!rangeContainsSingleElement(nodes)) {
            throw new Error("getSingleElementFromRange: range " + range.inspect() + " did not consist of a single element");
        }
        return nodes[0];
    }

    function isTextRange(range) {
        return !!range && typeof range.text != "undefined";
    }

    function updateFromTextRange(sel, range) {
        // Create a Range from the selected TextRange
        var wrappedRange = new WrappedRange(range);
        sel._ranges = [wrappedRange];

        updateAnchorAndFocusFromRange(sel, wrappedRange, false);
        sel.rangeCount = 1;
        sel.isCollapsed = wrappedRange.collapsed;
    }

    function updateControlSelection(sel) {
        // Update the wrapped selection based on what's now in the native selection
        sel._ranges.length = 0;
        if (sel.docSelection.type == "None") {
            updateEmptySelection(sel);
        } else {
            var controlRange = sel.docSelection.createRange();
            if (isTextRange(controlRange)) {
                // This case (where the selection type is "Control" and calling createRange() on the selection returns
                // a TextRange) can happen in IE 9. It happens, for example, when all elements in the selected
                // ControlRange have been removed from the ControlRange and removed from the document.
                updateFromTextRange(sel, controlRange);
            } else {
                sel.rangeCount = controlRange.length;
                var range, doc = dom.getDocument(controlRange.item(0));
                for (var i = 0; i < sel.rangeCount; ++i) {
                    range = api.createRange(doc);
                    range.selectNode(controlRange.item(i));
                    sel._ranges.push(range);
                }
                sel.isCollapsed = sel.rangeCount == 1 && sel._ranges[0].collapsed;
                updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], false);
            }
        }
    }

    function addRangeToControlSelection(sel, range) {
        var controlRange = sel.docSelection.createRange();
        var rangeElement = getSingleElementFromRange(range);

        // Create a new ControlRange containing all the elements in the selected ControlRange plus the element
        // contained by the supplied range
        var doc = dom.getDocument(controlRange.item(0));
        var newControlRange = dom.getBody(doc).createControlRange();
        for (var i = 0, len = controlRange.length; i < len; ++i) {
            newControlRange.add(controlRange.item(i));
        }
        try {
            newControlRange.add(rangeElement);
        } catch (ex) {
            throw new Error("addRange(): Element within the specified Range could not be added to control selection (does it have layout?)");
        }
        newControlRange.select();

        // Update the wrapped selection based on what's now in the native selection
        updateControlSelection(sel);
    }

    var getSelectionRangeAt;

    if (util.isHostMethod(testSelection, "getRangeAt")) {
        getSelectionRangeAt = function (sel, index) {
            try {
                return sel.getRangeAt(index);
            } catch (ex) {
                return null;
            }
        };
    } else if (selectionHasAnchorAndFocus) {
        getSelectionRangeAt = function (sel) {
            var doc = dom.getDocument(sel.anchorNode);
            var range = api.createRange(doc);
            range.setStart(sel.anchorNode, sel.anchorOffset);
            range.setEnd(sel.focusNode, sel.focusOffset);

            // Handle the case when the selection was selected backwards (from the end to the start in the
            // document)
            if (range.collapsed !== this.isCollapsed) {
                range.setStart(sel.focusNode, sel.focusOffset);
                range.setEnd(sel.anchorNode, sel.anchorOffset);
            }

            return range;
        };
    }

    /**
     * @constructor
     */
    function WrappedSelection(selection, docSelection, win) {
        this.nativeSelection = selection;
        this.docSelection = docSelection;
        this._ranges = [];
        this.win = win;
        this.refresh();
    }

    api.getSelection = function (win) {
        win = win || window;
        var sel = win[windowPropertyName];
        var nativeSel = getSelection(win), docSel = implementsDocSelection ? getDocSelection(win) : null;
        if (sel) {
            sel.nativeSelection = nativeSel;
            sel.docSelection = docSel;
            sel.refresh(win);
        } else {
            sel = new WrappedSelection(nativeSel, docSel, win);
            win[windowPropertyName] = sel;
        }
        return sel;
    };

    api.getIframeSelection = function (iframeEl) {
        return api.getSelection(dom.getIframeWindow(iframeEl));
    };

    var selProto = WrappedSelection.prototype;

    function createControlSelection(sel, ranges) {
        // Ensure that the selection becomes of type "Control"
        var doc = dom.getDocument(ranges[0].startContainer);
        var controlRange = dom.getBody(doc).createControlRange();
        for (var i = 0, el; i < rangeCount; ++i) {
            el = getSingleElementFromRange(ranges[i]);
            try {
                controlRange.add(el);
            } catch (ex) {
                throw new Error("setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)");
            }
        }
        controlRange.select();

        // Update the wrapped selection based on what's now in the native selection
        updateControlSelection(sel);
    }

    // Selecting a range
    if (!useDocumentSelection && selectionHasAnchorAndFocus && util.areHostMethods(testSelection, ["removeAllRanges", "addRange"])) {
        selProto.removeAllRanges = function () {
            this.nativeSelection.removeAllRanges();
            updateEmptySelection(this);
        };

        var addRangeBackwards = function (sel, range) {
            var doc = DomRange.getRangeDocument(range);
            var endRange = api.createRange(doc);
            endRange.collapseToPoint(range.endContainer, range.endOffset);
            sel.nativeSelection.addRange(getNativeRange(endRange));
            sel.nativeSelection.extend(range.startContainer, range.startOffset);
            sel.refresh();
        };

        if (selectionHasRangeCount) {
            selProto.addRange = function (range, backwards) {
                if (implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {
                    addRangeToControlSelection(this, range);
                } else {
                    if (backwards && selectionHasExtend) {
                        addRangeBackwards(this, range);
                    } else {
                        var previousRangeCount;
                        if (selectionSupportsMultipleRanges) {
                            previousRangeCount = this.rangeCount;
                        } else {
                            this.removeAllRanges();
                            previousRangeCount = 0;
                        }
                        this.nativeSelection.addRange(getNativeRange(range));

                        // Check whether adding the range was successful
                        this.rangeCount = this.nativeSelection.rangeCount;

                        if (this.rangeCount == previousRangeCount + 1) {
                            // The range was added successfully

                            // Check whether the range that we added to the selection is reflected in the last range extracted from
                            // the selection
                            if (api.config.checkSelectionRanges) {
                                var nativeRange = getSelectionRangeAt(this.nativeSelection, this.rangeCount - 1);
                                if (nativeRange && !DomRange.rangesEqual(nativeRange, range)) {
                                    // Happens in WebKit with, for example, a selection placed at the start of a text node
                                    range = new WrappedRange(nativeRange);
                                }
                            }
                            this._ranges[this.rangeCount - 1] = range;
                            updateAnchorAndFocusFromRange(this, range, selectionIsBackwards(this.nativeSelection));
                            this.isCollapsed = selectionIsCollapsed(this);
                        } else {
                            // The range was not added successfully. The simplest thing is to refresh
                            this.refresh();
                        }
                    }
                }
            };
        } else {
            selProto.addRange = function (range, backwards) {
                if (backwards && selectionHasExtend) {
                    addRangeBackwards(this, range);
                } else {
                    this.nativeSelection.addRange(getNativeRange(range));
                    this.refresh();
                }
            };
        }

        selProto.setRanges = function (ranges) {
            if (implementsControlRange && ranges.length > 1) {
                createControlSelection(this, ranges);
            } else {
                this.removeAllRanges();
                for (var i = 0, len = ranges.length; i < len; ++i) {
                    this.addRange(ranges[i]);
                }
            }
        };
    } else if (util.isHostMethod(testSelection, "empty") && util.isHostMethod(testRange, "select") &&
        implementsControlRange && useDocumentSelection) {

        selProto.removeAllRanges = function () {
            // Added try/catch as fix for issue #21
            try {
                this.docSelection.empty();

                // Check for empty() not working (issue #24)
                if (this.docSelection.type != "None") {
                    // Work around failure to empty a control selection by instead selecting a TextRange and then
                    // calling empty()
                    var doc;
                    if (this.anchorNode) {
                        doc = dom.getDocument(this.anchorNode);
                    } else if (this.docSelection.type == CONTROL) {
                        var controlRange = this.docSelection.createRange();
                        if (controlRange.length) {
                            doc = dom.getDocument(controlRange.item(0)).body.createTextRange();
                        }
                    }
                    if (doc) {
                        var textRange = doc.body.createTextRange();
                        textRange.select();
                        this.docSelection.empty();
                    }
                }
            } catch (ex) {
            }
            updateEmptySelection(this);
        };

        selProto.addRange = function (range) {
            if (this.docSelection.type == CONTROL) {
                addRangeToControlSelection(this, range);
            } else {
                WrappedRange.rangeToTextRange(range).select();
                this._ranges[0] = range;
                this.rangeCount = 1;
                this.isCollapsed = this._ranges[0].collapsed;
                updateAnchorAndFocusFromRange(this, range, false);
            }
        };

        selProto.setRanges = function (ranges) {
            this.removeAllRanges();
            var rangeCount = ranges.length;
            if (rangeCount > 1) {
                createControlSelection(this, ranges);
            } else if (rangeCount) {
                this.addRange(ranges[0]);
            }
        };
    } else {
        module.fail("No means of selecting a Range or TextRange was found");
        return false;
    }

    selProto.getRangeAt = function (index) {
        if (index < 0 || index >= this.rangeCount) {
            throw new DOMException("INDEX_SIZE_ERR");
        } else {
            return this._ranges[index];
        }
    };

    var refreshSelection;

    if (useDocumentSelection) {
        refreshSelection = function (sel) {
            var range;
            if (api.isSelectionValid(sel.win)) {
                range = sel.docSelection.createRange();
            } else {
                range = dom.getBody(sel.win.document).createTextRange();
                range.collapse(true);
            }


            if (sel.docSelection.type == CONTROL) {
                updateControlSelection(sel);
            } else if (isTextRange(range)) {
                updateFromTextRange(sel, range);
            } else {
                updateEmptySelection(sel);
            }
        };
    } else if (util.isHostMethod(testSelection, "getRangeAt") && typeof testSelection.rangeCount == "number") {
        refreshSelection = function (sel) {
            if (implementsControlRange && implementsDocSelection && sel.docSelection.type == CONTROL) {
                updateControlSelection(sel);
            } else {
                sel._ranges.length = sel.rangeCount = sel.nativeSelection.rangeCount;
                if (sel.rangeCount) {
                    for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                        sel._ranges[i] = new api.WrappedRange(sel.nativeSelection.getRangeAt(i));
                    }
                    updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], selectionIsBackwards(sel.nativeSelection));
                    sel.isCollapsed = selectionIsCollapsed(sel);
                } else {
                    updateEmptySelection(sel);
                }
            }
        };
    } else if (selectionHasAnchorAndFocus && typeof testSelection.isCollapsed == BOOLEAN && typeof testRange.collapsed == BOOLEAN && api.features.implementsDomRange) {
        refreshSelection = function (sel) {
            var range, nativeSel = sel.nativeSelection;
            if (nativeSel.anchorNode) {
                range = getSelectionRangeAt(nativeSel, 0);
                sel._ranges = [range];
                sel.rangeCount = 1;
                updateAnchorAndFocusFromNativeSelection(sel);
                sel.isCollapsed = selectionIsCollapsed(sel);
            } else {
                updateEmptySelection(sel);
            }
        };
    } else {
        module.fail("No means of obtaining a Range or TextRange from the user's selection was found");
        return false;
    }

    selProto.refresh = function (checkForChanges) {
        var oldRanges = checkForChanges ? this._ranges.slice(0) : null;
        refreshSelection(this);
        if (checkForChanges) {
            var i = oldRanges.length;
            if (i != this._ranges.length) {
                return false;
            }
            while (i--) {
                if (!DomRange.rangesEqual(oldRanges[i], this._ranges[i])) {
                    return false;
                }
            }
            return true;
        }
    };

    // Removal of a single range
    var removeRangeManually = function (sel, range) {
        var ranges = sel.getAllRanges(), removed = false;
        sel.removeAllRanges();
        for (var i = 0, len = ranges.length; i < len; ++i) {
            if (removed || range !== ranges[i]) {
                sel.addRange(ranges[i]);
            } else {
                // According to the draft WHATWG Range spec, the same range may be added to the selection multiple
                // times. removeRange should only remove the first instance, so the following ensures only the first
                // instance is removed
                removed = true;
            }
        }
        if (!sel.rangeCount) {
            updateEmptySelection(sel);
        }
    };

    if (implementsControlRange) {
        selProto.removeRange = function (range) {
            if (this.docSelection.type == CONTROL) {
                var controlRange = this.docSelection.createRange();
                var rangeElement = getSingleElementFromRange(range);

                // Create a new ControlRange containing all the elements in the selected ControlRange minus the
                // element contained by the supplied range
                var doc = dom.getDocument(controlRange.item(0));
                var newControlRange = dom.getBody(doc).createControlRange();
                var el, removed = false;
                for (var i = 0, len = controlRange.length; i < len; ++i) {
                    el = controlRange.item(i);
                    if (el !== rangeElement || removed) {
                        newControlRange.add(controlRange.item(i));
                    } else {
                        removed = true;
                    }
                }
                newControlRange.select();

                // Update the wrapped selection based on what's now in the native selection
                updateControlSelection(this);
            } else {
                removeRangeManually(this, range);
            }
        };
    } else {
        selProto.removeRange = function (range) {
            removeRangeManually(this, range);
        };
    }

    // Detecting if a selection is backwards
    var selectionIsBackwards;
    if (!useDocumentSelection && selectionHasAnchorAndFocus && api.features.implementsDomRange) {
        selectionIsBackwards = function (sel) {
            var backwards = false;
            if (sel.anchorNode) {
                backwards = (dom.comparePoints(sel.anchorNode, sel.anchorOffset, sel.focusNode, sel.focusOffset) == 1);
            }
            return backwards;
        };

        selProto.isBackwards = function () {
            return selectionIsBackwards(this);
        };
    } else {
        selectionIsBackwards = selProto.isBackwards = function () {
            return false;
        };
    }

    // Selection text
    // This is conformant to the new WHATWG DOM Range draft spec but differs from WebKit and Mozilla's implementation
    selProto.toString = function () {

        var rangeTexts = [];
        for (var i = 0, len = this.rangeCount; i < len; ++i) {
            rangeTexts[i] = "" + this._ranges[i];
        }
        return rangeTexts.join("");
    };

    function assertNodeInSameDocument(sel, node) {
        if (sel.anchorNode && (dom.getDocument(sel.anchorNode) !== dom.getDocument(node))) {
            throw new DOMException("WRONG_DOCUMENT_ERR");
        }
    }

    // No current browsers conform fully to the HTML 5 draft spec for this method, so Rangy's own method is always used
    selProto.collapse = function (node, offset) {
        assertNodeInSameDocument(this, node);
        var range = api.createRange(dom.getDocument(node));
        range.collapseToPoint(node, offset);
        this.removeAllRanges();
        this.addRange(range);
        this.isCollapsed = true;
    };

    selProto.collapseToStart = function () {
        if (this.rangeCount) {
            var range = this._ranges[0];
            this.collapse(range.startContainer, range.startOffset);
        } else {
            throw new DOMException("INVALID_STATE_ERR");
        }
    };

    selProto.collapseToEnd = function () {
        if (this.rangeCount) {
            var range = this._ranges[this.rangeCount - 1];
            this.collapse(range.endContainer, range.endOffset);
        } else {
            throw new DOMException("INVALID_STATE_ERR");
        }
    };

    // The HTML 5 spec is very specific on how selectAllChildren should be implemented so the native implementation is
    // never used by Rangy.
    selProto.selectAllChildren = function (node) {
        assertNodeInSameDocument(this, node);
        var range = api.createRange(dom.getDocument(node));
        range.selectNodeContents(node);
        this.removeAllRanges();
        this.addRange(range);
    };

    selProto.deleteFromDocument = function () {
        // Sepcial behaviour required for Control selections
        if (implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {
            var controlRange = this.docSelection.createRange();
            var element;
            while (controlRange.length) {
                element = controlRange.item(0);
                controlRange.remove(element);
                element.parentNode.removeChild(element);
            }
            this.refresh();
        } else if (this.rangeCount) {
            var ranges = this.getAllRanges();
            this.removeAllRanges();
            for (var i = 0, len = ranges.length; i < len; ++i) {
                ranges[i].deleteContents();
            }
            // The HTML5 spec says nothing about what the selection should contain after calling deleteContents on each
            // range. Firefox moves the selection to where the final selected range was, so we emulate that
            this.addRange(ranges[len - 1]);
        }
    };

    // The following are non-standard extensions
    selProto.getAllRanges = function () {
        return this._ranges.slice(0);
    };

    selProto.setSingleRange = function (range) {
        this.setRanges([range]);
    };

    selProto.containsNode = function (node, allowPartial) {
        for (var i = 0, len = this._ranges.length; i < len; ++i) {
            if (this._ranges[i].containsNode(node, allowPartial)) {
                return true;
            }
        }
        return false;
    };

    selProto.toHtml = function () {
        var html = "";
        if (this.rangeCount) {
            var container = DomRange.getRangeDocument(this._ranges[0]).createElement("div");
            for (var i = 0, len = this._ranges.length; i < len; ++i) {
                container.appendChild(this._ranges[i].cloneContents());
            }
            html = container.innerHTML;
        }
        return html;
    };

    function inspect(sel) {
        var rangeInspects = [];
        var anchor = new DomPosition(sel.anchorNode, sel.anchorOffset);
        var focus = new DomPosition(sel.focusNode, sel.focusOffset);
        var name = (typeof sel.getName == "function") ? sel.getName() : "Selection";

        if (typeof sel.rangeCount != "undefined") {
            for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                rangeInspects[i] = DomRange.inspect(sel.getRangeAt(i));
            }
        }
        return "[" + name + "(Ranges: " + rangeInspects.join(", ") +
            ")(anchor: " + anchor.inspect() + ", focus: " + focus.inspect() + "]";

    }

    selProto.getName = function () {
        return "WrappedSelection";
    };

    selProto.inspect = function () {
        return inspect(this);
    };

    selProto.detach = function () {
        this.win[windowPropertyName] = null;
        this.win = this.anchorNode = this.focusNode = null;
    };

    WrappedSelection.inspect = inspect;

    api.Selection = WrappedSelection;

    api.selectionPrototype = selProto;

    api.addCreateMissingNativeApiListener(function (win) {
        if (typeof win.getSelection == "undefined") {
            win.getSelection = function () {
                return api.getSelection(this);
            };
        }
        win = null;
    });
});
/*
 Base.js, version 1.1a
 Copyright 2006-2010, Dean Edwards
 License: http://www.opensource.org/licenses/mit-license.php
 */

var Base = function () {
    // dummy
};

Base.extend = function (_instance, _static) { // subclass
    var extend = Base.prototype.extend;

    // build the prototype
    Base._prototyping = true;
    var proto = new this;
    extend.call(proto, _instance);
    proto.base = function () {
        // call this method from any other method to invoke that method's ancestor
    };
    delete Base._prototyping;

    // create the wrapper for the constructor function
    //var constructor = proto.constructor.valueOf(); //-dean
    var constructor = proto.constructor;
    var klass = proto.constructor = function () {
        if (!Base._prototyping) {
            if (this._constructing || this.constructor == klass) { // instantiation
                this._constructing = true;
                constructor.apply(this, arguments);
                delete this._constructing;
            } else if (arguments[0] != null) { // casting
                return (arguments[0].extend || extend).call(arguments[0], proto);
            }
        }
    };

    // build the class interface
    klass.ancestor = this;
    klass.extend = this.extend;
    klass.forEach = this.forEach;
    klass.implement = this.implement;
    klass.prototype = proto;
    klass.toString = this.toString;
    klass.valueOf = function (type) {
        //return (type == "object") ? klass : constructor; //-dean
        return (type == "object") ? klass : constructor.valueOf();
    };
    extend.call(klass, _static);
    // class initialisation
    if (typeof klass.init == "function") klass.init();
    return klass;
};

Base.prototype = {
    extend: function (source, value) {
        if (arguments.length > 1) { // extending with a name/value pair
            var ancestor = this[source];
            if (ancestor && (typeof value == "function") && // overriding a method?
                // the valueOf() comparison is to avoid circular references
                (!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&
                /\bbase\b/.test(value)) {
                // get the underlying method
                var method = value.valueOf();
                // override
                value = function () {
                    var previous = this.base || Base.prototype.base;
                    this.base = ancestor;
                    var returnValue = method.apply(this, arguments);
                    this.base = previous;
                    return returnValue;
                };
                // point to the underlying method
                value.valueOf = function (type) {
                    return (type == "object") ? value : method;
                };
                value.toString = Base.toString;
            }
            this[source] = value;
        } else if (source) { // extending with an object literal
            var extend = Base.prototype.extend;
            // if this object has a customised extend method then use it
            if (!Base._prototyping && typeof this != "function") {
                extend = this.extend || extend;
            }
            var proto = {toSource: null};
            // do the "toString" and other methods manually
            var hidden = ["constructor", "toString", "valueOf"];
            // if we are prototyping then include the constructor
            var i = Base._prototyping ? 0 : 1;
            while (key = hidden[i++]) {
                if (source[key] != proto[key]) {
                    extend.call(this, key, source[key]);

                }
            }
            // copy each of the source object's properties to this object
            for (var key in source) {
                if (!proto[key]) extend.call(this, key, source[key]);
            }
        }
        return this;
    }
};

// initialise
Base = Base.extend({
    constructor: function () {
        this.extend(arguments[0]);
    }
}, {
    ancestor: Object,
    version: "1.1",

    forEach: function (object, block, context) {
        for (var key in object) {
            if (this.prototype[key] === undefined) {
                block.call(context, object[key], key, object);
            }
        }
    },

    implement: function () {
        for (var i = 0; i < arguments.length; i++) {
            if (typeof arguments[i] == "function") {
                // if it's a function, call it
                arguments[i](this.prototype);
            } else {
                // add the interface using the extend method
                this.prototype.extend(arguments[i]);
            }
        }
        return this;
    },

    toString: function () {
        return String(this.valueOf());
    }
});
/**
 * Detect browser support for specific features
 */
wysihtml5.browser = (function () {
    var userAgent = navigator.userAgent,
        testElement = document.createElement("div"),
    // Browser sniffing is unfortunately needed since some behaviors are impossible to feature detect
        isIE = userAgent.indexOf("MSIE") !== -1 && userAgent.indexOf("Opera") === -1,
        isGecko = userAgent.indexOf("Gecko") !== -1 && userAgent.indexOf("KHTML") === -1,
        isWebKit = userAgent.indexOf("AppleWebKit/") !== -1,
        isChrome = userAgent.indexOf("Chrome/") !== -1,
        isOpera = userAgent.indexOf("Opera/") !== -1;

    function iosVersion(userAgent) {
        return ((/ipad|iphone|ipod/.test(userAgent) && userAgent.match(/ os (\d+).+? like mac os x/)) || [, 0])[1];
    }

    return {
        // Static variable needed, publicly accessible, to be able override it in unit tests
        USER_AGENT: userAgent,

        /**
         * Exclude browsers that are not capable of displaying and handling
         * contentEditable as desired:
         *    - iPhone, iPad (tested iOS 4.2.2) and Android (tested 2.2) refuse to make contentEditables focusable
         *    - IE < 8 create invalid markup and crash randomly from time to time
         *
         * @return {Boolean}
         */
        supported: function () {
            var userAgent = this.USER_AGENT.toLowerCase(),
            // Essential for making html elements editable
                hasContentEditableSupport = "contentEditable" in testElement,
            // Following methods are needed in order to interact with the contentEditable area
                hasEditingApiSupport = document.execCommand && document.queryCommandSupported && document.queryCommandState,
            // document selector apis are only supported by IE 8+, Safari 4+, Chrome and Firefox 3.5+
                hasQuerySelectorSupport = document.querySelector && document.querySelectorAll,
            // contentEditable is unusable in mobile browsers (tested iOS 4.2.2, Android 2.2, Opera Mobile, WebOS 3.05)
                isIncompatibleMobileBrowser = (this.isIos() && iosVersion(userAgent) < 5) || userAgent.indexOf("opera mobi") !== -1 || userAgent.indexOf("hpwos/") !== -1;

            return hasContentEditableSupport
                && hasEditingApiSupport
                && hasQuerySelectorSupport
                && !isIncompatibleMobileBrowser;
        },

        isTouchDevice: function () {
            return this.supportsEvent("touchmove");
        },

        isIos: function () {
            var userAgent = this.USER_AGENT.toLowerCase();
            return userAgent.indexOf("webkit") !== -1 && userAgent.indexOf("mobile") !== -1;
        },

        /**
         * Whether the browser supports sandboxed iframes
         * Currently only IE 6+ offers such feature <iframe security="restricted">
         *
         * http://msdn.microsoft.com/en-us/library/ms534622(v=vs.85).aspx
         * http://blogs.msdn.com/b/ie/archive/2008/01/18/using-frames-more-securely.aspx
         *
         * HTML5 sandboxed iframes are still buggy and their DOM is not reachable from the outside (except when using postMessage)
         */
        supportsSandboxedIframes: function () {
            return isIE;
        },

        /**
         * IE6+7 throw a mixed content warning when the src of an iframe
         * is empty/unset or about:blank
         * window.querySelector is implemented as of IE8
         */
        throwsMixedContentWarningWhenIframeSrcIsEmpty: function () {
            return !("querySelector" in document);
        },

        /**
         * Whether the caret is correctly displayed in contentEditable elements
         * Firefox sometimes shows a huge caret in the beginning after focusing
         */
        displaysCaretInEmptyContentEditableCorrectly: function () {
            return !isGecko;
        },

        /**
         * Opera and IE are the only browsers who offer the css value
         * in the original unit, thx to the currentStyle object
         * All other browsers provide the computed style in px via window.getComputedStyle
         */
        hasCurrentStyleProperty: function () {
            return "currentStyle" in testElement;
        },

        /**
         * Whether the browser inserts a <br> when pressing enter in a contentEditable element
         */
        insertsLineBreaksOnReturn: function () {
            return isGecko;
        },

        supportsPlaceholderAttributeOn: function (element) {
            return "placeholder" in element;
        },

        supportsEvent: function (eventName) {
            return "on" + eventName in testElement || (function () {
                testElement.setAttribute("on" + eventName, "return;");
                return typeof(testElement["on" + eventName]) === "function";
            })();
        },

        /**
         * Opera doesn't correctly fire focus/blur events when clicking in- and outside of iframe
         */
        supportsEventsInIframeCorrectly: function () {
            return !isOpera;
        },

        /**
         * Chrome & Safari only fire the ondrop/ondragend/... events when the ondragover event is cancelled
         * with event.preventDefault
         * Firefox 3.6 fires those events anyway, but the mozilla doc says that the dragover/dragenter event needs
         * to be cancelled
         */
        firesOnDropOnlyWhenOnDragOverIsCancelled: function () {
            return isWebKit || isGecko;
        },

        /**
         * Whether the browser supports the event.dataTransfer property in a proper way
         */
        supportsDataTransfer: function () {
            try {
                // Firefox doesn't support dataTransfer in a safe way, it doesn't strip script code in the html payload (like Chrome does)
                return isWebKit && (window.Clipboard || window.DataTransfer).prototype.getData;
            } catch (e) {
                return false;
            }
        },

        /**
         * Everything below IE9 doesn't know how to treat HTML5 tags
         *
         * @param {Object} context The document object on which to check HTML5 support
         *
         * @example
         *    wysihtml5.browser.supportsHTML5Tags(document);
         */
        supportsHTML5Tags: function (context) {
            var element = context.createElement("div"),
                html5 = "<article>foo</article>";
            element.innerHTML = html5;
            return element.innerHTML.toLowerCase() === html5;
        },

        /**
         * Checks whether a document supports a certain queryCommand
         * In particular, Opera needs a reference to a document that has a contentEditable in it's dom tree
         * in oder to report correct results
         *
         * @param {Object} doc Document object on which to check for a query command
         * @param {String} command The query command to check for
         * @return {Boolean}
         *
         * @example
         *    wysihtml5.browser.supportsCommand(document, "bold");
         */
        supportsCommand: (function () {
            // Following commands are supported but contain bugs in some browsers
            var buggyCommands = {
                // formatBlock fails with some tags (eg. <blockquote>)
                "formatBlock": isIE,
                // When inserting unordered or ordered lists in Firefox, Chrome or Safari, the current selection or line gets
                // converted into a list (<ul><li>...</li></ul>, <ol><li>...</li></ol>)
                // IE and Opera act a bit different here as they convert the entire content of the current block element into a list
                "insertUnorderedList": isIE || isOpera || isWebKit,
                "insertOrderedList": isIE || isOpera || isWebKit
            };

            // Firefox throws errors for queryCommandSupported, so we have to build up our own object of supported commands
            var supported = {
                "insertHTML": isGecko
            };

            return function (doc, command) {
                var isBuggy = buggyCommands[command];
                if (!isBuggy) {
                    // Firefox throws errors when invoking queryCommandSupported or queryCommandEnabled
                    try {
                        return doc.queryCommandSupported(command);
                    } catch (e1) {
                    }

                    try {
                        return doc.queryCommandEnabled(command);
                    } catch (e2) {
                        return !!supported[command];
                    }
                }
                return false;
            };
        })(),

        /**
         * IE: URLs starting with:
         *    www., http://, https://, ftp://, gopher://, mailto:, new:, snews:, telnet:, wasis:, file://,
         *    nntp://, newsrc:, ldap://, ldaps://, outlook:, mic:// and url:
         * will automatically be auto-linked when either the user inserts them via copy&paste or presses the
         * space bar when the caret is directly after such an url.
         * This behavior cannot easily be avoided in IE < 9 since the logic is hardcoded in the mshtml.dll
         * (related blog post on msdn
         * http://blogs.msdn.com/b/ieinternals/archive/2009/09/17/prevent-automatic-hyperlinking-in-contenteditable-html.aspx).
         */
        doesAutoLinkingInContentEditable: function () {
            return isIE;
        },

        /**
         * As stated above, IE auto links urls typed into contentEditable elements
         * Since IE9 it's possible to prevent this behavior
         */
        canDisableAutoLinking: function () {
            return this.supportsCommand(document, "AutoUrlDetect");
        },

        /**
         * IE leaves an empty paragraph in the contentEditable element after clearing it
         * Chrome/Safari sometimes an empty <div>
         */
        clearsContentEditableCorrectly: function () {
            return isGecko || isOpera || isWebKit;
        },

        /**
         * IE gives wrong results for getAttribute
         */
        supportsGetAttributeCorrectly: function () {
            var td = document.createElement("td");
            return td.getAttribute("rowspan") != "1";
        },

        /**
         * When clicking on images in IE, Opera and Firefox, they are selected, which makes it easy to interact with them.
         * Chrome and Safari both don't support this
         */
        canSelectImagesInContentEditable: function () {
            return isGecko || isIE || isOpera;
        },

        /**
         * When the caret is in an empty list (<ul><li>|</li></ul>) which is the first child in an contentEditable container
         * pressing backspace doesn't remove the entire list as done in other browsers
         */
        clearsListsInContentEditableCorrectly: function () {
            return isGecko || isIE || isWebKit;
        },

        /**
         * All browsers except Safari and Chrome automatically scroll the range/caret position into view
         */
        autoScrollsToCaret: function () {
            return !isWebKit;
        },

        /**
         * Check whether the browser automatically closes tags that don't need to be opened
         */
        autoClosesUnclosedTags: function () {
            var clonedTestElement = testElement.cloneNode(false),
                returnValue,
                innerHTML;

            clonedTestElement.innerHTML = "<p><div></div>";
            innerHTML = clonedTestElement.innerHTML.toLowerCase();
            returnValue = innerHTML === "<p></p><div></div>" || innerHTML === "<p><div></div></p>";

            // Cache result by overwriting current function
            this.autoClosesUnclosedTags = function () {
                return returnValue;
            };

            return returnValue;
        },

        /**
         * Whether the browser supports the native document.getElementsByClassName which returns live NodeLists
         */
        supportsNativeGetElementsByClassName: function () {
            return String(document.getElementsByClassName).indexOf("[native code]") !== -1;
        },

        /**
         * As of now (19.04.2011) only supported by Firefox 4 and Chrome
         * See https://developer.mozilla.org/en/DOM/Selection/modify
         */
        supportsSelectionModify: function () {
            return "getSelection" in window && "modify" in window.getSelection();
        },

        /**
         * Whether the browser supports the classList object for fast className manipulation
         * See https://developer.mozilla.org/en/DOM/element.classList
         */
        supportsClassList: function () {
            return "classList" in testElement;
        },

        /**
         * Opera needs a white space after a <br> in order to position the caret correctly
         */
        needsSpaceAfterLineBreak: function () {
            return isOpera;
        },

        /**
         * Whether the browser supports the speech api on the given element
         * See http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/
         *
         * @example
         *    var input = document.createElement("input");
         *    if (wysihtml5.browser.supportsSpeechApiOn(input)) {
     *      // ...
     *    }
         */
        supportsSpeechApiOn: function (input) {
            var chromeVersion = userAgent.match(/Chrome\/(\d+)/) || [, 0];
            return chromeVersion[1] >= 11 && ("onwebkitspeechchange" in input || "speech" in input);
        },

        /**
         * IE9 crashes when setting a getter via Object.defineProperty on XMLHttpRequest or XDomainRequest
         * See https://connect.microsoft.com/ie/feedback/details/650112
         * or try the POC http://tifftiff.de/ie9_crash/
         */
        crashesWhenDefineProperty: function (property) {
            return isIE && (property === "XMLHttpRequest" || property === "XDomainRequest");
        },

        /**
         * IE is the only browser who fires the "focus" event not immediately when .focus() is called on an element
         */
        doesAsyncFocus: function () {
            return isIE;
        },

        /**
         * In IE it's impssible for the user and for the selection library to set the caret after an <img> when it's the lastChild in the document
         */
        hasProblemsSettingCaretAfterImg: function () {
            return isIE;
        },

        hasUndoInContextMenu: function () {
            return isGecko || isChrome || isOpera;
        }
    };
})();
wysihtml5.lang.array = function (arr) {
    return {
        /**
         * Check whether a given object exists in an array
         *
         * @example
         *    wysihtml5.lang.array([1, 2]).contains(1);
         *    // => true
         */
        contains: function (needle) {
            if (arr.indexOf) {
                return arr.indexOf(needle) !== -1;
            } else {
                for (var i = 0, length = arr.length; i < length; i++) {
                    if (arr[i] === needle) {
                        return true;
                    }
                }
                return false;
            }
        },

        /**
         * Substract one array from another
         *
         * @example
         *    wysihtml5.lang.array([1, 2, 3, 4]).without([3, 4]);
         *    // => [1, 2]
         */
        without: function (arrayToSubstract) {
            arrayToSubstract = wysihtml5.lang.array(arrayToSubstract);
            var newArr = [],
                i = 0,
                length = arr.length;
            for (; i < length; i++) {
                if (!arrayToSubstract.contains(arr[i])) {
                    newArr.push(arr[i]);
                }
            }
            return newArr;
        },

        /**
         * Return a clean native array
         *
         * Following will convert a Live NodeList to a proper Array
         * @example
         *    var childNodes = wysihtml5.lang.array(document.body.childNodes).get();
         */
        get: function () {
            var i = 0,
                length = arr.length,
                newArray = [];
            for (; i < length; i++) {
                newArray.push(arr[i]);
            }
            return newArray;
        }
    };
};
wysihtml5.lang.Dispatcher = Base.extend(
    /** @scope wysihtml5.lang.Dialog.prototype */ {
        observe: function (eventName, handler) {
            this.events = this.events || {};
            this.events[eventName] = this.events[eventName] || [];
            this.events[eventName].push(handler);
            return this;
        },

        on: function () {
            return this.observe.apply(this, wysihtml5.lang.array(arguments).get());
        },

        fire: function (eventName, payload) {
            this.events = this.events || {};
            var handlers = this.events[eventName] || [],
                i = 0;
            for (; i < handlers.length; i++) {
                handlers[i].call(this, payload);
            }
            return this;
        },

        stopObserving: function (eventName, handler) {
            this.events = this.events || {};
            var i = 0,
                handlers,
                newHandlers;
            if (eventName) {
                handlers = this.events[eventName] || [],
                    newHandlers = [];
                for (; i < handlers.length; i++) {
                    if (handlers[i] !== handler && handler) {
                        newHandlers.push(handlers[i]);
                    }
                }
                this.events[eventName] = newHandlers;
            } else {
                // Clean up all events
                this.events = {};
            }
            return this;
        }
    });
wysihtml5.lang.object = function (obj) {
    return {
        /**
         * @example
         *    wysihtml5.lang.object({ foo: 1, bar: 1 }).merge({ bar: 2, baz: 3 }).get();
         *    // => { foo: 1, bar: 2, baz: 3 }
         */
        merge: function (otherObj) {
            for (var i in otherObj) {
                obj[i] = otherObj[i];
            }
            return this;
        },

        get: function () {
            return obj;
        },

        /**
         * @example
         *    wysihtml5.lang.object({ foo: 1 }).clone();
         *    // => { foo: 1 }
         */
        clone: function () {
            var newObj = {},
                i;
            for (i in obj) {
                newObj[i] = obj[i];
            }
            return newObj;
        },

        /**
         * @example
         *    wysihtml5.lang.object([]).isArray();
         *    // => true
         */
        isArray: function () {
            return Object.prototype.toString.call(obj) === "[object Array]";
        }
    };
};
(function () {
    var WHITE_SPACE_START = /^\s+/,
        WHITE_SPACE_END = /\s+$/;
    wysihtml5.lang.string = function (str) {
        str = String(str);
        return {
            /**
             * @example
             *    wysihtml5.lang.string("   foo   ").trim();
             *    // => "foo"
             */
            trim: function () {
                return str.replace(WHITE_SPACE_START, "").replace(WHITE_SPACE_END, "");
            },

            /**
             * @example
             *    wysihtml5.lang.string("Hello #{name}").interpolate({ name: "Christopher" });
             *    // => "Hello Christopher"
             */
            interpolate: function (vars) {
                for (var i in vars) {
                    str = this.replace("#{" + i + "}").by(vars[i]);
                }
                return str;
            },

            /**
             * @example
             *    wysihtml5.lang.string("Hello Tom").replace("Tom").with("Hans");
             *    // => "Hello Hans"
             */
            replace: function (search) {
                return {
                    by: function (replace) {
                        return str.split(search).join(replace);
                    }
                }
            }
        };
    };
})();
/**
 * Find urls in descendant text nodes of an element and auto-links them
 * Inspired by http://james.padolsey.com/javascript/find-and-replace-text-with-javascript/
 *
 * @param {Element} element Container element in which to search for urls
 *
 * @example
 *    <div id="text-container">Please click here: www.google.com</div>
 *    <script>wysihtml5.dom.autoLink(document.getElementById("text-container"));</script>
 */
(function (wysihtml5) {
    var /**
         * Don't auto-link urls that are contained in the following elements:
         */
            IGNORE_URLS_IN = wysihtml5.lang.array(["CODE", "PRE", "A", "SCRIPT", "HEAD", "TITLE", "STYLE"]),
        /**
         * revision 1:
         *    /(\S+\.{1}[^\s\,\.\!]+)/g
         *
         * revision 2:
         *    /(\b(((https?|ftp):\/\/)|(www\.))[-A-Z0-9+&@#\/%?=~_|!:,.;\[\]]*[-A-Z0-9+&@#\/%=~_|])/gim
         *
         * put this in the beginning if you don't wan't to match within a word
         *    (^|[\>\(\{\[\s\>])
       */
            URL_REG_EXP = /((https?:\/\/|www\.)[^\s<]{3,})/gi,
        TRAILING_CHAR_REG_EXP = /([^\w\/\-](,?))$/i,
        MAX_DISPLAY_LENGTH = 100,
        BRACKETS = { ")": "(", "]": "[", "}": "{" };

    function autoLink(element) {
        if (_hasParentThatShouldBeIgnored(element)) {
            return element;
        }

        if (element === element.ownerDocument.documentElement) {
            element = element.ownerDocument.body;
        }

        return _parseNode(element);
    }

    /**
     * This is basically a rebuild of
     * the rails auto_link_urls text helper
     */
    function _convertUrlsToLinks(str) {
        return str.replace(URL_REG_EXP, function (match, url) {
            var punctuation = (url.match(TRAILING_CHAR_REG_EXP) || [])[1] || "",
                opening = BRACKETS[punctuation];
            url = url.replace(TRAILING_CHAR_REG_EXP, "");

            if (url.split(opening).length > url.split(punctuation).length) {
                url = url + punctuation;
                punctuation = "";
            }
            var realUrl = url,
                displayUrl = url;
            if (url.length > MAX_DISPLAY_LENGTH) {
                displayUrl = displayUrl.substr(0, MAX_DISPLAY_LENGTH) + "...";
            }
            // Add http prefix if necessary
            if (realUrl.substr(0, 4) === "www.") {
                realUrl = "http://" + realUrl;
            }

            return '<a href="' + realUrl + '">' + displayUrl + '</a>' + punctuation;
        });
    }

    /**
     * Creates or (if already cached) returns a temp element
     * for the given document object
     */
    function _getTempElement(context) {
        var tempElement = context._wysihtml5_tempElement;
        if (!tempElement) {
            tempElement = context._wysihtml5_tempElement = context.createElement("div");
        }
        return tempElement;
    }

    /**
     * Replaces the original text nodes with the newly auto-linked dom tree
     */
    function _wrapMatchesInNode(textNode) {
        var parentNode = textNode.parentNode,
            tempElement = _getTempElement(parentNode.ownerDocument);

        // We need to insert an empty/temporary <span /> to fix IE quirks
        // Elsewise IE would strip white space in the beginning
        tempElement.innerHTML = "<span></span>" + _convertUrlsToLinks(textNode.data);
        tempElement.removeChild(tempElement.firstChild);

        while (tempElement.firstChild) {
            // inserts tempElement.firstChild before textNode
            parentNode.insertBefore(tempElement.firstChild, textNode);
        }
        parentNode.removeChild(textNode);
    }

    function _hasParentThatShouldBeIgnored(node) {
        var nodeName;
        while (node.parentNode) {
            node = node.parentNode;
            nodeName = node.nodeName;
            if (IGNORE_URLS_IN.contains(nodeName)) {
                return true;
            } else if (nodeName === "body") {
                return false;
            }
        }
        return false;
    }

    function _parseNode(element) {
        if (IGNORE_URLS_IN.contains(element.nodeName)) {
            return;
        }

        if (element.nodeType === wysihtml5.TEXT_NODE && element.data.match(URL_REG_EXP)) {
            _wrapMatchesInNode(element);
            return;
        }

        var childNodes = wysihtml5.lang.array(element.childNodes).get(),
            childNodesLength = childNodes.length,
            i = 0;

        for (; i < childNodesLength; i++) {
            _parseNode(childNodes[i]);
        }

        return element;
    }

    wysihtml5.dom.autoLink = autoLink;

    // Reveal url reg exp to the outside
    wysihtml5.dom.autoLink.URL_REG_EXP = URL_REG_EXP;
})(wysihtml5);
(function (wysihtml5) {
    var supportsClassList = wysihtml5.browser.supportsClassList(),
        api = wysihtml5.dom;

    api.addClass = function (element, className) {
        if (supportsClassList) {
            return element.classList.add(className);
        }
        if (api.hasClass(element, className)) {
            return;
        }
        element.className += " " + className;
    };

    api.removeClass = function (element, className) {
        if (supportsClassList) {
            return element.classList.remove(className);
        }

        element.className = element.className.replace(new RegExp("(^|\\s+)" + className + "(\\s+|$)"), " ");
    };

    api.hasClass = function (element, className) {
        if (supportsClassList) {
            return element.classList.contains(className);
        }

        var elementClassName = element.className;
        return (elementClassName.length > 0 && (elementClassName == className || new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
    };
})(wysihtml5);
wysihtml5.dom.contains = (function () {
    var documentElement = document.documentElement;
    if (documentElement.contains) {
        return function (container, element) {
            if (element.nodeType !== wysihtml5.ELEMENT_NODE) {
                element = element.parentNode;
            }
            return container !== element && container.contains(element);
        };
    } else if (documentElement.compareDocumentPosition) {
        return function (container, element) {
            // https://developer.mozilla.org/en/DOM/Node.compareDocumentPosition
            return !!(container.compareDocumentPosition(element) & 16);
        };
    }
})();
/**
 * Converts an HTML fragment/element into a unordered/ordered list
 *
 * @param {Element} element The element which should be turned into a list
 * @param {String} listType The list type in which to convert the tree (either "ul" or "ol")
 * @return {Element} The created list
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <span id="pseudo-list">
 *      eminem<br>
 *      dr. dre
 *      <div>50 Cent</div>
 *    </span>
 *
 *    <script>
 *      wysihtml5.dom.convertToList(document.getElementById("pseudo-list"), "ul");
 *    </script>
 *
 *    <!-- Will result in: -->
 *    <ul>
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 */
wysihtml5.dom.convertToList = (function () {
    function _createListItem(doc, list) {
        var listItem = doc.createElement("li");
        list.appendChild(listItem);
        return listItem;
    }

    function _createList(doc, type) {
        return doc.createElement(type);
    }

    function convertToList(element, listType) {
        if (element.nodeName === "UL" || element.nodeName === "OL" || element.nodeName === "MENU") {
            // Already a list
            return element;
        }

        var doc = element.ownerDocument,
            list = _createList(doc, listType),
            lineBreaks = element.querySelectorAll("br"),
            lineBreaksLength = lineBreaks.length,
            childNodes,
            childNodesLength,
            childNode,
            lineBreak,
            parentNode,
            isBlockElement,
            isLineBreak,
            currentListItem,
            i;

        // First find <br> at the end of inline elements and move them behind them
        for (i = 0; i < lineBreaksLength; i++) {
            lineBreak = lineBreaks[i];
            while ((parentNode = lineBreak.parentNode) && parentNode !== element && parentNode.lastChild === lineBreak) {
                if (wysihtml5.dom.getStyle("display").from(parentNode) === "block") {
                    parentNode.removeChild(lineBreak);
                    break;
                }
                wysihtml5.dom.insert(lineBreak).after(lineBreak.parentNode);
            }
        }

        childNodes = wysihtml5.lang.array(element.childNodes).get();
        childNodesLength = childNodes.length;

        for (i = 0; i < childNodesLength; i++) {
            currentListItem = currentListItem || _createListItem(doc, list);
            childNode = childNodes[i];
            isBlockElement = wysihtml5.dom.getStyle("display").from(childNode) === "block";
            isLineBreak = childNode.nodeName === "BR";

            if (isBlockElement) {
                // Append blockElement to current <li> if empty, otherwise create a new one
                currentListItem = currentListItem.firstChild ? _createListItem(doc, list) : currentListItem;
                currentListItem.appendChild(childNode);
                currentListItem = null;
                continue;
            }

            if (isLineBreak) {
                // Only create a new list item in the next iteration when the current one has already content
                currentListItem = currentListItem.firstChild ? null : currentListItem;
                continue;
            }

            currentListItem.appendChild(childNode);
        }

        element.parentNode.replaceChild(list, element);
        return list;
    }

    return convertToList;
})();
/**
 * Copy a set of attributes from one element to another
 *
 * @param {Array} attributesToCopy List of attributes which should be copied
 * @return {Object} Returns an object which offers the "from" method which can be invoked with the element where to
 *    copy the attributes from., this again returns an object which provides a method named "to" which can be invoked
 *    with the element where to copy the attributes to (see example)
 *
 * @example
 *    var textarea    = document.querySelector("textarea"),
 *        div         = document.querySelector("div[contenteditable=true]"),
 *        anotherDiv  = document.querySelector("div.preview");
 *    wysihtml5.dom.copyAttributes(["spellcheck", "value", "placeholder"]).from(textarea).to(div).andTo(anotherDiv);
 *
 */
wysihtml5.dom.copyAttributes = function (attributesToCopy) {
    return {
        from: function (elementToCopyFrom) {
            return {
                to: function (elementToCopyTo) {
                    var attribute,
                        i = 0,
                        length = attributesToCopy.length;
                    for (; i < length; i++) {
                        attribute = attributesToCopy[i];
                        if (typeof(elementToCopyFrom[attribute]) !== "undefined" && elementToCopyFrom[attribute] !== "") {
                            elementToCopyTo[attribute] = elementToCopyFrom[attribute];
                        }
                    }
                    return { andTo: arguments.callee };
                }
            };
        }
    };
};
/**
 * Copy a set of styles from one element to another
 * Please note that this only works properly across browsers when the element from which to copy the styles
 * is in the dom
 *
 * Interesting article on how to copy styles
 *
 * @param {Array} stylesToCopy List of styles which should be copied
 * @return {Object} Returns an object which offers the "from" method which can be invoked with the element where to
 *    copy the styles from., this again returns an object which provides a method named "to" which can be invoked
 *    with the element where to copy the styles to (see example)
 *
 * @example
 *    var textarea    = document.querySelector("textarea"),
 *        div         = document.querySelector("div[contenteditable=true]"),
 *        anotherDiv  = document.querySelector("div.preview");
 *    wysihtml5.dom.copyStyles(["overflow-y", "width", "height"]).from(textarea).to(div).andTo(anotherDiv);
 *
 */
(function (dom) {

    /**
     * Mozilla, WebKit and Opera recalculate the computed width when box-sizing: boder-box; is set
     * So if an element has "width: 200px; -moz-box-sizing: border-box; border: 1px;" then
     * its computed css width will be 198px
     */
    var BOX_SIZING_PROPERTIES = ["-webkit-box-sizing", "-moz-box-sizing", "-ms-box-sizing", "box-sizing"];

    var shouldIgnoreBoxSizingBorderBox = function (element) {
        if (hasBoxSizingBorderBox(element)) {
            return parseInt(dom.getStyle("width").from(element), 10) < element.offsetWidth;
        }
        return false;
    };

    var hasBoxSizingBorderBox = function (element) {
        var i = 0,
            length = BOX_SIZING_PROPERTIES.length;
        for (; i < length; i++) {
            if (dom.getStyle(BOX_SIZING_PROPERTIES[i]).from(element) === "border-box") {
                return BOX_SIZING_PROPERTIES[i];
            }
        }
    };

    dom.copyStyles = function (stylesToCopy) {
        return {
            from: function (element) {
                if (shouldIgnoreBoxSizingBorderBox(element)) {
                    stylesToCopy = wysihtml5.lang.array(stylesToCopy).without(BOX_SIZING_PROPERTIES);
                }

                var cssText = "",
                    length = stylesToCopy.length,
                    i = 0,
                    property;
                for (; i < length; i++) {
                    property = stylesToCopy[i];
                    cssText += property + ":" + dom.getStyle(property).from(element) + ";";
                }

                return {
                    to: function (element) {
                        dom.setStyles(cssText).on(element);
                        return { andTo: arguments.callee };
                    }
                };
            }
        };
    };
})(wysihtml5.dom);
/**
 * Event Delegation
 *
 * @example
 *    wysihtml5.dom.delegate(document.body, "a", "click", function() {
 *      // foo
 *    });
 */
(function (wysihtml5) {

    wysihtml5.dom.delegate = function (container, selector, eventName, handler) {
        return wysihtml5.dom.observe(container, eventName, function (event) {
            var target = event.target,
                match = wysihtml5.lang.array(container.querySelectorAll(selector));

            while (target && target !== container) {
                if (match.contains(target)) {
                    handler.call(target, event);
                    break;
                }
                target = target.parentNode;
            }
        });
    };

})(wysihtml5);
/**
 * Returns the given html wrapped in a div element
 *
 * Fixing IE's inability to treat unknown elements (HTML5 section, article, ...) correctly
 * when inserted via innerHTML
 *
 * @param {String} html The html which should be wrapped in a dom element
 * @param {Obejct} [context] Document object of the context the html belongs to
 *
 * @example
 *    wysihtml5.dom.getAsDom("<article>foo</article>");
 */
wysihtml5.dom.getAsDom = (function () {

    var _innerHTMLShiv = function (html, context) {
        var tempElement = context.createElement("div");
        tempElement.style.display = "none";
        context.body.appendChild(tempElement);
        // IE throws an exception when trying to insert <frameset></frameset> via innerHTML
        try {
            tempElement.innerHTML = html;
        } catch (e) {
        }
        context.body.removeChild(tempElement);
        return tempElement;
    };

    /**
     * Make sure IE supports HTML5 tags, which is accomplished by simply creating one instance of each element
     */
    var _ensureHTML5Compatibility = function (context) {
        if (context._wysihtml5_supportsHTML5Tags) {
            return;
        }
        for (var i = 0, length = HTML5_ELEMENTS.length; i < length; i++) {
            context.createElement(HTML5_ELEMENTS[i]);
        }
        context._wysihtml5_supportsHTML5Tags = true;
    };


    /**
     * List of html5 tags
     * taken from http://simon.html5.org/html5-elements
     */
    var HTML5_ELEMENTS = [
        "abbr", "article", "aside", "audio", "bdi", "canvas", "command", "datalist", "details", "figcaption",
        "figure", "footer", "header", "hgroup", "keygen", "mark", "meter", "nav", "output", "progress",
        "rp", "rt", "ruby", "svg", "section", "source", "summary", "time", "track", "video", "wbr"
    ];

    return function (html, context) {
        context = context || document;
        var tempElement;
        if (typeof(html) === "object" && html.nodeType) {
            tempElement = context.createElement("div");
            tempElement.appendChild(html);
        } else if (wysihtml5.browser.supportsHTML5Tags(context)) {
            tempElement = context.createElement("div");
            tempElement.innerHTML = html;
        } else {
            _ensureHTML5Compatibility(context);
            tempElement = _innerHTMLShiv(html, context);
        }
        return tempElement;
    };
})();
/**
 * Walks the dom tree from the given node up until it finds a match
 * Designed for optimal performance.
 *
 * @param {Element} node The from which to check the parent nodes
 * @param {Object} matchingSet Object to match against (possible properties: nodeName, className, classRegExp)
 * @param {Number} [levels] How many parents should the function check up from the current node (defaults to 50)
 * @return {null|Element} Returns the first element that matched the desiredNodeName(s)
 * @example
 *    var listElement = wysihtml5.dom.getParentElement(document.querySelector("li"), { nodeName: ["MENU", "UL", "OL"] });
 *    // ... or ...
 *    var unorderedListElement = wysihtml5.dom.getParentElement(document.querySelector("li"), { nodeName: "UL" });
 *    // ... or ...
 *    var coloredElement = wysihtml5.dom.getParentElement(myTextNode, { nodeName: "SPAN", className: "wysiwyg-color-red", classRegExp: /wysiwyg-color-[a-z]/g });
 */
wysihtml5.dom.getParentElement = (function () {

    function _isSameNodeName(nodeName, desiredNodeNames) {
        if (!desiredNodeNames || !desiredNodeNames.length) {
            return true;
        }

        if (typeof(desiredNodeNames) === "string") {
            return nodeName === desiredNodeNames;
        } else {
            return wysihtml5.lang.array(desiredNodeNames).contains(nodeName);
        }
    }

    function _isElement(node) {
        return node.nodeType === wysihtml5.ELEMENT_NODE;
    }

    function _hasClassName(element, className, classRegExp) {
        var classNames = (element.className || "").match(classRegExp) || [];
        if (!className) {
            return !!classNames.length;
        }
        return classNames[classNames.length - 1] === className;
    }

    function _getParentElementWithNodeName(node, nodeName, levels) {
        while (levels-- && node && node.nodeName !== "BODY") {
            if (_isSameNodeName(node.nodeName, nodeName)) {
                return node;
            }
            node = node.parentNode;
        }
        return null;
    }

    function _getParentElementWithNodeNameAndClassName(node, nodeName, className, classRegExp, levels) {
        while (levels-- && node && node.nodeName !== "BODY") {
            if (_isElement(node) &&
                _isSameNodeName(node.nodeName, nodeName) &&
                _hasClassName(node, className, classRegExp)) {
                return node;
            }
            node = node.parentNode;
        }
        return null;
    }

    return function (node, matchingSet, levels) {
        levels = levels || 50; // Go max 50 nodes upwards from current node
        if (matchingSet.className || matchingSet.classRegExp) {
            return _getParentElementWithNodeNameAndClassName(
                node, matchingSet.nodeName, matchingSet.className, matchingSet.classRegExp, levels
            );
        } else {
            return _getParentElementWithNodeName(
                node, matchingSet.nodeName, levels
            );
        }
    };
})();
/**
 * Get element's style for a specific css property
 *
 * @param {Element} element The element on which to retrieve the style
 * @param {String} property The CSS property to retrieve ("float", "display", "text-align", ...)
 *
 * @example
 *    wysihtml5.dom.getStyle("display").from(document.body);
 *    // => "block"
 */
wysihtml5.dom.getStyle = (function () {
    var stylePropertyMapping = {
            "float": ("styleFloat" in document.createElement("div").style) ? "styleFloat" : "cssFloat"
        },
        REG_EXP_CAMELIZE = /\-[a-z]/g;

    function camelize(str) {
        return str.replace(REG_EXP_CAMELIZE, function (match) {
            return match.charAt(1).toUpperCase();
        });
    }

    return function (property) {
        return {
            from: function (element) {
                if (element.nodeType !== wysihtml5.ELEMENT_NODE) {
                    return;
                }

                var doc = element.ownerDocument,
                    camelizedProperty = stylePropertyMapping[property] || camelize(property),
                    style = element.style,
                    currentStyle = element.currentStyle,
                    styleValue = style[camelizedProperty];
                if (styleValue) {
                    return styleValue;
                }

                // currentStyle is no standard and only supported by Opera and IE but it has one important advantage over the standard-compliant
                // window.getComputedStyle, since it returns css property values in their original unit:
                // If you set an elements width to "50%", window.getComputedStyle will give you it's current width in px while currentStyle
                // gives you the original "50%".
                // Opera supports both, currentStyle and window.getComputedStyle, that's why checking for currentStyle should have higher prio
                if (currentStyle) {
                    try {
                        return currentStyle[camelizedProperty];
                    } catch (e) {
                        //ie will occasionally fail for unknown reasons. swallowing exception
                    }
                }

                var win = doc.defaultView || doc.parentWindow,
                    needsOverflowReset = (property === "height" || property === "width") && element.nodeName === "TEXTAREA",
                    originalOverflow,
                    returnValue;

                if (win.getComputedStyle) {
                    // Chrome and Safari both calculate a wrong width and height for textareas when they have scroll bars
                    // therfore we remove and restore the scrollbar and calculate the value in between
                    if (needsOverflowReset) {
                        originalOverflow = style.overflow;
                        style.overflow = "hidden";
                    }
                    returnValue = win.getComputedStyle(element, null).getPropertyValue(property);
                    if (needsOverflowReset) {
                        style.overflow = originalOverflow || "";
                    }
                    return returnValue;
                }
            }
        };
    };
})();
/**
 * High performant way to check whether an element with a specific tag name is in the given document
 * Optimized for being heavily executed
 * Unleashes the power of live node lists
 *
 * @param {Object} doc The document object of the context where to check
 * @param {String} tagName Upper cased tag name
 * @example
 *    wysihtml5.dom.hasElementWithTagName(document, "IMG");
 */
wysihtml5.dom.hasElementWithTagName = (function () {
    var LIVE_CACHE = {},
        DOCUMENT_IDENTIFIER = 1;

    function _getDocumentIdentifier(doc) {
        return doc._wysihtml5_identifier || (doc._wysihtml5_identifier = DOCUMENT_IDENTIFIER++);
    }

    return function (doc, tagName) {
        var key = _getDocumentIdentifier(doc) + ":" + tagName,
            cacheEntry = LIVE_CACHE[key];
        if (!cacheEntry) {
            cacheEntry = LIVE_CACHE[key] = doc.getElementsByTagName(tagName);
        }

        return cacheEntry.length > 0;
    };
})();
/**
 * High performant way to check whether an element with a specific class name is in the given document
 * Optimized for being heavily executed
 * Unleashes the power of live node lists
 *
 * @param {Object} doc The document object of the context where to check
 * @param {String} tagName Upper cased tag name
 * @example
 *    wysihtml5.dom.hasElementWithClassName(document, "foobar");
 */
(function (wysihtml5) {
    var LIVE_CACHE = {},
        DOCUMENT_IDENTIFIER = 1;

    function _getDocumentIdentifier(doc) {
        return doc._wysihtml5_identifier || (doc._wysihtml5_identifier = DOCUMENT_IDENTIFIER++);
    }

    wysihtml5.dom.hasElementWithClassName = function (doc, className) {
        // getElementsByClassName is not supported by IE<9
        // but is sometimes mocked via library code (which then doesn't return live node lists)
        if (!wysihtml5.browser.supportsNativeGetElementsByClassName()) {
            return !!doc.querySelector("." + className);
        }

        var key = _getDocumentIdentifier(doc) + ":" + className,
            cacheEntry = LIVE_CACHE[key];
        if (!cacheEntry) {
            cacheEntry = LIVE_CACHE[key] = doc.getElementsByClassName(className);
        }

        return cacheEntry.length > 0;
    };
})(wysihtml5);
wysihtml5.dom.insert = function (elementToInsert) {
    return {
        after: function (element) {
            element.parentNode.insertBefore(elementToInsert, element.nextSibling);
        },

        before: function (element) {
            element.parentNode.insertBefore(elementToInsert, element);
        },

        into: function (element) {
            element.appendChild(elementToInsert);
        }
    };
};
wysihtml5.dom.insertCSS = function (rules) {
    rules = rules.join("\n");

    return {
        into: function (doc) {
            var head = doc.head || doc.getElementsByTagName("head")[0],
                styleElement = doc.createElement("style");

            styleElement.type = "text/css";

            if (styleElement.styleSheet) {
                styleElement.styleSheet.cssText = rules;
            } else {
                styleElement.appendChild(doc.createTextNode(rules));
            }

            if (head) {
                head.appendChild(styleElement);
            }
        }
    };
};
/**
 * Method to set dom events
 *
 * @example
 *    wysihtml5.dom.observe(iframe.contentWindow.document.body, ["focus", "blur"], function() { ... });
 */
wysihtml5.dom.observe = function (element, eventNames, handler) {
    eventNames = typeof(eventNames) === "string" ? [eventNames] : eventNames;

    var handlerWrapper,
        eventName,
        i = 0,
        length = eventNames.length;

    for (; i < length; i++) {
        eventName = eventNames[i];
        if (element.addEventListener) {
            element.addEventListener(eventName, handler, false);
        } else {
            handlerWrapper = function (event) {
                if (!("target" in event)) {
                    event.target = event.srcElement;
                }
                event.preventDefault = event.preventDefault || function () {
                    this.returnValue = false;
                };
                event.stopPropagation = event.stopPropagation || function () {
                    this.cancelBubble = true;
                };
                handler.call(element, event);
            };
            element.attachEvent("on" + eventName, handlerWrapper);
        }
    }

    return {
        stop: function () {
            var eventName,
                i = 0,
                length = eventNames.length;
            for (; i < length; i++) {
                eventName = eventNames[i];
                if (element.removeEventListener) {
                    element.removeEventListener(eventName, handler, false);
                } else {
                    element.detachEvent("on" + eventName, handlerWrapper);
                }
            }
        }
    };
};
/**
 * HTML Sanitizer
 * Rewrites the HTML based on given rules
 *
 * @param {Element|String} elementOrHtml HTML String to be sanitized OR element whose content should be sanitized
 * @param {Object} [rules] List of rules for rewriting the HTML, if there's no rule for an element it will
 *    be converted to a "span". Each rule is a key/value pair where key is the tag to convert, and value the
 *    desired substitution.
 * @param {Object} context Document object in which to parse the html, needed to sandbox the parsing
 *
 * @return {Element|String} Depends on the elementOrHtml parameter. When html then the sanitized html as string elsewise the element.
 *
 * @example
 *    var userHTML = '<div id="foo" onclick="alert(1);"><p><font color="red">foo</font><script>alert(1);</script></p></div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      tags {
 *        p:      "div",      // Rename p tags to div tags
 *        font:   "span"      // Rename font tags to span tags
 *        div:    true,       // Keep them, also possible (same result when passing: "div" or true)
 *        script: undefined   // Remove script elements
 *      }
 *    });
 *    // => <div><div><span>foo bar</span></div></div>
 *
 *    var userHTML = '<table><tbody><tr><td>I'm a table!</td></tr></tbody></table>';
 *    wysihtml5.dom.parse(userHTML);
 *    // => '<span><span><span><span>I'm a table!</span></span></span></span>'
 *
 *    var userHTML = '<div>foobar<br>foobar</div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      tags: {
 *        div: undefined,
 *        br:  true
 *      }
 *    });
 *    // => ''
 *
 *    var userHTML = '<div class="red">foo</div><div class="pink">bar</div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      classes: {
 *        red:    1,
 *        green:  1
 *      },
 *      tags: {
 *        div: {
 *          rename_tag:     "p"
 *        }
 *      }
 *    });
 *    // => '<p class="red">foo</p><p>bar</p>'
 */
wysihtml5.dom.parse = (function () {

    /**
     * It's not possible to use a XMLParser/DOMParser as HTML5 is not always well-formed XML
     * new DOMParser().parseFromString('<img src="foo.gif">') will cause a parseError since the
     * node isn't closed
     *
     * Therefore we've to use the browser's ordinary HTML parser invoked by setting innerHTML.
     */
    var NODE_TYPE_MAPPING = {
            "1": _handleElement,
            "3": _handleText
        },
    // Rename unknown tags to this
        DEFAULT_NODE_NAME = "span",
        WHITE_SPACE_REG_EXP = /\s+/,
        defaultRules = { tags: {}, classes: {} },
        currentRules = {};

    /**
     * Iterates over all childs of the element, recreates them, appends them into a document fragment
     * which later replaces the entire body content
     */
    function parse(elementOrHtml, rules, context, cleanUp) {
        wysihtml5.lang.object(currentRules).merge(defaultRules).merge(rules).get();

        context = context || elementOrHtml.ownerDocument || document;
        var fragment = context.createDocumentFragment(),
            isString = typeof(elementOrHtml) === "string",
            element,
            newNode,
            firstChild;

        if (isString) {
            element = wysihtml5.dom.getAsDom(elementOrHtml, context);
        } else {
            element = elementOrHtml;
        }

        while (element.firstChild) {
            firstChild = element.firstChild;
            element.removeChild(firstChild);
            newNode = _convert(firstChild, cleanUp);
            if (newNode) {
                fragment.appendChild(newNode);
            }
        }

        // Clear element contents
        element.innerHTML = "";

        // Insert new DOM tree
        element.appendChild(fragment);

        return isString ? wysihtml5.quirks.getCorrectInnerHTML(element) : element;
    }

    function _convert(oldNode, cleanUp) {
        var oldNodeType = oldNode.nodeType,
            oldChilds = oldNode.childNodes,
            oldChildsLength = oldChilds.length,
            newNode,
            method = NODE_TYPE_MAPPING[oldNodeType],
            i = 0;

        newNode = method && method(oldNode);

        if (!newNode) {
            return null;
        }

        for (i = 0; i < oldChildsLength; i++) {
            newChild = _convert(oldChilds[i], cleanUp);
            if (newChild) {
                newNode.appendChild(newChild);
            }
        }

        // Cleanup senseless <span> elements
        if (cleanUp &&
            newNode.childNodes.length <= 1 &&
            newNode.nodeName.toLowerCase() === DEFAULT_NODE_NAME && !newNode.attributes.length) {
            return newNode.firstChild;
        }

        return newNode;
    }

    function _handleElement(oldNode) {
        var rule,
            newNode,
            endTag,
            tagRules = currentRules.tags,
            nodeName = oldNode.nodeName.toLowerCase(),
            scopeName = oldNode.scopeName;

        /**
         * We already parsed that element
         * ignore it! (yes, this sometimes happens in IE8 when the html is invalid)
         */
        if (oldNode._wysihtml5) {
            return null;
        }
        oldNode._wysihtml5 = 1;

        if (oldNode.className === "wysihtml5-temp") {
            return null;
        }

        /**
         * IE is the only browser who doesn't include the namespace in the
         * nodeName, that's why we have to prepend it by ourselves
         * scopeName is a proprietary IE feature
         * read more here http://msdn.microsoft.com/en-us/library/ms534388(v=vs.85).aspx
         */
        if (scopeName && scopeName != "HTML") {
            nodeName = scopeName + ":" + nodeName;
        }

        /**
         * Repair node
         * IE is a bit bitchy when it comes to invalid nested markup which includes unclosed tags
         * A <p> doesn't need to be closed according HTML4-5 spec, we simply replace it with a <div> to preserve its content and layout
         */
        if ("outerHTML" in oldNode) {
            if (!wysihtml5.browser.autoClosesUnclosedTags() &&
                oldNode.nodeName === "P" &&
                oldNode.outerHTML.slice(-4).toLowerCase() !== "</p>") {
                nodeName = "div";
            }
        }

        if (nodeName in tagRules) {
            rule = tagRules[nodeName];
            if (!rule || rule.remove) {
                return null;
            }

            rule = typeof(rule) === "string" ? { rename_tag: rule } : rule;
        } else if (oldNode.firstChild) {
            rule = { rename_tag: DEFAULT_NODE_NAME };
        } else {
            // Remove empty unknown elements
            return null;
        }

        newNode = oldNode.ownerDocument.createElement(rule.rename_tag || nodeName);
        _handleAttributes(oldNode, newNode, rule);

        oldNode = null;
        return newNode;
    }

    function _handleAttributes(oldNode, newNode, rule) {
        var attributes = {},                         // fresh new set of attributes to set on newNode
            setClass = rule.set_class,             // classes to set
            addClass = rule.add_class,             // add classes based on existing attributes
            setAttributes = rule.set_attributes,        // attributes to set on the current node
            checkAttributes = rule.check_attributes,      // check/convert values of attributes
            allowedClasses = currentRules.classes,
            i = 0,
            classes = [],
            newClasses = [],
            newUniqueClasses = [],
            oldClasses = [],
            classesLength,
            newClassesLength,
            currentClass,
            newClass,
            attributeName,
            newAttributeValue,
            method;

        if (setAttributes) {
            attributes = wysihtml5.lang.object(setAttributes).clone();
        }

        if (checkAttributes) {
            for (attributeName in checkAttributes) {
                method = attributeCheckMethods[checkAttributes[attributeName]];
                if (!method) {
                    continue;
                }
                newAttributeValue = method(_getAttribute(oldNode, attributeName));
                if (typeof(newAttributeValue) === "string") {
                    attributes[attributeName] = newAttributeValue;
                }
            }
        }

        if (setClass) {
            classes.push(setClass);
        }

        if (addClass) {
            for (attributeName in addClass) {
                method = addClassMethods[addClass[attributeName]];
                if (!method) {
                    continue;
                }
                newClass = method(_getAttribute(oldNode, attributeName));
                if (typeof(newClass) === "string") {
                    classes.push(newClass);
                }
            }
        }

        // make sure that wysihtml5 temp class doesn't get stripped out
        allowedClasses["_wysihtml5-temp-placeholder"] = 1;

        // add old classes last
        oldClasses = oldNode.getAttribute("class");
        if (oldClasses) {
            classes = classes.concat(oldClasses.split(WHITE_SPACE_REG_EXP));
        }
        classesLength = classes.length;
        for (; i < classesLength; i++) {
            currentClass = classes[i];
            if (allowedClasses[currentClass]) {
                newClasses.push(currentClass);
            }
        }

        // remove duplicate entries and preserve class specificity
        newClassesLength = newClasses.length;
        while (newClassesLength--) {
            currentClass = newClasses[newClassesLength];
            if (!wysihtml5.lang.array(newUniqueClasses).contains(currentClass)) {
                newUniqueClasses.unshift(currentClass);
            }
        }

        if (newUniqueClasses.length) {
            attributes["class"] = newUniqueClasses.join(" ");
        }

        // set attributes on newNode
        for (attributeName in attributes) {
            // Setting attributes can cause a js error in IE under certain circumstances
            // eg. on a <img> under https when it's new attribute value is non-https
            // TODO: Investigate this further and check for smarter handling
            try {
                newNode.setAttribute(attributeName, attributes[attributeName]);
            } catch (e) {
            }
        }

        // IE8 sometimes loses the width/height attributes when those are set before the "src"
        // so we make sure to set them again
        if (attributes.src) {
            if (typeof(attributes.width) !== "undefined") {
                newNode.setAttribute("width", attributes.width);
            }
            if (typeof(attributes.height) !== "undefined") {
                newNode.setAttribute("height", attributes.height);
            }
        }
    }

    /**
     * IE gives wrong results for hasAttribute/getAttribute, for example:
     *    var td = document.createElement("td");
     *    td.getAttribute("rowspan"); // => "1" in IE
     *
     * Therefore we have to check the element's outerHTML for the attribute
     */
    var HAS_GET_ATTRIBUTE_BUG = !wysihtml5.browser.supportsGetAttributeCorrectly();

    function _getAttribute(node, attributeName) {
        attributeName = attributeName.toLowerCase();
        var nodeName = node.nodeName;
        if (nodeName == "IMG" && attributeName == "src" && _isLoadedImage(node) === true) {
            // Get 'src' attribute value via object property since this will always contain the
            // full absolute url (http://...)
            // this fixes a very annoying bug in firefox (ver 3.6 & 4) and IE 8 where images copied from the same host
            // will have relative paths, which the sanitizer strips out (see attributeCheckMethods.url)
            return node.src;
        } else if (HAS_GET_ATTRIBUTE_BUG && "outerHTML" in node) {
            // Don't trust getAttribute/hasAttribute in IE 6-8, instead check the element's outerHTML
            var outerHTML = node.outerHTML.toLowerCase(),
            // TODO: This might not work for attributes without value: <input disabled>
                hasAttribute = outerHTML.indexOf(" " + attributeName + "=") != -1;

            return hasAttribute ? node.getAttribute(attributeName) : null;
        } else {
            return node.getAttribute(attributeName);
        }
    }

    /**
     * Check whether the given node is a proper loaded image
     * FIXME: Returns undefined when unknown (Chrome, Safari)
     */
    function _isLoadedImage(node) {
        try {
            return node.complete && !node.mozMatchesSelector(":-moz-broken");
        } catch (e) {
            if (node.complete && node.readyState === "complete") {
                return true;
            }
        }
    }

    function _handleText(oldNode) {
        return oldNode.ownerDocument.createTextNode(oldNode.data);
    }


    // ------------ attribute checks ------------ \\
    var attributeCheckMethods = {
        url: (function () {
            var REG_EXP = /^https?:\/\//i;
            return function (attributeValue) {
                if (!attributeValue || !attributeValue.match(REG_EXP)) {
                    return null;
                }
                return attributeValue.replace(REG_EXP, function (match) {
                    return match.toLowerCase();
                });
            };
        })(),

        alt: (function () {
            var REG_EXP = /[^ a-z0-9_\-]/gi;
            return function (attributeValue) {
                if (!attributeValue) {
                    return "";
                }
                return attributeValue.replace(REG_EXP, "");
            };
        })(),

        numbers: (function () {
            var REG_EXP = /\D/g;
            return function (attributeValue) {
                attributeValue = (attributeValue || "").replace(REG_EXP, "");
                return attributeValue || null;
            };
        })()
    };

    // ------------ class converter (converts an html attribute to a class name) ------------ \\
    var addClassMethods = {
        align_img: (function () {
            var mapping = {
                left: "wysiwyg-float-left",
                right: "wysiwyg-float-right"
            };
            return function (attributeValue) {
                return mapping[String(attributeValue).toLowerCase()];
            };
        })(),

        align_text: (function () {
            var mapping = {
                left: "wysiwyg-text-align-left",
                right: "wysiwyg-text-align-right",
                center: "wysiwyg-text-align-center",
                justify: "wysiwyg-text-align-justify"
            };
            return function (attributeValue) {
                return mapping[String(attributeValue).toLowerCase()];
            };
        })(),

        clear_br: (function () {
            var mapping = {
                left: "wysiwyg-clear-left",
                right: "wysiwyg-clear-right",
                both: "wysiwyg-clear-both",
                all: "wysiwyg-clear-both"
            };
            return function (attributeValue) {
                return mapping[String(attributeValue).toLowerCase()];
            };
        })(),

        size_font: (function () {
            var mapping = {
                "1": "wysiwyg-font-size-xx-small",
                "2": "wysiwyg-font-size-small",
                "3": "wysiwyg-font-size-medium",
                "4": "wysiwyg-font-size-large",
                "5": "wysiwyg-font-size-x-large",
                "6": "wysiwyg-font-size-xx-large",
                "7": "wysiwyg-font-size-xx-large",
                "-": "wysiwyg-font-size-smaller",
                "+": "wysiwyg-font-size-larger"
            };
            return function (attributeValue) {
                return mapping[String(attributeValue).charAt(0)];
            };
        })()
    };

    return parse;
})();
/**
 * Checks for empty text node childs and removes them
 *
 * @param {Element} node The element in which to cleanup
 * @example
 *    wysihtml5.dom.removeEmptyTextNodes(element);
 */
wysihtml5.dom.removeEmptyTextNodes = function (node) {
    var childNode,
        childNodes = wysihtml5.lang.array(node.childNodes).get(),
        childNodesLength = childNodes.length,
        i = 0;
    for (; i < childNodesLength; i++) {
        childNode = childNodes[i];
        if (childNode.nodeType === wysihtml5.TEXT_NODE && childNode.data === "") {
            childNode.parentNode.removeChild(childNode);
        }
    }
};
/**
 * Renames an element (eg. a <div> to a <p>) and keeps its childs
 *
 * @param {Element} element The list element which should be renamed
 * @param {Element} newNodeName The desired tag name
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <ul id="list">
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 *
 *    <script>
 *      wysihtml5.dom.renameElement(document.getElementById("list"), "ol");
 *    </script>
 *
 *    <!-- Will result in: -->
 *    <ol>
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ol>
 */
wysihtml5.dom.renameElement = function (element, newNodeName) {
    var newElement = element.ownerDocument.createElement(newNodeName),
        firstChild;
    while (firstChild = element.firstChild) {
        newElement.appendChild(firstChild);
    }
    wysihtml5.dom.copyAttributes(["align", "className"]).from(element).to(newElement);
    element.parentNode.replaceChild(newElement, element);
    return newElement;
};
/**
 * Takes an element, removes it and replaces it with it's childs
 *
 * @param {Object} node The node which to replace with it's child nodes
 * @example
 *    <div id="foo">
 *      <span>hello</span>
 *    </div>
 *    <script>
 *      // Remove #foo and replace with it's children
 *      wysihtml5.dom.replaceWithChildNodes(document.getElementById("foo"));
 *    </script>
 */
wysihtml5.dom.replaceWithChildNodes = function (node) {
    if (!node.parentNode) {
        return;
    }

    if (!node.firstChild) {
        node.parentNode.removeChild(node);
        return;
    }

    var fragment = node.ownerDocument.createDocumentFragment();
    while (node.firstChild) {
        fragment.appendChild(node.firstChild);
    }
    node.parentNode.replaceChild(fragment, node);
    node = fragment = null;
};
/**
 * Unwraps an unordered/ordered list
 *
 * @param {Element} element The list element which should be unwrapped
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <ul id="list">
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 *
 *    <script>
 *      wysihtml5.dom.resolveList(document.getElementById("list"));
 *    </script>
 *
 *    <!-- Will result in: -->
 *    eminem<br>
 *    dr. dre<br>
 *    50 Cent<br>
 */
(function (dom) {
    function _isBlockElement(node) {
        return dom.getStyle("display").from(node) === "block";
    }

    function _isLineBreak(node) {
        return node.nodeName === "BR";
    }

    function _appendLineBreak(element) {
        var lineBreak = element.ownerDocument.createElement("br");
        element.appendChild(lineBreak);
    }

    function resolveList(list) {
        if (list.nodeName !== "MENU" && list.nodeName !== "UL" && list.nodeName !== "OL") {
            return;
        }

        var doc = list.ownerDocument,
            fragment = doc.createDocumentFragment(),
            previousSibling = list.previousElementSibling || list.previousSibling,
            firstChild,
            lastChild,
            isLastChild,
            shouldAppendLineBreak,
            listItem;

        if (previousSibling && !_isBlockElement(previousSibling)) {
            _appendLineBreak(fragment);
        }

        while (listItem = list.firstChild) {
            lastChild = listItem.lastChild;
            while (firstChild = listItem.firstChild) {
                isLastChild = firstChild === lastChild;
                // This needs to be done before appending it to the fragment, as it otherwise will loose style information
                shouldAppendLineBreak = isLastChild && !_isBlockElement(firstChild) && !_isLineBreak(firstChild);
                fragment.appendChild(firstChild);
                if (shouldAppendLineBreak) {
                    _appendLineBreak(fragment);
                }
            }

            listItem.parentNode.removeChild(listItem);
        }
        list.parentNode.replaceChild(fragment, list);
    }

    dom.resolveList = resolveList;
})(wysihtml5.dom);
/**
 * Sandbox for executing javascript, parsing css styles and doing dom operations in a secure way
 *
 * Browser Compatibility:
 *  - Secure in MSIE 6+, but only when the user hasn't made changes to his security level "restricted"
 *  - Partially secure in other browsers (Firefox, Opera, Safari, Chrome, ...)
 *
 * Please note that this class can't benefit from the HTML5 sandbox attribute for the following reasons:
 *    - sandboxing doesn't work correctly with inlined content (src="javascript:'<html>...</html>'")
 *    - sandboxing of physical documents causes that the dom isn't accessible anymore from the outside (iframe.contentWindow, ...)
 *    - setting the "allow-same-origin" flag would fix that, but then still javascript and dom events refuse to fire
 *    - therefore the "allow-scripts" flag is needed, which then would deactivate any security, as the js executed inside the iframe
 *      can do anything as if the sandbox attribute wasn't set
 *
 * @param {Function} [readyCallback] Method that gets invoked when the sandbox is ready
 * @param {Object} [config] Optional parameters
 *
 * @example
 *    new wysihtml5.dom.Sandbox(function(sandbox) {
 *      sandbox.getWindow().document.body.innerHTML = '<img src=foo.gif onerror="alert(document.cookie)">';
 *    });
 */
(function (wysihtml5) {
    var /**
         * Default configuration
         */
            doc = document,
        /**
         * Properties to unset/protect on the window object
         */
            windowProperties = [
            "parent", "top", "opener", "frameElement", "frames",
            "localStorage", "globalStorage", "sessionStorage", "indexedDB"
        ],
        /**
         * Properties on the window object which are set to an empty function
         */
            windowProperties2 = [
            "open", "close", "openDialog", "showModalDialog",
            "alert", "confirm", "prompt",
            "openDatabase", "postMessage",
            "XMLHttpRequest", "XDomainRequest"
        ],
        /**
         * Properties to unset/protect on the document object
         */
            documentProperties = [
            "referrer",
            "write", "open", "close"
        ];

    wysihtml5.dom.Sandbox = Base.extend(
        /** @scope wysihtml5.dom.Sandbox.prototype */ {

            constructor: function (readyCallback, config) {
                this.callback = readyCallback || wysihtml5.EMPTY_FUNCTION;
                this.config = wysihtml5.lang.object({}).merge(config).get();
                this.iframe = this._createIframe();
            },

            insertInto: function (element) {
                if (typeof(element) === "string") {
                    element = doc.getElementById(element);
                }

                element.appendChild(this.iframe);
            },

            getIframe: function () {
                return this.iframe;
            },

            getWindow: function () {
                this._readyError();
            },

            getDocument: function () {
                this._readyError();
            },

            destroy: function () {
                var iframe = this.getIframe();
                iframe.parentNode.removeChild(iframe);
            },

            _readyError: function () {
                throw new Error("wysihtml5.Sandbox: Sandbox iframe isn't loaded yet");
            },

            /**
             * Creates the sandbox iframe
             *
             * Some important notes:
             *  - We can't use HTML5 sandbox for now:
             *    setting it causes that the iframe's dom can't be accessed from the outside
             *    Therefore we need to set the "allow-same-origin" flag which enables accessing the iframe's dom
             *    But then there's another problem, DOM events (focus, blur, change, keypress, ...) aren't fired.
             *    In order to make this happen we need to set the "allow-scripts" flag.
             *    A combination of allow-scripts and allow-same-origin is almost the same as setting no sandbox attribute at all.
             *  - Chrome & Safari, doesn't seem to support sandboxing correctly when the iframe's html is inlined (no physical document)
             *  - IE needs to have the security="restricted" attribute set before the iframe is
             *    inserted into the dom tree
             *  - Believe it or not but in IE "security" in document.createElement("iframe") is false, even
             *    though it supports it
             *  - When an iframe has security="restricted", in IE eval() & execScript() don't work anymore
             *  - IE doesn't fire the onload event when the content is inlined in the src attribute, therefore we rely
             *    on the onreadystatechange event
             */
            _createIframe: function () {
                var that = this,
                    iframe = doc.createElement("iframe");
                iframe.className = "wysihtml5-sandbox";
                wysihtml5.dom.setAttributes({
                    "security": "restricted",
                    "allowtransparency": "true",
                    "frameborder": 0,
                    "width": 0,
                    "height": 0,
                    "marginwidth": 0,
                    "marginheight": 0
                }).on(iframe);

                // Setting the src like this prevents ssl warnings in IE6
                if (wysihtml5.browser.throwsMixedContentWarningWhenIframeSrcIsEmpty()) {
                    iframe.src = "javascript:'<html></html>'";
                }

                iframe.onload = function () {
                    iframe.onreadystatechange = iframe.onload = null;
                    that._onLoadIframe(iframe);
                };

                iframe.onreadystatechange = function () {
                    if (/loaded|complete/.test(iframe.readyState)) {
                        iframe.onreadystatechange = iframe.onload = null;
                        that._onLoadIframe(iframe);
                    }
                };

                return iframe;
            },

            /**
             * Callback for when the iframe has finished loading
             */
            _onLoadIframe: function (iframe) {
                // don't resume when the iframe got unloaded (eg. by removing it from the dom)
                if (!wysihtml5.dom.contains(doc.documentElement, iframe)) {
                    return;
                }

                var that = this,
                    iframeWindow = iframe.contentWindow,
                    iframeDocument = iframe.contentWindow.document,
                    charset = doc.characterSet || doc.charset || "utf-8",
                    sandboxHtml = this._getHtml({
                        charset: charset,
                        stylesheets: this.config.stylesheets
                    });

                // Create the basic dom tree including proper DOCTYPE and charset
                iframeDocument.open("text/html", "replace");
                iframeDocument.write(sandboxHtml);
                iframeDocument.close();

                this.getWindow = function () {
                    return iframe.contentWindow;
                };
                this.getDocument = function () {
                    return iframe.contentWindow.document;
                };

                // Catch js errors and pass them to the parent's onerror event
                // addEventListener("error") doesn't work properly in some browsers
                // TODO: apparently this doesn't work in IE9!
                iframeWindow.onerror = function (errorMessage, fileName, lineNumber) {
                    throw new Error("wysihtml5.Sandbox: " + errorMessage, fileName, lineNumber);
                };

                if (!wysihtml5.browser.supportsSandboxedIframes()) {
                    // Unset a bunch of sensitive variables
                    // Please note: This isn't hack safe!  
                    // It more or less just takes care of basic attacks and prevents accidental theft of sensitive information
                    // IE is secure though, which is the most important thing, since IE is the only browser, who
                    // takes over scripts & styles into contentEditable elements when copied from external websites
                    // or applications (Microsoft Word, ...)
                    var i, length;
                    for (i = 0, length = windowProperties.length; i < length; i++) {
                        this._unset(iframeWindow, windowProperties[i]);
                    }
                    for (i = 0, length = windowProperties2.length; i < length; i++) {
                        this._unset(iframeWindow, windowProperties2[i], wysihtml5.EMPTY_FUNCTION);
                    }
                    for (i = 0, length = documentProperties.length; i < length; i++) {
                        this._unset(iframeDocument, documentProperties[i]);
                    }
                    // This doesn't work in Safari 5 
                    // See http://stackoverflow.com/questions/992461/is-it-possible-to-override-document-cookie-in-webkit
                    this._unset(iframeDocument, "cookie", "", true);
                }

                this.loaded = true;

                // Trigger the callback
                setTimeout(function () {
                    that.callback(that);
                }, 0);
            },

            _getHtml: function (templateVars) {
                var stylesheets = templateVars.stylesheets,
                    html = "",
                    i = 0,
                    length;
                stylesheets = typeof(stylesheets) === "string" ? [stylesheets] : stylesheets;
                if (stylesheets) {
                    length = stylesheets.length;
                    for (; i < length; i++) {
                        html += '<link rel="stylesheet" href="' + stylesheets[i] + '">';
                    }
                }
                templateVars.stylesheets = html;

                return wysihtml5.lang.string(
                    '<!DOCTYPE html><html><head>'
                        + '<meta charset="#{charset}">#{stylesheets}</head>'
                        + '<body></body></html>'
                ).interpolate(templateVars);
            },

            /**
             * Method to unset/override existing variables
             * @example
             *    // Make cookie unreadable and unwritable
             *    this._unset(document, "cookie", "", true);
             */
            _unset: function (object, property, value, setter) {
                try {
                    object[property] = value;
                } catch (e) {
                }

                try {
                    object.__defineGetter__(property, function () {
                        return value;
                    });
                } catch (e) {
                }
                if (setter) {
                    try {
                        object.__defineSetter__(property, function () {
                        });
                    } catch (e) {
                    }
                }

                if (!wysihtml5.browser.crashesWhenDefineProperty(property)) {
                    try {
                        var config = {
                            get: function () {
                                return value;
                            }
                        };
                        if (setter) {
                            config.set = function () {
                            };
                        }
                        Object.defineProperty(object, property, config);
                    } catch (e) {
                    }
                }
            }
        });
})(wysihtml5);
(function () {
    var mapping = {
        "className": "class"
    };
    wysihtml5.dom.setAttributes = function (attributes) {
        return {
            on: function (element) {
                for (var i in attributes) {
                    element.setAttribute(mapping[i] || i, attributes[i]);
                }
            }
        }
    };
})();
wysihtml5.dom.setStyles = function (styles) {
    return {
        on: function (element) {
            var style = element.style;
            if (typeof(styles) === "string") {
                style.cssText += ";" + styles;
                return;
            }
            for (var i in styles) {
                if (i === "float") {
                    style.cssFloat = styles[i];
                    style.styleFloat = styles[i];
                } else {
                    style[i] = styles[i];
                }
            }
        }
    };
};
/**
 * Simulate HTML5 placeholder attribute
 *
 * Needed since
 *    - div[contentEditable] elements don't support it
 *    - older browsers (such as IE8 and Firefox 3.6) don't support it at all
 *
 * @param {Object} parent Instance of main wysihtml5.Editor class
 * @param {Element} view Instance of wysihtml5.views.* class
 * @param {String} placeholderText
 *
 * @example
 *    wysihtml.dom.simulatePlaceholder(this, composer, "Foobar");
 */
(function (dom) {
    dom.simulatePlaceholder = function (editor, view, placeholderText) {
        var CLASS_NAME = "placeholder",
            unset = function () {
                if (view.hasPlaceholderSet()) {
                    view.clear();
                }
                dom.removeClass(view.element, CLASS_NAME);
            },
            set = function () {
                if (view.isEmpty()) {
                    view.setValue(placeholderText);
                    dom.addClass(view.element, CLASS_NAME);
                }
            };

        editor
            .observe("set_placeholder", set)
            .observe("unset_placeholder", unset)
            .observe("focus:composer", unset)
            .observe("paste:composer", unset)
            .observe("blur:composer", set);

        set();
    };
})(wysihtml5.dom);
(function (dom) {
    var documentElement = document.documentElement;
    if ("textContent" in documentElement) {
        dom.setTextContent = function (element, text) {
            element.textContent = text;
        };

        dom.getTextContent = function (element) {
            return element.textContent;
        };
    } else if ("innerText" in documentElement) {
        dom.setTextContent = function (element, text) {
            element.innerText = text;
        };

        dom.getTextContent = function (element) {
            return element.innerText;
        };
    } else {
        dom.setTextContent = function (element, text) {
            element.nodeValue = text;
        };

        dom.getTextContent = function (element) {
            return element.nodeValue;
        };
    }
})(wysihtml5.dom);

/**
 * Fix most common html formatting misbehaviors of browsers implementation when inserting
 * content via copy & paste contentEditable
 *
 * @author Christopher Blum
 */
wysihtml5.quirks.cleanPastedHTML = (function () {
    // TODO: We probably need more rules here
    var defaultRules = {
        // When pasting underlined links <a> into a contentEditable, IE thinks, it has to insert <u> to keep the styling
        "a u": wysihtml5.dom.replaceWithChildNodes
    };

    function cleanPastedHTML(elementOrHtml, rules, context) {
        rules = rules || defaultRules;
        context = context || elementOrHtml.ownerDocument || document;

        var element,
            isString = typeof(elementOrHtml) === "string",
            method,
            matches,
            matchesLength,
            i,
            j = 0;
        if (isString) {
            element = wysihtml5.dom.getAsDom(elementOrHtml, context);
        } else {
            element = elementOrHtml;
        }

        for (i in rules) {
            matches = element.querySelectorAll(i);
            method = rules[i];
            matchesLength = matches.length;
            for (; j < matchesLength; j++) {
                method(matches[j]);
            }
        }

        matches = elementOrHtml = rules = null;

        return isString ? element.innerHTML : element;
    }

    return cleanPastedHTML;
})();
/**
 * IE and Opera leave an empty paragraph in the contentEditable element after clearing it
 *
 * @param {Object} contentEditableElement The contentEditable element to observe for clearing events
 * @exaple
 *    wysihtml5.quirks.ensureProperClearing(myContentEditableElement);
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom;

    wysihtml5.quirks.ensureProperClearing = (function () {
        var clearIfNecessary = function (event) {
            var element = this;
            setTimeout(function () {
                var innerHTML = element.innerHTML.toLowerCase();
                if (innerHTML == "<p>&nbsp;</p>" ||
                    innerHTML == "<p>&nbsp;</p><p>&nbsp;</p>") {
                    element.innerHTML = "";
                }
            }, 0);
        };

        return function (composer) {
            dom.observe(composer.element, ["cut", "keydown"], clearIfNecessary);
        };
    })();


    /**
     * In Opera when the caret is in the first and only item of a list (<ul><li>|</li></ul>) and the list is the first child of the contentEditable element, it's impossible to delete the list by hitting backspace
     *
     * @param {Object} contentEditableElement The contentEditable element to observe for clearing events
     * @exaple
     *    wysihtml5.quirks.ensureProperClearing(myContentEditableElement);
     */
    wysihtml5.quirks.ensureProperClearingOfLists = (function () {
        var ELEMENTS_THAT_CONTAIN_LI = ["OL", "UL", "MENU"];

        var clearIfNecessary = function (element, contentEditableElement) {
            if (!contentEditableElement.firstChild || !wysihtml5.lang.array(ELEMENTS_THAT_CONTAIN_LI).contains(contentEditableElement.firstChild.nodeName)) {
                return;
            }

            var list = dom.getParentElement(element, { nodeName: ELEMENTS_THAT_CONTAIN_LI });
            if (!list) {
                return;
            }

            var listIsFirstChildOfContentEditable = list == contentEditableElement.firstChild;
            if (!listIsFirstChildOfContentEditable) {
                return;
            }

            var hasOnlyOneListItem = list.childNodes.length <= 1;
            if (!hasOnlyOneListItem) {
                return;
            }

            var onlyListItemIsEmpty = list.firstChild ? list.firstChild.innerHTML === "" : true;
            if (!onlyListItemIsEmpty) {
                return;
            }

            list.parentNode.removeChild(list);
        };

        return function (composer) {
            dom.observe(composer.element, "keydown", function (event) {
                if (event.keyCode !== wysihtml5.BACKSPACE_KEY) {
                    return;
                }

                var element = composer.selection.getSelectedNode();
                clearIfNecessary(element, composer.element);
            });
        };
    })();

})(wysihtml5);
// See https://bugzilla.mozilla.org/show_bug.cgi?id=664398
//
// In Firefox this:
//      var d = document.createElement("div");
//      d.innerHTML ='<a href="~"></a>';
//      d.innerHTML;
// will result in:
//      <a href="%7E"></a>
// which is wrong
(function (wysihtml5) {
    var TILDE_ESCAPED = "%7E";
    wysihtml5.quirks.getCorrectInnerHTML = function (element) {
        var innerHTML = element.innerHTML;
        if (innerHTML.indexOf(TILDE_ESCAPED) === -1) {
            return innerHTML;
        }

        var elementsWithTilde = element.querySelectorAll("[href*='~'], [src*='~']"),
            url,
            urlToSearch,
            length,
            i;
        for (i = 0, length = elementsWithTilde.length; i < length; i++) {
            url = elementsWithTilde[i].href || elementsWithTilde[i].src;
            urlToSearch = wysihtml5.lang.string(url).replace("~").by(TILDE_ESCAPED);
            innerHTML = wysihtml5.lang.string(innerHTML).replace(urlToSearch).by(url);
        }
        return innerHTML;
    };
})(wysihtml5);
/**
 * Some browsers don't insert line breaks when hitting return in a contentEditable element
 *    - Opera & IE insert new <p> on return
 *    - Chrome & Safari insert new <div> on return
 *    - Firefox inserts <br> on return (yippie!)
 *
 * @param {Element} element
 *
 * @example
 *    wysihtml5.quirks.insertLineBreakOnReturn(element);
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom,
        USE_NATIVE_LINE_BREAK_WHEN_CARET_INSIDE_TAGS = ["LI", "P", "H1", "H2", "H3", "H4", "H5", "H6"],
        LIST_TAGS = ["UL", "OL", "MENU"];

    wysihtml5.quirks.insertLineBreakOnReturn = function (composer) {
        function unwrap(selectedNode) {
            var parentElement = dom.getParentElement(selectedNode, { nodeName: ["P", "DIV"] }, 2);
            if (!parentElement) {
                return;
            }

            var invisibleSpace = document.createTextNode(wysihtml5.INVISIBLE_SPACE);
            dom.insert(invisibleSpace).before(parentElement);
            dom.replaceWithChildNodes(parentElement);
            composer.selection.selectNode(invisibleSpace);
        }

        function keyDown(event) {
            var keyCode = event.keyCode;
            if (event.shiftKey || (keyCode !== wysihtml5.ENTER_KEY && keyCode !== wysihtml5.BACKSPACE_KEY)) {
                return;
            }

            var element = event.target,
                selectedNode = composer.selection.getSelectedNode(),
                blockElement = dom.getParentElement(selectedNode, { nodeName: USE_NATIVE_LINE_BREAK_WHEN_CARET_INSIDE_TAGS }, 4);
            if (blockElement) {
                // Some browsers create <p> elements after leaving a list
                // check after keydown of backspace and return whether a <p> got inserted and unwrap it
                if (blockElement.nodeName === "LI" && (keyCode === wysihtml5.ENTER_KEY || keyCode === wysihtml5.BACKSPACE_KEY)) {
                    setTimeout(function () {
                        var selectedNode = composer.selection.getSelectedNode(),
                            list,
                            div;
                        if (!selectedNode) {
                            return;
                        }

                        list = dom.getParentElement(selectedNode, {
                            nodeName: LIST_TAGS
                        }, 2);

                        if (list) {
                            return;
                        }

                        unwrap(selectedNode);
                    }, 0);
                } else if (blockElement.nodeName.match(/H[1-6]/) && keyCode === wysihtml5.ENTER_KEY) {
                    setTimeout(function () {
                        unwrap(composer.selection.getSelectedNode());
                    }, 0);
                }
                return;
            }

            if (keyCode === wysihtml5.ENTER_KEY && !wysihtml5.browser.insertsLineBreaksOnReturn()) {
                composer.commands.exec("insertLineBreak");
                event.preventDefault();
            }
        }

        // keypress doesn't fire when you hit backspace
        dom.observe(composer.element.ownerDocument, "keydown", keyDown);
    };
})(wysihtml5);
/**
 * Force rerendering of a given element
 * Needed to fix display misbehaviors of IE
 *
 * @param {Element} element The element object which needs to be rerendered
 * @example
 *    wysihtml5.quirks.redraw(document.body);
 */
(function (wysihtml5) {
    var CLASS_NAME = "wysihtml5-quirks-redraw";

    wysihtml5.quirks.redraw = function (element) {
        wysihtml5.dom.addClass(element, CLASS_NAME);
        wysihtml5.dom.removeClass(element, CLASS_NAME);

        // Following hack is needed for firefox to make sure that image resize handles are properly removed
        try {
            var doc = element.ownerDocument;
            doc.execCommand("italic", false, null);
            doc.execCommand("italic", false, null);
        } catch (e) {
        }
    };
})(wysihtml5);
/**
 * Selection API
 *
 * @example
 *    var selection = new wysihtml5.Selection(editor);
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom;

    function _getCumulativeOffsetTop(element) {
        var top = 0;
        if (element.parentNode) {
            do {
                top += element.offsetTop || 0;
                element = element.offsetParent;
            } while (element);
        }
        return top;
    }

    wysihtml5.Selection = Base.extend(
        /** @scope wysihtml5.Selection.prototype */ {
            constructor: function (editor) {
                // Make sure that our external range library is initialized
                window.rangy.init();

                this.editor = editor;
                this.composer = editor.composer;
                this.doc = this.composer.doc;
            },

            /**
             * Get the current selection as a bookmark to be able to later restore it
             *
             * @return {Object} An object that represents the current selection
             */
            getBookmark: function () {
                var range = this.getRange();
                return range && range.cloneRange();
            },

            /**
             * Restore a selection retrieved via wysihtml5.Selection.prototype.getBookmark
             *
             * @param {Object} bookmark An object that represents the current selection
             */
            setBookmark: function (bookmark) {
                if (!bookmark) {
                    return;
                }

                this.setSelection(bookmark);
            },

            /**
             * Set the caret in front of the given node
             *
             * @param {Object} node The element or text node where to position the caret in front of
             * @example
             *    selection.setBefore(myElement);
             */
            setBefore: function (node) {
                var range = rangy.createRange(this.doc);
                range.setStartBefore(node);
                range.setEndBefore(node);
                return this.setSelection(range);
            },

            /**
             * Set the caret after the given node
             *
             * @param {Object} node The element or text node where to position the caret in front of
             * @example
             *    selection.setBefore(myElement);
             */
            setAfter: function (node) {
                var range = rangy.createRange(this.doc);
                range.setStartAfter(node);
                range.setEndAfter(node);
                return this.setSelection(range);
            },

            /**
             * Ability to select/mark nodes
             *
             * @param {Element} node The node/element to select
             * @example
             *    selection.selectNode(document.getElementById("my-image"));
             */
            selectNode: function (node) {
                var range = rangy.createRange(this.doc),
                    isElement = node.nodeType === wysihtml5.ELEMENT_NODE,
                    canHaveHTML = "canHaveHTML" in node ? node.canHaveHTML : (node.nodeName !== "IMG"),
                    content = isElement ? node.innerHTML : node.data,
                    isEmpty = (content === "" || content === wysihtml5.INVISIBLE_SPACE),
                    displayStyle = dom.getStyle("display").from(node),
                    isBlockElement = (displayStyle === "block" || displayStyle === "list-item");

                if (isEmpty && isElement && canHaveHTML) {
                    // Make sure that caret is visible in node by inserting a zero width no breaking space
                    try {
                        node.innerHTML = wysihtml5.INVISIBLE_SPACE;
                    } catch (e) {
                    }
                }

                if (canHaveHTML) {
                    range.selectNodeContents(node);
                } else {
                    range.selectNode(node);
                }

                if (canHaveHTML && isEmpty && isElement) {
                    range.collapse(isBlockElement);
                } else if (canHaveHTML && isEmpty) {
                    range.setStartAfter(node);
                    range.setEndAfter(node);
                }

                this.setSelection(range);
            },

            /**
             * Get the node which contains the selection
             *
             * @param {Boolean} [controlRange] (only IE) Whether it should return the selected ControlRange element when the selection type is a "ControlRange"
             * @return {Object} The node that contains the caret
             * @example
             *    var nodeThatContainsCaret = selection.getSelectedNode();
             */
            getSelectedNode: function (controlRange) {
                var selection,
                    range;

                if (controlRange && this.doc.selection && this.doc.selection.type === "Control") {
                    range = this.doc.selection.createRange();
                    if (range && range.length) {
                        return range.item(0);
                    }
                }

                selection = this.getSelection(this.doc);
                if (selection.focusNode === selection.anchorNode) {
                    return selection.focusNode;
                } else {
                    range = this.getRange(this.doc);
                    return range ? range.commonAncestorContainer : this.doc.body;
                }
            },

            executeAndRestore: function (method, restoreScrollPosition) {
                var body = this.doc.body,
                    oldScrollTop = restoreScrollPosition && body.scrollTop,
                    oldScrollLeft = restoreScrollPosition && body.scrollLeft,
                    className = "_wysihtml5-temp-placeholder",
                    placeholderHTML = '<span class="' + className + '">' + wysihtml5.INVISIBLE_SPACE + '</span>',
                    range = this.getRange(this.doc),
                    newRange;

                // Nothing selected, execute and say goodbye
                if (!range) {
                    method(body, body);
                    return;
                }

                var node = range.createContextualFragment(placeholderHTML);
                range.insertNode(node);

                // Make sure that a potential error doesn't cause our placeholder element to be left as a placeholder
                try {
                    method(range.startContainer, range.endContainer);
                } catch (e3) {
                    setTimeout(function () {
                        throw e3;
                    }, 0);
                }

                caretPlaceholder = this.doc.querySelector("." + className);
                if (caretPlaceholder) {
                    newRange = rangy.createRange(this.doc);
                    newRange.selectNode(caretPlaceholder);
                    newRange.deleteContents();
                    this.setSelection(newRange);
                } else {
                    // fallback for when all hell breaks loose
                    body.focus();
                }

                if (restoreScrollPosition) {
                    body.scrollTop = oldScrollTop;
                    body.scrollLeft = oldScrollLeft;
                }

                // Remove it again, just to make sure that the placeholder is definitely out of the dom tree
                try {
                    caretPlaceholder.parentNode.removeChild(caretPlaceholder);
                } catch (e4) {
                }
            },

            /**
             * Different approach of preserving the selection (doesn't modify the dom)
             * Takes all text nodes in the selection and saves the selection position in the first and last one
             */
            executeAndRestoreSimple: function (method) {
                var range = this.getRange(),
                    body = this.doc.body,
                    newRange,
                    firstNode,
                    lastNode,
                    textNodes,
                    rangeBackup;

                // Nothing selected, execute and say goodbye
                if (!range) {
                    method(body, body);
                    return;
                }

                textNodes = range.getNodes([3]);
                firstNode = textNodes[0] || range.startContainer;
                lastNode = textNodes[textNodes.length - 1] || range.endContainer;

                rangeBackup = {
                    collapsed: range.collapsed,
                    startContainer: firstNode,
                    startOffset: firstNode === range.startContainer ? range.startOffset : 0,
                    endContainer: lastNode,
                    endOffset: lastNode === range.endContainer ? range.endOffset : lastNode.length
                };

                try {
                    method(range.startContainer, range.endContainer);
                } catch (e) {
                    setTimeout(function () {
                        throw e;
                    }, 0);
                }

                newRange = rangy.createRange(this.doc);
                try {
                    newRange.setStart(rangeBackup.startContainer, rangeBackup.startOffset);
                } catch (e1) {
                }
                try {
                    newRange.setEnd(rangeBackup.endContainer, rangeBackup.endOffset);
                } catch (e2) {
                }
                try {
                    this.setSelection(newRange);
                } catch (e3) {
                }
            },

            /**
             * Insert html at the caret position and move the cursor after the inserted html
             *
             * @param {String} html HTML string to insert
             * @example
             *    selection.insertHTML("<p>foobar</p>");
             */
            insertHTML: function (html) {
                var range = rangy.createRange(this.doc),
                    node = range.createContextualFragment(html),
                    lastChild = node.lastChild;
                this.insertNode(node);
                if (lastChild) {
                    this.setAfter(lastChild);
                }
            },

            /**
             * Insert a node at the caret position and move the cursor behind it
             *
             * @param {Object} node HTML string to insert
             * @example
             *    selection.insertNode(document.createTextNode("foobar"));
             */
            insertNode: function (node) {
                var range = this.getRange();
                if (range) {
                    range.insertNode(node);
                }
            },

            /**
             * Wraps current selection with the given node
             *
             * @param {Object} node The node to surround the selected elements with
             */
            surround: function (node) {
                var range = this.getRange();
                if (!range) {
                    return;
                }

                try {
                    // This only works when the range boundaries are not overlapping other elements
                    range.surroundContents(node);
                    this.selectNode(node);
                } catch (e) {
                    // fallback
                    node.appendChild(range.extractContents());
                    range.insertNode(node);
                }
            },

            /**
             * Scroll the current caret position into the view
             * FIXME: This is a bit hacky, there might be a smarter way of doing this
             *
             * @example
             *    selection.scrollIntoView();
             */
            scrollIntoView: function () {
                var doc = this.doc,
                    hasScrollBars = doc.documentElement.scrollHeight > doc.documentElement.offsetHeight,
                    tempElement = doc._wysihtml5ScrollIntoViewElement = doc._wysihtml5ScrollIntoViewElement || (function () {
                        var element = doc.createElement("span");
                        // The element needs content in order to be able to calculate it's position properly
                        element.innerHTML = wysihtml5.INVISIBLE_SPACE;
                        return element;
                    })(),
                    offsetTop;

                if (hasScrollBars) {
                    this.insertNode(tempElement);
                    offsetTop = _getCumulativeOffsetTop(tempElement);
                    tempElement.parentNode.removeChild(tempElement);
                    if (offsetTop > doc.body.scrollTop) {
                        doc.body.scrollTop = offsetTop;
                    }
                }
            },

            /**
             * Select line where the caret is in
             */
            selectLine: function () {
                if (wysihtml5.browser.supportsSelectionModify()) {
                    this._selectLine_W3C();
                } else if (this.doc.selection) {
                    this._selectLine_MSIE();
                }
            },

            /**
             * See https://developer.mozilla.org/en/DOM/Selection/modify
             */
            _selectLine_W3C: function () {
                var win = this.doc.defaultView,
                    selection = win.getSelection();
                selection.modify("extend", "left", "lineboundary");
                selection.modify("extend", "right", "lineboundary");
            },

            _selectLine_MSIE: function () {
                var range = this.doc.selection.createRange(),
                    rangeTop = range.boundingTop,
                    rangeHeight = range.boundingHeight,
                    scrollWidth = this.doc.body.scrollWidth,
                    rangeBottom,
                    rangeEnd,
                    measureNode,
                    i,
                    j;

                if (!range.moveToPoint) {
                    return;
                }

                if (rangeTop === 0) {
                    // Don't know why, but when the selection ends at the end of a line
                    // range.boundingTop is 0
                    measureNode = this.doc.createElement("span");
                    this.insertNode(measureNode);
                    rangeTop = measureNode.offsetTop;
                    measureNode.parentNode.removeChild(measureNode);
                }

                rangeTop += 1;

                for (i = -10; i < scrollWidth; i += 2) {
                    try {
                        range.moveToPoint(i, rangeTop);
                        break;
                    } catch (e1) {
                    }
                }

                // Investigate the following in order to handle multi line selections
                // rangeBottom = rangeTop + (rangeHeight ? (rangeHeight - 1) : 0);
                rangeBottom = rangeTop;
                rangeEnd = this.doc.selection.createRange();
                for (j = scrollWidth; j >= 0; j--) {
                    try {
                        rangeEnd.moveToPoint(j, rangeBottom);
                        break;
                    } catch (e2) {
                    }
                }

                range.setEndPoint("EndToEnd", rangeEnd);
                range.select();
            },

            getText: function () {
                var selection = this.getSelection();
                return selection ? selection.toString() : "";
            },

            getNodes: function (nodeType, filter) {
                var range = this.getRange();
                if (range) {
                    return range.getNodes([nodeType], filter);
                } else {
                    return [];
                }
            },

            getRange: function () {
                var selection = this.getSelection();
                return selection && selection.rangeCount && selection.getRangeAt(0);
            },

            getSelection: function () {
                return rangy.getSelection(this.doc.defaultView || this.doc.parentWindow);
            },

            setSelection: function (range) {
                var win = this.doc.defaultView || this.doc.parentWindow,
                    selection = rangy.getSelection(win);
                return selection.setSingleRange(range);
            }
        });

})(wysihtml5);
/**
 * Inspired by the rangy CSS Applier module written by Tim Down and licensed under the MIT license.
 * http://code.google.com/p/rangy/
 *
 * changed in order to be able ...
 *    - to use custom tags
 *    - to detect and replace similar css classes via reg exp
 */
(function (wysihtml5, rangy) {
    var defaultTagName = "span";

    var REG_EXP_WHITE_SPACE = /\s+/g;

    function hasClass(el, cssClass, regExp) {
        if (!el.className) {
            return false;
        }

        var matchingClassNames = el.className.match(regExp) || [];
        return matchingClassNames[matchingClassNames.length - 1] === cssClass;
    }

    function addClass(el, cssClass, regExp) {
        if (el.className) {
            removeClass(el, regExp);
            el.className += " " + cssClass;
        } else {
            el.className = cssClass;
        }
    }

    function removeClass(el, regExp) {
        if (el.className) {
            el.className = el.className.replace(regExp, "");
        }
    }

    function hasSameClasses(el1, el2) {
        return el1.className.replace(REG_EXP_WHITE_SPACE, " ") == el2.className.replace(REG_EXP_WHITE_SPACE, " ");
    }

    function replaceWithOwnChildren(el) {
        var parent = el.parentNode;
        while (el.firstChild) {
            parent.insertBefore(el.firstChild, el);
        }
        parent.removeChild(el);
    }

    function elementsHaveSameNonClassAttributes(el1, el2) {
        if (el1.attributes.length != el2.attributes.length) {
            return false;
        }
        for (var i = 0, len = el1.attributes.length, attr1, attr2, name; i < len; ++i) {
            attr1 = el1.attributes[i];
            name = attr1.name;
            if (name != "class") {
                attr2 = el2.attributes.getNamedItem(name);
                if (attr1.specified != attr2.specified) {
                    return false;
                }
                if (attr1.specified && attr1.nodeValue !== attr2.nodeValue) {
                    return false;
                }
            }
        }
        return true;
    }

    function isSplitPoint(node, offset) {
        if (rangy.dom.isCharacterDataNode(node)) {
            if (offset == 0) {
                return !!node.previousSibling;
            } else if (offset == node.length) {
                return !!node.nextSibling;
            } else {
                return true;
            }
        }

        return offset > 0 && offset < node.childNodes.length;
    }

    function splitNodeAt(node, descendantNode, descendantOffset) {
        var newNode;
        if (rangy.dom.isCharacterDataNode(descendantNode)) {
            if (descendantOffset == 0) {
                descendantOffset = rangy.dom.getNodeIndex(descendantNode);
                descendantNode = descendantNode.parentNode;
            } else if (descendantOffset == descendantNode.length) {
                descendantOffset = rangy.dom.getNodeIndex(descendantNode) + 1;
                descendantNode = descendantNode.parentNode;
            } else {
                newNode = rangy.dom.splitDataNode(descendantNode, descendantOffset);
            }
        }
        if (!newNode) {
            newNode = descendantNode.cloneNode(false);
            if (newNode.id) {
                newNode.removeAttribute("id");
            }
            var child;
            while ((child = descendantNode.childNodes[descendantOffset])) {
                newNode.appendChild(child);
            }
            rangy.dom.insertAfter(newNode, descendantNode);
        }
        return (descendantNode == node) ? newNode : splitNodeAt(node, newNode.parentNode, rangy.dom.getNodeIndex(newNode));
    }

    function Merge(firstNode) {
        this.isElementMerge = (firstNode.nodeType == wysihtml5.ELEMENT_NODE);
        this.firstTextNode = this.isElementMerge ? firstNode.lastChild : firstNode;
        this.textNodes = [this.firstTextNode];
    }

    Merge.prototype = {
        doMerge: function () {
            var textBits = [], textNode, parent, text;
            for (var i = 0, len = this.textNodes.length; i < len; ++i) {
                textNode = this.textNodes[i];
                parent = textNode.parentNode;
                textBits[i] = textNode.data;
                if (i) {
                    parent.removeChild(textNode);
                    if (!parent.hasChildNodes()) {
                        parent.parentNode.removeChild(parent);
                    }
                }
            }
            this.firstTextNode.data = text = textBits.join("");
            return text;
        },

        getLength: function () {
            var i = this.textNodes.length, len = 0;
            while (i--) {
                len += this.textNodes[i].length;
            }
            return len;
        },

        toString: function () {
            var textBits = [];
            for (var i = 0, len = this.textNodes.length; i < len; ++i) {
                textBits[i] = "'" + this.textNodes[i].data + "'";
            }
            return "[Merge(" + textBits.join(",") + ")]";
        }
    };

    function HTMLApplier(tagNames, cssClass, similarClassRegExp, normalize) {
        this.tagNames = tagNames || [defaultTagName];
        this.cssClass = cssClass || "";
        this.similarClassRegExp = similarClassRegExp;
        this.normalize = normalize;
        this.applyToAnyTagName = false;
    }

    HTMLApplier.prototype = {
        getAncestorWithClass: function (node) {
            var cssClassMatch;
            while (node) {
                cssClassMatch = this.cssClass ? hasClass(node, this.cssClass, this.similarClassRegExp) : true;
                if (node.nodeType == wysihtml5.ELEMENT_NODE && rangy.dom.arrayContains(this.tagNames, node.tagName.toLowerCase()) && cssClassMatch) {
                    return node;
                }
                node = node.parentNode;
            }
            return false;
        },

        // Normalizes nodes after applying a CSS class to a Range.
        postApply: function (textNodes, range) {
            var firstNode = textNodes[0], lastNode = textNodes[textNodes.length - 1];

            var merges = [], currentMerge;

            var rangeStartNode = firstNode, rangeEndNode = lastNode;
            var rangeStartOffset = 0, rangeEndOffset = lastNode.length;

            var textNode, precedingTextNode;

            for (var i = 0, len = textNodes.length; i < len; ++i) {
                textNode = textNodes[i];
                precedingTextNode = this.getAdjacentMergeableTextNode(textNode.parentNode, false);
                if (precedingTextNode) {
                    if (!currentMerge) {
                        currentMerge = new Merge(precedingTextNode);
                        merges.push(currentMerge);
                    }
                    currentMerge.textNodes.push(textNode);
                    if (textNode === firstNode) {
                        rangeStartNode = currentMerge.firstTextNode;
                        rangeStartOffset = rangeStartNode.length;
                    }
                    if (textNode === lastNode) {
                        rangeEndNode = currentMerge.firstTextNode;
                        rangeEndOffset = currentMerge.getLength();
                    }
                } else {
                    currentMerge = null;
                }
            }

            // Test whether the first node after the range needs merging
            var nextTextNode = this.getAdjacentMergeableTextNode(lastNode.parentNode, true);
            if (nextTextNode) {
                if (!currentMerge) {
                    currentMerge = new Merge(lastNode);
                    merges.push(currentMerge);
                }
                currentMerge.textNodes.push(nextTextNode);
            }

            // Do the merges
            if (merges.length) {
                for (i = 0, len = merges.length; i < len; ++i) {
                    merges[i].doMerge();
                }
                // Set the range boundaries
                range.setStart(rangeStartNode, rangeStartOffset);
                range.setEnd(rangeEndNode, rangeEndOffset);
            }
        },

        getAdjacentMergeableTextNode: function (node, forward) {
            var isTextNode = (node.nodeType == wysihtml5.TEXT_NODE);
            var el = isTextNode ? node.parentNode : node;
            var adjacentNode;
            var propName = forward ? "nextSibling" : "previousSibling";
            if (isTextNode) {
                // Can merge if the node's previous/next sibling is a text node
                adjacentNode = node[propName];
                if (adjacentNode && adjacentNode.nodeType == wysihtml5.TEXT_NODE) {
                    return adjacentNode;
                }
            } else {
                // Compare element with its sibling
                adjacentNode = el[propName];
                if (adjacentNode && this.areElementsMergeable(node, adjacentNode)) {
                    return adjacentNode[forward ? "firstChild" : "lastChild"];
                }
            }
            return null;
        },

        areElementsMergeable: function (el1, el2) {
            return rangy.dom.arrayContains(this.tagNames, (el1.tagName || "").toLowerCase())
                && rangy.dom.arrayContains(this.tagNames, (el2.tagName || "").toLowerCase())
                && hasSameClasses(el1, el2)
                && elementsHaveSameNonClassAttributes(el1, el2);
        },

        createContainer: function (doc) {
            var el = doc.createElement(this.tagNames[0]);
            if (this.cssClass) {
                el.className = this.cssClass;
            }
            return el;
        },

        applyToTextNode: function (textNode) {
            var parent = textNode.parentNode;
            if (parent.childNodes.length == 1 && rangy.dom.arrayContains(this.tagNames, parent.tagName.toLowerCase())) {
                if (this.cssClass) {
                    addClass(parent, this.cssClass, this.similarClassRegExp);
                }
            } else {
                var el = this.createContainer(rangy.dom.getDocument(textNode));
                textNode.parentNode.insertBefore(el, textNode);
                el.appendChild(textNode);
            }
        },

        isRemovable: function (el) {
            return rangy.dom.arrayContains(this.tagNames, el.tagName.toLowerCase()) && wysihtml5.lang.string(el.className).trim() == this.cssClass;
        },

        undoToTextNode: function (textNode, range, ancestorWithClass) {
            if (!range.containsNode(ancestorWithClass)) {
                // Split out the portion of the ancestor from which we can remove the CSS class
                var ancestorRange = range.cloneRange();
                ancestorRange.selectNode(ancestorWithClass);

                if (ancestorRange.isPointInRange(range.endContainer, range.endOffset) && isSplitPoint(range.endContainer, range.endOffset)) {
                    splitNodeAt(ancestorWithClass, range.endContainer, range.endOffset);
                    range.setEndAfter(ancestorWithClass);
                }
                if (ancestorRange.isPointInRange(range.startContainer, range.startOffset) && isSplitPoint(range.startContainer, range.startOffset)) {
                    ancestorWithClass = splitNodeAt(ancestorWithClass, range.startContainer, range.startOffset);
                }
            }

            if (this.similarClassRegExp) {
                removeClass(ancestorWithClass, this.similarClassRegExp);
            }
            if (this.isRemovable(ancestorWithClass)) {
                replaceWithOwnChildren(ancestorWithClass);
            }
        },

        applyToRange: function (range) {
            var textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
            if (!textNodes.length) {
                try {
                    var node = this.createContainer(range.endContainer.ownerDocument);
                    range.surroundContents(node);
                    this.selectNode(range, node);
                    return;
                } catch (e) {
                }
            }

            range.splitBoundaries();
            textNodes = range.getNodes([wysihtml5.TEXT_NODE]);

            if (textNodes.length) {
                var textNode;

                for (var i = 0, len = textNodes.length; i < len; ++i) {
                    textNode = textNodes[i];
                    if (!this.getAncestorWithClass(textNode)) {
                        this.applyToTextNode(textNode);
                    }
                }

                range.setStart(textNodes[0], 0);
                textNode = textNodes[textNodes.length - 1];
                range.setEnd(textNode, textNode.length);

                if (this.normalize) {
                    this.postApply(textNodes, range);
                }
            }
        },

        undoToRange: function (range) {
            var textNodes = range.getNodes([wysihtml5.TEXT_NODE]), textNode, ancestorWithClass;
            if (textNodes.length) {
                range.splitBoundaries();
                textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
            } else {
                var doc = range.endContainer.ownerDocument,
                    node = doc.createTextNode(wysihtml5.INVISIBLE_SPACE);
                range.insertNode(node);
                range.selectNode(node);
                textNodes = [node];
            }

            for (var i = 0, len = textNodes.length; i < len; ++i) {
                textNode = textNodes[i];
                ancestorWithClass = this.getAncestorWithClass(textNode);
                if (ancestorWithClass) {
                    this.undoToTextNode(textNode, range, ancestorWithClass);
                }
            }

            if (len == 1) {
                this.selectNode(range, textNodes[0]);
            } else {
                range.setStart(textNodes[0], 0);
                textNode = textNodes[textNodes.length - 1];
                range.setEnd(textNode, textNode.length);

                if (this.normalize) {
                    this.postApply(textNodes, range);
                }
            }
        },

        selectNode: function (range, node) {
            var isElement = node.nodeType === wysihtml5.ELEMENT_NODE,
                canHaveHTML = "canHaveHTML" in node ? node.canHaveHTML : true,
                content = isElement ? node.innerHTML : node.data,
                isEmpty = (content === "" || content === wysihtml5.INVISIBLE_SPACE);

            if (isEmpty && isElement && canHaveHTML) {
                // Make sure that caret is visible in node by inserting a zero width no breaking space
                try {
                    node.innerHTML = wysihtml5.INVISIBLE_SPACE;
                } catch (e) {
                }
            }
            range.selectNodeContents(node);
            if (isEmpty && isElement) {
                range.collapse(false);
            } else if (isEmpty) {
                range.setStartAfter(node);
                range.setEndAfter(node);
            }
        },

        getTextSelectedByRange: function (textNode, range) {
            var textRange = range.cloneRange();
            textRange.selectNodeContents(textNode);

            var intersectionRange = textRange.intersection(range);
            var text = intersectionRange ? intersectionRange.toString() : "";
            textRange.detach();

            return text;
        },

        isAppliedToRange: function (range) {
            var ancestors = [],
                ancestor,
                textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
            if (!textNodes.length) {
                ancestor = this.getAncestorWithClass(range.startContainer);
                return ancestor ? [ancestor] : false;
            }

            for (var i = 0, len = textNodes.length, selectedText; i < len; ++i) {
                selectedText = this.getTextSelectedByRange(textNodes[i], range);
                ancestor = this.getAncestorWithClass(textNodes[i]);
                if (selectedText != "" && !ancestor) {
                    return false;
                } else {
                    ancestors.push(ancestor);
                }
            }
            return ancestors;
        },

        toggleRange: function (range) {
            if (this.isAppliedToRange(range)) {
                this.undoToRange(range);
            } else {
                this.applyToRange(range);
            }
        }
    };

    wysihtml5.selection.HTMLApplier = HTMLApplier;

})(wysihtml5, rangy);
/**
 * Rich Text Query/Formatting Commands
 *
 * @example
 *    var commands = new wysihtml5.Commands(editor);
 */
wysihtml5.Commands = Base.extend(
    /** @scope wysihtml5.Commands.prototype */ {
        constructor: function (editor) {
            this.editor = editor;
            this.composer = editor.composer;
            this.doc = this.composer.doc;
        },

        /**
         * Check whether the browser supports the given command
         *
         * @param {String} command The command string which to check (eg. "bold", "italic", "insertUnorderedList")
         * @example
         *    commands.supports("createLink");
         */
        support: function (command) {
            return wysihtml5.browser.supportsCommand(this.doc, command);
        },

        /**
         * Check whether the browser supports the given command
         *
         * @param {String} command The command string which to execute (eg. "bold", "italic", "insertUnorderedList")
         * @param {String} [value] The command value parameter, needed for some commands ("createLink", "insertImage", ...), optional for commands that don't require one ("bold", "underline", ...)
         * @example
         *    commands.exec("insertImage", "http://a1.twimg.com/profile_images/113868655/schrei_twitter_reasonably_small.jpg");
         */
        exec: function (command, value) {
            var obj = wysihtml5.commands[command],
                args = wysihtml5.lang.array(arguments).get(),
                method = obj && obj.exec,
                result = null;

            this.editor.fire("beforecommand:composer");

            if (method) {
                args.unshift(this.composer);
                result = method.apply(obj, args);
            } else {
                try {
                    // try/catch for buggy firefox
                    result = this.doc.execCommand(command, false, value);
                } catch (e) {
                }
            }

            this.editor.fire("aftercommand:composer");
            return result;
        },

        /**
         * Check whether the current command is active
         * If the caret is within a bold text, then calling this with command "bold" should return true
         *
         * @param {String} command The command string which to check (eg. "bold", "italic", "insertUnorderedList")
         * @param {String} [commandValue] The command value parameter (eg. for "insertImage" the image src)
         * @return {Boolean} Whether the command is active
         * @example
         *    var isCurrentSelectionBold = commands.state("bold");
         */
        state: function (command, commandValue) {
            var obj = wysihtml5.commands[command],
                args = wysihtml5.lang.array(arguments).get(),
                method = obj && obj.state;
            if (method) {
                args.unshift(this.composer);
                return method.apply(obj, args);
            } else {
                try {
                    // try/catch for buggy firefox
                    return this.doc.queryCommandState(command);
                } catch (e) {
                    return false;
                }
            }
        },

        /**
         * Get the current command's value
         *
         * @param {String} command The command string which to check (eg. "formatBlock")
         * @return {String} The command value
         * @example
         *    var currentBlockElement = commands.value("formatBlock");
         */
        value: function (command) {
            var obj = wysihtml5.commands[command],
                method = obj && obj.value;
            if (method) {
                return method.call(obj, this.composer, command);
            } else {
                try {
                    // try/catch for buggy firefox
                    return this.doc.queryCommandValue(command);
                } catch (e) {
                    return null;
                }
            }
        }
    });
(function (wysihtml5) {
    var undef;

    wysihtml5.commands.bold = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatInline.exec(composer, command, "b");
        },

        state: function (composer, command, color) {
            // element.ownerDocument.queryCommandState("bold") results:
            // firefox: only <b>
            // chrome:  <b>, <strong>, <h1>, <h2>, ...
            // ie:      <b>, <strong>
            // opera:   <b>, <strong>
            return wysihtml5.commands.formatInline.state(composer, command, "b");
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);

(function (wysihtml5) {
    var undef,
        NODE_NAME = "A",
        dom = wysihtml5.dom;

    function _removeFormat(composer, anchors) {
        var length = anchors.length,
            i = 0,
            anchor,
            codeElement,
            textContent;
        for (; i < length; i++) {
            anchor = anchors[i];
            codeElement = dom.getParentElement(anchor, { nodeName: "code" });
            textContent = dom.getTextContent(anchor);

            // if <a> contains url-like text content, rename it to <code> to prevent re-autolinking
            // else replace <a> with its childNodes
            if (textContent.match(dom.autoLink.URL_REG_EXP) && !codeElement) {
                // <code> element is used to prevent later auto-linking of the content
                codeElement = dom.renameElement(anchor, "code");
            } else {
                dom.replaceWithChildNodes(anchor);
            }
        }
    }

    function _format(composer, attributes) {
        var doc = composer.doc,
            tempClass = "_wysihtml5-temp-" + (+new Date()),
            tempClassRegExp = /non-matching-class/g,
            i = 0,
            length,
            anchors,
            anchor,
            hasElementChild,
            isEmpty,
            elementToSetCaretAfter,
            textContent,
            whiteSpace,
            j;
        wysihtml5.commands.formatInline.exec(composer, undef, NODE_NAME, tempClass, tempClassRegExp);
        anchors = doc.querySelectorAll(NODE_NAME + "." + tempClass);
        length = anchors.length;
        for (; i < length; i++) {
            anchor = anchors[i];
            anchor.removeAttribute("class");
            for (j in attributes) {
                anchor.setAttribute(j, attributes[j]);
            }
        }

        elementToSetCaretAfter = anchor;
        if (length === 1) {
            textContent = dom.getTextContent(anchor);
            hasElementChild = !!anchor.querySelector("*");
            isEmpty = textContent === "" || textContent === wysihtml5.INVISIBLE_SPACE;
            if (!hasElementChild && isEmpty) {
                dom.setTextContent(anchor, attributes.text || anchor.href);
                whiteSpace = doc.createTextNode(" ");
                composer.selection.setAfter(anchor);
                composer.selection.insertNode(whiteSpace);
                elementToSetCaretAfter = whiteSpace;
            }
        }
        composer.selection.setAfter(elementToSetCaretAfter);
    }

    wysihtml5.commands.createLink = {
        /**
         * TODO: Use HTMLApplier or formatInline here
         *
         * Turns selection into a link
         * If selection is already a link, it removes the link and wraps it with a <code> element
         * The <code> element is needed to avoid auto linking
         *
         * @example
         *    // either ...
         *    wysihtml5.commands.createLink.exec(composer, "createLink", "http://www.google.de");
         *    // ... or ...
         *    wysihtml5.commands.createLink.exec(composer, "createLink", { href: "http://www.google.de", target: "_blank" });
         */
        exec: function (composer, command, value) {
            var anchors = this.state(composer, command);
            if (anchors) {
                // Selection contains links
                composer.selection.executeAndRestore(function () {
                    _removeFormat(composer, anchors);
                });
            } else {
                // Create links
                value = typeof(value) === "object" ? value : { href: value };
                _format(composer, value);
            }
        },

        state: function (composer, command) {
            return wysihtml5.commands.formatInline.state(composer, command, "A");
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
/**
 * document.execCommand("fontSize") will create either inline styles (firefox, chrome) or use font tags
 * which we don't want
 * Instead we set a css class
 */
(function (wysihtml5) {
    var undef,
        REG_EXP = /wysiwyg-font-size-[a-z\-]+/g;

    wysihtml5.commands.fontSize = {
        exec: function (composer, command, size) {
            return wysihtml5.commands.formatInline.exec(composer, command, "span", "wysiwyg-font-size-" + size, REG_EXP);
        },

        state: function (composer, command, size) {
            return wysihtml5.commands.formatInline.state(composer, command, "span", "wysiwyg-font-size-" + size, REG_EXP);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
/**
 * document.execCommand("foreColor") will create either inline styles (firefox, chrome) or use font tags
 * which we don't want
 * Instead we set a css class
 */
(function (wysihtml5) {
    var undef,
        REG_EXP = /wysiwyg-color-[a-z]+/g;

    wysihtml5.commands.foreColor = {
        exec: function (composer, command, color) {
            return wysihtml5.commands.formatInline.exec(composer, command, "span", "wysiwyg-color-" + color, REG_EXP);
        },

        state: function (composer, command, color) {
            return wysihtml5.commands.formatInline.state(composer, command, "span", "wysiwyg-color-" + color, REG_EXP);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef,
        dom = wysihtml5.dom,
        DEFAULT_NODE_NAME = "DIV",
    // Following elements are grouped
    // when the caret is within a H1 and the H4 is invoked, the H1 should turn into H4
    // instead of creating a H4 within a H1 which would result in semantically invalid html
        BLOCK_ELEMENTS_GROUP = ["H1", "H2", "H3", "H4", "H5", "H6", "P", "BLOCKQUOTE", DEFAULT_NODE_NAME];

    /**
     * Remove similiar classes (based on classRegExp)
     * and add the desired class name
     */
    function _addClass(element, className, classRegExp) {
        if (element.className) {
            _removeClass(element, classRegExp);
            element.className += " " + className;
        } else {
            element.className = className;
        }
    }

    function _removeClass(element, classRegExp) {
        element.className = element.className.replace(classRegExp, "");
    }

    /**
     * Check whether given node is a text node and whether it's empty
     */
    function _isBlankTextNode(node) {
        return node.nodeType === wysihtml5.TEXT_NODE && !wysihtml5.lang.string(node.data).trim();
    }

    /**
     * Returns previous sibling node that is not a blank text node
     */
    function _getPreviousSiblingThatIsNotBlank(node) {
        var previousSibling = node.previousSibling;
        while (previousSibling && _isBlankTextNode(previousSibling)) {
            previousSibling = previousSibling.previousSibling;
        }
        return previousSibling;
    }

    /**
     * Returns next sibling node that is not a blank text node
     */
    function _getNextSiblingThatIsNotBlank(node) {
        var nextSibling = node.nextSibling;
        while (nextSibling && _isBlankTextNode(nextSibling)) {
            nextSibling = nextSibling.nextSibling;
        }
        return nextSibling;
    }

    /**
     * Adds line breaks before and after the given node if the previous and next siblings
     * aren't already causing a visual line break (block element or <br>)
     */
    function _addLineBreakBeforeAndAfter(node) {
        var doc = node.ownerDocument,
            nextSibling = _getNextSiblingThatIsNotBlank(node),
            previousSibling = _getPreviousSiblingThatIsNotBlank(node);

        if (nextSibling && !_isLineBreakOrBlockElement(nextSibling)) {
            node.parentNode.insertBefore(doc.createElement("br"), nextSibling);
        }
        if (previousSibling && !_isLineBreakOrBlockElement(previousSibling)) {
            node.parentNode.insertBefore(doc.createElement("br"), node);
        }
    }

    /**
     * Removes line breaks before and after the given node
     */
    function _removeLineBreakBeforeAndAfter(node) {
        var nextSibling = _getNextSiblingThatIsNotBlank(node),
            previousSibling = _getPreviousSiblingThatIsNotBlank(node);

        if (nextSibling && _isLineBreak(nextSibling)) {
            nextSibling.parentNode.removeChild(nextSibling);
        }
        if (previousSibling && _isLineBreak(previousSibling)) {
            previousSibling.parentNode.removeChild(previousSibling);
        }
    }

    function _removeLastChildIfLineBreak(node) {
        var lastChild = node.lastChild;
        if (lastChild && _isLineBreak(lastChild)) {
            lastChild.parentNode.removeChild(lastChild);
        }
    }

    function _isLineBreak(node) {
        return node.nodeName === "BR";
    }

    /**
     * Checks whether the elment causes a visual line break
     * (<br> or block elements)
     */
    function _isLineBreakOrBlockElement(element) {
        if (_isLineBreak(element)) {
            return true;
        }

        if (dom.getStyle("display").from(element) === "block") {
            return true;
        }

        return false;
    }

    /**
     * Execute native query command
     * and if necessary modify the inserted node's className
     */
    function _execCommand(doc, command, nodeName, className) {
        if (className) {
            var eventListener = dom.observe(doc, "DOMNodeInserted", function (event) {
                var target = event.target,
                    displayStyle;
                if (target.nodeType !== wysihtml5.ELEMENT_NODE) {
                    return;
                }
                displayStyle = dom.getStyle("display").from(target);
                if (displayStyle.substr(0, 6) !== "inline") {
                    // Make sure that only block elements receive the given class
                    target.className += " " + className;
                }
            });
        }
        doc.execCommand(command, false, nodeName);
        if (eventListener) {
            eventListener.stop();
        }
    }

    function _selectLineAndWrap(composer, element) {
        composer.selection.selectLine();
        composer.selection.surround(element);
        _removeLineBreakBeforeAndAfter(element);
        _removeLastChildIfLineBreak(element);
        composer.selection.selectNode(element);
    }

    function _hasClasses(element) {
        return !!wysihtml5.lang.string(element.className).trim();
    }

    wysihtml5.commands.formatBlock = {
        exec: function (composer, command, nodeName, className, classRegExp) {
            var doc = composer.doc,
                blockElement = this.state(composer, command, nodeName, className, classRegExp),
                selectedNode;

            nodeName = typeof(nodeName) === "string" ? nodeName.toUpperCase() : nodeName;

            if (blockElement) {
                composer.selection.executeAndRestoreSimple(function () {
                    if (classRegExp) {
                        _removeClass(blockElement, classRegExp);
                    }
                    var hasClasses = _hasClasses(blockElement);
                    if (!hasClasses && blockElement.nodeName === (nodeName || DEFAULT_NODE_NAME)) {
                        // Insert a line break afterwards and beforewards when there are siblings
                        // that are not of type line break or block element
                        _addLineBreakBeforeAndAfter(blockElement);
                        dom.replaceWithChildNodes(blockElement);
                    } else if (hasClasses) {
                        // Make sure that styling is kept by renaming the element to <div> and copying over the class name
                        dom.renameElement(blockElement, DEFAULT_NODE_NAME);
                    }
                });
                return;
            }

            // Find similiar block element and rename it (<h2 class="foo"></h2>  =>  <h1 class="foo"></h1>)
            if (nodeName === null || wysihtml5.lang.array(BLOCK_ELEMENTS_GROUP).contains(nodeName)) {
                selectedNode = composer.selection.getSelectedNode();
                blockElement = dom.getParentElement(selectedNode, {
                    nodeName: BLOCK_ELEMENTS_GROUP
                });

                if (blockElement) {
                    composer.selection.executeAndRestoreSimple(function () {
                        // Rename current block element to new block element and add class
                        if (nodeName) {
                            blockElement = dom.renameElement(blockElement, nodeName);
                        }
                        if (className) {
                            _addClass(blockElement, className, classRegExp);
                        }
                    });
                    return;
                }
            }

            if (composer.commands.support(command)) {
                _execCommand(doc, command, nodeName || DEFAULT_NODE_NAME, className);
                return;
            }

            blockElement = doc.createElement(nodeName || DEFAULT_NODE_NAME);
            if (className) {
                blockElement.className = className;
            }
            _selectLineAndWrap(composer, blockElement);
        },

        state: function (composer, command, nodeName, className, classRegExp) {
            nodeName = typeof(nodeName) === "string" ? nodeName.toUpperCase() : nodeName;
            var selectedNode = composer.selection.getSelectedNode();
            return dom.getParentElement(selectedNode, {
                nodeName: nodeName,
                className: className,
                classRegExp: classRegExp
            });
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
/**
 * formatInline scenarios for tag "B" (| = caret, |foo| = selected text)
 *
 *   #1 caret in unformatted text:
 *      abcdefg|
 *   output:
 *      abcdefg<b>|</b>
 *
 *   #2 unformatted text selected:
 *      abc|deg|h
 *   output:
 *      abc<b>|deg|</b>h
 *
 *   #3 unformatted text selected across boundaries:
 *      ab|c <span>defg|h</span>
 *   output:
 *      ab<b>|c </b><span><b>defg</b>|h</span>
 *
 *   #4 formatted text entirely selected
 *      <b>|abc|</b>
 *   output:
 *      |abc|
 *
 *   #5 formatted text partially selected
 *      <b>ab|c|</b>
 *   output:
 *      <b>ab</b>|c|
 *
 *   #6 formatted text selected across boundaries
 *      <span>ab|c</span> <b>de|fgh</b>
 *   output:
 *      <span>ab|c</span> de|<b>fgh</b>
 */
(function (wysihtml5) {
    var undef,
    // Treat <b> as <strong> and vice versa
        ALIAS_MAPPING = {
            "strong": "b",
            "em": "i",
            "b": "strong",
            "i": "em"
        },
        htmlApplier = {};

    function _getTagNames(tagName) {
        var alias = ALIAS_MAPPING[tagName];
        return alias ? [tagName.toLowerCase(), alias.toLowerCase()] : [tagName.toLowerCase()];
    }

    function _getApplier(tagName, className, classRegExp) {
        var identifier = tagName + ":" + className;
        if (!htmlApplier[identifier]) {
            htmlApplier[identifier] = new wysihtml5.selection.HTMLApplier(_getTagNames(tagName), className, classRegExp, true);
        }
        return htmlApplier[identifier];
    }

    wysihtml5.commands.formatInline = {
        exec: function (composer, command, tagName, className, classRegExp) {
            var range = composer.selection.getRange();
            if (!range) {
                return false;
            }
            _getApplier(tagName, className, classRegExp).toggleRange(range);
            composer.selection.setSelection(range);
        },

        state: function (composer, command, tagName, className, classRegExp) {
            var doc = composer.doc,
                aliasTagName = ALIAS_MAPPING[tagName] || tagName,
                range;

            // Check whether the document contains a node with the desired tagName
            if (!wysihtml5.dom.hasElementWithTagName(doc, tagName) && !wysihtml5.dom.hasElementWithTagName(doc, aliasTagName)) {
                return false;
            }

            // Check whether the document contains a node with the desired className
            if (className && !wysihtml5.dom.hasElementWithClassName(doc, className)) {
                return false;
            }

            range = composer.selection.getRange();
            if (!range) {
                return false;
            }

            return _getApplier(tagName, className, classRegExp).isAppliedToRange(range);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef;

    wysihtml5.commands.insertHTML = {
        exec: function (composer, command, html) {
            if (composer.commands.support(command)) {
                composer.doc.execCommand(command, false, html);
            } else {
                composer.selection.insertHTML(html);
            }
        },

        state: function () {
            return false;
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var NODE_NAME = "IMG";

    wysihtml5.commands.insertImage = {
        /**
         * Inserts an <img>
         * If selection is already an image link, it removes it
         *
         * @example
         *    // either ...
         *    wysihtml5.commands.insertImage.exec(composer, "insertImage", "http://www.google.de/logo.jpg");
         *    // ... or ...
         *    wysihtml5.commands.insertImage.exec(composer, "insertImage", { src: "http://www.google.de/logo.jpg", title: "foo" });
         */
        exec: function (composer, command, value) {
            value = typeof(value) === "object" ? value : { src: value };

            var doc = composer.doc,
                image = this.state(composer),
                textNode,
                i,
                parent;

            if (image) {
                // Image already selected, set the caret before it and delete it
                composer.selection.setBefore(image);
                parent = image.parentNode;
                parent.removeChild(image);

                // and it's parent <a> too if it hasn't got any other relevant child nodes
                wysihtml5.dom.removeEmptyTextNodes(parent);
                if (parent.nodeName === "A" && !parent.firstChild) {
                    composer.selection.setAfter(parent);
                    parent.parentNode.removeChild(parent);
                }

                // firefox and ie sometimes don't remove the image handles, even though the image got removed
                wysihtml5.quirks.redraw(composer.element);
                return;
            }

            image = doc.createElement(NODE_NAME);

            for (i in value) {
                image[i] = value[i];
            }

            composer.selection.insertNode(image);
            if (wysihtml5.browser.hasProblemsSettingCaretAfterImg()) {
                textNode = doc.createTextNode(wysihtml5.INVISIBLE_SPACE);
                composer.selection.insertNode(textNode);
                composer.selection.setAfter(textNode);
            } else {
                composer.selection.setAfter(image);
            }
        },

        state: function (composer) {
            var doc = composer.doc,
                selectedNode,
                text,
                imagesInSelection;

            if (!wysihtml5.dom.hasElementWithTagName(doc, NODE_NAME)) {
                return false;
            }

            selectedNode = composer.selection.getSelectedNode();
            if (!selectedNode) {
                return false;
            }

            if (selectedNode.nodeName === NODE_NAME) {
                // This works perfectly in IE
                return selectedNode;
            }

            if (selectedNode.nodeType !== wysihtml5.ELEMENT_NODE) {
                return false;
            }

            text = composer.selection.getText();
            text = wysihtml5.lang.string(text).trim();
            if (text) {
                return false;
            }

            imagesInSelection = composer.selection.getNodes(wysihtml5.ELEMENT_NODE, function (node) {
                return node.nodeName === "IMG";
            });

            if (imagesInSelection.length !== 1) {
                return false;
            }

            return imagesInSelection[0];
        },

        value: function (composer) {
            var image = this.state(composer);
            return image && image.src;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef,
        LINE_BREAK = "<br>" + (wysihtml5.browser.needsSpaceAfterLineBreak() ? " " : "");

    wysihtml5.commands.insertLineBreak = {
        exec: function (composer, command) {
            if (composer.commands.support(command)) {
                composer.doc.execCommand(command, false, null);
                if (!wysihtml5.browser.autoScrollsToCaret()) {
                    composer.selection.scrollIntoView();
                }
            } else {
                composer.commands.exec("insertHTML", LINE_BREAK);
            }
        },

        state: function () {
            return false;
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef;

    wysihtml5.commands.insertOrderedList = {
        exec: function (composer, command) {
            var doc = composer.doc,
                selectedNode = composer.selection.getSelectedNode(),
                list = wysihtml5.dom.getParentElement(selectedNode, { nodeName: "OL" }),
                otherList = wysihtml5.dom.getParentElement(selectedNode, { nodeName: "UL" }),
                tempClassName = "_wysihtml5-temp-" + new Date().getTime(),
                isEmpty,
                tempElement;

            if (composer.commands.support(command)) {
                doc.execCommand(command, false, null);
                return;
            }

            if (list) {
                // Unwrap list
                // <ol><li>foo</li><li>bar</li></ol>
                // becomes:
                // foo<br>bar<br>
                composer.selection.executeAndRestoreSimple(function () {
                    wysihtml5.dom.resolveList(list);
                });
            } else if (otherList) {
                // Turn an unordered list into an ordered list
                // <ul><li>foo</li><li>bar</li></ul>
                // becomes:
                // <ol><li>foo</li><li>bar</li></ol>
                composer.selection.executeAndRestoreSimple(function () {
                    wysihtml5.dom.renameElement(otherList, "ol");
                });
            } else {
                // Create list
                composer.commands.exec("formatBlock", "div", tempClassName);
                tempElement = doc.querySelector("." + tempClassName);
                isEmpty = tempElement.innerHTML === "" || tempElement.innerHTML === wysihtml5.INVISIBLE_SPACE;
                composer.selection.executeAndRestoreSimple(function () {
                    list = wysihtml5.dom.convertToList(tempElement, "ol");
                });
                if (isEmpty) {
                    composer.selection.selectNode(list.querySelector("li"));
                }
            }
        },

        state: function (composer) {
            var selectedNode = composer.selection.getSelectedNode();
            return wysihtml5.dom.getParentElement(selectedNode, { nodeName: "OL" });
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef;

    wysihtml5.commands.insertUnorderedList = {
        exec: function (composer, command) {
            var doc = composer.doc,
                selectedNode = composer.selection.getSelectedNode(),
                list = wysihtml5.dom.getParentElement(selectedNode, { nodeName: "UL" }),
                otherList = wysihtml5.dom.getParentElement(selectedNode, { nodeName: "OL" }),
                tempClassName = "_wysihtml5-temp-" + new Date().getTime(),
                isEmpty,
                tempElement;

            if (composer.commands.support(command)) {
                doc.execCommand(command, false, null);
                return;
            }

            if (list) {
                // Unwrap list
                // <ul><li>foo</li><li>bar</li></ul>
                // becomes:
                // foo<br>bar<br>
                composer.selection.executeAndRestoreSimple(function () {
                    wysihtml5.dom.resolveList(list);
                });
            } else if (otherList) {
                // Turn an ordered list into an unordered list
                // <ol><li>foo</li><li>bar</li></ol>
                // becomes:
                // <ul><li>foo</li><li>bar</li></ul>
                composer.selection.executeAndRestoreSimple(function () {
                    wysihtml5.dom.renameElement(otherList, "ul");
                });
            } else {
                // Create list
                composer.commands.exec("formatBlock", "div", tempClassName);
                tempElement = doc.querySelector("." + tempClassName);
                isEmpty = tempElement.innerHTML === "" || tempElement.innerHTML === wysihtml5.INVISIBLE_SPACE;
                composer.selection.executeAndRestoreSimple(function () {
                    list = wysihtml5.dom.convertToList(tempElement, "ul");
                });
                if (isEmpty) {
                    composer.selection.selectNode(list.querySelector("li"));
                }
            }
        },

        state: function (composer) {
            var selectedNode = composer.selection.getSelectedNode();
            return wysihtml5.dom.getParentElement(selectedNode, { nodeName: "UL" });
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef;

    wysihtml5.commands.italic = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatInline.exec(composer, command, "i");
        },

        state: function (composer, command, color) {
            // element.ownerDocument.queryCommandState("italic") results:
            // firefox: only <i>
            // chrome:  <i>, <em>, <blockquote>, ...
            // ie:      <i>, <em>
            // opera:   only <i>
            return wysihtml5.commands.formatInline.state(composer, command, "i");
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef,
        CLASS_NAME = "wysiwyg-text-align-center",
        REG_EXP = /wysiwyg-text-align-[a-z]+/g;

    wysihtml5.commands.justifyCenter = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        state: function (composer, command) {
            return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef,
        CLASS_NAME = "wysiwyg-text-align-left",
        REG_EXP = /wysiwyg-text-align-[a-z]+/g;

    wysihtml5.commands.justifyLeft = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        state: function (composer, command) {
            return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef,
        CLASS_NAME = "wysiwyg-text-align-right",
        REG_EXP = /wysiwyg-text-align-[a-z]+/g;

    wysihtml5.commands.justifyRight = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        state: function (composer, command) {
            return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
(function (wysihtml5) {
    var undef;
    wysihtml5.commands.underline = {
        exec: function (composer, command) {
            return wysihtml5.commands.formatInline.exec(composer, command, "u");
        },

        state: function (composer, command) {
            return wysihtml5.commands.formatInline.state(composer, command, "u");
        },

        value: function () {
            return undef;
        }
    };
})(wysihtml5);
/**
 * Undo Manager for wysihtml5
 * slightly inspired by http://rniwa.com/editing/undomanager.html#the-undomanager-interface
 */
(function (wysihtml5) {
    var Z_KEY = 90,
        Y_KEY = 89,
        BACKSPACE_KEY = 8,
        DELETE_KEY = 46,
        MAX_HISTORY_ENTRIES = 40,
        UNDO_HTML = '<span id="_wysihtml5-undo" class="_wysihtml5-temp">' + wysihtml5.INVISIBLE_SPACE + '</span>',
        REDO_HTML = '<span id="_wysihtml5-redo" class="_wysihtml5-temp">' + wysihtml5.INVISIBLE_SPACE + '</span>',
        dom = wysihtml5.dom;

    function cleanTempElements(doc) {
        var tempElement;
        while (tempElement = doc.querySelector("._wysihtml5-temp")) {
            tempElement.parentNode.removeChild(tempElement);
        }
    }

    wysihtml5.UndoManager = wysihtml5.lang.Dispatcher.extend(
        /** @scope wysihtml5.UndoManager.prototype */ {
            constructor: function (editor) {
                this.editor = editor;
                this.composer = editor.composer;
                this.element = this.composer.element;
                this.history = [this.composer.getValue()];
                this.position = 1;

                // Undo manager currently only supported in browsers who have the insertHTML command (not IE)
                if (this.composer.commands.support("insertHTML")) {
                    this._observe();
                }
            },

            _observe: function () {
                var that = this,
                    doc = this.composer.sandbox.getDocument(),
                    lastKey;

                // Catch CTRL+Z and CTRL+Y
                dom.observe(this.element, "keydown", function (event) {
                    if (event.altKey || (!event.ctrlKey && !event.metaKey)) {
                        return;
                    }

                    var keyCode = event.keyCode,
                        isUndo = keyCode === Z_KEY && !event.shiftKey,
                        isRedo = (keyCode === Z_KEY && event.shiftKey) || (keyCode === Y_KEY);

                    if (isUndo) {
                        that.undo();
                        event.preventDefault();
                    } else if (isRedo) {
                        that.redo();
                        event.preventDefault();
                    }
                });

                // Catch delete and backspace
                dom.observe(this.element, "keydown", function (event) {
                    var keyCode = event.keyCode;
                    if (keyCode === lastKey) {
                        return;
                    }

                    lastKey = keyCode;

                    if (keyCode === BACKSPACE_KEY || keyCode === DELETE_KEY) {
                        that.transact();
                    }
                });

                // Now this is very hacky:
                // These days browsers don't offer a undo/redo event which we could hook into
                // to be notified when the user hits undo/redo in the contextmenu.
                // Therefore we simply insert two elements as soon as the contextmenu gets opened.
                // The last element being inserted will be immediately be removed again by a exexCommand("undo")
                //  => When the second element appears in the dom tree then we know the user clicked "redo" in the context menu
                //  => When the first element disappears from the dom tree then we know the user clicked "undo" in the context menu
                if (wysihtml5.browser.hasUndoInContextMenu()) {
                    var interval, observed, cleanUp = function () {
                        cleanTempElements(doc);
                        clearInterval(interval);
                    };

                    dom.observe(this.element, "contextmenu", function () {
                        cleanUp();
                        that.composer.selection.executeAndRestoreSimple(function () {
                            if (that.element.lastChild) {
                                that.composer.selection.setAfter(that.element.lastChild);
                            }

                            // enable undo button in context menu
                            doc.execCommand("insertHTML", false, UNDO_HTML);
                            // enable redo button in context menu
                            doc.execCommand("insertHTML", false, REDO_HTML);
                            doc.execCommand("undo", false, null);
                        });

                        interval = setInterval(function () {
                            if (doc.getElementById("_wysihtml5-redo")) {
                                cleanUp();
                                that.redo();
                            } else if (!doc.getElementById("_wysihtml5-undo")) {
                                cleanUp();
                                that.undo();
                            }
                        }, 400);

                        if (!observed) {
                            observed = true;
                            dom.observe(document, "mousedown", cleanUp);
                            dom.observe(doc, ["mousedown", "paste", "cut", "copy"], cleanUp);
                        }
                    });
                }

                this.editor
                    .observe("newword:composer", function () {
                        that.transact();
                    })

                    .observe("beforecommand:composer", function () {
                        that.transact();
                    });
            },

            transact: function () {
                var previousHtml = this.history[this.position - 1],
                    currentHtml = this.composer.getValue();

                if (currentHtml == previousHtml) {
                    return;
                }

                var length = this.history.length = this.position;
                if (length > MAX_HISTORY_ENTRIES) {
                    this.history.shift();
                    this.position--;
                }

                this.position++;
                this.history.push(currentHtml);
            },

            undo: function () {
                this.transact();

                if (this.position <= 1) {
                    return;
                }

                this.set(this.history[--this.position - 1]);
                this.editor.fire("undo:composer");
            },

            redo: function () {
                if (this.position >= this.history.length) {
                    return;
                }

                this.set(this.history[++this.position - 1]);
                this.editor.fire("redo:composer");
            },

            set: function (html) {
                this.composer.setValue(html);
                this.editor.focus(true);
            }
        });
})(wysihtml5);
/**
 * TODO: the following methods still need unit test coverage
 */
wysihtml5.views.View = Base.extend(
    /** @scope wysihtml5.views.View.prototype */ {
        constructor: function (parent, textareaElement, config) {
            this.parent = parent;
            this.element = textareaElement;
            this.config = config;

            this._observeViewChange();
        },

        _observeViewChange: function () {
            var that = this;
            this.parent.observe("beforeload", function () {
                that.parent.observe("change_view", function (view) {
                    if (view === that.name) {
                        that.parent.currentView = that;
                        that.show();
                        // Using tiny delay here to make sure that the placeholder is set before focusing
                        setTimeout(function () {
                            that.focus();
                        }, 0);
                    } else {
                        that.hide();
                    }
                });
            });
        },

        focus: function () {
            if (this.element.ownerDocument.querySelector(":focus") === this.element) {
                return;
            }

            try {
                this.element.focus();
            } catch (e) {
            }
        },

        hide: function () {
            this.element.style.display = "none";
        },

        show: function () {
            this.element.style.display = "";
        },

        disable: function () {
            this.element.setAttribute("disabled", "disabled");
        },

        enable: function () {
            this.element.removeAttribute("disabled");
        }
    });
(function (wysihtml5) {
    var dom = wysihtml5.dom,
        browser = wysihtml5.browser;

    wysihtml5.views.Composer = wysihtml5.views.View.extend(
        /** @scope wysihtml5.views.Composer.prototype */ {
            name: "composer",

            // Needed for firefox in order to display a proper caret in an empty contentEditable
            CARET_HACK: "<br>",

            constructor: function (parent, textareaElement, config) {
                this.base(parent, textareaElement, config);
                this.textarea = this.parent.textarea;
                this._initSandbox();
            },

            clear: function () {
                this.element.innerHTML = browser.displaysCaretInEmptyContentEditableCorrectly() ? "" : this.CARET_HACK;
            },

            getValue: function (parse) {
                var value = this.isEmpty() ? "" : wysihtml5.quirks.getCorrectInnerHTML(this.element);

                if (parse) {
                    value = this.parent.parse(value);
                }

                // Replace all "zero width no breaking space" chars
                // which are used as hacks to enable some functionalities
                // Also remove all CARET hacks that somehow got left
                value = wysihtml5.lang.string(value).replace(wysihtml5.INVISIBLE_SPACE).by("");

                return value;
            },

            setValue: function (html, parse) {
                if (parse) {
                    html = this.parent.parse(html);
                }
                this.element.innerHTML = html;
            },

            show: function () {
                this.iframe.style.display = this._displayStyle || "";

                // Firefox needs this, otherwise contentEditable becomes uneditable
                this.disable();
                this.enable();
            },

            hide: function () {
                this._displayStyle = dom.getStyle("display").from(this.iframe);
                if (this._displayStyle === "none") {
                    this._displayStyle = null;
                }
                this.iframe.style.display = "none";
            },

            disable: function () {
                this.element.removeAttribute("contentEditable");
                this.base();
            },

            enable: function () {
                this.element.setAttribute("contentEditable", "true");
                this.base();
            },

            focus: function (setToEnd) {
                // IE 8 fires the focus event after .focus()
                // This is needed by our simulate_placeholder.js to work
                // therefore we clear it ourselves this time
                if (wysihtml5.browser.doesAsyncFocus() && this.hasPlaceholderSet()) {
                    this.clear();
                }

                this.base();

                var lastChild = this.element.lastChild;
                if (setToEnd && lastChild) {
                    if (lastChild.nodeName === "BR") {
                        this.selection.setBefore(this.element.lastChild);
                    } else {
                        this.selection.setAfter(this.element.lastChild);
                    }
                }
            },

            getTextContent: function () {
                return dom.getTextContent(this.element);
            },

            hasPlaceholderSet: function () {
                return this.getTextContent() == this.textarea.element.getAttribute("placeholder");
            },

            isEmpty: function () {
                var innerHTML = this.element.innerHTML,
                    elementsWithVisualValue = "blockquote, ul, ol, img, embed, object, table, iframe, svg, video, audio, button, input, select, textarea";
                return innerHTML === "" ||
                    innerHTML === this.CARET_HACK ||
                    this.hasPlaceholderSet() ||
                    (this.getTextContent() === "" && !this.element.querySelector(elementsWithVisualValue));
            },

            _initSandbox: function () {
                var that = this;

                this.sandbox = new dom.Sandbox(function () {
                    that._create();
                }, {
                    stylesheets: this.config.stylesheets
                });
                this.iframe = this.sandbox.getIframe();

                // Create hidden field which tells the server after submit, that the user used an wysiwyg editor
                var hiddenField = document.createElement("input");
                hiddenField.type = "hidden";
                hiddenField.name = "_wysihtml5_mode";
                hiddenField.value = 1;

                // Store reference to current wysihtml5 instance on the textarea element
                var textareaElement = this.textarea.element;
                dom.insert(this.iframe).after(textareaElement);
                dom.insert(hiddenField).after(textareaElement);
            },

            _create: function () {
                var that = this;

                this.doc = this.sandbox.getDocument();
                this.element = this.doc.body;
                this.textarea = this.parent.textarea;
                this.element.innerHTML = this.textarea.getValue(true);
                this.enable();

                // Make sure our selection handler is ready
                this.selection = new wysihtml5.Selection(this.parent);

                // Make sure commands dispatcher is ready
                this.commands = new wysihtml5.Commands(this.parent);

                dom.copyAttributes([
                    "className", "spellcheck", "title", "lang", "dir", "accessKey"
                ]).from(this.textarea.element).to(this.element);

                dom.addClass(this.element, this.config.composerClassName);

                // Make the editor look like the original textarea, by syncing styles
                if (this.config.style) {
                    this.style();
                }

                this.observe();

                var name = this.config.name;
                if (name) {
                    dom.addClass(this.element, name);
                    dom.addClass(this.iframe, name);
                }

                // Simulate html5 placeholder attribute on contentEditable element
                var placeholderText = typeof(this.config.placeholder) === "string"
                    ? this.config.placeholder
                    : this.textarea.element.getAttribute("placeholder");
                if (placeholderText) {
                    dom.simulatePlaceholder(this.parent, this, placeholderText);
                }

                // Make sure that the browser avoids using inline styles whenever possible
                this.commands.exec("styleWithCSS", false);

                this._initAutoLinking();
                this._initObjectResizing();
                this._initUndoManager();

                // Simulate html5 autofocus on contentEditable element
                if (this.textarea.element.hasAttribute("autofocus") || document.querySelector(":focus") == this.textarea.element) {
                    setTimeout(function () {
                        that.focus();
                    }, 100);
                }

                wysihtml5.quirks.insertLineBreakOnReturn(this);

                // IE sometimes leaves a single paragraph, which can't be removed by the user
                if (!browser.clearsContentEditableCorrectly()) {
                    wysihtml5.quirks.ensureProperClearing(this);
                }

                if (!browser.clearsListsInContentEditableCorrectly()) {
                    wysihtml5.quirks.ensureProperClearingOfLists(this);
                }

                // Set up a sync that makes sure that textarea and editor have the same content
                if (this.initSync && this.config.sync) {
                    this.initSync();
                }

                // Okay hide the textarea, we are ready to go
                this.textarea.hide();

                // Fire global (before-)load event
                this.parent.fire("beforeload").fire("load");
            },

            _initAutoLinking: function () {
                var that = this,
                    supportsDisablingOfAutoLinking = browser.canDisableAutoLinking(),
                    supportsAutoLinking = browser.doesAutoLinkingInContentEditable();
                if (supportsDisablingOfAutoLinking) {
                    this.commands.exec("autoUrlDetect", false);
                }

                if (!this.config.autoLink) {
                    return;
                }

                // Only do the auto linking by ourselves when the browser doesn't support auto linking
                // OR when he supports auto linking but we were able to turn it off (IE9+)
                if (!supportsAutoLinking || (supportsAutoLinking && supportsDisablingOfAutoLinking)) {
                    this.parent.observe("newword:composer", function () {
                        that.selection.executeAndRestore(function (startContainer, endContainer) {
                            dom.autoLink(endContainer.parentNode);
                        });
                    });
                }

                // Assuming we have the following:
                //  <a href="http://www.google.de">http://www.google.de</a>
                // If a user now changes the url in the innerHTML we want to make sure that
                // it's synchronized with the href attribute (as long as the innerHTML is still a url)
                var // Use a live NodeList to check whether there are any links in the document
                    links = this.sandbox.getDocument().getElementsByTagName("a"),
                // The autoLink helper method reveals a reg exp to detect correct urls
                    urlRegExp = dom.autoLink.URL_REG_EXP,
                    getTextContent = function (element) {
                        var textContent = wysihtml5.lang.string(dom.getTextContent(element)).trim();
                        if (textContent.substr(0, 4) === "www.") {
                            textContent = "http://" + textContent;
                        }
                        return textContent;
                    };

                dom.observe(this.element, "keydown", function (event) {
                    if (!links.length) {
                        return;
                    }

                    var selectedNode = that.selection.getSelectedNode(event.target.ownerDocument),
                        link = dom.getParentElement(selectedNode, { nodeName: "A" }, 4),
                        textContent;

                    if (!link) {
                        return;
                    }

                    textContent = getTextContent(link);
                    // keydown is fired before the actual content is changed
                    // therefore we set a timeout to change the href
                    setTimeout(function () {
                        var newTextContent = getTextContent(link);
                        if (newTextContent === textContent) {
                            return;
                        }

                        // Only set href when new href looks like a valid url
                        if (newTextContent.match(urlRegExp)) {
                            link.setAttribute("href", newTextContent);
                        }
                    }, 0);
                });
            },

            _initObjectResizing: function () {
                var properties = ["width", "height"],
                    propertiesLength = properties.length,
                    element = this.element;

                this.commands.exec("enableObjectResizing", this.config.allowObjectResizing);

                if (this.config.allowObjectResizing) {
                    // IE sets inline styles after resizing objects
                    // The following lines make sure that the width/height css properties
                    // are copied over to the width/height attributes
                    if (browser.supportsEvent("resizeend")) {
                        dom.observe(element, "resizeend", function (event) {
                            var target = event.target || event.srcElement,
                                style = target.style,
                                i = 0,
                                property;
                            for (; i < propertiesLength; i++) {
                                property = properties[i];
                                if (style[property]) {
                                    target.setAttribute(property, parseInt(style[property], 10));
                                    style[property] = "";
                                }
                            }
                            // After resizing IE sometimes forgets to remove the old resize handles
                            wysihtml5.quirks.redraw(element);
                        });
                    }
                } else {
                    if (browser.supportsEvent("resizestart")) {
                        dom.observe(element, "resizestart", function (event) {
                            event.preventDefault();
                        });
                    }
                }
            },

            _initUndoManager: function () {
                new wysihtml5.UndoManager(this.parent);
            }
        });
})(wysihtml5);
(function (wysihtml5) {
    var dom = wysihtml5.dom,
        doc = document,
        win = window,
        HOST_TEMPLATE = doc.createElement("div"),
        /**
         * Styles to copy from textarea to the composer element
         */
            TEXT_FORMATTING = [
            "background-color",
            "color", "cursor",
            "font-family", "font-size", "font-style", "font-variant", "font-weight",
            "line-height", "letter-spacing",
            "text-align", "text-decoration", "text-indent", "text-rendering",
            "word-break", "word-wrap", "word-spacing"
        ],
        /**
         * Styles to copy from textarea to the iframe
         */
            BOX_FORMATTING = [
            "background-color",
            "border-collapse",
            "border-bottom-color", "border-bottom-style", "border-bottom-width",
            "border-left-color", "border-left-style", "border-left-width",
            "border-right-color", "border-right-style", "border-right-width",
            "border-top-color", "border-top-style", "border-top-width",
            "clear", "display", "float",
            "margin-bottom", "margin-left", "margin-right", "margin-top",
            "outline-color", "outline-offset", "outline-width", "outline-style",
            "padding-left", "padding-right", "padding-top", "padding-bottom",
            "position", "top", "left", "right", "bottom", "z-index",
            "vertical-align", "text-align",
            "-webkit-box-sizing", "-moz-box-sizing", "-ms-box-sizing", "box-sizing",
            "-webkit-box-shadow", "-moz-box-shadow", "-ms-box-shadow", "box-shadow",
            "-webkit-border-top-right-radius", "-moz-border-radius-topright", "border-top-right-radius",
            "-webkit-border-bottom-right-radius", "-moz-border-radius-bottomright", "border-bottom-right-radius",
            "-webkit-border-bottom-left-radius", "-moz-border-radius-bottomleft", "border-bottom-left-radius",
            "-webkit-border-top-left-radius", "-moz-border-radius-topleft", "border-top-left-radius",
            "width", "height"
        ],
        /**
         * Styles to sync while the window gets resized
         */
            RESIZE_STYLE = [
            "width", "height",
            "top", "left", "right", "bottom"
        ],
        ADDITIONAL_CSS_RULES = [
            "html             { height: 100%; }",
            "body             { min-height: 100%; padding: 0; margin: 0; margin-top: -1px; padding-top: 1px; }",
            "._wysihtml5-temp { display: none; }",
            wysihtml5.browser.isGecko ?
                "body.placeholder { color: graytext !important; }" :
                "body.placeholder { color: #a9a9a9 !important; }",
            "body[disabled]   { background-color: #eee !important; color: #999 !important; cursor: default !important; }",
            // Ensure that user see's broken images and can delete them
            "img:-moz-broken  { -moz-force-broken-image-icon: 1; height: 24px; width: 24px; }"
        ];

    /**
     * With "setActive" IE offers a smart way of focusing elements without scrolling them into view:
     * http://msdn.microsoft.com/en-us/library/ms536738(v=vs.85).aspx
     *
     * Other browsers need a more hacky way: (pssst don't tell my mama)
     * In order to prevent the element being scrolled into view when focusing it, we simply
     * move it out of the scrollable area, focus it, and reset it's position
     */
    var focusWithoutScrolling = function (element) {
        if (element.setActive) {
            // Following line could cause a js error when the textarea is invisible
            // See https://github.com/xing/wysihtml5/issues/9
            try {
                element.setActive();
            } catch (e) {
            }
        } else {
            var elementStyle = element.style,
                originalScrollTop = doc.documentElement.scrollTop || doc.body.scrollTop,
                originalScrollLeft = doc.documentElement.scrollLeft || doc.body.scrollLeft,
                originalStyles = {
                    position: elementStyle.position,
                    top: elementStyle.top,
                    left: elementStyle.left,
                    WebkitUserSelect: elementStyle.WebkitUserSelect
                };

            dom.setStyles({
                position: "absolute",
                top: "-99999px",
                left: "-99999px",
                // Don't ask why but temporarily setting -webkit-user-select to none makes the whole thing performing smoother
                WebkitUserSelect: "none"
            }).on(element);

            element.focus();

            dom.setStyles(originalStyles).on(element);

            if (win.scrollTo) {
                // Some browser extensions unset this method to prevent annoyances
                // "Better PopUp Blocker" for Chrome http://code.google.com/p/betterpopupblocker/source/browse/trunk/blockStart.js#100
                // Issue: http://code.google.com/p/betterpopupblocker/issues/detail?id=1
                win.scrollTo(originalScrollLeft, originalScrollTop);
            }
        }
    };


    wysihtml5.views.Composer.prototype.style = function () {
        var that = this,
            originalActiveElement = doc.querySelector(":focus"),
            textareaElement = this.textarea.element,
            hasPlaceholder = textareaElement.hasAttribute("placeholder"),
            originalPlaceholder = hasPlaceholder && textareaElement.getAttribute("placeholder");
        this.focusStylesHost = this.focusStylesHost || HOST_TEMPLATE.cloneNode(false);
        this.blurStylesHost = this.blurStylesHost || HOST_TEMPLATE.cloneNode(false);

        // Remove placeholder before copying (as the placeholder has an affect on the computed style)
        if (hasPlaceholder) {
            textareaElement.removeAttribute("placeholder");
        }

        if (textareaElement === originalActiveElement) {
            textareaElement.blur();
        }

        // --------- iframe styles (has to be set before editor styles, otherwise IE9 sets wrong fontFamily on blurStylesHost) ---------
        dom.copyStyles(BOX_FORMATTING).from(textareaElement).to(this.iframe).andTo(this.blurStylesHost);

        // --------- editor styles ---------
        dom.copyStyles(TEXT_FORMATTING).from(textareaElement).to(this.element).andTo(this.blurStylesHost);

        // --------- apply standard rules ---------
        dom.insertCSS(ADDITIONAL_CSS_RULES).into(this.element.ownerDocument);

        // --------- :focus styles ---------
        focusWithoutScrolling(textareaElement);
        dom.copyStyles(BOX_FORMATTING).from(textareaElement).to(this.focusStylesHost);
        dom.copyStyles(TEXT_FORMATTING).from(textareaElement).to(this.focusStylesHost);

        // Make sure that we don't change the display style of the iframe when copying styles oblur/onfocus
        // this is needed for when the change_view event is fired where the iframe is hidden and then
        // the blur event fires and re-displays it
        var boxFormattingStyles = wysihtml5.lang.array(BOX_FORMATTING).without(["display"]);

        // --------- restore focus ---------
        if (originalActiveElement) {
            originalActiveElement.focus();
        } else {
            textareaElement.blur();
        }

        // --------- restore placeholder ---------
        if (hasPlaceholder) {
            textareaElement.setAttribute("placeholder", originalPlaceholder);
        }

        // When copying styles, we only get the computed style which is never returned in percent unit
        // Therefore we've to recalculate style onresize
        if (!wysihtml5.browser.hasCurrentStyleProperty()) {
            var winObserver = dom.observe(win, "resize", function () {
                // Remove event listener if composer doesn't exist anymore
                if (!dom.contains(document.documentElement, that.iframe)) {
                    winObserver.stop();
                    return;
                }
                var originalTextareaDisplayStyle = dom.getStyle("display").from(textareaElement),
                    originalComposerDisplayStyle = dom.getStyle("display").from(that.iframe);
                textareaElement.style.display = "";
                that.iframe.style.display = "none";
                dom.copyStyles(RESIZE_STYLE)
                    .from(textareaElement)
                    .to(that.iframe)
                    .andTo(that.focusStylesHost)
                    .andTo(that.blurStylesHost);
                that.iframe.style.display = originalComposerDisplayStyle;
                textareaElement.style.display = originalTextareaDisplayStyle;
            });
        }

        // --------- Sync focus/blur styles ---------
        this.parent.observe("focus:composer", function () {
            dom.copyStyles(boxFormattingStyles).from(that.focusStylesHost).to(that.iframe);
            dom.copyStyles(TEXT_FORMATTING).from(that.focusStylesHost).to(that.element);
        });

        this.parent.observe("blur:composer", function () {
            dom.copyStyles(boxFormattingStyles).from(that.blurStylesHost).to(that.iframe);
            dom.copyStyles(TEXT_FORMATTING).from(that.blurStylesHost).to(that.element);
        });

        return this;
    };
})(wysihtml5);
/**
 * Taking care of events
 *  - Simulating 'change' event on contentEditable element
 *  - Handling drag & drop logic
 *  - Catch paste events
 *  - Dispatch proprietary newword:composer event
 *  - Keyboard shortcuts
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom,
        browser = wysihtml5.browser,
        /**
         * Map keyCodes to query commands
         */
            shortcuts = {
            "66": "bold",     // B
            "73": "italic",   // I
            "85": "underline" // U
        };

    wysihtml5.views.Composer.prototype.observe = function () {
        var that = this,
            state = this.getValue(),
            iframe = this.sandbox.getIframe(),
            element = this.element,
            focusBlurElement = browser.supportsEventsInIframeCorrectly() ? element : this.sandbox.getWindow(),
        // Firefox < 3.5 doesn't support the drop event, instead it supports a so called "dragdrop" event which behaves almost the same
            pasteEvents = browser.supportsEvent("drop") ? ["drop", "paste"] : ["dragdrop", "paste"];

        // --------- destroy:composer event ---------
        dom.observe(iframe, "DOMNodeRemoved", function () {
            clearInterval(domNodeRemovedInterval);
            that.parent.fire("destroy:composer");
        });

        // DOMNodeRemoved event is not supported in IE 8
        var domNodeRemovedInterval = setInterval(function () {
            if (!dom.contains(document.documentElement, iframe)) {
                clearInterval(domNodeRemovedInterval);
                that.parent.fire("destroy:composer");
            }
        }, 250);


        // --------- Focus & blur logic ---------
        dom.observe(focusBlurElement, "focus", function () {
            that.parent.fire("focus").fire("focus:composer");

            // Delay storing of state until all focus handler are fired
            // especially the one which resets the placeholder
            setTimeout(function () {
                state = that.getValue();
            }, 0);
        });

        dom.observe(focusBlurElement, "blur", function () {
            if (state !== that.getValue()) {
                that.parent.fire("change").fire("change:composer");
            }
            that.parent.fire("blur").fire("blur:composer");
        });

        if (wysihtml5.browser.isIos()) {
            // When on iPad/iPhone/IPod after clicking outside of editor, the editor loses focus
            // but the UI still acts as if the editor has focus (blinking caret and onscreen keyboard visible)
            // We prevent that by focusing a temporary input element which immediately loses focus
            dom.observe(element, "blur", function () {
                var input = element.ownerDocument.createElement("input"),
                    originalScrollTop = document.documentElement.scrollTop || document.body.scrollTop,
                    originalScrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;
                try {
                    that.selection.insertNode(input);
                } catch (e) {
                    element.appendChild(input);
                }
                input.focus();
                input.parentNode.removeChild(input);

                window.scrollTo(originalScrollLeft, originalScrollTop);
            });
        }

        // --------- Drag & Drop logic ---------
        dom.observe(element, "dragenter", function () {
            that.parent.fire("unset_placeholder");
        });

        if (browser.firesOnDropOnlyWhenOnDragOverIsCancelled()) {
            dom.observe(element, ["dragover", "dragenter"], function (event) {
                event.preventDefault();
            });
        }

        dom.observe(element, pasteEvents, function (event) {
            var dataTransfer = event.dataTransfer,
                data;

            if (dataTransfer && browser.supportsDataTransfer()) {
                data = dataTransfer.getData("text/html") || dataTransfer.getData("text/plain");
            }
            if (data) {
                element.focus();
                that.commands.exec("insertHTML", data);
                that.parent.fire("paste").fire("paste:composer");
                event.stopPropagation();
                event.preventDefault();
            } else {
                setTimeout(function () {
                    that.parent.fire("paste").fire("paste:composer");
                }, 0);
            }
        });

        // --------- neword event ---------
        dom.observe(element, "keyup", function (event) {
            var keyCode = event.keyCode;
            if (keyCode === wysihtml5.SPACE_KEY || keyCode === wysihtml5.ENTER_KEY) {
                that.parent.fire("newword:composer");
            }
        });

        this.parent.observe("paste:composer", function () {
            setTimeout(function () {
                that.parent.fire("newword:composer");
            }, 0);
        });

        // --------- Make sure that images are selected when clicking on them ---------
        if (!browser.canSelectImagesInContentEditable()) {
            dom.observe(element, "mousedown", function (event) {
                var target = event.target;
                if (target.nodeName === "IMG") {
                    that.selection.selectNode(target);
                    event.preventDefault();
                }
            });
        }

        // --------- Shortcut logic ---------
        dom.observe(element, "keydown", function (event) {
            var keyCode = event.keyCode,
                command = shortcuts[keyCode];
            if ((event.ctrlKey || event.metaKey) && !event.altKey && command) {
                that.commands.exec(command);
                event.preventDefault();
            }
        });

        // --------- Make sure that when pressing backspace/delete on selected images deletes the image and it's anchor ---------
        dom.observe(element, "keydown", function (event) {
            var target = that.selection.getSelectedNode(true),
                keyCode = event.keyCode,
                parent;
            if (target && target.nodeName === "IMG" && (keyCode === wysihtml5.BACKSPACE_KEY || keyCode === wysihtml5.DELETE_KEY)) { // 8 => backspace, 46 => delete
                parent = target.parentNode;
                // delete the <img>
                parent.removeChild(target);
                // and it's parent <a> too if it hasn't got any other child nodes
                if (parent.nodeName === "A" && !parent.firstChild) {
                    parent.parentNode.removeChild(parent);
                }

                setTimeout(function () {
                    wysihtml5.quirks.redraw(element);
                }, 0);
                event.preventDefault();
            }
        });

        // --------- Show url in tooltip when hovering links or images ---------
        var titlePrefixes = {
            IMG: "Image: ",
            A: "Link: "
        };

        dom.observe(element, "mouseover", function (event) {
            var target = event.target,
                nodeName = target.nodeName,
                title;
            if (nodeName !== "A" && nodeName !== "IMG") {
                return;
            }
            var hasTitle = target.hasAttribute("title");
            if (!hasTitle) {
                title = titlePrefixes[nodeName] + (target.getAttribute("href") || target.getAttribute("src"));
                target.setAttribute("title", title);
            }
        });
    };
})(wysihtml5);
/**
 * Class that takes care that the value of the composer and the textarea is always in sync
 */
(function (wysihtml5) {
    var INTERVAL = 400;

    wysihtml5.views.Synchronizer = Base.extend(
        /** @scope wysihtml5.views.Synchronizer.prototype */ {

            constructor: function (editor, textarea, composer) {
                this.editor = editor;
                this.textarea = textarea;
                this.composer = composer;

                this._observe();
            },

            /**
             * Sync html from composer to textarea
             * Takes care of placeholders
             * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the textarea
             */
            fromComposerToTextarea: function (shouldParseHtml) {
                this.textarea.setValue(wysihtml5.lang.string(this.composer.getValue()).trim(), shouldParseHtml);
            },

            /**
             * Sync value of textarea to composer
             * Takes care of placeholders
             * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the composer
             */
            fromTextareaToComposer: function (shouldParseHtml) {
                var textareaValue = this.textarea.getValue();
                if (textareaValue) {
                    this.composer.setValue(textareaValue, shouldParseHtml);
                } else {
                    this.composer.clear();
                    this.editor.fire("set_placeholder");
                }
            },

            /**
             * Invoke syncing based on view state
             * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the composer/textarea
             */
            sync: function (shouldParseHtml) {
                if (this.editor.currentView.name === "textarea") {
                    this.fromTextareaToComposer(shouldParseHtml);
                } else {
                    this.fromComposerToTextarea(shouldParseHtml);
                }
            },

            /**
             * Initializes interval-based syncing
             * also makes sure that on-submit the composer's content is synced with the textarea
             * immediately when the form gets submitted
             */
            _observe: function () {
                var interval,
                    that = this,
                    form = this.textarea.element.form,
                    startInterval = function () {
                        interval = setInterval(function () {
                            that.fromComposerToTextarea();
                        }, INTERVAL);
                    },
                    stopInterval = function () {
                        clearInterval(interval);
                        interval = null;
                    };

                startInterval();

                if (form) {
                    // If the textarea is in a form make sure that after onreset and onsubmit the composer
                    // has the correct state
                    wysihtml5.dom.observe(form, "submit", function () {
                        that.sync(true);
                    });
                    wysihtml5.dom.observe(form, "reset", function () {
                        setTimeout(function () {
                            that.fromTextareaToComposer();
                        }, 0);
                    });
                }

                this.editor.observe("change_view", function (view) {
                    if (view === "composer" && !interval) {
                        that.fromTextareaToComposer(true);
                        startInterval();
                    } else if (view === "textarea") {
                        that.fromComposerToTextarea(true);
                        stopInterval();
                    }
                });

                this.editor.observe("destroy:composer", stopInterval);
            }
        });
})(wysihtml5);
wysihtml5.views.Textarea = wysihtml5.views.View.extend(
    /** @scope wysihtml5.views.Textarea.prototype */ {
        name: "textarea",

        constructor: function (parent, textareaElement, config) {
            this.base(parent, textareaElement, config);

            this._observe();
        },

        clear: function () {
            this.element.value = "";
        },

        getValue: function (parse) {
            var value = this.isEmpty() ? "" : this.element.value;
            if (parse) {
                value = this.parent.parse(value);
            }
            return value;
        },

        setValue: function (html, parse) {
            if (parse) {
                html = this.parent.parse(html);
            }
            this.element.value = html;
        },

        hasPlaceholderSet: function () {
            var supportsPlaceholder = wysihtml5.browser.supportsPlaceholderAttributeOn(this.element),
                placeholderText = this.element.getAttribute("placeholder") || null,
                value = this.element.value,
                isEmpty = !value;
            return (supportsPlaceholder && isEmpty) || (value === placeholderText);
        },

        isEmpty: function () {
            return !wysihtml5.lang.string(this.element.value).trim() || this.hasPlaceholderSet();
        },

        _observe: function () {
            var element = this.element,
                parent = this.parent,
                eventMapping = {
                    focusin: "focus",
                    focusout: "blur"
                },
                /**
                 * Calling focus() or blur() on an element doesn't synchronously trigger the attached focus/blur events
                 * This is the case for focusin and focusout, so let's use them whenever possible, kkthxbai
                 */
                    events = wysihtml5.browser.supportsEvent("focusin") ? ["focusin", "focusout", "change"] : ["focus", "blur", "change"];

            parent.observe("beforeload", function () {
                wysihtml5.dom.observe(element, events, function (event) {
                    var eventName = eventMapping[event.type] || event.type;
                    parent.fire(eventName).fire(eventName + ":textarea");
                });

                wysihtml5.dom.observe(element, ["paste", "drop"], function () {
                    setTimeout(function () {
                        parent.fire("paste").fire("paste:textarea");
                    }, 0);
                });
            });
        }
    });
/**
 * Toolbar Dialog
 *
 * @param {Element} link The toolbar link which causes the dialog to show up
 * @param {Element} container The dialog container
 *
 * @example
 *    <!-- Toolbar link -->
 *    <a data-wysihtml5-command="insertImage">insert an image</a>
 *
 *    <!-- Dialog -->
 *    <div data-wysihtml5-dialog="insertImage" style="display: none;">
 *      <label>
 *        URL: <input data-wysihtml5-dialog-field="src" value="http://">
 *      </label>
 *      <label>
 *        Alternative text: <input data-wysihtml5-dialog-field="alt" value="">
 *      </label>
 *    </div>
 *
 *    <script>
 *      var dialog = new wysihtml5.toolbar.Dialog(
 *        document.querySelector("[data-wysihtml5-command='insertImage']"),
 *        document.querySelector("[data-wysihtml5-dialog='insertImage']")
 *      );
 *      dialog.observe("save", function(attributes) {
 *        // do something
 *      });
 *    </script>
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom,
        CLASS_NAME_OPENED = "wysihtml5-command-dialog-opened",
        SELECTOR_FORM_ELEMENTS = "input, select, textarea",
        SELECTOR_FIELDS = "[data-wysihtml5-dialog-field]",
        ATTRIBUTE_FIELDS = "data-wysihtml5-dialog-field";


    wysihtml5.toolbar.Dialog = wysihtml5.lang.Dispatcher.extend(
        /** @scope wysihtml5.toolbar.Dialog.prototype */ {
            constructor: function (link, container) {
                this.link = link;
                this.container = container;
            },

            _observe: function () {
                if (this._observed) {
                    return;
                }

                var that = this,
                    callbackWrapper = function (event) {
                        var attributes = that._serialize();
                        if (attributes == that.elementToChange) {
                            that.fire("edit", attributes);
                        } else {
                            that.fire("save", attributes);
                        }
                        that.hide();
                        event.preventDefault();
                        event.stopPropagation();
                    };

                dom.observe(that.link, "click", function (event) {
                    if (dom.hasClass(that.link, CLASS_NAME_OPENED)) {
                        setTimeout(function () {
                            that.hide();
                        }, 0);
                    }
                });

                dom.observe(this.container, "keydown", function (event) {
                    var keyCode = event.keyCode;
                    if (keyCode === wysihtml5.ENTER_KEY) {
                        callbackWrapper(event);
                    }
                    if (keyCode === wysihtml5.ESCAPE_KEY) {
                        that.hide();
                    }
                });

                dom.delegate(this.container, "[data-wysihtml5-dialog-action=save]", "click", callbackWrapper);

                dom.delegate(this.container, "[data-wysihtml5-dialog-action=cancel]", "click", function (event) {
                    that.fire("cancel");
                    that.hide();
                    event.preventDefault();
                    event.stopPropagation();
                });

                var formElements = this.container.querySelectorAll(SELECTOR_FORM_ELEMENTS),
                    i = 0,
                    length = formElements.length,
                    _clearInterval = function () {
                        clearInterval(that.interval);
                    };
                for (; i < length; i++) {
                    dom.observe(formElements[i], "change", _clearInterval);
                }

                this._observed = true;
            },

            /**
             * Grabs all fields in the dialog and puts them in key=>value style in an object which
             * then gets returned
             */
            _serialize: function () {
                var data = this.elementToChange || {},
                    fields = this.container.querySelectorAll(SELECTOR_FIELDS),
                    length = fields.length,
                    i = 0;
                for (; i < length; i++) {
                    data[fields[i].getAttribute(ATTRIBUTE_FIELDS)] = fields[i].value;
                }
                return data;
            },

            /**
             * Takes the attributes of the "elementToChange"
             * and inserts them in their corresponding dialog input fields
             *
             * Assume the "elementToChange" looks like this:
             *    <a href="http://www.google.com" target="_blank">foo</a>
             *
             * and we have the following dialog:
             *    <input type="text" data-wysihtml5-dialog-field="href" value="">
             *    <input type="text" data-wysihtml5-dialog-field="target" value="">
             *
             * after calling _interpolate() the dialog will look like this
             *    <input type="text" data-wysihtml5-dialog-field="href" value="http://www.google.com">
             *    <input type="text" data-wysihtml5-dialog-field="target" value="_blank">
             *
             * Basically it adopted the attribute values into the corresponding input fields
             *
             */
            _interpolate: function (avoidHiddenFields) {
                var field,
                    fieldName,
                    newValue,
                    focusedElement = document.querySelector(":focus"),
                    fields = this.container.querySelectorAll(SELECTOR_FIELDS),
                    length = fields.length,
                    i = 0;
                for (; i < length; i++) {
                    field = fields[i];

                    // Never change elements where the user is currently typing in
                    if (field === focusedElement) {
                        continue;
                    }

                    // Don't update hidden fields
                    // See https://github.com/xing/wysihtml5/pull/14
                    if (avoidHiddenFields && field.type === "hidden") {
                        continue;
                    }

                    fieldName = field.getAttribute(ATTRIBUTE_FIELDS);
                    newValue = this.elementToChange ? (this.elementToChange[fieldName] || "") : field.defaultValue;
                    field.value = newValue;
                }
            },

            /**
             * Show the dialog element
             */
            show: function (elementToChange) {
                var that = this,
                    firstField = this.container.querySelector(SELECTOR_FORM_ELEMENTS);
                this.elementToChange = elementToChange;
                this._observe();
                this._interpolate();
                if (elementToChange) {
                    this.interval = setInterval(function () {
                        that._interpolate(true);
                    }, 500);
                }
                dom.addClass(this.link, CLASS_NAME_OPENED);
                this.container.style.display = "";
                this.fire("show");
                if (firstField && !elementToChange) {
                    try {
                        firstField.focus();
                    } catch (e) {
                    }
                }
            },

            /**
             * Hide the dialog element
             */
            hide: function () {
                clearInterval(this.interval);
                this.elementToChange = null;
                dom.removeClass(this.link, CLASS_NAME_OPENED);
                this.container.style.display = "none";
                this.fire("hide");
            }
        });
})(wysihtml5);
/**
 * Converts speech-to-text and inserts this into the editor
 * As of now (2011/03/25) this only is supported in Chrome >= 11
 *
 * Note that it sends the recorded audio to the google speech recognition api:
 * http://stackoverflow.com/questions/4361826/does-chrome-have-buil-in-speech-recognition-for-input-type-text-x-webkit-speec
 *
 * Current HTML5 draft can be found here
 * http://lists.w3.org/Archives/Public/public-xg-htmlspeech/2011Feb/att-0020/api-draft.html
 *
 * "Accessing Google Speech API Chrome 11"
 * http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/
 */
(function (wysihtml5) {
    var dom = wysihtml5.dom;

    var linkStyles = {
        position: "relative"
    };

    var wrapperStyles = {
        left: 0,
        margin: 0,
        opacity: 0,
        overflow: "hidden",
        padding: 0,
        position: "absolute",
        top: 0,
        zIndex: 1
    };

    var inputStyles = {
        cursor: "inherit",
        fontSize: "50px",
        height: "50px",
        marginTop: "-25px",
        outline: 0,
        padding: 0,
        position: "absolute",
        right: "-4px",
        top: "50%"
    };

    var inputAttributes = {
        "x-webkit-speech": "",
        "speech": ""
    };

    wysihtml5.toolbar.Speech = function (parent, link) {
        var input = document.createElement("input");
        if (!wysihtml5.browser.supportsSpeechApiOn(input)) {
            link.style.display = "none";
            return;
        }

        var wrapper = document.createElement("div");

        wysihtml5.lang.object(wrapperStyles).merge({
            width: link.offsetWidth + "px",
            height: link.offsetHeight + "px"
        });

        dom.insert(input).into(wrapper);
        dom.insert(wrapper).into(link);

        dom.setStyles(inputStyles).on(input);
        dom.setAttributes(inputAttributes).on(input)

        dom.setStyles(wrapperStyles).on(wrapper);
        dom.setStyles(linkStyles).on(link);

        var eventName = "onwebkitspeechchange" in input ? "webkitspeechchange" : "speechchange";
        dom.observe(input, eventName, function () {
            parent.execCommand("insertText", input.value);
            input.value = "";
        });

        dom.observe(input, "click", function (event) {
            if (dom.hasClass(link, "wysihtml5-command-disabled")) {
                event.preventDefault();
            }

            event.stopPropagation();
        });
    };
})(wysihtml5);
/**
 * Toolbar
 *
 * @param {Object} parent Reference to instance of Editor instance
 * @param {Element} container Reference to the toolbar container element
 *
 * @example
 *    <div id="toolbar">
 *      <a data-wysihtml5-command="createLink">insert link</a>
 *      <a data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h1">insert h1</a>
 *    </div>
 *
 *    <script>
 *      var toolbar = new wysihtml5.toolbar.Toolbar(editor, document.getElementById("toolbar"));
 *    </script>
 */
(function (wysihtml5) {
    var CLASS_NAME_COMMAND_DISABLED = "wysihtml5-command-disabled",
        CLASS_NAME_COMMANDS_DISABLED = "wysihtml5-commands-disabled",
        CLASS_NAME_COMMAND_ACTIVE = "wysihtml5-command-active",
        CLASS_NAME_ACTION_ACTIVE = "wysihtml5-action-active",
        dom = wysihtml5.dom;

    wysihtml5.toolbar.Toolbar = Base.extend(
        /** @scope wysihtml5.toolbar.Toolbar.prototype */ {
            constructor: function (editor, container) {
                this.editor = editor;
                this.container = typeof(container) === "string" ? document.getElementById(container) : container;
                this.composer = editor.composer;

                this._getLinks("command");
                this._getLinks("action");

                this._observe();
                this.show();

                var speechInputLinks = this.container.querySelectorAll("[data-wysihtml5-command=insertSpeech]"),
                    length = speechInputLinks.length,
                    i = 0;
                for (; i < length; i++) {
                    new wysihtml5.toolbar.Speech(this, speechInputLinks[i]);
                }
            },

            _getLinks: function (type) {
                var links = this[type + "Links"] = wysihtml5.lang.array(this.container.querySelectorAll("[data-wysihtml5-" + type + "]")).get(),
                    length = links.length,
                    i = 0,
                    mapping = this[type + "Mapping"] = {},
                    link,
                    group,
                    name,
                    value,
                    dialog;
                for (; i < length; i++) {
                    link = links[i];
                    name = link.getAttribute("data-wysihtml5-" + type);
                    value = link.getAttribute("data-wysihtml5-" + type + "-value");
                    group = this.container.querySelector("[data-wysihtml5-" + type + "-group='" + name + "']");
                    dialog = this._getDialog(link, name);

                    mapping[name + ":" + value] = {
                        link: link,
                        group: group,
                        name: name,
                        value: value,
                        dialog: dialog,
                        state: false
                    };
                }
            },

            _getDialog: function (link, command) {
                var that = this,
                    dialogElement = this.container.querySelector("[data-wysihtml5-dialog='" + command + "']"),
                    dialog,
                    caretBookmark;

                if (dialogElement) {
                    dialog = new wysihtml5.toolbar.Dialog(link, dialogElement);

                    dialog.observe("show", function () {
                        caretBookmark = that.composer.selection.getBookmark();

                        that.editor.fire("show:dialog", { command: command, dialogContainer: dialogElement, commandLink: link });
                    });

                    dialog.observe("save", function (attributes) {
                        if (caretBookmark) {
                            that.composer.selection.setBookmark(caretBookmark);
                        }
                        that._execCommand(command, attributes);

                        that.editor.fire("save:dialog", { command: command, dialogContainer: dialogElement, commandLink: link });
                    });

                    dialog.observe("cancel", function () {
                        that.editor.focus(false);
                        that.editor.fire("cancel:dialog", { command: command, dialogContainer: dialogElement, commandLink: link });
                    });
                }
                return dialog;
            },

            /**
             * @example
             *    var toolbar = new wysihtml5.Toolbar();
             *    // Insert a <blockquote> element or wrap current selection in <blockquote>
             *    toolbar.execCommand("formatBlock", "blockquote");
             */
            execCommand: function (command, commandValue) {
                if (this.commandsDisabled) {
                    return;
                }

                var commandObj = this.commandMapping[command + ":" + commandValue];

                // Show dialog when available
                if (commandObj && commandObj.dialog && !commandObj.state) {
                    commandObj.dialog.show();
                } else {
                    this._execCommand(command, commandValue);
                }
            },

            _execCommand: function (command, commandValue) {
                // Make sure that composer is focussed (false => don't move caret to the end)
                this.editor.focus(false);

                this.composer.commands.exec(command, commandValue);
                this._updateLinkStates();
            },

            execAction: function (action) {
                var editor = this.editor;
                switch (action) {
                    case "change_view":
                        if (editor.currentView === editor.textarea) {
                            editor.fire("change_view", "composer");
                        } else {
                            editor.fire("change_view", "textarea");
                        }
                        break;
                }
            },

            _observe: function () {
                var that = this,
                    editor = this.editor,
                    container = this.container,
                    links = this.commandLinks.concat(this.actionLinks),
                    length = links.length,
                    i = 0;

                for (; i < length; i++) {
                    // 'javascript:;' and unselectable=on Needed for IE, but done in all browsers to make sure that all get the same css applied
                    // (you know, a:link { ... } doesn't match anchors with missing href attribute)
                    dom.setAttributes({
                        href: "javascript:;",
                        unselectable: "on"
                    }).on(links[i]);
                }

                // Needed for opera
                dom.delegate(container, "[data-wysihtml5-command]", "mousedown", function (event) {
                    event.preventDefault();
                });

                dom.delegate(container, "[data-wysihtml5-command]", "click", function (event) {
                    var link = this,
                        command = link.getAttribute("data-wysihtml5-command"),
                        commandValue = link.getAttribute("data-wysihtml5-command-value");
                    that.execCommand(command, commandValue);
                    event.preventDefault();
                });

                dom.delegate(container, "[data-wysihtml5-action]", "click", function (event) {
                    var action = this.getAttribute("data-wysihtml5-action");
                    that.execAction(action);
                    event.preventDefault();
                });

                editor.observe("focus:composer", function () {
                    that.bookmark = null;
                    clearInterval(that.interval);
                    that.interval = setInterval(function () {
                        that._updateLinkStates();
                    }, 500);
                });

                editor.observe("blur:composer", function () {
                    clearInterval(that.interval);
                });

                editor.observe("destroy:composer", function () {
                    clearInterval(that.interval);
                });

                editor.observe("change_view", function (currentView) {
                    // Set timeout needed in order to let the blur event fire first
                    setTimeout(function () {
                        that.commandsDisabled = (currentView !== "composer");
                        that._updateLinkStates();
                        if (that.commandsDisabled) {
                            dom.addClass(container, CLASS_NAME_COMMANDS_DISABLED);
                        } else {
                            dom.removeClass(container, CLASS_NAME_COMMANDS_DISABLED);
                        }
                    }, 0);
                });
            },

            _updateLinkStates: function () {
                var element = this.composer.element,
                    commandMapping = this.commandMapping,
                    actionMapping = this.actionMapping,
                    i,
                    state,
                    action,
                    command;
                // every millisecond counts... this is executed quite often
                for (i in commandMapping) {
                    command = commandMapping[i];
                    if (this.commandsDisabled) {
                        state = false;
                        dom.removeClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
                        if (command.group) {
                            dom.removeClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
                        }
                        if (command.dialog) {
                            command.dialog.hide();
                        }
                    } else {
                        state = this.composer.commands.state(command.name, command.value);
                        if (wysihtml5.lang.object(state).isArray()) {
                            // Grab first and only object/element in state array, otherwise convert state into boolean
                            // to avoid showing a dialog for multiple selected elements which may have different attributes
                            // eg. when two links with different href are selected, the state will be an array consisting of both link elements
                            // but the dialog interface can only update one
                            state = state.length === 1 ? state[0] : true;
                        }
                        dom.removeClass(command.link, CLASS_NAME_COMMAND_DISABLED);
                        if (command.group) {
                            dom.removeClass(command.group, CLASS_NAME_COMMAND_DISABLED);
                        }
                    }

                    if (command.state === state) {
                        continue;
                    }

                    command.state = state;
                    if (state) {
                        dom.addClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
                        if (command.group) {
                            dom.addClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
                        }
                        if (command.dialog) {
                            if (typeof(state) === "object") {
                                command.dialog.show(state);
                            } else {
                                command.dialog.hide();
                            }
                        }
                    } else {
                        dom.removeClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
                        if (command.group) {
                            dom.removeClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
                        }
                        if (command.dialog) {
                            command.dialog.hide();
                        }
                    }
                }

                for (i in actionMapping) {
                    action = actionMapping[i];

                    if (action.name === "change_view") {
                        action.state = this.editor.currentView === this.editor.textarea;
                        if (action.state) {
                            dom.addClass(action.link, CLASS_NAME_ACTION_ACTIVE);
                        } else {
                            dom.removeClass(action.link, CLASS_NAME_ACTION_ACTIVE);
                        }
                    }
                }
            },

            show: function () {
                this.container.style.display = "";
            },

            hide: function () {
                this.container.style.display = "none";
            }
        });

})(wysihtml5);
/**
 * WYSIHTML5 Editor
 *
 * @param {Element} textareaElement Reference to the textarea which should be turned into a rich text interface
 * @param {Object} [config] See defaultConfig object below for explanation of each individual config option
 *
 * @events
 *    load
 *    beforeload (for internal use only)
 *    focus
 *    focus:composer
 *    focus:textarea
 *    blur
 *    blur:composer
 *    blur:textarea
 *    change
 *    change:composer
 *    change:textarea
 *    paste
 *    paste:composer
 *    paste:textarea
 *    newword:composer
 *    destroy:composer
 *    undo:composer
 *    redo:composer
 *    beforecommand:composer
 *    aftercommand:composer
 *    change_view
 */
(function (wysihtml5) {
    var undef;

    var defaultConfig = {
        // Give the editor a name, the name will also be set as class name on the iframe and on the iframe's body 
        name: undef,
        // Whether the editor should look like the textarea (by adopting styles)
        style: true,
        // Id of the toolbar element, pass falsey value if you don't want any toolbar logic
        toolbar: undef,
        // Whether urls, entered by the user should automatically become clickable-links
        autoLink: true,
        // Object which includes parser rules to apply when html gets inserted via copy & paste
        // See parser_rules/*.js for examples
        parserRules: { tags: { br: {}, span: {}, div: {}, p: {} }, classes: {} },
        // Parser method to use when the user inserts content via copy & paste
        parser: wysihtml5.dom.parse,
        // Class name which should be set on the contentEditable element in the created sandbox iframe, can be styled via the 'stylesheets' option
        composerClassName: "wysihtml5-editor",
        // Class name to add to the body when the wysihtml5 editor is supported
        bodyClassName: "wysihtml5-supported",
        // Array (or single string) of stylesheet urls to be loaded in the editor's iframe
        stylesheets: [],
        // Placeholder text to use, defaults to the placeholder attribute on the textarea element
        placeholderText: undef,
        // Whether the composer should allow the user to manually resize images, tables etc.
        allowObjectResizing: true,
        // Whether the rich text editor should be rendered on touch devices (wysihtml5 >= 0.3.0 comes with basic support for iOS 5)
        supportTouchDevices: true
    };

    wysihtml5.Editor = wysihtml5.lang.Dispatcher.extend(
        /** @scope wysihtml5.Editor.prototype */ {
            constructor: function (textareaElement, config) {
                this.textareaElement = typeof(textareaElement) === "string" ? document.getElementById(textareaElement) : textareaElement;
                this.config = wysihtml5.lang.object({}).merge(defaultConfig).merge(config).get();
                this.textarea = new wysihtml5.views.Textarea(this, this.textareaElement, this.config);
                this.currentView = this.textarea;
                this._isCompatible = wysihtml5.browser.supported();

                // Sort out unsupported/unwanted browsers here
                if (!this._isCompatible || (!this.config.supportTouchDevices && wysihtml5.browser.isTouchDevice())) {
                    var that = this;
                    setTimeout(function () {
                        that.fire("beforeload").fire("load");
                    }, 0);
                    return;
                }

                // Add class name to body, to indicate that the editor is supported
                wysihtml5.dom.addClass(document.body, this.config.bodyClassName);

                this.composer = new wysihtml5.views.Composer(this, this.textareaElement, this.config);
                this.currentView = this.composer;

                if (typeof(this.config.parser) === "function") {
                    this._initParser();
                }

                this.observe("beforeload", function () {
                    this.synchronizer = new wysihtml5.views.Synchronizer(this, this.textarea, this.composer);
                    if (this.config.toolbar) {
                        this.toolbar = new wysihtml5.toolbar.Toolbar(this, this.config.toolbar);
                    }
                });

                try {
                    console.log("Heya! This page is using wysihtml5 for rich text editing. Check out https://github.com/xing/wysihtml5");
                } catch (e) {
                }
            },

            isCompatible: function () {
                return this._isCompatible;
            },

            clear: function () {
                this.currentView.clear();
                return this;
            },

            getValue: function (parse) {
                return this.currentView.getValue(parse);
            },

            setValue: function (html, parse) {
                if (!html) {
                    return this.clear();
                }
                this.currentView.setValue(html, parse);
                return this;
            },

            focus: function (setToEnd) {
                this.currentView.focus(setToEnd);
                return this;
            },

            /**
             * Deactivate editor (make it readonly)
             */
            disable: function () {
                this.currentView.disable();
                return this;
            },

            /**
             * Activate editor
             */
            enable: function () {
                this.currentView.enable();
                return this;
            },

            isEmpty: function () {
                return this.currentView.isEmpty();
            },

            hasPlaceholderSet: function () {
                return this.currentView.hasPlaceholderSet();
            },

            parse: function (htmlOrElement) {
                var returnValue = this.config.parser(htmlOrElement, this.config.parserRules, this.composer.sandbox.getDocument(), true);
                if (typeof(htmlOrElement) === "object") {
                    wysihtml5.quirks.redraw(htmlOrElement);
                }
                return returnValue;
            },

            /**
             * Prepare html parser logic
             *  - Observes for paste and drop
             */
            _initParser: function () {
                this.observe("paste:composer", function () {
                    var keepScrollPosition = true,
                        that = this;
                    that.composer.selection.executeAndRestore(function () {
                        wysihtml5.quirks.cleanPastedHTML(that.composer.element);
                        that.parse(that.composer.element);
                    }, keepScrollPosition);
                });

                this.observe("paste:textarea", function () {
                    var value = this.textarea.getValue(),
                        newValue;
                    newValue = this.parse(value);
                    this.textarea.setValue(newValue);
                });
            }
        });
})(wysihtml5);
!function ($, wysi) {
    "use strict";

    var tpl = {
        "font-styles": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li class='dropdown'>" +
                "<a class='btn default dropdown-toggle" + size + "' data-toggle='dropdown' href='#'>" +
                "<i class='fa fa-font'></i>&nbsp;<span class='current-font'>" + locale.font_styles.normal + "</span>&nbsp;<i class='fa fa-angle-down'></i>" +
                "</a>" +
                "<ul class='dropdown-menu'>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div' tabindex='-1'>" + locale.font_styles.normal + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1' tabindex='-1'>" + locale.font_styles.h1 + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2' tabindex='-1'>" + locale.font_styles.h2 + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3' tabindex='-1'>" + locale.font_styles.h3 + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>" + locale.font_styles.h4 + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h5'>" + locale.font_styles.h5 + "</a></li>" +
                "<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h6'>" + locale.font_styles.h6 + "</a></li>" +
                "</ul>" +
                "</li>";
        },

        "emphasis": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li>" +
                "<div class='btn-group'>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='bold' title='CTRL+B' tabindex='-1'>" + locale.emphasis.bold + "</a>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='italic' title='CTRL+I' tabindex='-1'>" + locale.emphasis.italic + "</a>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='underline' title='CTRL+U' tabindex='-1'>" + locale.emphasis.underline + "</a>" +
                "</div>" +
                "</li>";
        },

        "lists": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li>" +
                "<div class='btn-group'>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='insertUnorderedList' title='" + locale.lists.unordered + "' tabindex='-1'><i class='fa fa-list'></i></a>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='insertOrderedList' title='" + locale.lists.ordered + "' tabindex='-1'><i class='fa fa-th-list'></i></a>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='Outdent' title='" + locale.lists.outdent + "' tabindex='-1'><i class='fa fa-outdent'></i></a>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='Indent' title='" + locale.lists.indent + "' tabindex='-1'><i class='fa fa-indent'></i></a>" +
                "</div>" +
                "</li>";
        },

        "link": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li>" +
                "<div class='bootstrap-wysihtml5-insert-link-modal modal fade'>" +
                " <div class='modal-dialog'>" +
                " <div class='modal-content'>" +
                "<div class='modal-header'>" +
                "<a class='close' data-dismiss='modal'></a>" +
                "<h4 class='modal-title'>" + locale.link.insert + "</h4>" +
                "</div>" +
                "<div class='modal-body'>" +
                "<input type='text' value='http://' class='bootstrap-wysihtml5-insert-link-url1 form-control large'>" +
                "<label style='margin-top:5px;'> <input type='checkbox' class='bootstrap-wysihtml5-insert-link-target' checked>" + locale.link.target + "</label>" +
                "</div>" +
                "<div class='modal-footer'>" +
                "<a href='#' class='btn default' data-dismiss='modal'>" + locale.link.cancel + "</a>" +
                "<a href='#' class='btn btn-primary green' data-dismiss='modal'>" + locale.link.insert + "</a>" +
                "</div>" +
                "</div>" +
                "</div>" +
                "</div>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='createLink' title='" + locale.link.insert + "' tabindex='-1'><i class='fa fa-share'></i></a>" +
                "</li>";
        },

        "image": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li>" +
                "<div class='bootstrap-wysihtml5-insert-image-modal modal fade'>" +
                " <div class='modal-dialog'>" +
                " <div class='modal-content'>" +
                "<div class='modal-header'>" +
                "<a class='close' data-dismiss='modal'></a>" +
                "<h4 class='modal-title'>" + locale.image.insert + "</h4>" +
                "</div>" +
                "<div class='modal-body'>" +
                "<input type='text' value='http://' class='bootstrap-wysihtml5-insert-image-url form-control large'>" +
                "</div>" +
                "<div class='modal-footer'>" +
                "<a href='#' class='btn default' data-dismiss='modal'>" + locale.image.cancel + "</a>" +
                "<a href='#' class='btn btn-primary green' data-dismiss='modal'>" + locale.image.insert + "</a>" +
                "</div>" +
                "</div>" +
                "</div>" +
                "</div>" +
                "<a class='btn default" + size + "' data-wysihtml5-command='insertImage' title='" + locale.image.insert + "' tabindex='-1'><i class='fa fa-picture-o'></i></a>" +
                "</li>";
        },

        "html": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li>" +
                "<div class='btn-group'>" +
                "<a class='btn default" + size + "' data-wysihtml5-action='change_view' title='" + locale.html.edit + "' tabindex='-1'><i class='fa fa-pencil'></i></a>" +
                "</div>" +
                "</li>";
        },

        "color": function (locale, options) {
            var size = (options && options.size) ? ' btn-' + options.size : '';
            return "<li class='dropdown'>" +
                "<a class='btn default dropdown-toggle" + size + "' data-toggle='dropdown' href='#' tabindex='-1'>" +
                "<span class='current-color'>" + locale.colours.black + "</span>&nbsp;<i class='fa fa-angle-down'></i>" +
                "</a>" +
                "<ul class='dropdown-menu'>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='black'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='black'>" + locale.colours.black + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='silver'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='silver'>" + locale.colours.silver + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='gray'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='gray'>" + locale.colours.gray + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='maroon'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='maroon'>" + locale.colours.maroon + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='red'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='red'>" + locale.colours.red + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='purple'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='purple'>" + locale.colours.purple + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='green'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='green'>" + locale.colours.green + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='olive'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='olive'>" + locale.colours.olive + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='navy'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='navy'>" + locale.colours.navy + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='blue'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='blue'>" + locale.colours.blue + "</a></li>" +
                "<li><div class='wysihtml5-colors' data-wysihtml5-command-value='orange'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='orange'>" + locale.colours.orange + "</a></li>" +
                "</ul>" +
                "</li>";
        }
    };

    var templates = function (key, locale, options) {
        return tpl[key](locale, options);
    };


    var Wysihtml5 = function (el, options) {
        this.el = el;
        var toolbarOpts = options || defaultOptions;
        for (var t in toolbarOpts.customTemplates) {
            tpl[t] = toolbarOpts.customTemplates[t];
        }
        this.toolbar = this.createToolbar(el, toolbarOpts);
        this.editor = this.createEditor(options);

        window.editor = this.editor;

        $('iframe.wysihtml5-sandbox').each(function (i, el) {
            $(el.contentWindow).off('focus.wysihtml5').on({
                'focus.wysihtml5': function () {
                    $('li.dropdown').removeClass('open');
                }
            });
        });
    };

    Wysihtml5.prototype = {

        constructor: Wysihtml5,

        createEditor: function (options) {
            options = options || {};

            // Add the toolbar to a clone of the options object so multiple instances
            // of the WYISYWG don't break because "toolbar" is already defined
            options = $.extend(true, {}, options);
            options.toolbar = this.toolbar[0];

            var editor = new wysi.Editor(this.el[0], options);

            if (options && options.events) {
                for (var eventName in options.events) {
                    editor.on(eventName, options.events[eventName]);
                }
            }
            return editor;
        },

        createToolbar: function (el, options) {
            var self = this;
            var toolbar = $("<ul/>", {
                'class': "wysihtml5-toolbar",
                'style': "display:none"
            });
            var culture = options.locale || defaultOptions.locale || "en";
            for (var key in defaultOptions) {
                var value = false;

                if (options[key] !== undefined) {
                    if (options[key] === true) {
                        value = true;
                    }
                } else {
                    value = defaultOptions[key];
                }

                if (value === true) {
                    toolbar.append(templates(key, locale[culture], options));

                    if (key === "html") {
                        this.initHtml(toolbar);
                    }

                    if (key === "link") {
                        this.initInsertLink(toolbar);
                    }

                    if (key === "image") {
                        this.initInsertImage(toolbar);
                    }
                }
            }

            if (options.toolbar) {
                for (key in options.toolbar) {
                    toolbar.append(options.toolbar[key]);
                }
            }

            toolbar.find("a[data-wysihtml5-command='formatBlock']").click(function (e) {
                var target = e.target || e.srcElement;
                var el = $(target);
                self.toolbar.find('.current-font').text(el.html());
            });

            toolbar.find("a[data-wysihtml5-command='foreColor']").click(function (e) {
                var target = e.target || e.srcElement;
                var el = $(target);
                self.toolbar.find('.current-color').text(el.html());
            });

            this.el.before(toolbar);

            return toolbar;
        },

        initHtml: function (toolbar) {
            var changeViewSelector = "a[data-wysihtml5-action='change_view']";
            toolbar.find(changeViewSelector).click(function (e) {
                toolbar.find('a.btn').not(changeViewSelector).toggleClass('disabled');
            });
        },

        initInsertImage: function (toolbar) {
            var self = this;
            var insertImageModal = toolbar.find('.bootstrap-wysihtml5-insert-image-modal');
            var urlInput = insertImageModal.find('.bootstrap-wysihtml5-insert-image-url');
            var insertButton = insertImageModal.find('a.btn-primary');
            var initialValue = urlInput.val();
            var caretBookmark;

            var insertImage = function () {
                var url = urlInput.val();
                urlInput.val(initialValue);
                self.editor.currentView.element.focus();
                if (caretBookmark) {
                    self.editor.composer.selection.setBookmark(caretBookmark);
                    caretBookmark = null;
                }
                self.editor.composer.commands.exec("insertImage", url);
            };

            urlInput.keypress(function (e) {
                if (e.which == 13) {
                    insertImage();
                    insertImageModal.modal('hide');
                }
            });

            insertButton.click(insertImage);

            insertImageModal.on('shown', function () {
                urlInput.focus();
            });

            insertImageModal.on('hide', function () {
                self.editor.currentView.element.focus();
            });

            toolbar.find('a[data-wysihtml5-command=insertImage]').click(function () {
                var activeButton = $(this).hasClass("wysihtml5-command-active");

                if (!activeButton) {
                    self.editor.currentView.element.focus(false);
                    caretBookmark = self.editor.composer.selection.getBookmark();
                    insertImageModal.appendTo('body').modal('show');
                    insertImageModal.on('click.dismiss.modal', '[data-dismiss="modal"]', function (e) {
                        e.stopPropagation();
                    });
                    return false;
                }
                else {
                    return true;
                }
            });
        },

        initInsertLink: function (toolbar) {
            var self = this;
            var insertLinkModal = toolbar.find('.bootstrap-wysihtml5-insert-link-modal');
            var urlInput = insertLinkModal.find('.bootstrap-wysihtml5-insert-link-url');
            var targetInput = insertLinkModal.find('.bootstrap-wysihtml5-insert-link-target');
            var insertButton = insertLinkModal.find('a.btn-primary');
            var initialValue = urlInput.val();
            var caretBookmark;

            var insertLink = function () {
                var url = urlInput.val();
                urlInput.val(initialValue);
                self.editor.currentView.element.focus();
                if (caretBookmark) {
                    self.editor.composer.selection.setBookmark(caretBookmark);
                    caretBookmark = null;
                }

                var newWindow = targetInput.prop("checked");
                self.editor.composer.commands.exec("createLink", {
                    'href': url,
                    'target': (newWindow ? '_blank' : '_self'),
                    'rel': (newWindow ? 'nofollow' : '')
                });
            };
            var pressedEnter = false;

            urlInput.keypress(function (e) {
                if (e.which == 13) {
                    insertLink();
                    insertLinkModal.modal('hide');
                }
            });

            insertButton.click(insertLink);

            insertLinkModal.on('shown', function () {
                urlInput.focus();
            });

            insertLinkModal.on('hide', function () {
                self.editor.currentView.element.focus();
            });

            toolbar.find('a[data-wysihtml5-command=createLink]').click(function () {
                var activeButton = $(this).hasClass("wysihtml5-command-active");

                if (!activeButton) {
                    self.editor.currentView.element.focus(false);
                    caretBookmark = self.editor.composer.selection.getBookmark();
                    insertLinkModal.appendTo('body').modal('show');
                    App.initUniform(); //initialize uniform checkboxes
                    insertLinkModal.on('click.dismiss.modal', '[data-dismiss="modal"]', function (e) {
                        e.stopPropagation();
                    });
                    return false;
                }
                else {
                    return true;
                }
            });
        }
    };

    // these define our public api
    var methods = {
        resetDefaults: function () {
            $.fn.wysihtml5.defaultOptions = $.extend(true, {}, $.fn.wysihtml5.defaultOptionsCache);
        },
        bypassDefaults: function (options) {
            return this.each(function () {
                var $this = $(this);
                $this.data('wysihtml5', new Wysihtml5($this, options));
            });
        },
        shallowExtend: function (options) {
            var settings = $.extend({}, $.fn.wysihtml5.defaultOptions, options || {}, $(this).data());
            var that = this;
            return methods.bypassDefaults.apply(that, [settings]);
        },
        deepExtend: function (options) {
            var settings = $.extend(true, {}, $.fn.wysihtml5.defaultOptions, options || {});
            var that = this;
            return methods.bypassDefaults.apply(that, [settings]);
        },
        init: function (options) {
            var that = this;
            return methods.shallowExtend.apply(that, [options]);
        }
    };

    $.fn.wysihtml5 = function (method) {
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.wysihtml5');
        }
    };

    $.fn.wysihtml5.Constructor = Wysihtml5;

    var defaultOptions = $.fn.wysihtml5.defaultOptions = {
        "font-styles": true,
        "color": false,
        "emphasis": true,
        "lists": true,
        "html": false,
        "link": true,
        "image": true,
        events: {},
        parserRules: {
            classes: {
                // (path_to_project/lib/css/wysiwyg-color.css)
                "wysiwyg-color-silver": 1,
                "wysiwyg-color-gray": 1,
                "wysiwyg-color-white": 1,
                "wysiwyg-color-maroon": 1,
                "wysiwyg-color-red": 1,
                "wysiwyg-color-purple": 1,
                "wysiwyg-color-fuchsia": 1,
                "wysiwyg-color-green": 1,
                "wysiwyg-color-lime": 1,
                "wysiwyg-color-olive": 1,
                "wysiwyg-color-yellow": 1,
                "wysiwyg-color-navy": 1,
                "wysiwyg-color-blue": 1,
                "wysiwyg-color-teal": 1,
                "wysiwyg-color-aqua": 1,
                "wysiwyg-color-orange": 1
            },
            tags: {
                "b": {},
                "i": {},
                "br": {},
                "ol": {},
                "ul": {},
                "li": {},
                "h1": {},
                "h2": {},
                "h3": {},
                "h4": {},
                "h5": {},
                "h6": {},
                "blockquote": {},
                "u": 1,
                "img": {
                    "check_attributes": {
                        "width": "numbers",
                        "alt": "alt",
                        "src": "url",
                        "height": "numbers"
                    }
                },
                "a": {
                    check_attributes: {
                        'href': "url", // important to avoid XSS
                        'target': 'alt',
                        'rel': 'alt'
                    }
                },
                "span": 1,
                "div": 1,
                // to allow save and edit files with code tag hacks
                "code": 1,
                "pre": 1
            }
        },
        stylesheets: ["./wysiwyg-color.css"], // (path_to_project/lib/css/wysiwyg-color.css)
        locale: "en"
    };

    if (typeof $.fn.wysihtml5.defaultOptionsCache === 'undefined') {
        $.fn.wysihtml5.defaultOptionsCache = $.extend(true, {}, $.fn.wysihtml5.defaultOptions);
    }

    var locale = $.fn.wysihtml5.locale = {
        en: {
            font_styles: {
                normal: "Normal text",
                h1: "Heading 1",
                h2: "Heading 2",
                h3: "Heading 3",
                h4: "Heading 4",
                h5: "Heading 5",
                h6: "Heading 6"
            },
            emphasis: {
                bold: "Bold",
                italic: "Italic",
                underline: "Underline"
            },
            lists: {
                unordered: "Unordered list",
                ordered: "Ordered list",
                outdent: "Outdent",
                indent: "Indent"
            },
            link: {
                insert: "Insert link",
                cancel: "Cancel",
                target: "Open link in new window"
            },
            image: {
                insert: "Insert image",
                cancel: "Cancel"
            },
            html: {
                edit: "Edit HTML"
            },
            colours: {
                black: "Black",
                silver: "Silver",
                gray: "Grey",
                maroon: "Maroon",
                red: "Red",
                purple: "Purple",
                green: "Green",
                olive: "Olive",
                navy: "Navy",
                blue: "Blue",
                orange: "Orange"
            }
        }
    };

}(window.jQuery, window.wysihtml5);

﻿/*
 Copyright (c) 2003-2013, CKSource - Frederico Knabben. All rights reserved.
 For licensing, see LICENSE.html or http://ckeditor.com/license
 */
(function () {
    if (window.CKEDITOR && window.CKEDITOR.dom)return;
    window.CKEDITOR || (window.CKEDITOR = function () {
        var b = {timestamp: "D08E", version: "4.0.1", revision: "d02739be4b", rnd: Math.floor(900 * Math.random()) + 100, _: {pending: []}, status: "unloaded", basePath: function () {
            var a = window.CKEDITOR_BASEPATH || "";
            if (!a)for (var b = document.getElementsByTagName("script"), d = 0; d < b.length; d++) {
                var c = b[d].src.match(/(^|.*[\\\/])ckeditor(?:_basic)?(?:_source)?.js(?:\?.*)?$/i);
                if (c) {
                    a = c[1];
                    break
                }
            }
            -1 == a.indexOf(":/") && (a = 0 === a.indexOf("/") ? location.href.match(/^.*?:\/\/[^\/]*/)[0] + a : location.href.match(/^[^\?]*\/(?:)/)[0] +
                a);
            if (!a)throw'The CKEditor installation path could not be automatically detected. Please set the global variable "CKEDITOR_BASEPATH" before creating editor instances.';
            return a
        }(), getUrl: function (a) {
            -1 == a.indexOf(":/") && 0 !== a.indexOf("/") && (a = this.basePath + a);
            this.timestamp && ("/" != a.charAt(a.length - 1) && !/[&?]t=/.test(a)) && (a += (0 <= a.indexOf("?") ? "&" : "?") + "t=" + this.timestamp);
            return a
        }, domReady: function () {
            function a() {
                try {
                    document.addEventListener ? (document.removeEventListener("DOMContentLoaded", a,
                        !1), b()) : document.attachEvent && "complete" === document.readyState && (document.detachEvent("onreadystatechange", a), b())
                } catch (d) {
                }
            }

            function b() {
                for (var a; a = d.shift();)a()
            }

            var d = [];
            return function (b) {
                d.push(b);
                "complete" === document.readyState && setTimeout(a, 1);
                if (1 == d.length)if (document.addEventListener)document.addEventListener("DOMContentLoaded", a, !1), window.addEventListener("load", a, !1); else if (document.attachEvent) {
                    document.attachEvent("onreadystatechange", a);
                    window.attachEvent("onload", a);
                    b = !1;
                    try {
                        b = !window.frameElement
                    } catch (e) {
                    }
                    if (document.documentElement.doScroll && b) {
                        var c = function () {
                            try {
                                document.documentElement.doScroll("left")
                            } catch (b) {
                                setTimeout(c, 1);
                                return
                            }
                            a()
                        };
                        c()
                    }
                }
            }
        }()}, c = window.CKEDITOR_GETURL;
        if (c) {
            var a = b.url;
            b.url = function (f) {
                return c.call(b, f) || a.call(b, f)
            }
        }
        return b
    }());
    CKEDITOR.event || (CKEDITOR.event = function () {
    }, CKEDITOR.event.implementOn = function (b) {
        var c = CKEDITOR.event.prototype, a;
        for (a in c)b[a] == void 0 && (b[a] = c[a])
    }, CKEDITOR.event.prototype = function () {
        function b(f) {
            var b = c(this);
            return b[f] || (b[f] = new a(f))
        }

        var c = function (a) {
            a = a.getPrivate && a.getPrivate() || a._ || (a._ = {});
            return a.events || (a.events = {})
        }, a = function (a) {
            this.name = a;
            this.listeners = []
        };
        a.prototype = {getListenerIndex: function (a) {
            for (var b = 0, d = this.listeners; b < d.length; b++)if (d[b].fn == a)return b;
            return-1
        }};
        return{define: function (a, e) {
            var d = b.call(this, a);
            CKEDITOR.tools.extend(d, e, true)
        }, on: function (a, e, d, c, k) {
            function h(b, l, o, n) {
                b = {name: a, sender: this, editor: b, data: l, listenerData: c, stop: o, cancel: n, removeListener: m};
                return e.call(d, b) === false ? false : b.data
            }

            function m() {
                o.removeListener(a, e)
            }

            var n = b.call(this, a);
            if (n.getListenerIndex(e) < 0) {
                n = n.listeners;
                d || (d = this);
                isNaN(k) && (k = 10);
                var o = this;
                h.fn = e;
                h.priority = k;
                for (var l = n.length - 1; l >= 0; l--)if (n[l].priority <= k) {
                    n.splice(l + 1, 0, h);
                    return{removeListener: m}
                }
                n.unshift(h)
            }
            return{removeListener: m}
        },
            once: function () {
                var a = arguments[1];
                arguments[1] = function (b) {
                    b.removeListener();
                    return a.apply(this, arguments)
                };
                return this.on.apply(this, arguments)
            }, capture: function () {
                CKEDITOR.event.useCapture = 1;
                var a = this.on.apply(this, arguments);
                CKEDITOR.event.useCapture = 0;
                return a
            }, fire: function () {
                var a = 0, b = function () {
                    a = 1
                }, d = 0, g = function () {
                    d = 1
                };
                return function (k, h, m) {
                    var n = c(this)[k], k = a, o = d;
                    a = d = 0;
                    if (n) {
                        var l = n.listeners;
                        if (l.length)for (var l = l.slice(0), j, q = 0; q < l.length; q++) {
                            if (n.errorProof)try {
                                j = l[q].call(this,
                                    m, h, b, g)
                            } catch (y) {
                            } else j = l[q].call(this, m, h, b, g);
                            j === false ? d = 1 : typeof j != "undefined" && (h = j);
                            if (a || d)break
                        }
                    }
                    h = d ? false : typeof h == "undefined" ? true : h;
                    a = k;
                    d = o;
                    return h
                }
            }(), fireOnce: function (a, b, d) {
                b = this.fire(a, b, d);
                delete c(this)[a];
                return b
            }, removeListener: function (a, b) {
                var d = c(this)[a];
                if (d) {
                    var g = d.getListenerIndex(b);
                    g >= 0 && d.listeners.splice(g, 1)
                }
            }, removeAllListeners: function () {
                var a = c(this), b;
                for (b in a)delete a[b]
            }, hasListeners: function (a) {
                return(a = c(this)[a]) && a.listeners.length > 0
            }}
    }());
    CKEDITOR.editor || (CKEDITOR.editor = function () {
        CKEDITOR._.pending.push([this, arguments]);
        CKEDITOR.event.call(this)
    }, CKEDITOR.editor.prototype.fire = function (b, c) {
        b in{instanceReady: 1, loaded: 1} && (this[b] = true);
        return CKEDITOR.event.prototype.fire.call(this, b, c, this)
    }, CKEDITOR.editor.prototype.fireOnce = function (b, c) {
        b in{instanceReady: 1, loaded: 1} && (this[b] = true);
        return CKEDITOR.event.prototype.fireOnce.call(this, b, c, this)
    }, CKEDITOR.event.implementOn(CKEDITOR.editor.prototype));
    CKEDITOR.env || (CKEDITOR.env = function () {
        var b = navigator.userAgent.toLowerCase(), c = window.opera, a = {ie: eval("/*@cc_on!@*/false"), opera: !!c && c.version, webkit: b.indexOf(" applewebkit/") > -1, air: b.indexOf(" adobeair/") > -1, mac: b.indexOf("macintosh") > -1, quirks: document.compatMode == "BackCompat", mobile: b.indexOf("mobile") > -1, iOS: /(ipad|iphone|ipod)/.test(b), isCustomDomain: function () {
            if (!this.ie)return false;
            var a = document.domain, b = window.location.hostname;
            return a != b && a != "[" + b + "]"
        }, secure: location.protocol ==
            "https:"};
        a.gecko = navigator.product == "Gecko" && !a.webkit && !a.opera;
        if (a.webkit)b.indexOf("chrome") > -1 ? a.chrome = true : a.safari = true;
        var f = 0;
        if (a.ie) {
            f = a.quirks || !document.documentMode ? parseFloat(b.match(/msie (\d+)/)[1]) : document.documentMode;
            a.ie9Compat = f == 9;
            a.ie8Compat = f == 8;
            a.ie7Compat = f == 7;
            a.ie6Compat = f < 7 || a.quirks
        }
        if (a.gecko) {
            var e = b.match(/rv:([\d\.]+)/);
            if (e) {
                e = e[1].split(".");
                f = e[0] * 1E4 + (e[1] || 0) * 100 + (e[2] || 0) * 1
            }
        }
        a.opera && (f = parseFloat(c.version()));
        a.air && (f = parseFloat(b.match(/ adobeair\/(\d+)/)[1]));
        a.webkit && (f = parseFloat(b.match(/ applewebkit\/(\d+)/)[1]));
        a.version = f;
        a.isCompatible = a.iOS && f >= 534 || !a.mobile && (a.ie && f > 6 || a.gecko && f >= 10801 || a.opera && f >= 9.5 || a.air && f >= 1 || a.webkit && f >= 522 || false);
        a.cssClass = "cke_browser_" + (a.ie ? "ie" : a.gecko ? "gecko" : a.opera ? "opera" : a.webkit ? "webkit" : "unknown");
        if (a.quirks)a.cssClass = a.cssClass + " cke_browser_quirks";
        if (a.ie) {
            a.cssClass = a.cssClass + (" cke_browser_ie" + (a.quirks || a.version < 7 ? "6" : a.version));
            if (a.quirks)a.cssClass = a.cssClass + " cke_browser_iequirks"
        }
        if (a.gecko)if (f <
            10900)a.cssClass = a.cssClass + " cke_browser_gecko18"; else if (f <= 11E3)a.cssClass = a.cssClass + " cke_browser_gecko19";
        if (a.air)a.cssClass = a.cssClass + " cke_browser_air";
        return a
    }());
    "unloaded" == CKEDITOR.status && function () {
        CKEDITOR.event.implementOn(CKEDITOR);
        CKEDITOR.loadFullCore = function () {
            if (CKEDITOR.status != "basic_ready")CKEDITOR.loadFullCore._load = 1; else {
                delete CKEDITOR.loadFullCore;
                var b = document.createElement("script");
                b.type = "text/javascript";
                b.src = CKEDITOR.basePath + "ckeditor.js";
                document.getElementsByTagName("head")[0].appendChild(b)
            }
        };
        CKEDITOR.loadFullCoreTimeout = 0;
        CKEDITOR.add = function (b) {
            (this._.pending || (this._.pending = [])).push(b)
        };
        (function () {
            CKEDITOR.domReady(function () {
                var b =
                    CKEDITOR.loadFullCore, c = CKEDITOR.loadFullCoreTimeout;
                if (b) {
                    CKEDITOR.status = "basic_ready";
                    b && b._load ? b() : c && setTimeout(function () {
                        CKEDITOR.loadFullCore && CKEDITOR.loadFullCore()
                    }, c * 1E3)
                }
            })
        })();
        CKEDITOR.status = "basic_loaded"
    }();
    CKEDITOR.dom = {};
    (function () {
        var b = [], c = CKEDITOR.env.gecko ? "-moz-" : CKEDITOR.env.webkit ? "-webkit-" : CKEDITOR.env.opera ? "-o-" : CKEDITOR.env.ie ? "-ms-" : "";
        CKEDITOR.on("reset", function () {
            b = []
        });
        CKEDITOR.tools = {arrayCompare: function (a, b) {
            if (!a && !b)return true;
            if (!a || !b || a.length != b.length)return false;
            for (var e = 0; e < a.length; e++)if (a[e] != b[e])return false;
            return true
        }, clone: function (a) {
            var b;
            if (a && a instanceof Array) {
                b = [];
                for (var e = 0; e < a.length; e++)b[e] = this.clone(a[e]);
                return b
            }
            if (a === null || typeof a != "object" || a instanceof
                String || a instanceof Number || a instanceof Boolean || a instanceof Date || a instanceof RegExp)return a;
            b = new a.constructor;
            for (e in a)b[e] = this.clone(a[e]);
            return b
        }, capitalize: function (a) {
            return a.charAt(0).toUpperCase() + a.substring(1).toLowerCase()
        }, extend: function (a) {
            var b = arguments.length, e, d;
            if (typeof(e = arguments[b - 1]) == "boolean")b--; else if (typeof(e = arguments[b - 2]) == "boolean") {
                d = arguments[b - 1];
                b = b - 2
            }
            for (var c = 1; c < b; c++) {
                var k = arguments[c], h;
                for (h in k)if (e === true || a[h] == void 0)if (!d || h in d)a[h] =
                    k[h]
            }
            return a
        }, prototypedCopy: function (a) {
            var b = function () {
            };
            b.prototype = a;
            return new b
        }, isArray: function (a) {
            return!!a && a instanceof Array
        }, isEmpty: function (a) {
            for (var b in a)if (a.hasOwnProperty(b))return false;
            return true
        }, cssVendorPrefix: function (a, b, e) {
            if (e)return c + a + ":" + b + ";" + a + ":" + b;
            e = {};
            e[a] = b;
            e[c + a] = b;
            return e
        }, cssStyleToDomStyle: function () {
            var a = document.createElement("div").style, b = typeof a.cssFloat != "undefined" ? "cssFloat" : typeof a.styleFloat != "undefined" ? "styleFloat" : "float";
            return function (a) {
                return a ==
                    "float" ? b : a.replace(/-./g, function (a) {
                    return a.substr(1).toUpperCase()
                })
            }
        }(), buildStyleHtml: function (a) {
            for (var a = [].concat(a), b, e = [], c = 0; c < a.length; c++)if (b = a[c])/@import|[{}]/.test(b) ? e.push("<style>" + b + "</style>") : e.push('<link type="text/css" rel=stylesheet href="' + b + '">');
            return e.join("")
        }, htmlEncode: function (a) {
            return("" + a).replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;")
        }, htmlEncodeAttr: function (a) {
            return a.replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }, getNextNumber: function () {
            var a =
                0;
            return function () {
                return++a
            }
        }(), getNextId: function () {
            return"cke_" + this.getNextNumber()
        }, override: function (a, b) {
            var e = b(a);
            e.prototype = a.prototype;
            return e
        }, setTimeout: function (a, b, e, c, g) {
            g || (g = window);
            e || (e = g);
            return g.setTimeout(function () {
                c ? a.apply(e, [].concat(c)) : a.apply(e)
            }, b || 0)
        }, trim: function () {
            var a = /(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g;
            return function (b) {
                return b.replace(a, "")
            }
        }(), ltrim: function () {
            var a = /^[ \t\n\r]+/g;
            return function (b) {
                return b.replace(a, "")
            }
        }(), rtrim: function () {
            var a = /[ \t\n\r]+$/g;
            return function (b) {
                return b.replace(a, "")
            }
        }(), indexOf: function (a, b) {
            if (typeof b == "function")for (var c = 0, d = a.length; c < d; c++) {
                if (b(a[c]))return c
            } else {
                if (a.indexOf)return a.indexOf(b);
                c = 0;
                for (d = a.length; c < d; c++)if (a[c] === b)return c
            }
            return-1
        }, search: function (a, b) {
            var c = CKEDITOR.tools.indexOf(a, b);
            return c >= 0 ? a[c] : null
        }, bind: function (a, b) {
            return function () {
                return a.apply(b, arguments)
            }
        }, createClass: function (a) {
            var b = a.$, c = a.base, d = a.privates || a._, g = a.proto, a = a.statics;
            !b && (b = function () {
                c && this.base.apply(this,
                    arguments)
            });
            if (d)var k = b, b = function () {
                var a = this._ || (this._ = {}), b;
                for (b in d) {
                    var f = d[b];
                    a[b] = typeof f == "function" ? CKEDITOR.tools.bind(f, this) : f
                }
                k.apply(this, arguments)
            };
            if (c) {
                b.prototype = this.prototypedCopy(c.prototype);
                b.prototype.constructor = b;
                b.base = c;
                b.baseProto = c.prototype;
                b.prototype.base = function () {
                    this.base = c.prototype.base;
                    c.apply(this, arguments);
                    this.base = arguments.callee
                }
            }
            g && this.extend(b.prototype, g, true);
            a && this.extend(b, a, true);
            return b
        }, addFunction: function (a, f) {
            return b.push(function () {
                return a.apply(f ||
                    this, arguments)
            }) - 1
        }, removeFunction: function (a) {
            b[a] = null
        }, callFunction: function (a) {
            var f = b[a];
            return f && f.apply(window, Array.prototype.slice.call(arguments, 1))
        }, cssLength: function () {
            var a = /^-?\d+\.?\d*px$/, b;
            return function (c) {
                b = CKEDITOR.tools.trim(c + "") + "px";
                return a.test(b) ? b : c || ""
            }
        }(), convertToPx: function () {
            var a;
            return function (b) {
                if (!a) {
                    a = CKEDITOR.dom.element.createFromHtml('<div style="position:absolute;left:-9999px;top:-9999px;margin:0px;padding:0px;border:0px;"></div>', CKEDITOR.document);
                    CKEDITOR.document.getBody().append(a)
                }
                if (!/%$/.test(b)) {
                    a.setStyle("width", b);
                    return a.$.clientWidth
                }
                return b
            }
        }(), repeat: function (a, b) {
            return Array(b + 1).join(a)
        }, tryThese: function () {
            for (var a, b = 0, c = arguments.length; b < c; b++) {
                var d = arguments[b];
                try {
                    a = d();
                    break
                } catch (g) {
                }
            }
            return a
        }, genKey: function () {
            return Array.prototype.slice.call(arguments).join("-")
        }, defer: function (a) {
            return function () {
                var b = arguments, c = this;
                window.setTimeout(function () {
                    a.apply(c, b)
                }, 0)
            }
        }, normalizeCssText: function (a, b) {
            var c = [],
                d, g = CKEDITOR.tools.parseCssText(a, true, b);
            for (d in g)c.push(d + ":" + g[d]);
            c.sort();
            return c.length ? c.join(";") + ";" : ""
        }, convertRgbToHex: function (a) {
            return a.replace(/(?:rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\))/gi, function (a, b, c, g) {
                a = [b, c, g];
                for (b = 0; b < 3; b++)a[b] = ("0" + parseInt(a[b], 10).toString(16)).slice(-2);
                return"#" + a.join("")
            })
        }, parseCssText: function (a, b, c) {
            var d = {};
            if (c) {
                c = new CKEDITOR.dom.element("span");
                c.setAttribute("style", a);
                a = CKEDITOR.tools.convertRgbToHex(c.getAttribute("style") || "")
            }
            if (!a ||
                a == ";")return d;
            a.replace(/&quot;/g, '"').replace(/\s*([^:;\s]+)\s*:\s*([^;]+)\s*(?=;|$)/g, function (a, c, e) {
                if (b) {
                    c = c.toLowerCase();
                    c == "font-family" && (e = e.toLowerCase().replace(/["']/g, "").replace(/\s*,\s*/g, ","));
                    e = CKEDITOR.tools.trim(e)
                }
                d[c] = e
            });
            return d
        }}
    })();
    CKEDITOR.dtd = function () {
        var b = CKEDITOR.tools.extend, c = function (a, b) {
            for (var f = CKEDITOR.tools.clone(a), l = 1; l < arguments.length; l++) {
                var b = arguments[l], j;
                for (j in b)delete f[j]
            }
            return f
        }, a = {}, f = {}, e = {address: 1, article: 1, aside: 1, blockquote: 1, details: 1, div: 1, dl: 1, fieldset: 1, figure: 1, footer: 1, form: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, header: 1, hgroup: 1, hr: 1, menu: 1, nav: 1, ol: 1, p: 1, pre: 1, section: 1, table: 1, ul: 1}, d = {command: 1, link: 1, meta: 1, noscript: 1, script: 1, style: 1}, g = {}, k = {"#": 1}, h = {center: 1, dir: 1, noframes: 1};
        b(a, {a: 1, abbr: 1, area: 1, audio: 1, b: 1, bdi: 1, bdo: 1, br: 1, button: 1, canvas: 1, cite: 1, code: 1, command: 1, datalist: 1, del: 1, dfn: 1, em: 1, embed: 1, i: 1, iframe: 1, img: 1, input: 1, ins: 1, kbd: 1, keygen: 1, label: 1, map: 1, mark: 1, meter: 1, noscript: 1, object: 1, output: 1, progress: 1, q: 1, ruby: 1, s: 1, samp: 1, script: 1, select: 1, small: 1, span: 1, strong: 1, sub: 1, sup: 1, textarea: 1, time: 1, u: 1, "var": 1, video: 1, wbr: 1}, k, {acronym: 1, applet: 1, basefont: 1, big: 1, font: 1, isindex: 1, strike: 1, style: 1, tt: 1});
        b(f, e, a, h);
        c = {a: c(a, {a: 1, button: 1}), abbr: a, address: f,
            area: g, article: b({style: 1}, f), aside: b({style: 1}, f), audio: b({source: 1, track: 1}, f), b: a, base: g, bdi: a, bdo: a, blockquote: f, body: f, br: g, button: c(a, {a: 1, button: 1}), canvas: a, caption: f, cite: a, code: a, col: g, colgroup: {col: 1}, command: g, datalist: b({option: 1}, a), dd: f, del: a, details: b({summary: 1}, f), dfn: a, div: b({style: 1}, f), dl: {dt: 1, dd: 1}, dt: f, em: a, embed: g, fieldset: b({legend: 1}, f), figcaption: f, figure: b({figcaption: 1}, f), footer: f, form: f, h1: a, h2: a, h3: a, h4: a, h5: a, h6: a, head: b({title: 1, base: 1}, d), header: f, hgroup: {h1: 1,
                h2: 1, h3: 1, h4: 1, h5: 1, h6: 1}, hr: g, html: b({head: 1, body: 1}, f, d), i: a, iframe: k, img: g, input: g, ins: a, kbd: a, keygen: g, label: a, legend: a, li: f, link: g, map: f, mark: a, menu: b({li: 1}, f), meta: g, meter: c(a, {meter: 1}), nav: f, noscript: b({link: 1, meta: 1, style: 1}, a), object: b({param: 1}, a), ol: {li: 1}, optgroup: {option: 1}, option: k, output: a, p: a, param: g, pre: a, progress: c(a, {progress: 1}), q: a, rp: a, rt: a, ruby: b({rp: 1, rt: 1}, a), s: a, samp: a, script: k, section: b({style: 1}, f), select: {optgroup: 1, option: 1}, small: a, source: g, span: a, strong: a, style: k,
            sub: a, summary: a, sup: a, table: {caption: 1, colgroup: 1, thead: 1, tfoot: 1, tbody: 1, tr: 1}, tbody: {tr: 1}, td: f, textarea: k, tfoot: {tr: 1}, th: f, thead: {tr: 1}, time: c(a, {time: 1}), title: k, tr: {th: 1, td: 1}, track: g, u: a, ul: {li: 1}, "var": a, video: b({source: 1, track: 1}, f), wbr: g, acronym: a, applet: b({param: 1}, f), basefont: g, big: a, center: f, dialog: g, dir: {li: 1}, font: a, isindex: g, noframes: f, strike: a, tt: a};
        b(c, {$block: b({audio: 1, dd: 1, dt: 1, li: 1, video: 1}, e, h), $blockLimit: {article: 1, aside: 1, audio: 1, body: 1, caption: 1, details: 1, dir: 1, div: 1, dl: 1,
            fieldset: 1, figure: 1, footer: 1, form: 1, header: 1, hgroup: 1, menu: 1, nav: 1, ol: 1, section: 1, table: 1, td: 1, th: 1, tr: 1, ul: 1, video: 1}, $cdata: {script: 1, style: 1}, $editable: {address: 1, article: 1, aside: 1, blockquote: 1, body: 1, details: 1, div: 1, fieldset: 1, footer: 1, form: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, header: 1, hgroup: 1, nav: 1, p: 1, pre: 1, section: 1}, $empty: {area: 1, base: 1, basefont: 1, br: 1, col: 1, command: 1, dialog: 1, embed: 1, hr: 1, img: 1, input: 1, isindex: 1, keygen: 1, link: 1, meta: 1, param: 1, source: 1, track: 1, wbr: 1}, $inline: a, $list: {dl: 1, ol: 1,
            ul: 1}, $listItem: {dd: 1, dt: 1, li: 1}, $nonBodyContent: b({body: 1, head: 1, html: 1}, c.head), $nonEditable: {applet: 1, audio: 1, button: 1, embed: 1, iframe: 1, map: 1, object: 1, option: 1, param: 1, script: 1, textarea: 1, video: 1}, $object: {applet: 1, audio: 1, button: 1, hr: 1, iframe: 1, img: 1, input: 1, object: 1, select: 1, table: 1, textarea: 1, video: 1}, $removeEmpty: {abbr: 1, acronym: 1, b: 1, bdi: 1, bdo: 1, big: 1, cite: 1, code: 1, del: 1, dfn: 1, em: 1, font: 1, i: 1, ins: 1, label: 1, kbd: 1, mark: 1, meter: 1, output: 1, q: 1, ruby: 1, s: 1, samp: 1, small: 1, span: 1, strike: 1, strong: 1,
            sub: 1, sup: 1, time: 1, tt: 1, u: 1, "var": 1}, $tabIndex: {a: 1, area: 1, button: 1, input: 1, object: 1, select: 1, textarea: 1}, $tableContent: {caption: 1, col: 1, colgroup: 1, tbody: 1, td: 1, tfoot: 1, th: 1, thead: 1, tr: 1}, $transparent: {a: 1, audio: 1, canvas: 1, del: 1, ins: 1, map: 1, noscript: 1, object: 1, video: 1}, $intermediate: {caption: 1, colgroup: 1, dd: 1, dt: 1, figcaption: 1, legend: 1, li: 1, optgroup: 1, option: 1, rp: 1, rt: 1, summary: 1, tbody: 1, td: 1, tfoot: 1, th: 1, thead: 1, tr: 1}});
        return c
    }();
    CKEDITOR.dom.event = function (b) {
        this.$ = b
    };
    CKEDITOR.dom.event.prototype = {getKey: function () {
        return this.$.keyCode || this.$.which
    }, getKeystroke: function () {
        var b = this.getKey();
        if (this.$.ctrlKey || this.$.metaKey)b = b + CKEDITOR.CTRL;
        this.$.shiftKey && (b = b + CKEDITOR.SHIFT);
        this.$.altKey && (b = b + CKEDITOR.ALT);
        return b
    }, preventDefault: function (b) {
        var c = this.$;
        c.preventDefault ? c.preventDefault() : c.returnValue = false;
        b && this.stopPropagation()
    }, stopPropagation: function () {
        var b = this.$;
        b.stopPropagation ? b.stopPropagation() : b.cancelBubble = true
    }, getTarget: function () {
        var b =
            this.$.target || this.$.srcElement;
        return b ? new CKEDITOR.dom.node(b) : null
    }, getPhase: function () {
        return this.$.eventPhase || 2
    }, getPageOffset: function () {
        var b = this.getTarget().getDocument().$;
        return{x: this.$.pageX || this.$.clientX + (b.documentElement.scrollLeft || b.body.scrollLeft), y: this.$.pageY || this.$.clientY + (b.documentElement.scrollTop || b.body.scrollTop)}
    }};
    CKEDITOR.CTRL = 1114112;
    CKEDITOR.SHIFT = 2228224;
    CKEDITOR.ALT = 4456448;
    CKEDITOR.EVENT_PHASE_CAPTURING = 1;
    CKEDITOR.EVENT_PHASE_AT_TARGET = 2;
    CKEDITOR.EVENT_PHASE_BUBBLING = 3;
    CKEDITOR.dom.domObject = function (b) {
        if (b)this.$ = b
    };
    CKEDITOR.dom.domObject.prototype = function () {
        var b = function (b, a) {
            return function (f) {
                typeof CKEDITOR != "undefined" && b.fire(a, new CKEDITOR.dom.event(f))
            }
        };
        return{getPrivate: function () {
            var b;
            if (!(b = this.getCustomData("_")))this.setCustomData("_", b = {});
            return b
        }, on: function (c) {
            var a = this.getCustomData("_cke_nativeListeners");
            if (!a) {
                a = {};
                this.setCustomData("_cke_nativeListeners", a)
            }
            if (!a[c]) {
                a = a[c] = b(this, c);
                this.$.addEventListener ? this.$.addEventListener(c, a, !!CKEDITOR.event.useCapture) : this.$.attachEvent &&
                    this.$.attachEvent("on" + c, a)
            }
            return CKEDITOR.event.prototype.on.apply(this, arguments)
        }, removeListener: function (b) {
            CKEDITOR.event.prototype.removeListener.apply(this, arguments);
            if (!this.hasListeners(b)) {
                var a = this.getCustomData("_cke_nativeListeners"), f = a && a[b];
                if (f) {
                    this.$.removeEventListener ? this.$.removeEventListener(b, f, false) : this.$.detachEvent && this.$.detachEvent("on" + b, f);
                    delete a[b]
                }
            }
        }, removeAllListeners: function () {
            var b = this.getCustomData("_cke_nativeListeners"), a;
            for (a in b) {
                var f = b[a];
                this.$.detachEvent ?
                    this.$.detachEvent("on" + a, f) : this.$.removeEventListener && this.$.removeEventListener(a, f, false);
                delete b[a]
            }
        }}
    }();
    (function (b) {
        var c = {};
        CKEDITOR.on("reset", function () {
            c = {}
        });
        b.equals = function (a) {
            try {
                return a && a.$ === this.$
            } catch (b) {
                return false
            }
        };
        b.setCustomData = function (a, b) {
            var e = this.getUniqueId();
            (c[e] || (c[e] = {}))[a] = b;
            return this
        };
        b.getCustomData = function (a) {
            var b = this.$["data-cke-expando"];
            return(b = b && c[b]) && a in b ? b[a] : null
        };
        b.removeCustomData = function (a) {
            var b = this.$["data-cke-expando"], b = b && c[b], e, d;
            if (b) {
                e = b[a];
                d = a in b;
                delete b[a]
            }
            return d ? e : null
        };
        b.clearCustomData = function () {
            this.removeAllListeners();
            var a = this.$["data-cke-expando"];
            a && delete c[a]
        };
        b.getUniqueId = function () {
            return this.$["data-cke-expando"] || (this.$["data-cke-expando"] = CKEDITOR.tools.getNextNumber())
        };
        CKEDITOR.event.implementOn(b)
    })(CKEDITOR.dom.domObject.prototype);
    CKEDITOR.dom.node = function (b) {
        return b ? new CKEDITOR.dom[b.nodeType == CKEDITOR.NODE_DOCUMENT ? "document" : b.nodeType == CKEDITOR.NODE_ELEMENT ? "element" : b.nodeType == CKEDITOR.NODE_TEXT ? "text" : b.nodeType == CKEDITOR.NODE_COMMENT ? "comment" : b.nodeType == CKEDITOR.NODE_DOCUMENT_FRAGMENT ? "documentFragment" : "domObject"](b) : this
    };
    CKEDITOR.dom.node.prototype = new CKEDITOR.dom.domObject;
    CKEDITOR.NODE_ELEMENT = 1;
    CKEDITOR.NODE_DOCUMENT = 9;
    CKEDITOR.NODE_TEXT = 3;
    CKEDITOR.NODE_COMMENT = 8;
    CKEDITOR.NODE_DOCUMENT_FRAGMENT = 11;
    CKEDITOR.POSITION_IDENTICAL = 0;
    CKEDITOR.POSITION_DISCONNECTED = 1;
    CKEDITOR.POSITION_FOLLOWING = 2;
    CKEDITOR.POSITION_PRECEDING = 4;
    CKEDITOR.POSITION_IS_CONTAINED = 8;
    CKEDITOR.POSITION_CONTAINS = 16;
    CKEDITOR.tools.extend(CKEDITOR.dom.node.prototype, {appendTo: function (b, c) {
        b.append(this, c);
        return b
    }, clone: function (b, c) {
        var a = this.$.cloneNode(b), f = function (a) {
            a["data-cke-expando"] && (a["data-cke-expando"] = false);
            if (a.nodeType == CKEDITOR.NODE_ELEMENT) {
                c || a.removeAttribute("id", false);
                if (b)for (var a = a.childNodes, d = 0; d < a.length; d++)f(a[d])
            }
        };
        f(a);
        return new CKEDITOR.dom.node(a)
    }, hasPrevious: function () {
        return!!this.$.previousSibling
    }, hasNext: function () {
        return!!this.$.nextSibling
    }, insertAfter: function (b) {
        b.$.parentNode.insertBefore(this.$,
            b.$.nextSibling);
        return b
    }, insertBefore: function (b) {
        b.$.parentNode.insertBefore(this.$, b.$);
        return b
    }, insertBeforeMe: function (b) {
        this.$.parentNode.insertBefore(b.$, this.$);
        return b
    }, getAddress: function (b) {
        for (var c = [], a = this.getDocument().$.documentElement, f = this.$; f && f != a;) {
            var e = f.parentNode;
            e && c.unshift(this.getIndex.call({$: f}, b));
            f = e
        }
        return c
    }, getDocument: function () {
        return new CKEDITOR.dom.document(this.$.ownerDocument || this.$.parentNode.ownerDocument)
    }, getIndex: function (b) {
        var c = this.$, a = -1,
            f;
        if (!this.$.parentNode)return a;
        do if (!b || !(c != this.$ && c.nodeType == CKEDITOR.NODE_TEXT && (f || !c.nodeValue))) {
            a++;
            f = c.nodeType == CKEDITOR.NODE_TEXT
        } while (c = c.previousSibling);
        return a
    }, getNextSourceNode: function (b, c, a) {
        if (a && !a.call)var f = a, a = function (a) {
            return!a.equals(f)
        };
        var b = !b && this.getFirst && this.getFirst(), e;
        if (!b) {
            if (this.type == CKEDITOR.NODE_ELEMENT && a && a(this, true) === false)return null;
            b = this.getNext()
        }
        for (; !b && (e = (e || this).getParent());) {
            if (a && a(e, true) === false)return null;
            b = e.getNext()
        }
        return!b ||
            a && a(b) === false ? null : c && c != b.type ? b.getNextSourceNode(false, c, a) : b
    }, getPreviousSourceNode: function (b, c, a) {
        if (a && !a.call)var f = a, a = function (a) {
            return!a.equals(f)
        };
        var b = !b && this.getLast && this.getLast(), e;
        if (!b) {
            if (this.type == CKEDITOR.NODE_ELEMENT && a && a(this, true) === false)return null;
            b = this.getPrevious()
        }
        for (; !b && (e = (e || this).getParent());) {
            if (a && a(e, true) === false)return null;
            b = e.getPrevious()
        }
        return!b || a && a(b) === false ? null : c && b.type != c ? b.getPreviousSourceNode(false, c, a) : b
    }, getPrevious: function (b) {
        var c =
            this.$, a;
        do a = (c = c.previousSibling) && c.nodeType != 10 && new CKEDITOR.dom.node(c); while (a && b && !b(a));
        return a
    }, getNext: function (b) {
        var c = this.$, a;
        do a = (c = c.nextSibling) && new CKEDITOR.dom.node(c); while (a && b && !b(a));
        return a
    }, getParent: function (b) {
        var c = this.$.parentNode;
        return c && (c.nodeType == CKEDITOR.NODE_ELEMENT || b && c.nodeType == CKEDITOR.NODE_DOCUMENT_FRAGMENT) ? new CKEDITOR.dom.node(c) : null
    }, getParents: function (b) {
        var c = this, a = [];
        do a[b ? "push" : "unshift"](c); while (c = c.getParent());
        return a
    }, getCommonAncestor: function (b) {
        if (b.equals(this))return this;
        if (b.contains && b.contains(this))return b;
        var c = this.contains ? this : this.getParent();
        do if (c.contains(b))return c; while (c = c.getParent());
        return null
    }, getPosition: function (b) {
        var c = this.$, a = b.$;
        if (c.compareDocumentPosition)return c.compareDocumentPosition(a);
        if (c == a)return CKEDITOR.POSITION_IDENTICAL;
        if (this.type == CKEDITOR.NODE_ELEMENT && b.type == CKEDITOR.NODE_ELEMENT) {
            if (c.contains) {
                if (c.contains(a))return CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_PRECEDING;
                if (a.contains(c))return CKEDITOR.POSITION_IS_CONTAINED +
                    CKEDITOR.POSITION_FOLLOWING
            }
            if ("sourceIndex"in c)return c.sourceIndex < 0 || a.sourceIndex < 0 ? CKEDITOR.POSITION_DISCONNECTED : c.sourceIndex < a.sourceIndex ? CKEDITOR.POSITION_PRECEDING : CKEDITOR.POSITION_FOLLOWING
        }
        for (var c = this.getAddress(), b = b.getAddress(), a = Math.min(c.length, b.length), f = 0; f <= a - 1; f++)if (c[f] != b[f]) {
            if (f < a)return c[f] < b[f] ? CKEDITOR.POSITION_PRECEDING : CKEDITOR.POSITION_FOLLOWING;
            break
        }
        return c.length < b.length ? CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_PRECEDING : CKEDITOR.POSITION_IS_CONTAINED +
            CKEDITOR.POSITION_FOLLOWING
    }, getAscendant: function (b, c) {
        var a = this.$, f;
        if (!c)a = a.parentNode;
        for (; a;) {
            if (a.nodeName && (f = a.nodeName.toLowerCase(), typeof b == "string" ? f == b : f in b))return new CKEDITOR.dom.node(a);
            a = a.parentNode
        }
        return null
    }, hasAscendant: function (b, c) {
        var a = this.$;
        if (!c)a = a.parentNode;
        for (; a;) {
            if (a.nodeName && a.nodeName.toLowerCase() == b)return true;
            a = a.parentNode
        }
        return false
    }, move: function (b, c) {
        b.append(this.remove(), c)
    }, remove: function (b) {
        var c = this.$, a = c.parentNode;
        if (a) {
            if (b)for (; b =
                             c.firstChild;)a.insertBefore(c.removeChild(b), c);
            a.removeChild(c)
        }
        return this
    }, replace: function (b) {
        this.insertBefore(b);
        b.remove()
    }, trim: function () {
        this.ltrim();
        this.rtrim()
    }, ltrim: function () {
        for (var b; this.getFirst && (b = this.getFirst());) {
            if (b.type == CKEDITOR.NODE_TEXT) {
                var c = CKEDITOR.tools.ltrim(b.getText()), a = b.getLength();
                if (c) {
                    if (c.length < a) {
                        b.split(a - c.length);
                        this.$.removeChild(this.$.firstChild)
                    }
                } else {
                    b.remove();
                    continue
                }
            }
            break
        }
    }, rtrim: function () {
        for (var b; this.getLast && (b = this.getLast());) {
            if (b.type ==
                CKEDITOR.NODE_TEXT) {
                var c = CKEDITOR.tools.rtrim(b.getText()), a = b.getLength();
                if (c) {
                    if (c.length < a) {
                        b.split(c.length);
                        this.$.lastChild.parentNode.removeChild(this.$.lastChild)
                    }
                } else {
                    b.remove();
                    continue
                }
            }
            break
        }
        if (!CKEDITOR.env.ie && !CKEDITOR.env.opera)(b = this.$.lastChild) && (b.type == 1 && b.nodeName.toLowerCase() == "br") && b.parentNode.removeChild(b)
    }, isReadOnly: function () {
        var b = this;
        this.type != CKEDITOR.NODE_ELEMENT && (b = this.getParent());
        if (b && typeof b.$.isContentEditable != "undefined")return!(b.$.isContentEditable ||
            b.data("cke-editable"));
        for (; b;) {
            if (b.data("cke-editable"))break;
            if (b.getAttribute("contentEditable") == "false")return true;
            if (b.getAttribute("contentEditable") == "true")break;
            b = b.getParent()
        }
        return!b
    }});
    CKEDITOR.dom.window = function (b) {
        CKEDITOR.dom.domObject.call(this, b)
    };
    CKEDITOR.dom.window.prototype = new CKEDITOR.dom.domObject;
    CKEDITOR.tools.extend(CKEDITOR.dom.window.prototype, {focus: function () {
        this.$.focus()
    }, getViewPaneSize: function () {
        var b = this.$.document, c = b.compatMode == "CSS1Compat";
        return{width: (c ? b.documentElement.clientWidth : b.body.clientWidth) || 0, height: (c ? b.documentElement.clientHeight : b.body.clientHeight) || 0}
    }, getScrollPosition: function () {
        var b = this.$;
        if ("pageXOffset"in b)return{x: b.pageXOffset || 0, y: b.pageYOffset || 0};
        b = b.document;
        return{x: b.documentElement.scrollLeft || b.body.scrollLeft || 0, y: b.documentElement.scrollTop ||
            b.body.scrollTop || 0}
    }, getFrame: function () {
        var b = this.$.frameElement;
        return b ? new CKEDITOR.dom.element.get(b) : null
    }});
    CKEDITOR.dom.document = function (b) {
        CKEDITOR.dom.domObject.call(this, b)
    };
    CKEDITOR.dom.document.prototype = new CKEDITOR.dom.domObject;
    CKEDITOR.tools.extend(CKEDITOR.dom.document.prototype, {type: CKEDITOR.NODE_DOCUMENT, appendStyleSheet: function (b) {
        if (this.$.createStyleSheet)this.$.createStyleSheet(b); else {
            var c = new CKEDITOR.dom.element("link");
            c.setAttributes({rel: "stylesheet", type: "text/css", href: b});
            this.getHead().append(c)
        }
    }, appendStyleText: function (b) {
        if (this.$.createStyleSheet) {
            var c = this.$.createStyleSheet("");
            c.cssText = b
        } else {
            var a = new CKEDITOR.dom.element("style", this);
            a.append(new CKEDITOR.dom.text(b, this));
            this.getHead().append(a)
        }
        return c ||
            a.$.sheet
    }, createElement: function (b, c) {
        var a = new CKEDITOR.dom.element(b, this);
        if (c) {
            c.attributes && a.setAttributes(c.attributes);
            c.styles && a.setStyles(c.styles)
        }
        return a
    }, createText: function (b) {
        return new CKEDITOR.dom.text(b, this)
    }, focus: function () {
        this.getWindow().focus()
    }, getActive: function () {
        return new CKEDITOR.dom.element(this.$.activeElement)
    }, getById: function (b) {
        return(b = this.$.getElementById(b)) ? new CKEDITOR.dom.element(b) : null
    }, getByAddress: function (b, c) {
        for (var a = this.$.documentElement, f =
            0; a && f < b.length; f++) {
            var e = b[f];
            if (c)for (var d = -1, g = 0; g < a.childNodes.length; g++) {
                var k = a.childNodes[g];
                if (!(c === true && k.nodeType == 3 && k.previousSibling && k.previousSibling.nodeType == 3)) {
                    d++;
                    if (d == e) {
                        a = k;
                        break
                    }
                }
            } else a = a.childNodes[e]
        }
        return a ? new CKEDITOR.dom.node(a) : null
    }, getElementsByTag: function (b, c) {
        if ((!CKEDITOR.env.ie || document.documentMode > 8) && c)b = c + ":" + b;
        return new CKEDITOR.dom.nodeList(this.$.getElementsByTagName(b))
    }, getHead: function () {
        var b = this.$.getElementsByTagName("head")[0];
        return b =
            b ? new CKEDITOR.dom.element(b) : this.getDocumentElement().append(new CKEDITOR.dom.element("head"), true)
    }, getBody: function () {
        return new CKEDITOR.dom.element(this.$.body)
    }, getDocumentElement: function () {
        return new CKEDITOR.dom.element(this.$.documentElement)
    }, getWindow: function () {
        var b = new CKEDITOR.dom.window(this.$.parentWindow || this.$.defaultView);
        return(this.getWindow = function () {
            return b
        })()
    }, write: function (b) {
        this.$.open("text/html", "replace");
        CKEDITOR.env.isCustomDomain() && (this.$.domain = document.domain);
        this.$.write(b);
        this.$.close()
    }});
    CKEDITOR.dom.nodeList = function (b) {
        this.$ = b
    };
    CKEDITOR.dom.nodeList.prototype = {count: function () {
        return this.$.length
    }, getItem: function (b) {
        if (b < 0 || b >= this.$.length)return null;
        return(b = this.$[b]) ? new CKEDITOR.dom.node(b) : null
    }};
    CKEDITOR.dom.element = function (b, c) {
        typeof b == "string" && (b = (c ? c.$ : document).createElement(b));
        CKEDITOR.dom.domObject.call(this, b)
    };
    CKEDITOR.dom.element.get = function (b) {
        return(b = typeof b == "string" ? document.getElementById(b) || document.getElementsByName(b)[0] : b) && (b.$ ? b : new CKEDITOR.dom.element(b))
    };
    CKEDITOR.dom.element.prototype = new CKEDITOR.dom.node;
    CKEDITOR.dom.element.createFromHtml = function (b, c) {
        var a = new CKEDITOR.dom.element("div", c);
        a.setHtml(b);
        return a.getFirst().remove()
    };
    CKEDITOR.dom.element.setMarker = function (b, c, a, f) {
        var e = c.getCustomData("list_marker_id") || c.setCustomData("list_marker_id", CKEDITOR.tools.getNextNumber()).getCustomData("list_marker_id"), d = c.getCustomData("list_marker_names") || c.setCustomData("list_marker_names", {}).getCustomData("list_marker_names");
        b[e] = c;
        d[a] = 1;
        return c.setCustomData(a, f)
    };
    CKEDITOR.dom.element.clearAllMarkers = function (b) {
        for (var c in b)CKEDITOR.dom.element.clearMarkers(b, b[c], 1)
    };
    CKEDITOR.dom.element.clearMarkers = function (b, c, a) {
        var f = c.getCustomData("list_marker_names"), e = c.getCustomData("list_marker_id"), d;
        for (d in f)c.removeCustomData(d);
        c.removeCustomData("list_marker_names");
        if (a) {
            c.removeCustomData("list_marker_id");
            delete b[e]
        }
    };
    (function () {
        function b(a) {
            for (var b = 0, e = 0, d = c[a].length; e < d; e++)b = b + (parseInt(this.getComputedStyle(c[a][e]) || 0, 10) || 0);
            return b
        }

        CKEDITOR.tools.extend(CKEDITOR.dom.element.prototype, {type: CKEDITOR.NODE_ELEMENT, addClass: function (a) {
            var b = this.$.className;
            b && (RegExp("(?:^|\\s)" + a + "(?:\\s|$)", "").test(b) || (b = b + (" " + a)));
            this.$.className = b || a
        }, removeClass: function (a) {
            var b = this.getAttribute("class");
            if (b) {
                a = RegExp("(?:^|\\s+)" + a + "(?=\\s|$)", "i");
                if (a.test(b))(b = b.replace(a, "").replace(/^\s+/, "")) ? this.setAttribute("class",
                    b) : this.removeAttribute("class")
            }
            return this
        }, hasClass: function (a) {
            return RegExp("(?:^|\\s+)" + a + "(?=\\s|$)", "").test(this.getAttribute("class"))
        }, append: function (a, b) {
            typeof a == "string" && (a = this.getDocument().createElement(a));
            b ? this.$.insertBefore(a.$, this.$.firstChild) : this.$.appendChild(a.$);
            return a
        }, appendHtml: function (a) {
            if (this.$.childNodes.length) {
                var b = new CKEDITOR.dom.element("div", this.getDocument());
                b.setHtml(a);
                b.moveChildren(this)
            } else this.setHtml(a)
        }, appendText: function (a) {
            this.$.text != void 0 ? this.$.text = this.$.text + a : this.append(new CKEDITOR.dom.text(a))
        }, appendBogus: function () {
            for (var a = this.getLast(); a && a.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.rtrim(a.getText());)a = a.getPrevious();
            if (!a || !a.is || !a.is("br")) {
                a = CKEDITOR.env.opera ? this.getDocument().createText("") : this.getDocument().createElement("br");
                CKEDITOR.env.gecko && a.setAttribute("type", "_moz");
                this.append(a)
            }
        }, breakParent: function (a) {
            var b = new CKEDITOR.dom.range(this.getDocument());
            b.setStartAfter(this);
            b.setEndAfter(a);
            a = b.extractContents();
            b.insertNode(this.remove());
            a.insertAfterNode(this)
        }, contains: CKEDITOR.env.ie || CKEDITOR.env.webkit ? function (a) {
            var b = this.$;
            return a.type != CKEDITOR.NODE_ELEMENT ? b.contains(a.getParent().$) : b != a.$ && b.contains(a.$)
        } : function (a) {
            return!!(this.$.compareDocumentPosition(a.$) & 16)
        }, focus: function () {
            function a() {
                try {
                    this.$.focus()
                } catch (a) {
                }
            }

            return function (b) {
                b ? CKEDITOR.tools.setTimeout(a, 100, this) : a.call(this)
            }
        }(), getHtml: function () {
            var a = this.$.innerHTML;
            return CKEDITOR.env.ie ? a.replace(/<\?[^>]*>/g,
                "") : a
        }, getOuterHtml: function () {
            if (this.$.outerHTML)return this.$.outerHTML.replace(/<\?[^>]*>/, "");
            var a = this.$.ownerDocument.createElement("div");
            a.appendChild(this.$.cloneNode(true));
            return a.innerHTML
        }, getClientRect: function () {
            var a = CKEDITOR.tools.extend({}, this.$.getBoundingClientRect());
            !a.width && (a.width = a.right - a.left);
            !a.height && (a.height = a.bottom - a.top);
            return a
        }, setHtml: function () {
            var a = function (a) {
                return this.$.innerHTML = a
            };
            return CKEDITOR.env.ie && CKEDITOR.env.version < 9 ? function (a) {
                try {
                    return this.$.innerHTML =
                        a
                } catch (b) {
                    this.$.innerHTML = "";
                    var c = new CKEDITOR.dom.element("body", this.getDocument());
                    c.$.innerHTML = a;
                    for (c = c.getChildren(); c.count();)this.append(c.getItem(0));
                    return a
                }
            } : a
        }(), setText: function (a) {
            CKEDITOR.dom.element.prototype.setText = this.$.innerText != void 0 ? function (a) {
                return this.$.innerText = a
            } : function (a) {
                return this.$.textContent = a
            };
            return this.setText(a)
        }, getAttribute: function () {
            var a = function (a) {
                return this.$.getAttribute(a, 2)
            };
            return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ?
                function (a) {
                    switch (a) {
                        case "class":
                            a = "className";
                            break;
                        case "http-equiv":
                            a = "httpEquiv";
                            break;
                        case "name":
                            return this.$.name;
                        case "tabindex":
                            a = this.$.getAttribute(a, 2);
                            a !== 0 && this.$.tabIndex === 0 && (a = null);
                            return a;
                        case "checked":
                            a = this.$.attributes.getNamedItem(a);
                            return(a.specified ? a.nodeValue : this.$.checked) ? "checked" : null;
                        case "hspace":
                        case "value":
                            return this.$[a];
                        case "style":
                            return this.$.style.cssText;
                        case "contenteditable":
                        case "contentEditable":
                            return this.$.attributes.getNamedItem("contentEditable").specified ?
                                this.$.getAttribute("contentEditable") : null
                    }
                    return this.$.getAttribute(a, 2)
                } : a
        }(), getChildren: function () {
            return new CKEDITOR.dom.nodeList(this.$.childNodes)
        }, getComputedStyle: CKEDITOR.env.ie ? function (a) {
            return this.$.currentStyle[CKEDITOR.tools.cssStyleToDomStyle(a)]
        } : function (a) {
            var b = this.getWindow().$.getComputedStyle(this.$, null);
            return b ? b.getPropertyValue(a) : ""
        }, getDtd: function () {
            var a = CKEDITOR.dtd[this.getName()];
            this.getDtd = function () {
                return a
            };
            return a
        }, getElementsByTag: CKEDITOR.dom.document.prototype.getElementsByTag,
            getTabIndex: CKEDITOR.env.ie ? function () {
                var a = this.$.tabIndex;
                a === 0 && (!CKEDITOR.dtd.$tabIndex[this.getName()] && parseInt(this.getAttribute("tabindex"), 10) !== 0) && (a = -1);
                return a
            } : CKEDITOR.env.webkit ? function () {
                var a = this.$.tabIndex;
                if (a == void 0) {
                    a = parseInt(this.getAttribute("tabindex"), 10);
                    isNaN(a) && (a = -1)
                }
                return a
            } : function () {
                return this.$.tabIndex
            }, getText: function () {
                return this.$.textContent || this.$.innerText || ""
            }, getWindow: function () {
                return this.getDocument().getWindow()
            }, getId: function () {
                return this.$.id ||
                    null
            }, getNameAtt: function () {
                return this.$.name || null
            }, getName: function () {
                var a = this.$.nodeName.toLowerCase();
                if (CKEDITOR.env.ie && !(document.documentMode > 8)) {
                    var b = this.$.scopeName;
                    b != "HTML" && (a = b.toLowerCase() + ":" + a)
                }
                return(this.getName = function () {
                    return a
                })()
            }, getValue: function () {
                return this.$.value
            }, getFirst: function (a) {
                var b = this.$.firstChild;
                (b = b && new CKEDITOR.dom.node(b)) && (a && !a(b)) && (b = b.getNext(a));
                return b
            }, getLast: function (a) {
                var b = this.$.lastChild;
                (b = b && new CKEDITOR.dom.node(b)) && (a && !a(b)) &&
                (b = b.getPrevious(a));
                return b
            }, getStyle: function (a) {
                return this.$.style[CKEDITOR.tools.cssStyleToDomStyle(a)]
            }, is: function () {
                var a = this.getName();
                if (typeof arguments[0] == "object")return!!arguments[0][a];
                for (var b = 0; b < arguments.length; b++)if (arguments[b] == a)return true;
                return false
            }, isEditable: function (a) {
                var b = this.getName();
                if (this.isReadOnly() || this.getComputedStyle("display") == "none" || this.getComputedStyle("visibility") == "hidden" || CKEDITOR.dtd.$nonEditable[b] || CKEDITOR.dtd.$empty[b] || this.is("a") &&
                    (this.data("cke-saved-name") || this.hasAttribute("name")) && !this.getChildCount())return false;
                if (a !== false) {
                    a = CKEDITOR.dtd[b] || CKEDITOR.dtd.span;
                    return!(!a || !a["#"])
                }
                return true
            }, isIdentical: function (a) {
                var b = this.clone(0, 1), a = a.clone(0, 1);
                b.removeAttributes(["_moz_dirty", "data-cke-expando", "data-cke-saved-href", "data-cke-saved-name"]);
                a.removeAttributes(["_moz_dirty", "data-cke-expando", "data-cke-saved-href", "data-cke-saved-name"]);
                if (b.$.isEqualNode) {
                    b.$.style.cssText = CKEDITOR.tools.normalizeCssText(b.$.style.cssText);
                    a.$.style.cssText = CKEDITOR.tools.normalizeCssText(a.$.style.cssText);
                    return b.$.isEqualNode(a.$)
                }
                b = b.getOuterHtml();
                a = a.getOuterHtml();
                if (CKEDITOR.env.ie && CKEDITOR.env.version < 9 && this.is("a")) {
                    var c = this.getParent();
                    if (c.type == CKEDITOR.NODE_ELEMENT) {
                        c = c.clone();
                        c.setHtml(b);
                        b = c.getHtml();
                        c.setHtml(a);
                        a = c.getHtml()
                    }
                }
                return b == a
            }, isVisible: function () {
                var a = (this.$.offsetHeight || this.$.offsetWidth) && this.getComputedStyle("visibility") != "hidden", b, c;
                if (a && (CKEDITOR.env.webkit || CKEDITOR.env.opera)) {
                    b =
                        this.getWindow();
                    if (!b.equals(CKEDITOR.document.getWindow()) && (c = b.$.frameElement))a = (new CKEDITOR.dom.element(c)).isVisible()
                }
                return!!a
            }, isEmptyInlineRemoveable: function () {
                if (!CKEDITOR.dtd.$removeEmpty[this.getName()])return false;
                for (var a = this.getChildren(), b = 0, c = a.count(); b < c; b++) {
                    var d = a.getItem(b);
                    if (!(d.type == CKEDITOR.NODE_ELEMENT && d.data("cke-bookmark")) && (d.type == CKEDITOR.NODE_ELEMENT && !d.isEmptyInlineRemoveable() || d.type == CKEDITOR.NODE_TEXT && CKEDITOR.tools.trim(d.getText())))return false
                }
                return true
            },
            hasAttributes: CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ? function () {
                for (var a = this.$.attributes, b = 0; b < a.length; b++) {
                    var c = a[b];
                    switch (c.nodeName) {
                        case "class":
                            if (this.getAttribute("class"))return true;
                        case "data-cke-expando":
                            continue;
                        default:
                            if (c.specified)return true
                    }
                }
                return false
            } : function () {
                var a = this.$.attributes, b = a.length, c = {"data-cke-expando": 1, _moz_dirty: 1};
                return b > 0 && (b > 2 || !c[a[0].nodeName] || b == 2 && !c[a[1].nodeName])
            }, hasAttribute: function () {
                function a(a) {
                    a = this.$.attributes.getNamedItem(a);
                    return!(!a || !a.specified)
                }

                return CKEDITOR.env.ie && CKEDITOR.env.version < 8 ? function (b) {
                    return b == "name" ? !!this.$.name : a.call(this, b)
                } : a
            }(), hide: function () {
                this.setStyle("display", "none")
            }, moveChildren: function (a, b) {
                var c = this.$, a = a.$;
                if (c != a) {
                    var d;
                    if (b)for (; d = c.lastChild;)a.insertBefore(c.removeChild(d), a.firstChild); else for (; d = c.firstChild;)a.appendChild(c.removeChild(d))
                }
            }, mergeSiblings: function () {
                function a(a, b, c) {
                    if (b && b.type == CKEDITOR.NODE_ELEMENT) {
                        for (var g = []; b.data("cke-bookmark") || b.isEmptyInlineRemoveable();) {
                            g.push(b);
                            b = c ? b.getNext() : b.getPrevious();
                            if (!b || b.type != CKEDITOR.NODE_ELEMENT)return
                        }
                        if (a.isIdentical(b)) {
                            for (var k = c ? a.getLast() : a.getFirst(); g.length;)g.shift().move(a, !c);
                            b.moveChildren(a, !c);
                            b.remove();
                            k && k.type == CKEDITOR.NODE_ELEMENT && k.mergeSiblings()
                        }
                    }
                }

                return function (b) {
                    if (b === false || CKEDITOR.dtd.$removeEmpty[this.getName()] || this.is("a")) {
                        a(this, this.getNext(), true);
                        a(this, this.getPrevious())
                    }
                }
            }(), show: function () {
                this.setStyles({display: "", visibility: ""})
            }, setAttribute: function () {
                var a = function (a, b) {
                    this.$.setAttribute(a, b);
                    return this
                };
                return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ? function (b, c) {
                    b == "class" ? this.$.className = c : b == "style" ? this.$.style.cssText = c : b == "tabindex" ? this.$.tabIndex = c : b == "checked" ? this.$.checked = c : b == "contenteditable" ? a.call(this, "contentEditable", c) : a.apply(this, arguments);
                    return this
                } : CKEDITOR.env.ie8Compat && CKEDITOR.env.secure ? function (b, c) {
                    if (b == "src" && c.match(/^http:\/\//))try {
                        a.apply(this, arguments)
                    } catch (d) {
                    } else a.apply(this, arguments);
                    return this
                } : a
            }(), setAttributes: function (a) {
                for (var b in a)this.setAttribute(b, a[b]);
                return this
            }, setValue: function (a) {
                this.$.value = a;
                return this
            }, removeAttribute: function () {
                var a = function (a) {
                    this.$.removeAttribute(a)
                };
                return CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) ? function (a) {
                    a == "class" ? a = "className" : a == "tabindex" ? a = "tabIndex" : a == "contenteditable" && (a = "contentEditable");
                    this.$.removeAttribute(a)
                } : a
            }(), removeAttributes: function (a) {
                if (CKEDITOR.tools.isArray(a))for (var b = 0; b <
                    a.length; b++)this.removeAttribute(a[b]); else for (b in a)a.hasOwnProperty(b) && this.removeAttribute(b)
            }, removeStyle: function (a) {
                var b = this.$.style;
                if (!b.removeProperty && (a == "border" || a == "margin" || a == "padding")) {
                    var c = ["top", "left", "right", "bottom"], d;
                    a == "border" && (d = ["color", "style", "width"]);
                    for (var b = [], g = 0; g < c.length; g++)if (d)for (var k = 0; k < d.length; k++)b.push([a, c[g], d[k]].join("-")); else b.push([a, c[g]].join("-"));
                    for (a = 0; a < b.length; a++)this.removeStyle(b[a])
                } else {
                    b.removeProperty ? b.removeProperty(a) :
                        b.removeAttribute(CKEDITOR.tools.cssStyleToDomStyle(a));
                    this.$.style.cssText || this.removeAttribute("style")
                }
            }, setStyle: function (a, b) {
                this.$.style[CKEDITOR.tools.cssStyleToDomStyle(a)] = b;
                return this
            }, setStyles: function (a) {
                for (var b in a)this.setStyle(b, a[b]);
                return this
            }, setOpacity: function (a) {
                if (CKEDITOR.env.ie && CKEDITOR.env.version < 9) {
                    a = Math.round(a * 100);
                    this.setStyle("filter", a >= 100 ? "" : "progid:DXImageTransform.Microsoft.Alpha(opacity=" + a + ")")
                } else this.setStyle("opacity", a)
            }, unselectable: function () {
                this.setStyles(CKEDITOR.tools.cssVendorPrefix("user-select",
                    "none"));
                if (CKEDITOR.env.ie || CKEDITOR.env.opera) {
                    this.setAttribute("unselectable", "on");
                    for (var a, b = this.getElementsByTag("*"), c = 0, d = b.count(); c < d; c++) {
                        a = b.getItem(c);
                        a.setAttribute("unselectable", "on")
                    }
                }
            }, getPositionedAncestor: function () {
                for (var a = this; a.getName() != "html";) {
                    if (a.getComputedStyle("position") != "static")return a;
                    a = a.getParent()
                }
                return null
            }, getDocumentPosition: function (a) {
                var b = 0, c = 0, d = this.getDocument(), g = d.getBody(), k = d.$.compatMode == "BackCompat";
                if (document.documentElement.getBoundingClientRect) {
                    var h =
                        this.$.getBoundingClientRect(), m = d.$.documentElement, n = m.clientTop || g.$.clientTop || 0, o = m.clientLeft || g.$.clientLeft || 0, l = true;
                    if (CKEDITOR.env.ie) {
                        l = d.getDocumentElement().contains(this);
                        d = d.getBody().contains(this);
                        l = k && d || !k && l
                    }
                    if (l) {
                        b = h.left + (!k && m.scrollLeft || g.$.scrollLeft);
                        b = b - o;
                        c = h.top + (!k && m.scrollTop || g.$.scrollTop);
                        c = c - n
                    }
                } else {
                    g = this;
                    for (d = null; g && !(g.getName() == "body" || g.getName() == "html");) {
                        b = b + (g.$.offsetLeft - g.$.scrollLeft);
                        c = c + (g.$.offsetTop - g.$.scrollTop);
                        if (!g.equals(this)) {
                            b = b + (g.$.clientLeft ||
                                0);
                            c = c + (g.$.clientTop || 0)
                        }
                        for (; d && !d.equals(g);) {
                            b = b - d.$.scrollLeft;
                            c = c - d.$.scrollTop;
                            d = d.getParent()
                        }
                        d = g;
                        g = (h = g.$.offsetParent) ? new CKEDITOR.dom.element(h) : null
                    }
                }
                if (a) {
                    g = this.getWindow();
                    d = a.getWindow();
                    if (!g.equals(d) && g.$.frameElement) {
                        a = (new CKEDITOR.dom.element(g.$.frameElement)).getDocumentPosition(a);
                        b = b + a.x;
                        c = c + a.y
                    }
                }
                if (!document.documentElement.getBoundingClientRect && CKEDITOR.env.gecko && !k) {
                    b = b + (this.$.clientLeft ? 1 : 0);
                    c = c + (this.$.clientTop ? 1 : 0)
                }
                return{x: b, y: c}
            }, scrollIntoView: function (a) {
                var b =
                    this.getParent();
                if (b) {
                    do {
                        (b.$.clientWidth && b.$.clientWidth < b.$.scrollWidth || b.$.clientHeight && b.$.clientHeight < b.$.scrollHeight) && !b.is("body") && this.scrollIntoParent(b, a, 1);
                        if (b.is("html")) {
                            var c = b.getWindow();
                            try {
                                var d = c.$.frameElement;
                                d && (b = new CKEDITOR.dom.element(d))
                            } catch (g) {
                            }
                        }
                    } while (b = b.getParent())
                }
            }, scrollIntoParent: function (a, b, c) {
                var d, g, k, h;

                function m(b, l) {
                    if (/body|html/.test(a.getName()))a.getWindow().$.scrollBy(b, l); else {
                        a.$.scrollLeft = a.$.scrollLeft + b;
                        a.$.scrollTop = a.$.scrollTop + l
                    }
                }

                function n(a, b) {
                    var o = {x: 0, y: 0};
                    if (!a.is(l ? "body" : "html")) {
                        var j = a.$.getBoundingClientRect();
                        o.x = j.left;
                        o.y = j.top
                    }
                    j = a.getWindow();
                    if (!j.equals(b)) {
                        j = n(CKEDITOR.dom.element.get(j.$.frameElement), b);
                        o.x = o.x + j.x;
                        o.y = o.y + j.y
                    }
                    return o
                }

                function o(a, b) {
                    return parseInt(a.getComputedStyle("margin-" + b) || 0, 10) || 0
                }

                !a && (a = this.getWindow());
                k = a.getDocument();
                var l = k.$.compatMode == "BackCompat";
                a instanceof CKEDITOR.dom.window && (a = l ? k.getBody() : k.getDocumentElement());
                k = a.getWindow();
                g = n(this, k);
                var j = n(a, k), q = this.$.offsetHeight;
                d = this.$.offsetWidth;
                var y = a.$.clientHeight, z = a.$.clientWidth;
                k = g.x - o(this, "left") - j.x || 0;
                h = g.y - o(this, "top") - j.y || 0;
                d = g.x + d + o(this, "right") - (j.x + z) || 0;
                g = g.y + q + o(this, "bottom") - (j.y + y) || 0;
                if (h < 0 || g > 0)m(0, b === true ? h : b === false ? g : h < 0 ? h : g);
                if (c && (k < 0 || d > 0))m(k < 0 ? k : d, 0)
            }, setState: function (a, b, c) {
                b = b || "cke";
                switch (a) {
                    case CKEDITOR.TRISTATE_ON:
                        this.addClass(b + "_on");
                        this.removeClass(b + "_off");
                        this.removeClass(b + "_disabled");
                        c && this.setAttribute("aria-pressed", true);
                        c && this.removeAttribute("aria-disabled");
                        break;
                    case CKEDITOR.TRISTATE_DISABLED:
                        this.addClass(b + "_disabled");
                        this.removeClass(b + "_off");
                        this.removeClass(b + "_on");
                        c && this.setAttribute("aria-disabled", true);
                        c && this.removeAttribute("aria-pressed");
                        break;
                    default:
                        this.addClass(b + "_off");
                        this.removeClass(b + "_on");
                        this.removeClass(b + "_disabled");
                        c && this.removeAttribute("aria-pressed");
                        c && this.removeAttribute("aria-disabled")
                }
            }, getFrameDocument: function () {
                var a = this.$;
                try {
                    a.contentWindow.document
                } catch (b) {
                    a.src = a.src
                }
                return a && new CKEDITOR.dom.document(a.contentWindow.document)
            },
            copyAttributes: function (a, b) {
                for (var c = this.$.attributes, b = b || {}, d = 0; d < c.length; d++) {
                    var g = c[d], k = g.nodeName.toLowerCase(), h;
                    if (!(k in b))if (k == "checked" && (h = this.getAttribute(k)))a.setAttribute(k, h); else if (g.specified || CKEDITOR.env.ie && g.nodeValue && k == "value") {
                        h = this.getAttribute(k);
                        if (h === null)h = g.nodeValue;
                        a.setAttribute(k, h)
                    }
                }
                if (this.$.style.cssText !== "")a.$.style.cssText = this.$.style.cssText
            }, renameNode: function (a) {
                if (this.getName() != a) {
                    var b = this.getDocument(), a = new CKEDITOR.dom.element(a,
                        b);
                    this.copyAttributes(a);
                    this.moveChildren(a);
                    this.getParent() && this.$.parentNode.replaceChild(a.$, this.$);
                    a.$["data-cke-expando"] = this.$["data-cke-expando"];
                    this.$ = a.$
                }
            }, getChild: function () {
                function a(a, b) {
                    var c = a.childNodes;
                    if (b >= 0 && b < c.length)return c[b]
                }

                return function (b) {
                    var c = this.$;
                    if (b.slice)for (; b.length > 0 && c;)c = a(c, b.shift()); else c = a(c, b);
                    return c ? new CKEDITOR.dom.node(c) : null
                }
            }(), getChildCount: function () {
                return this.$.childNodes.length
            }, disableContextMenu: function () {
                this.on("contextmenu",
                    function (a) {
                        a.data.getTarget().hasClass("cke_enable_context_menu") || a.data.preventDefault()
                    })
            }, getDirection: function (a) {
                return a ? this.getComputedStyle("direction") || this.getDirection() || this.getParent() && this.getParent().getDirection(1) || this.getDocument().$.dir || "ltr" : this.getStyle("direction") || this.getAttribute("dir")
            }, data: function (a, b) {
                a = "data-" + a;
                if (b === void 0)return this.getAttribute(a);
                b === false ? this.removeAttribute(a) : this.setAttribute(a, b);
                return null
            }, getEditor: function () {
                var a = CKEDITOR.instances,
                    b, c;
                for (b in a) {
                    c = a[b];
                    if (c.element.equals(this) && c.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO)return c
                }
                return null
            }});
        var c = {width: ["border-left-width", "border-right-width", "padding-left", "padding-right"], height: ["border-top-width", "border-bottom-width", "padding-top", "padding-bottom"]};
        CKEDITOR.dom.element.prototype.setSize = function (a, c, e) {
            if (typeof c == "number") {
                if (e && (!CKEDITOR.env.ie || !CKEDITOR.env.quirks))c = c - b.call(this, a);
                this.setStyle(a, c + "px")
            }
        };
        CKEDITOR.dom.element.prototype.getSize = function (a, c) {
            var e = Math.max(this.$["offset" + CKEDITOR.tools.capitalize(a)], this.$["client" + CKEDITOR.tools.capitalize(a)]) || 0;
            c && (e = e - b.call(this, a));
            return e
        }
    })();
    CKEDITOR.dom.documentFragment = function (b) {
        b = b || CKEDITOR.document;
        this.$ = b.type == CKEDITOR.NODE_DOCUMENT ? b.$.createDocumentFragment() : b
    };
    CKEDITOR.tools.extend(CKEDITOR.dom.documentFragment.prototype, CKEDITOR.dom.element.prototype, {type: CKEDITOR.NODE_DOCUMENT_FRAGMENT, insertAfterNode: function (b) {
        b = b.$;
        b.parentNode.insertBefore(this.$, b.nextSibling)
    }}, !0, {append: 1, appendBogus: 1, getFirst: 1, getLast: 1, getParent: 1, getNext: 1, getPrevious: 1, appendTo: 1, moveChildren: 1, insertBefore: 1, insertAfterNode: 1, replace: 1, trim: 1, type: 1, ltrim: 1, rtrim: 1, getDocument: 1, getChildCount: 1, getChild: 1, getChildren: 1});
    (function () {
        function b(a, b) {
            var c = this.range;
            if (this._.end)return null;
            if (!this._.start) {
                this._.start = 1;
                if (c.collapsed) {
                    this.end();
                    return null
                }
                c.optimize()
            }
            var d, n = c.startContainer;
            d = c.endContainer;
            var o = c.startOffset, l = c.endOffset, j, q = this.guard, f = this.type, e = a ? "getPreviousSourceNode" : "getNextSourceNode";
            if (!a && !this._.guardLTR) {
                var i = d.type == CKEDITOR.NODE_ELEMENT ? d : d.getParent(), s = d.type == CKEDITOR.NODE_ELEMENT ? d.getChild(l) : d.getNext();
                this._.guardLTR = function (a, b) {
                    return(!b || !i.equals(a)) && (!s || !a.equals(s)) && (a.type != CKEDITOR.NODE_ELEMENT || !b || !a.equals(c.root))
                }
            }
            if (a && !this._.guardRTL) {
                var A = n.type == CKEDITOR.NODE_ELEMENT ? n : n.getParent(), B = n.type == CKEDITOR.NODE_ELEMENT ? o ? n.getChild(o - 1) : null : n.getPrevious();
                this._.guardRTL = function (a, b) {
                    return(!b || !A.equals(a)) && (!B || !a.equals(B)) && (a.type != CKEDITOR.NODE_ELEMENT || !b || !a.equals(c.root))
                }
            }
            var p = a ? this._.guardRTL : this._.guardLTR;
            j = q ? function (a, b) {
                return p(a, b) === false ? false : q(a, b)
            } : p;
            if (this.current)d = this.current[e](false, f, j); else {
                if (a)d.type ==
                    CKEDITOR.NODE_ELEMENT && (d = l > 0 ? d.getChild(l - 1) : j(d, true) === false ? null : d.getPreviousSourceNode(true, f, j)); else {
                    d = n;
                    if (d.type == CKEDITOR.NODE_ELEMENT && !(d = d.getChild(o)))d = j(n, true) === false ? null : n.getNextSourceNode(true, f, j)
                }
                d && j(d) === false && (d = null)
            }
            for (; d && !this._.end;) {
                this.current = d;
                if (!this.evaluator || this.evaluator(d) !== false) {
                    if (!b)return d
                } else if (b && this.evaluator)return false;
                d = d[e](false, f, j)
            }
            this.end();
            return this.current = null
        }

        function c(a) {
            for (var c, d = null; c = b.call(this, a);)d = c;
            return d
        }

        CKEDITOR.dom.walker = CKEDITOR.tools.createClass({$: function (a) {
            this.range = a;
            this._ = {}
        }, proto: {end: function () {
            this._.end = 1
        }, next: function () {
            return b.call(this)
        }, previous: function () {
            return b.call(this, 1)
        }, checkForward: function () {
            return b.call(this, 0, 1) !== false
        }, checkBackward: function () {
            return b.call(this, 1, 1) !== false
        }, lastForward: function () {
            return c.call(this)
        }, lastBackward: function () {
            return c.call(this, 1)
        }, reset: function () {
            delete this.current;
            this._ = {}
        }}});
        var a = {block: 1, "list-item": 1, table: 1, "table-row-group": 1,
            "table-header-group": 1, "table-footer-group": 1, "table-row": 1, "table-column-group": 1, "table-column": 1, "table-cell": 1, "table-caption": 1};
        CKEDITOR.dom.element.prototype.isBlockBoundary = function (b) {
            b = b ? CKEDITOR.tools.extend({}, CKEDITOR.dtd.$block, b || {}) : CKEDITOR.dtd.$block;
            return this.getComputedStyle("float") == "none" && a[this.getComputedStyle("display")] || b[this.getName()]
        };
        CKEDITOR.dom.walker.blockBoundary = function (a) {
            return function (b) {
                return!(b.type == CKEDITOR.NODE_ELEMENT && b.isBlockBoundary(a))
            }
        };
        CKEDITOR.dom.walker.listItemBoundary =
            function () {
                return this.blockBoundary({br: 1})
            };
        CKEDITOR.dom.walker.bookmark = function (a, b) {
            function c(a) {
                return a && a.getName && a.getName() == "span" && a.data("cke-bookmark")
            }

            return function (d) {
                var n, o;
                n = d && d.type != CKEDITOR.NODE_ELEMENT && (o = d.getParent()) && c(o);
                n = a ? n : n || c(d);
                return!!(b ^ n)
            }
        };
        CKEDITOR.dom.walker.whitespaces = function (a) {
            return function (b) {
                var c;
                b && b.type == CKEDITOR.NODE_TEXT && (c = !CKEDITOR.tools.trim(b.getText()) || CKEDITOR.env.webkit && b.getText() == "​");
                return!!(a ^ c)
            }
        };
        CKEDITOR.dom.walker.invisible =
            function (a) {
                var b = CKEDITOR.dom.walker.whitespaces();
                return function (c) {
                    if (b(c))c = 1; else {
                        c.type == CKEDITOR.NODE_TEXT && (c = c.getParent());
                        c = !c.$.offsetHeight
                    }
                    return!!(a ^ c)
                }
            };
        CKEDITOR.dom.walker.nodeType = function (a, b) {
            return function (c) {
                return!!(b ^ c.type == a)
            }
        };
        CKEDITOR.dom.walker.bogus = function (a) {
            function b(a) {
                return!e(a) && !d(a)
            }

            return function (c) {
                var d = !CKEDITOR.env.ie ? c.is && c.is("br") : c.getText && f.test(c.getText());
                if (d) {
                    d = c.getParent();
                    c = c.getNext(b);
                    d = d.isBlockBoundary() && (!c || c.type == CKEDITOR.NODE_ELEMENT &&
                        c.isBlockBoundary())
                }
                return!!(a ^ d)
            }
        };
        var f = /^[\t\r\n ]*(?:&nbsp;|\xa0)$/, e = CKEDITOR.dom.walker.whitespaces(), d = CKEDITOR.dom.walker.bookmark();
        CKEDITOR.dom.element.prototype.getBogus = function () {
            var a = this;
            do a = a.getPreviousSourceNode(); while (d(a) || e(a) || a.type == CKEDITOR.NODE_ELEMENT && a.getName()in CKEDITOR.dtd.$inline && !(a.getName()in CKEDITOR.dtd.$empty));
            return a && (!CKEDITOR.env.ie ? a.is && a.is("br") : a.getText && f.test(a.getText())) ? a : false
        }
    })();
    CKEDITOR.dom.range = function (b) {
        this.endOffset = this.endContainer = this.startOffset = this.startContainer = null;
        this.collapsed = true;
        var c = b instanceof CKEDITOR.dom.document;
        this.document = c ? b : b.getDocument();
        this.root = c ? b.getBody() : b
    };
    (function () {
        function b() {
            var a = false, b = CKEDITOR.dom.walker.whitespaces(), l = CKEDITOR.dom.walker.bookmark(true), c = CKEDITOR.dom.walker.bogus();
            return function (q) {
                if (l(q) || b(q))return true;
                if (c(q) && !a)return a = true;
                return q.type == CKEDITOR.NODE_TEXT && (q.hasAscendant("pre") || CKEDITOR.tools.trim(q.getText()).length) || q.type == CKEDITOR.NODE_ELEMENT && !q.is(d) ? false : true
            }
        }

        function c(a) {
            var b = CKEDITOR.dom.walker.whitespaces(), l = CKEDITOR.dom.walker.bookmark(1);
            return function (c) {
                return l(c) || b(c) ? true : !a && g(c) ||
                    c.type == CKEDITOR.NODE_ELEMENT && c.is(CKEDITOR.dtd.$removeEmpty)
            }
        }

        function a(a) {
            return!k(a) && !h(a)
        }

        var f = function (a) {
            a.collapsed = a.startContainer && a.endContainer && a.startContainer.equals(a.endContainer) && a.startOffset == a.endOffset
        }, e = function (a, b, l, c) {
            a.optimizeBookmark();
            var d = a.startContainer, g = a.endContainer, f = a.startOffset, i = a.endOffset, e, k;
            if (g.type == CKEDITOR.NODE_TEXT)g = g.split(i); else if (g.getChildCount() > 0)if (i >= g.getChildCount()) {
                g = g.append(a.document.createText(""));
                k = true
            } else g = g.getChild(i);
            if (d.type == CKEDITOR.NODE_TEXT) {
                d.split(f);
                d.equals(g) && (g = d.getNext())
            } else if (f)if (f >= d.getChildCount()) {
                d = d.append(a.document.createText(""));
                e = true
            } else d = d.getChild(f).getPrevious(); else {
                d = d.append(a.document.createText(""), 1);
                e = true
            }
            var f = d.getParents(), i = g.getParents(), h, p, m;
            for (h = 0; h < f.length; h++) {
                p = f[h];
                m = i[h];
                if (!p.equals(m))break
            }
            for (var u = l, r, D, v, t = h; t < f.length; t++) {
                r = f[t];
                u && !r.equals(d) && (D = u.append(r.clone()));
                for (r = r.getNext(); r;) {
                    if (r.equals(i[t]) || r.equals(g))break;
                    v = r.getNext();
                    if (b == 2)u.append(r.clone(true)); else {
                        r.remove();
                        b == 1 && u.append(r)
                    }
                    r = v
                }
                u && (u = D)
            }
            u = l;
            for (l = h; l < i.length; l++) {
                r = i[l];
                b > 0 && !r.equals(g) && (D = u.append(r.clone()));
                if (!f[l] || r.$.parentNode != f[l].$.parentNode)for (r = r.getPrevious(); r;) {
                    if (r.equals(f[l]) || r.equals(d))break;
                    v = r.getPrevious();
                    if (b == 2)u.$.insertBefore(r.$.cloneNode(true), u.$.firstChild); else {
                        r.remove();
                        b == 1 && u.$.insertBefore(r.$, u.$.firstChild)
                    }
                    r = v
                }
                u && (u = D)
            }
            if (b == 2) {
                p = a.startContainer;
                if (p.type == CKEDITOR.NODE_TEXT) {
                    p.$.data = p.$.data + p.$.nextSibling.data;
                    p.$.parentNode.removeChild(p.$.nextSibling)
                }
                a = a.endContainer;
                if (a.type == CKEDITOR.NODE_TEXT && a.$.nextSibling) {
                    a.$.data = a.$.data + a.$.nextSibling.data;
                    a.$.parentNode.removeChild(a.$.nextSibling)
                }
            } else {
                if (p && m && (d.$.parentNode != p.$.parentNode || g.$.parentNode != m.$.parentNode)) {
                    b = m.getIndex();
                    e && m.$.parentNode == d.$.parentNode && b--;
                    if (c && p.type == CKEDITOR.NODE_ELEMENT) {
                        c = CKEDITOR.dom.element.createFromHtml('<span data-cke-bookmark="1" style="display:none">&nbsp;</span>', a.document);
                        c.insertAfter(p);
                        p.mergeSiblings(false);
                        a.moveToBookmark({startNode: c})
                    } else a.setStart(m.getParent(), b)
                }
                a.collapse(true)
            }
            e && d.remove();
            k && g.$.parentNode && g.remove()
        }, d = {abbr: 1, acronym: 1, b: 1, bdo: 1, big: 1, cite: 1, code: 1, del: 1, dfn: 1, em: 1, font: 1, i: 1, ins: 1, label: 1, kbd: 1, q: 1, samp: 1, small: 1, span: 1, strike: 1, strong: 1, sub: 1, sup: 1, tt: 1, u: 1, "var": 1}, g = CKEDITOR.dom.walker.bogus(), k = new CKEDITOR.dom.walker.whitespaces, h = new CKEDITOR.dom.walker.bookmark, m = /^[\t\r\n ]*(?:&nbsp;|\xa0)$/;
        CKEDITOR.dom.range.prototype = {clone: function () {
            var a = new CKEDITOR.dom.range(this.root);
            a.startContainer = this.startContainer;
            a.startOffset = this.startOffset;
            a.endContainer = this.endContainer;
            a.endOffset = this.endOffset;
            a.collapsed = this.collapsed;
            return a
        }, collapse: function (a) {
            if (a) {
                this.endContainer = this.startContainer;
                this.endOffset = this.startOffset
            } else {
                this.startContainer = this.endContainer;
                this.startOffset = this.endOffset
            }
            this.collapsed = true
        }, cloneContents: function () {
            var a = new CKEDITOR.dom.documentFragment(this.document);
            this.collapsed || e(this, 2, a);
            return a
        }, deleteContents: function (a) {
            this.collapsed ||
            e(this, 0, null, a)
        }, extractContents: function (a) {
            var b = new CKEDITOR.dom.documentFragment(this.document);
            this.collapsed || e(this, 1, b, a);
            return b
        }, createBookmark: function (a) {
            var b, l, c, d, g = this.collapsed;
            b = this.document.createElement("span");
            b.data("cke-bookmark", 1);
            b.setStyle("display", "none");
            b.setHtml("&nbsp;");
            if (a) {
                c = "cke_bm_" + CKEDITOR.tools.getNextNumber();
                b.setAttribute("id", c + (g ? "C" : "S"))
            }
            if (!g) {
                l = b.clone();
                l.setHtml("&nbsp;");
                a && l.setAttribute("id", c + "E");
                d = this.clone();
                d.collapse();
                d.insertNode(l)
            }
            d =
                this.clone();
            d.collapse(true);
            d.insertNode(b);
            if (l) {
                this.setStartAfter(b);
                this.setEndBefore(l)
            } else this.moveToPosition(b, CKEDITOR.POSITION_AFTER_END);
            return{startNode: a ? c + (g ? "C" : "S") : b, endNode: a ? c + "E" : l, serializable: a, collapsed: g}
        }, createBookmark2: function (a) {
            var b = this.startContainer, l = this.endContainer, c = this.startOffset, d = this.endOffset, g = this.collapsed, f, i;
            if (!b || !l)return{start: 0, end: 0};
            if (a) {
                if (b.type == CKEDITOR.NODE_ELEMENT) {
                    if ((f = b.getChild(c)) && f.type == CKEDITOR.NODE_TEXT && c > 0 && f.getPrevious().type ==
                        CKEDITOR.NODE_TEXT) {
                        b = f;
                        c = 0
                    }
                    f && f.type == CKEDITOR.NODE_ELEMENT && (c = f.getIndex(1))
                }
                for (; b.type == CKEDITOR.NODE_TEXT && (i = b.getPrevious()) && i.type == CKEDITOR.NODE_TEXT;) {
                    b = i;
                    c = c + i.getLength()
                }
                if (!g) {
                    if (l.type == CKEDITOR.NODE_ELEMENT) {
                        if ((f = l.getChild(d)) && f.type == CKEDITOR.NODE_TEXT && d > 0 && f.getPrevious().type == CKEDITOR.NODE_TEXT) {
                            l = f;
                            d = 0
                        }
                        f && f.type == CKEDITOR.NODE_ELEMENT && (d = f.getIndex(1))
                    }
                    for (; l.type == CKEDITOR.NODE_TEXT && (i = l.getPrevious()) && i.type == CKEDITOR.NODE_TEXT;) {
                        l = i;
                        d = d + i.getLength()
                    }
                }
            }
            return{start: b.getAddress(a),
                end: g ? null : l.getAddress(a), startOffset: c, endOffset: d, normalized: a, collapsed: g, is2: true}
        }, moveToBookmark: function (a) {
            if (a.is2) {
                var b = this.document.getByAddress(a.start, a.normalized), l = a.startOffset, c = a.end && this.document.getByAddress(a.end, a.normalized), a = a.endOffset;
                this.setStart(b, l);
                c ? this.setEnd(c, a) : this.collapse(true)
            } else {
                b = (l = a.serializable) ? this.document.getById(a.startNode) : a.startNode;
                a = l ? this.document.getById(a.endNode) : a.endNode;
                this.setStartBefore(b);
                b.remove();
                if (a) {
                    this.setEndBefore(a);
                    a.remove()
                } else this.collapse(true)
            }
        }, getBoundaryNodes: function () {
            var a = this.startContainer, b = this.endContainer, l = this.startOffset, c = this.endOffset, d;
            if (a.type == CKEDITOR.NODE_ELEMENT) {
                d = a.getChildCount();
                if (d > l)a = a.getChild(l); else if (d < 1)a = a.getPreviousSourceNode(); else {
                    for (a = a.$; a.lastChild;)a = a.lastChild;
                    a = new CKEDITOR.dom.node(a);
                    a = a.getNextSourceNode() || a
                }
            }
            if (b.type == CKEDITOR.NODE_ELEMENT) {
                d = b.getChildCount();
                if (d > c)b = b.getChild(c).getPreviousSourceNode(true); else if (d < 1)b = b.getPreviousSourceNode();
                else {
                    for (b = b.$; b.lastChild;)b = b.lastChild;
                    b = new CKEDITOR.dom.node(b)
                }
            }
            a.getPosition(b) & CKEDITOR.POSITION_FOLLOWING && (a = b);
            return{startNode: a, endNode: b}
        }, getCommonAncestor: function (a, b) {
            var l = this.startContainer, c = this.endContainer, l = l.equals(c) ? a && l.type == CKEDITOR.NODE_ELEMENT && this.startOffset == this.endOffset - 1 ? l.getChild(this.startOffset) : l : l.getCommonAncestor(c);
            return b && !l.is ? l.getParent() : l
        }, optimize: function () {
            var a = this.startContainer, b = this.startOffset;
            a.type != CKEDITOR.NODE_ELEMENT && (b ? b >=
                a.getLength() && this.setStartAfter(a) : this.setStartBefore(a));
            a = this.endContainer;
            b = this.endOffset;
            a.type != CKEDITOR.NODE_ELEMENT && (b ? b >= a.getLength() && this.setEndAfter(a) : this.setEndBefore(a))
        }, optimizeBookmark: function () {
            var a = this.startContainer, b = this.endContainer;
            a.is && (a.is("span") && a.data("cke-bookmark")) && this.setStartAt(a, CKEDITOR.POSITION_BEFORE_START);
            b && (b.is && b.is("span") && b.data("cke-bookmark")) && this.setEndAt(b, CKEDITOR.POSITION_AFTER_END)
        }, trim: function (a, b) {
            var c = this.startContainer,
                j = this.startOffset, d = this.collapsed;
            if ((!a || d) && c && c.type == CKEDITOR.NODE_TEXT) {
                if (j)if (j >= c.getLength()) {
                    j = c.getIndex() + 1;
                    c = c.getParent()
                } else {
                    var g = c.split(j), j = c.getIndex() + 1, c = c.getParent();
                    if (this.startContainer.equals(this.endContainer))this.setEnd(g, this.endOffset - this.startOffset); else if (c.equals(this.endContainer))this.endOffset = this.endOffset + 1
                } else {
                    j = c.getIndex();
                    c = c.getParent()
                }
                this.setStart(c, j);
                if (d) {
                    this.collapse(true);
                    return
                }
            }
            c = this.endContainer;
            j = this.endOffset;
            if (!b && !d && c && c.type ==
                CKEDITOR.NODE_TEXT) {
                if (j) {
                    j >= c.getLength() || c.split(j);
                    j = c.getIndex() + 1
                } else j = c.getIndex();
                c = c.getParent();
                this.setEnd(c, j)
            }
        }, enlarge: function (a, b) {
            switch (a) {
                case CKEDITOR.ENLARGE_INLINE:
                    var c = 1;
                case CKEDITOR.ENLARGE_ELEMENT:
                    if (this.collapsed)break;
                    var j = this.getCommonAncestor(), d = this.root, g, f, i, e, h, k = false, p, m;
                    p = this.startContainer;
                    m = this.startOffset;
                    if (p.type == CKEDITOR.NODE_TEXT) {
                        if (m) {
                            p = !CKEDITOR.tools.trim(p.substring(0, m)).length && p;
                            k = !!p
                        }
                        if (p && !(e = p.getPrevious()))i = p.getParent()
                    } else {
                        m &&
                        (e = p.getChild(m - 1) || p.getLast());
                        e || (i = p)
                    }
                    for (; i || e;) {
                        if (i && !e) {
                            !h && i.equals(j) && (h = true);
                            if (c ? i.isBlockBoundary() : !d.contains(i))break;
                            if (!k || i.getComputedStyle("display") != "inline") {
                                k = false;
                                h ? g = i : this.setStartBefore(i)
                            }
                            e = i.getPrevious()
                        }
                        for (; e;) {
                            p = false;
                            if (e.type == CKEDITOR.NODE_COMMENT)e = e.getPrevious(); else {
                                if (e.type == CKEDITOR.NODE_TEXT) {
                                    m = e.getText();
                                    /[^\s\ufeff]/.test(m) && (e = null);
                                    p = /[\s\ufeff]$/.test(m)
                                } else if ((e.$.offsetWidth > 0 || b && e.is("br")) && !e.data("cke-bookmark"))if (k && CKEDITOR.dtd.$removeEmpty[e.getName()]) {
                                    m =
                                        e.getText();
                                    if (/[^\s\ufeff]/.test(m))e = null; else for (var u = e.$.getElementsByTagName("*"), r = 0, D; D = u[r++];)if (!CKEDITOR.dtd.$removeEmpty[D.nodeName.toLowerCase()]) {
                                        e = null;
                                        break
                                    }
                                    e && (p = !!m.length)
                                } else e = null;
                                p && (k ? h ? g = i : i && this.setStartBefore(i) : k = true);
                                if (e) {
                                    p = e.getPrevious();
                                    if (!i && !p) {
                                        i = e;
                                        e = null;
                                        break
                                    }
                                    e = p
                                } else i = null
                            }
                        }
                        i && (i = i.getParent())
                    }
                    p = this.endContainer;
                    m = this.endOffset;
                    i = e = null;
                    h = k = false;
                    if (p.type == CKEDITOR.NODE_TEXT) {
                        p = !CKEDITOR.tools.trim(p.substring(m)).length && p;
                        k = !(p && p.getLength());
                        if (p && !(e = p.getNext()))i = p.getParent()
                    } else(e = p.getChild(m)) || (i = p);
                    for (; i || e;) {
                        if (i && !e) {
                            !h && i.equals(j) && (h = true);
                            if (c ? i.isBlockBoundary() : !d.contains(i))break;
                            if (!k || i.getComputedStyle("display") != "inline") {
                                k = false;
                                h ? f = i : i && this.setEndAfter(i)
                            }
                            e = i.getNext()
                        }
                        for (; e;) {
                            p = false;
                            if (e.type == CKEDITOR.NODE_TEXT) {
                                m = e.getText();
                                /[^\s\ufeff]/.test(m) && (e = null);
                                p = /^[\s\ufeff]/.test(m)
                            } else if (e.type == CKEDITOR.NODE_ELEMENT) {
                                if ((e.$.offsetWidth > 0 || b && e.is("br")) && !e.data("cke-bookmark"))if (k && CKEDITOR.dtd.$removeEmpty[e.getName()]) {
                                    m =
                                        e.getText();
                                    if (/[^\s\ufeff]/.test(m))e = null; else {
                                        u = e.$.getElementsByTagName("*");
                                        for (r = 0; D = u[r++];)if (!CKEDITOR.dtd.$removeEmpty[D.nodeName.toLowerCase()]) {
                                            e = null;
                                            break
                                        }
                                    }
                                    e && (p = !!m.length)
                                } else e = null
                            } else p = 1;
                            p && k && (h ? f = i : this.setEndAfter(i));
                            if (e) {
                                p = e.getNext();
                                if (!i && !p) {
                                    i = e;
                                    e = null;
                                    break
                                }
                                e = p
                            } else i = null
                        }
                        i && (i = i.getParent())
                    }
                    if (g && f) {
                        j = g.contains(f) ? f : g;
                        this.setStartBefore(j);
                        this.setEndAfter(j)
                    }
                    break;
                case CKEDITOR.ENLARGE_BLOCK_CONTENTS:
                case CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:
                    i = new CKEDITOR.dom.range(this.root);
                    d = this.root;
                    i.setStartAt(d, CKEDITOR.POSITION_AFTER_START);
                    i.setEnd(this.startContainer, this.startOffset);
                    i = new CKEDITOR.dom.walker(i);
                    var v, t, w = CKEDITOR.dom.walker.blockBoundary(a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS ? {br: 1} : null), I = function (a) {
                        var b = w(a);
                        b || (v = a);
                        return b
                    }, c = function (a) {
                        var b = I(a);
                        !b && (a.is && a.is("br")) && (t = a);
                        return b
                    };
                    i.guard = I;
                    i = i.lastBackward();
                    v = v || d;
                    this.setStartAt(v, !v.is("br") && (!i && this.checkStartOfBlock() || i && v.contains(i)) ? CKEDITOR.POSITION_AFTER_START : CKEDITOR.POSITION_AFTER_END);
                    if (a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS) {
                        i = this.clone();
                        i = new CKEDITOR.dom.walker(i);
                        var G = CKEDITOR.dom.walker.whitespaces(), C = CKEDITOR.dom.walker.bookmark();
                        i.evaluator = function (a) {
                            return!G(a) && !C(a)
                        };
                        if ((i = i.previous()) && i.type == CKEDITOR.NODE_ELEMENT && i.is("br"))break
                    }
                    i = this.clone();
                    i.collapse();
                    i.setEndAt(d, CKEDITOR.POSITION_BEFORE_END);
                    i = new CKEDITOR.dom.walker(i);
                    i.guard = a == CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS ? c : I;
                    v = null;
                    i = i.lastForward();
                    v = v || d;
                    this.setEndAt(v, !i && this.checkEndOfBlock() || i &&
                        v.contains(i) ? CKEDITOR.POSITION_BEFORE_END : CKEDITOR.POSITION_BEFORE_START);
                    t && this.setEndAfter(t)
            }
        }, shrink: function (a, b, c) {
            if (!this.collapsed) {
                var a = a || CKEDITOR.SHRINK_TEXT, j = this.clone(), d = this.startContainer, g = this.endContainer, f = this.startOffset, e = this.endOffset, k = 1, h = 1;
                if (d && d.type == CKEDITOR.NODE_TEXT)if (f)if (f >= d.getLength())j.setStartAfter(d); else {
                    j.setStartBefore(d);
                    k = 0
                } else j.setStartBefore(d);
                if (g && g.type == CKEDITOR.NODE_TEXT)if (e)if (e >= g.getLength())j.setEndAfter(g); else {
                    j.setEndAfter(g);
                    h = 0
                } else j.setEndBefore(g);
                var j = new CKEDITOR.dom.walker(j), m = CKEDITOR.dom.walker.bookmark();
                j.evaluator = function (b) {
                    return b.type == (a == CKEDITOR.SHRINK_ELEMENT ? CKEDITOR.NODE_ELEMENT : CKEDITOR.NODE_TEXT)
                };
                var p;
                j.guard = function (b, j) {
                    if (m(b))return true;
                    if (a == CKEDITOR.SHRINK_ELEMENT && b.type == CKEDITOR.NODE_TEXT || j && b.equals(p) || c === false && b.type == CKEDITOR.NODE_ELEMENT && b.isBlockBoundary())return false;
                    !j && b.type == CKEDITOR.NODE_ELEMENT && (p = b);
                    return true
                };
                if (k)(d = j[a == CKEDITOR.SHRINK_ELEMENT ? "lastForward" :
                    "next"]()) && this.setStartAt(d, b ? CKEDITOR.POSITION_AFTER_START : CKEDITOR.POSITION_BEFORE_START);
                if (h) {
                    j.reset();
                    (j = j[a == CKEDITOR.SHRINK_ELEMENT ? "lastBackward" : "previous"]()) && this.setEndAt(j, b ? CKEDITOR.POSITION_BEFORE_END : CKEDITOR.POSITION_AFTER_END)
                }
                return!(!k && !h)
            }
        }, insertNode: function (a) {
            this.optimizeBookmark();
            this.trim(false, true);
            var b = this.startContainer, c = b.getChild(this.startOffset);
            c ? a.insertBefore(c) : b.append(a);
            a.getParent() && a.getParent().equals(this.endContainer) && this.endOffset++;
            this.setStartBefore(a)
        },
            moveToPosition: function (a, b) {
                this.setStartAt(a, b);
                this.collapse(true)
            }, moveToRange: function (a) {
                this.setStart(a.startContainer, a.startOffset);
                this.setEnd(a.endContainer, a.endOffset)
            }, selectNodeContents: function (a) {
                this.setStart(a, 0);
                this.setEnd(a, a.type == CKEDITOR.NODE_TEXT ? a.getLength() : a.getChildCount())
            }, setStart: function (a, b) {
                if (a.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$empty[a.getName()]) {
                    b = a.getIndex();
                    a = a.getParent()
                }
                this.startContainer = a;
                this.startOffset = b;
                if (!this.endContainer) {
                    this.endContainer =
                        a;
                    this.endOffset = b
                }
                f(this)
            }, setEnd: function (a, b) {
                if (a.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$empty[a.getName()]) {
                    b = a.getIndex() + 1;
                    a = a.getParent()
                }
                this.endContainer = a;
                this.endOffset = b;
                if (!this.startContainer) {
                    this.startContainer = a;
                    this.startOffset = b
                }
                f(this)
            }, setStartAfter: function (a) {
                this.setStart(a.getParent(), a.getIndex() + 1)
            }, setStartBefore: function (a) {
                this.setStart(a.getParent(), a.getIndex())
            }, setEndAfter: function (a) {
                this.setEnd(a.getParent(), a.getIndex() + 1)
            }, setEndBefore: function (a) {
                this.setEnd(a.getParent(),
                    a.getIndex())
            }, setStartAt: function (a, b) {
                switch (b) {
                    case CKEDITOR.POSITION_AFTER_START:
                        this.setStart(a, 0);
                        break;
                    case CKEDITOR.POSITION_BEFORE_END:
                        a.type == CKEDITOR.NODE_TEXT ? this.setStart(a, a.getLength()) : this.setStart(a, a.getChildCount());
                        break;
                    case CKEDITOR.POSITION_BEFORE_START:
                        this.setStartBefore(a);
                        break;
                    case CKEDITOR.POSITION_AFTER_END:
                        this.setStartAfter(a)
                }
                f(this)
            }, setEndAt: function (a, b) {
                switch (b) {
                    case CKEDITOR.POSITION_AFTER_START:
                        this.setEnd(a, 0);
                        break;
                    case CKEDITOR.POSITION_BEFORE_END:
                        a.type ==
                            CKEDITOR.NODE_TEXT ? this.setEnd(a, a.getLength()) : this.setEnd(a, a.getChildCount());
                        break;
                    case CKEDITOR.POSITION_BEFORE_START:
                        this.setEndBefore(a);
                        break;
                    case CKEDITOR.POSITION_AFTER_END:
                        this.setEndAfter(a)
                }
                f(this)
            }, fixBlock: function (a, b) {
                var c = this.createBookmark(), j = this.document.createElement(b);
                this.collapse(a);
                this.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);
                this.extractContents().appendTo(j);
                j.trim();
                CKEDITOR.env.ie || j.appendBogus();
                this.insertNode(j);
                this.moveToBookmark(c);
                return j
            }, splitBlock: function (a) {
                var b =
                    new CKEDITOR.dom.elementPath(this.startContainer, this.root), c = new CKEDITOR.dom.elementPath(this.endContainer, this.root), j = b.block, d = c.block, g = null;
                if (!b.blockLimit.equals(c.blockLimit))return null;
                if (a != "br") {
                    if (!j) {
                        j = this.fixBlock(true, a);
                        d = (new CKEDITOR.dom.elementPath(this.endContainer, this.root)).block
                    }
                    d || (d = this.fixBlock(false, a))
                }
                a = j && this.checkStartOfBlock();
                b = d && this.checkEndOfBlock();
                this.deleteContents();
                if (j && j.equals(d))if (b) {
                    g = new CKEDITOR.dom.elementPath(this.startContainer, this.root);
                    this.moveToPosition(d, CKEDITOR.POSITION_AFTER_END);
                    d = null
                } else if (a) {
                    g = new CKEDITOR.dom.elementPath(this.startContainer, this.root);
                    this.moveToPosition(j, CKEDITOR.POSITION_BEFORE_START);
                    j = null
                } else {
                    d = this.splitElement(j);
                    !CKEDITOR.env.ie && !j.is("ul", "ol") && j.appendBogus()
                }
                return{previousBlock: j, nextBlock: d, wasStartOfBlock: a, wasEndOfBlock: b, elementPath: g}
            }, splitElement: function (a) {
                if (!this.collapsed)return null;
                this.setEndAt(a, CKEDITOR.POSITION_BEFORE_END);
                var b = this.extractContents(), c = a.clone(false);
                b.appendTo(c);
                c.insertAfter(a);
                this.moveToPosition(a, CKEDITOR.POSITION_AFTER_END);
                return c
            }, removeEmptyBlocksAtEnd: function () {
                function a(j) {
                    return function (a) {
                        return b(a) || (c(a) || a.type == CKEDITOR.NODE_ELEMENT && a.isEmptyInlineRemoveable()) || j.is("table") && a.is("caption") ? false : true
                    }
                }

                var b = CKEDITOR.dom.walker.whitespaces(), c = CKEDITOR.dom.walker.bookmark(false);
                return function (b) {
                    for (var c = this.createBookmark(), l = this[b ? "endPath" : "startPath"](), d = l.block || l.blockLimit, o; d && !d.equals(l.root) && !d.getFirst(a(d));) {
                        o =
                            d.getParent();
                        this[b ? "setEndAt" : "setStartAt"](d, CKEDITOR.POSITION_AFTER_END);
                        d.remove(1);
                        d = o
                    }
                    this.moveToBookmark(c)
                }
            }(), startPath: function () {
                return new CKEDITOR.dom.elementPath(this.startContainer, this.root)
            }, endPath: function () {
                return new CKEDITOR.dom.elementPath(this.endContainer, this.root)
            }, checkBoundaryOfElement: function (a, b) {
                var l = b == CKEDITOR.START, d = this.clone();
                d.collapse(l);
                d[l ? "setStartAt" : "setEndAt"](a, l ? CKEDITOR.POSITION_AFTER_START : CKEDITOR.POSITION_BEFORE_END);
                d = new CKEDITOR.dom.walker(d);
                d.evaluator = c(l);
                return d[l ? "checkBackward" : "checkForward"]()
            }, checkStartOfBlock: function () {
                var a = this.startContainer, c = this.startOffset;
                if (CKEDITOR.env.ie && c && a.type == CKEDITOR.NODE_TEXT) {
                    a = CKEDITOR.tools.ltrim(a.substring(0, c));
                    m.test(a) && this.trim(0, 1)
                }
                this.trim();
                a = new CKEDITOR.dom.elementPath(this.startContainer, this.root);
                c = this.clone();
                c.collapse(true);
                c.setStartAt(a.block || a.blockLimit, CKEDITOR.POSITION_AFTER_START);
                a = new CKEDITOR.dom.walker(c);
                a.evaluator = b();
                return a.checkBackward()
            }, checkEndOfBlock: function () {
                var a =
                    this.endContainer, c = this.endOffset;
                if (CKEDITOR.env.ie && a.type == CKEDITOR.NODE_TEXT) {
                    a = CKEDITOR.tools.rtrim(a.substring(c));
                    m.test(a) && this.trim(1, 0)
                }
                this.trim();
                a = new CKEDITOR.dom.elementPath(this.endContainer, this.root);
                c = this.clone();
                c.collapse(false);
                c.setEndAt(a.block || a.blockLimit, CKEDITOR.POSITION_BEFORE_END);
                a = new CKEDITOR.dom.walker(c);
                a.evaluator = b();
                return a.checkForward()
            }, getPreviousNode: function (a, b, c) {
                var d = this.clone();
                d.collapse(1);
                d.setStartAt(c || this.root, CKEDITOR.POSITION_AFTER_START);
                c = new CKEDITOR.dom.walker(d);
                c.evaluator = a;
                c.guard = b;
                return c.previous()
            }, getNextNode: function (a, b, c) {
                var d = this.clone();
                d.collapse();
                d.setEndAt(c || this.root, CKEDITOR.POSITION_BEFORE_END);
                c = new CKEDITOR.dom.walker(d);
                c.evaluator = a;
                c.guard = b;
                return c.next()
            }, checkReadOnly: function () {
                function a(b, c) {
                    for (; b;) {
                        if (b.type == CKEDITOR.NODE_ELEMENT) {
                            if (b.getAttribute("contentEditable") == "false" && !b.data("cke-editable"))return 0;
                            if (b.is("html") || b.getAttribute("contentEditable") == "true" && (b.contains(c) || b.equals(c)))break
                        }
                        b =
                            b.getParent()
                    }
                    return 1
                }

                return function () {
                    var b = this.startContainer, c = this.endContainer;
                    return!(a(b, c) && a(c, b))
                }
            }(), moveToElementEditablePosition: function (b, c) {
                if (b.type == CKEDITOR.NODE_ELEMENT && !b.isEditable(false)) {
                    this.moveToPosition(b, c ? CKEDITOR.POSITION_AFTER_END : CKEDITOR.POSITION_BEFORE_START);
                    return true
                }
                for (var l = 0; b;) {
                    if (b.type == CKEDITOR.NODE_TEXT) {
                        c && this.checkEndOfBlock() && m.test(b.getText()) ? this.moveToPosition(b, CKEDITOR.POSITION_BEFORE_START) : this.moveToPosition(b, c ? CKEDITOR.POSITION_AFTER_END :
                            CKEDITOR.POSITION_BEFORE_START);
                        l = 1;
                        break
                    }
                    if (b.type == CKEDITOR.NODE_ELEMENT)if (b.isEditable()) {
                        this.moveToPosition(b, c ? CKEDITOR.POSITION_BEFORE_END : CKEDITOR.POSITION_AFTER_START);
                        l = 1
                    } else c && (b.is("br") && this.checkEndOfBlock()) && this.moveToPosition(b, CKEDITOR.POSITION_BEFORE_START);
                    var d = b, g = l, f = void 0;
                    d.type == CKEDITOR.NODE_ELEMENT && d.isEditable(false) && (f = d[c ? "getLast" : "getFirst"](a));
                    !g && !f && (f = d[c ? "getPrevious" : "getNext"](a));
                    b = f
                }
                return!!l
            }, moveToElementEditStart: function (a) {
                return this.moveToElementEditablePosition(a)
            },
            moveToElementEditEnd: function (a) {
                return this.moveToElementEditablePosition(a, true)
            }, getEnclosedNode: function () {
                var a = this.clone();
                a.optimize();
                if (a.startContainer.type != CKEDITOR.NODE_ELEMENT || a.endContainer.type != CKEDITOR.NODE_ELEMENT)return null;
                var a = new CKEDITOR.dom.walker(a), b = CKEDITOR.dom.walker.bookmark(false, true), c = CKEDITOR.dom.walker.whitespaces(true);
                a.evaluator = function (a) {
                    return c(a) && b(a)
                };
                var d = a.next();
                a.reset();
                return d && d.equals(a.previous()) ? d : null
            }, getTouchedStartNode: function () {
                var a =
                    this.startContainer;
                return this.collapsed || a.type != CKEDITOR.NODE_ELEMENT ? a : a.getChild(this.startOffset) || a
            }, getTouchedEndNode: function () {
                var a = this.endContainer;
                return this.collapsed || a.type != CKEDITOR.NODE_ELEMENT ? a : a.getChild(this.endOffset - 1) || a
            }, scrollIntoView: function () {
                var a = new CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>", this.document), b, c, d, g = this.clone();
                g.optimize();
                if (d = g.startContainer.type == CKEDITOR.NODE_TEXT) {
                    c = g.startContainer.getText();
                    b = g.startContainer.split(g.startOffset);
                    a.insertAfter(g.startContainer)
                } else g.insertNode(a);
                a.scrollIntoView();
                if (d) {
                    g.startContainer.setText(c);
                    b.remove()
                }
                a.remove()
            }}
    })();
    CKEDITOR.POSITION_AFTER_START = 1;
    CKEDITOR.POSITION_BEFORE_END = 2;
    CKEDITOR.POSITION_BEFORE_START = 3;
    CKEDITOR.POSITION_AFTER_END = 4;
    CKEDITOR.ENLARGE_ELEMENT = 1;
    CKEDITOR.ENLARGE_BLOCK_CONTENTS = 2;
    CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS = 3;
    CKEDITOR.ENLARGE_INLINE = 4;
    CKEDITOR.START = 1;
    CKEDITOR.END = 2;
    CKEDITOR.SHRINK_ELEMENT = 1;
    CKEDITOR.SHRINK_TEXT = 2;
    (function () {
        function b(a) {
            if (!(arguments.length < 1)) {
                this.range = a;
                this.forceBrBreak = 0;
                this.enlargeBr = 1;
                this.enforceRealBlocks = 0;
                this._ || (this._ = {})
            }
        }

        function c(a, b, c) {
            for (a = a.getNextSourceNode(b, null, c); !f(a);)a = a.getNextSourceNode(b, null, c);
            return a
        }

        var a = /^[\r\n\t ]+$/, f = CKEDITOR.dom.walker.bookmark(false, true), e = CKEDITOR.dom.walker.whitespaces(true), d = function (a) {
            return f(a) && e(a)
        };
        b.prototype = {getNextParagraph: function (b) {
            b = b || "p";
            if (!CKEDITOR.dtd[this.range.root.getName()][b])return null;
            var e,
                h, m, n, o, l;
            if (!this._.started) {
                h = this.range.clone();
                h.shrink(CKEDITOR.NODE_ELEMENT, true);
                n = h.endContainer.hasAscendant("pre", true) || h.startContainer.hasAscendant("pre", true);
                h.enlarge(this.forceBrBreak && !n || !this.enlargeBr ? CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS : CKEDITOR.ENLARGE_BLOCK_CONTENTS);
                if (!h.collapsed) {
                    n = new CKEDITOR.dom.walker(h.clone());
                    var j = CKEDITOR.dom.walker.bookmark(true, true);
                    n.evaluator = j;
                    this._.nextNode = n.next();
                    n = new CKEDITOR.dom.walker(h.clone());
                    n.evaluator = j;
                    n = n.previous();
                    this._.lastNode =
                        n.getNextSourceNode(true);
                    if (this._.lastNode && this._.lastNode.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.trim(this._.lastNode.getText()) && this._.lastNode.getParent().isBlockBoundary()) {
                        j = this.range.clone();
                        j.moveToPosition(this._.lastNode, CKEDITOR.POSITION_AFTER_END);
                        if (j.checkEndOfBlock()) {
                            j = new CKEDITOR.dom.elementPath(j.endContainer, j.root);
                            this._.lastNode = (j.block || j.blockLimit).getNextSourceNode(true)
                        }
                    }
                    if (!this._.lastNode) {
                        this._.lastNode = this._.docEndMarker = h.document.createText("");
                        this._.lastNode.insertAfter(n)
                    }
                    h =
                        null
                }
                this._.started = 1
            }
            j = this._.nextNode;
            n = this._.lastNode;
            for (this._.nextNode = null; j;) {
                var q = 0, y = j.hasAscendant("pre"), z = j.type != CKEDITOR.NODE_ELEMENT, i = 0;
                if (z)j.type == CKEDITOR.NODE_TEXT && a.test(j.getText()) && (z = 0); else {
                    var s = j.getName();
                    if (j.isBlockBoundary(this.forceBrBreak && !y && {br: 1})) {
                        if (s == "br")z = 1; else if (!h && !j.getChildCount() && s != "hr") {
                            e = j;
                            m = j.equals(n);
                            break
                        }
                        if (h) {
                            h.setEndAt(j, CKEDITOR.POSITION_BEFORE_START);
                            if (s != "br")this._.nextNode = j
                        }
                        q = 1
                    } else {
                        if (j.getFirst()) {
                            if (!h) {
                                h = this.range.clone();
                                h.setStartAt(j, CKEDITOR.POSITION_BEFORE_START)
                            }
                            j = j.getFirst();
                            continue
                        }
                        z = 1
                    }
                }
                if (z && !h) {
                    h = this.range.clone();
                    h.setStartAt(j, CKEDITOR.POSITION_BEFORE_START)
                }
                m = (!q || z) && j.equals(n);
                if (h && !q)for (; !j.getNext(d) && !m;) {
                    s = j.getParent();
                    if (s.isBlockBoundary(this.forceBrBreak && !y && {br: 1})) {
                        q = 1;
                        z = 0;
                        m || s.equals(n);
                        h.setEndAt(s, CKEDITOR.POSITION_BEFORE_END);
                        break
                    }
                    j = s;
                    z = 1;
                    m = j.equals(n);
                    i = 1
                }
                z && h.setEndAt(j, CKEDITOR.POSITION_AFTER_END);
                j = c(j, i, n);
                if ((m = !j) || q && h)break
            }
            if (!e) {
                if (!h) {
                    this._.docEndMarker && this._.docEndMarker.remove();
                    return this._.nextNode = null
                }
                e = new CKEDITOR.dom.elementPath(h.startContainer, h.root);
                j = e.blockLimit;
                q = {div: 1, th: 1, td: 1};
                e = e.block;
                if (!e && j && !this.enforceRealBlocks && q[j.getName()] && h.checkStartOfBlock() && h.checkEndOfBlock() && !j.equals(h.root))e = j; else if (!e || this.enforceRealBlocks && e.getName() == "li") {
                    e = this.range.document.createElement(b);
                    h.extractContents().appendTo(e);
                    e.trim();
                    h.insertNode(e);
                    o = l = true
                } else if (e.getName() != "li") {
                    if (!h.checkStartOfBlock() || !h.checkEndOfBlock()) {
                        e = e.clone(false);
                        h.extractContents().appendTo(e);
                        e.trim();
                        l = h.splitBlock();
                        o = !l.wasStartOfBlock;
                        l = !l.wasEndOfBlock;
                        h.insertNode(e)
                    }
                } else if (!m)this._.nextNode = e.equals(n) ? null : c(h.getBoundaryNodes().endNode, 1, n)
            }
            if (o)(h = e.getPrevious()) && h.type == CKEDITOR.NODE_ELEMENT && (h.getName() == "br" ? h.remove() : h.getLast() && h.getLast().$.nodeName.toLowerCase() == "br" && h.getLast().remove());
            if (l)(h = e.getLast()) && h.type == CKEDITOR.NODE_ELEMENT && h.getName() == "br" && (CKEDITOR.env.ie || h.getPrevious(f) || h.getNext(f)) && h.remove();
            if (!this._.nextNode)this._.nextNode = m ||
                e.equals(n) || !n ? null : c(e, 1, n);
            return e
        }};
        CKEDITOR.dom.range.prototype.createIterator = function () {
            return new b(this)
        }
    })();
    CKEDITOR.command = function (b, c) {
        this.uiItems = [];
        this.exec = function (a) {
            if (this.state == CKEDITOR.TRISTATE_DISABLED)return false;
            this.editorFocus && b.focus();
            return this.fire("exec") === false ? true : c.exec.call(this, b, a) !== false
        };
        this.refresh = function (a, b) {
            if (!this.readOnly && a.readOnly)return true;
            if (this.context && !b.isContextFor(this.context)) {
                this.disable();
                return true
            }
            this.enable();
            return this.fire("refresh", {editor: a, path: b}) === false ? true : c.refresh && c.refresh.apply(this, arguments) !== false
        };
        CKEDITOR.tools.extend(this,
            c, {modes: {wysiwyg: 1}, editorFocus: 1, contextSensitive: !!c.context, state: CKEDITOR.TRISTATE_OFF});
        CKEDITOR.event.call(this)
    };
    CKEDITOR.command.prototype = {enable: function () {
        this.state == CKEDITOR.TRISTATE_DISABLED && this.setState(!this.preserveState || typeof this.previousState == "undefined" ? CKEDITOR.TRISTATE_OFF : this.previousState)
    }, disable: function () {
        this.setState(CKEDITOR.TRISTATE_DISABLED)
    }, setState: function (b) {
        if (this.state == b)return false;
        this.previousState = this.state;
        this.state = b;
        this.fire("state");
        return true
    }, toggleState: function () {
        this.state == CKEDITOR.TRISTATE_OFF ? this.setState(CKEDITOR.TRISTATE_ON) : this.state == CKEDITOR.TRISTATE_ON &&
            this.setState(CKEDITOR.TRISTATE_OFF)
    }};
    CKEDITOR.event.implementOn(CKEDITOR.command.prototype);
    CKEDITOR.ENTER_P = 1;
    CKEDITOR.ENTER_BR = 2;
    CKEDITOR.ENTER_DIV = 3;
    CKEDITOR.config = {customConfig: "config.js", autoUpdateElement: !0, language: "", defaultLanguage: "en", contentsLangDirection: "", enterMode: CKEDITOR.ENTER_P, forceEnterMode: !1, shiftEnterMode: CKEDITOR.ENTER_BR, docType: "<!DOCTYPE html>", bodyId: "", bodyClass: "", fullPage: !1, height: 200, extraPlugins: "", removePlugins: "", protectedSource: [], tabIndex: 0, width: "", baseFloatZIndex: 1E4, blockedKeystrokes: [CKEDITOR.CTRL + 66, CKEDITOR.CTRL + 73, CKEDITOR.CTRL + 85]};
    (function () {
        CKEDITOR.focusManager = function (b) {
            if (b.focusManager)return b.focusManager;
            this.hasFocus = false;
            this.currentActive = null;
            this._ = {editor: b};
            return this
        };
        CKEDITOR.focusManager._ = {blurDelay: 200};
        CKEDITOR.focusManager.prototype = {focus: function () {
            this._.timer && clearTimeout(this._.timer);
            if (!this.hasFocus && !this._.locked) {
                var b = CKEDITOR.currentInstance;
                b && b.focusManager.blur(1);
                this.hasFocus = true;
                (b = this._.editor.container) && b.addClass("cke_focus");
                this._.editor.fire("focus")
            }
        }, lock: function () {
            this._.locked =
                1
        }, unlock: function () {
            delete this._.locked
        }, blur: function (b) {
            function c() {
                if (this.hasFocus) {
                    this.hasFocus = false;
                    var a = this._.editor.container;
                    a && a.removeClass("cke_focus");
                    this._.editor.fire("blur")
                }
            }

            if (!this._.locked) {
                this._.timer && clearTimeout(this._.timer);
                var a = CKEDITOR.focusManager._.blurDelay;
                b || !a ? c.call(this) : this._.timer = CKEDITOR.tools.setTimeout(function () {
                    delete this._.timer;
                    c.call(this)
                }, a, this)
            }
        }, add: function (b, c) {
            var a = b.getCustomData("focusmanager");
            if (!a || a != this) {
                a && a.remove(b);
                var a =
                    "focus", f = "blur";
                if (c)if (CKEDITOR.env.ie) {
                    a = "focusin";
                    f = "focusout"
                } else CKEDITOR.event.useCapture = 1;
                var e = {blur: function () {
                    b.equals(this.currentActive) && this.blur()
                }, focus: function () {
                    this.currentActive = b;
                    this.focus()
                }};
                b.on(a, e.focus, this);
                b.on(f, e.blur, this);
                if (c)CKEDITOR.event.useCapture = 0;
                b.setCustomData("focusmanager", this);
                b.setCustomData("focusmanager_handlers", e)
            }
        }, remove: function (b) {
            b.removeCustomData("focusmanager");
            var c = b.removeCustomData("focusmanager_handlers");
            b.removeListener("blur",
                c.blur);
            b.removeListener("focus", c.focus)
        }}
    })();
    CKEDITOR.keystrokeHandler = function (b) {
        if (b.keystrokeHandler)return b.keystrokeHandler;
        this.keystrokes = {};
        this.blockedKeystrokes = {};
        this._ = {editor: b};
        return this
    };
    (function () {
        var b, c = function (a) {
            var a = a.data, c = a.getKeystroke(), d = this.keystrokes[c], g = this._.editor;
            b = g.fire("key", {keyCode: c}) === false;
            if (!b) {
                d && (b = g.execCommand(d, {from: "keystrokeHandler"}) !== false);
                b || (b = !!this.blockedKeystrokes[c])
            }
            b && a.preventDefault(true);
            return!b
        }, a = function (a) {
            if (b) {
                b = false;
                a.data.preventDefault(true)
            }
        };
        CKEDITOR.keystrokeHandler.prototype = {attach: function (b) {
            b.on("keydown", c, this);
            if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac)b.on("keypress", a, this)
        }}
    })();
    (function () {
        CKEDITOR.lang = {languages: {af: 1, ar: 1, bg: 1, bn: 1, bs: 1, ca: 1, cs: 1, cy: 1, da: 1, de: 1, el: 1, "en-au": 1, "en-ca": 1, "en-gb": 1, en: 1, eo: 1, es: 1, et: 1, eu: 1, fa: 1, fi: 1, fo: 1, "fr-ca": 1, fr: 1, gl: 1, gu: 1, he: 1, hi: 1, hr: 1, hu: 1, is: 1, it: 1, ja: 1, ka: 1, km: 1, ko: 1, ku: 1, lt: 1, lv: 1, mn: 1, ms: 1, nb: 1, nl: 1, no: 1, pl: 1, "pt-br": 1, pt: 1, ro: 1, ru: 1, sk: 1, sl: 1, "sr-latn": 1, sr: 1, sv: 1, th: 1, tr: 1, uk: 1, vi: 1, "zh-cn": 1, zh: 1}, load: function (b, c, a) {
            if (!b || !CKEDITOR.lang.languages[b])b = this.detect(c, b);
            this[b] ? a(b, this[b]) : CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("lang/" +
                b + ".js"), function () {
                a(b, this[b])
            }, this)
        }, detect: function (b, c) {
            var a = this.languages, c = c || navigator.userLanguage || navigator.language || b, f = c.toLowerCase().match(/([a-z]+)(?:-([a-z]+))?/), e = f[1], f = f[2];
            a[e + "-" + f] ? e = e + "-" + f : a[e] || (e = null);
            CKEDITOR.lang.detect = e ? function () {
                return e
            } : function (a) {
                return a
            };
            return e || b
        }}
    })();
    CKEDITOR.scriptLoader = function () {
        var b = {}, c = {};
        return{load: function (a, f, e, d) {
            var g = typeof a == "string";
            g && (a = [a]);
            e || (e = CKEDITOR);
            var k = a.length, h = [], m = [], n = function (a) {
                f && (g ? f.call(e, a) : f.call(e, h, m))
            };
            if (k === 0)n(true); else {
                var o = function (a, b) {
                    (b ? h : m).push(a);
                    if (--k <= 0) {
                        d && CKEDITOR.document.getDocumentElement().removeStyle("cursor");
                        n(b)
                    }
                }, l = function (a, l) {
                    b[a] = 1;
                    var d = c[a];
                    delete c[a];
                    for (var j = 0; j < d.length; j++)d[j](a, l)
                }, j = function (a) {
                    if (b[a])o(a, true); else {
                        var d = c[a] || (c[a] = []);
                        d.push(o);
                        if (!(d.length >
                            1)) {
                            var j = new CKEDITOR.dom.element("script");
                            j.setAttributes({type: "text/javascript", src: a});
                            if (f)if (CKEDITOR.env.ie)j.$.onreadystatechange = function () {
                                if (j.$.readyState == "loaded" || j.$.readyState == "complete") {
                                    j.$.onreadystatechange = null;
                                    l(a, true)
                                }
                            }; else {
                                j.$.onload = function () {
                                    setTimeout(function () {
                                        l(a, true)
                                    }, 0)
                                };
                                j.$.onerror = function () {
                                    l(a, false)
                                }
                            }
                            j.appendTo(CKEDITOR.document.getHead())
                        }
                    }
                };
                d && CKEDITOR.document.getDocumentElement().setStyle("cursor", "wait");
                for (var q = 0; q < k; q++)j(a[q])
            }
        }}
    }();
    CKEDITOR.resourceManager = function (b, c) {
        this.basePath = b;
        this.fileName = c;
        this.registered = {};
        this.loaded = {};
        this.externals = {};
        this._ = {waitingList: {}}
    };
    CKEDITOR.resourceManager.prototype = {add: function (b, c) {
        if (this.registered[b])throw'[CKEDITOR.resourceManager.add] The resource name "' + b + '" is already registered.';
        var a = this.registered[b] = c || {};
        a.name = b;
        a.path = this.getPath(b);
        CKEDITOR.fire(b + CKEDITOR.tools.capitalize(this.fileName) + "Ready", a);
        return this.get(b)
    }, get: function (b) {
        return this.registered[b] || null
    }, getPath: function (b) {
        var c = this.externals[b];
        return CKEDITOR.getUrl(c && c.dir || this.basePath + b + "/")
    }, getFilePath: function (b) {
        var c = this.externals[b];
        return CKEDITOR.getUrl(this.getPath(b) + (c && typeof c.file == "string" ? c.file : this.fileName + ".js"))
    }, addExternal: function (b, c, a) {
        for (var b = b.split(","), f = 0; f < b.length; f++)this.externals[b[f]] = {dir: c, file: a}
    }, load: function (b, c, a) {
        CKEDITOR.tools.isArray(b) || (b = b ? [b] : []);
        for (var f = this.loaded, e = this.registered, d = [], g = {}, k = {}, h = 0; h < b.length; h++) {
            var m = b[h];
            if (m)if (!f[m] && !e[m]) {
                var n = this.getFilePath(m);
                d.push(n);
                n in g || (g[n] = []);
                g[n].push(m)
            } else k[m] = this.get(m)
        }
        CKEDITOR.scriptLoader.load(d, function (b, l) {
            if (l.length)throw'[CKEDITOR.resourceManager.load] Resource name "' + g[l[0]].join(",") + '" was not found at "' + l[0] + '".';
            for (var d = 0; d < b.length; d++)for (var e = g[b[d]], h = 0; h < e.length; h++) {
                var m = e[h];
                k[m] = this.get(m);
                f[m] = 1
            }
            c.call(a, k)
        }, this)
    }};
    CKEDITOR.plugins = new CKEDITOR.resourceManager("plugins/", "plugin");
    CKEDITOR.plugins.load = CKEDITOR.tools.override(CKEDITOR.plugins.load, function (b) {
        var c = {};
        return function (a, f, e) {
            var d = {}, g = function (a) {
                b.call(this, a, function (a) {
                    CKEDITOR.tools.extend(d, a);
                    var b = [], k;
                    for (k in a) {
                        var o = a[k], l = o && o.requires;
                        if (!c[k]) {
                            if (o.icons)for (var j = o.icons.split(","), q = 0; q < j.length; q++)CKEDITOR.skin.addIcon(j[q], o.path + "icons/" + j[q] + ".png");
                            c[k] = 1
                        }
                        if (l) {
                            l.split && (l = l.split(","));
                            for (o = 0; o < l.length; o++)d[l[o]] || b.push(l[o])
                        }
                    }
                    if (b.length)g.call(this, b); else {
                        for (k in d) {
                            o = d[k];
                            if (o.onLoad && !o.onLoad._called) {
                                o.onLoad() === false && delete d[k];
                                o.onLoad._called = 1
                            }
                        }
                        f && f.call(e || window, d)
                    }
                }, this)
            };
            g.call(this, a)
        }
    });
    CKEDITOR.plugins.setLang = function (b, c, a) {
        var f = this.get(b), b = f.langEntries || (f.langEntries = {}), f = f.lang || (f.lang = []);
        f.split && (f = f.split(","));
        CKEDITOR.tools.indexOf(f, c) == -1 && f.push(c);
        b[c] = a
    };
    CKEDITOR.ui = function (b) {
        if (b.ui)return b.ui;
        this.items = {};
        this.instances = {};
        this.editor = b;
        this._ = {handlers: {}};
        return this
    };
    CKEDITOR.ui.prototype = {add: function (b, c, a) {
        a.name = b.toLowerCase();
        var f = this.items[b] = {type: c, command: a.command || null, args: Array.prototype.slice.call(arguments, 2)};
        CKEDITOR.tools.extend(f, a)
    }, get: function (b) {
        return this.instances[b]
    }, create: function (b) {
        var c = this.items[b], a = c && this._.handlers[c.type], f = c && c.command && this.editor.getCommand(c.command), a = a && a.create.apply(this, c.args);
        this.instances[b] = a;
        f && f.uiItems.push(a);
        if (a && !a.type)a.type = c.type;
        return a
    }, addHandler: function (b, c) {
        this._.handlers[b] =
            c
    }, space: function (b) {
        return CKEDITOR.document.getById(this.spaceId(b))
    }, spaceId: function (b) {
        return this.editor.id + "_" + b
    }};
    CKEDITOR.event.implementOn(CKEDITOR.ui);
    (function () {
        function b(b, j, o) {
            CKEDITOR.event.call(this);
            b = b && CKEDITOR.tools.clone(b);
            if (j !== void 0) {
                if (j instanceof CKEDITOR.dom.element) {
                    if (!o)throw Error("One of the element mode must be specified.");
                } else throw Error("Expect element of type CKEDITOR.dom.element.");
                if (CKEDITOR.env.ie && CKEDITOR.env.quirks && o == CKEDITOR.ELEMENT_MODE_INLINE)throw Error("Inline element mode is not supported on IE quirks.");
                if (o == CKEDITOR.ELEMENT_MODE_INLINE && !j.is(CKEDITOR.dtd.$editable) || o == CKEDITOR.ELEMENT_MODE_REPLACE &&
                    j.is(CKEDITOR.dtd.$nonBodyContent))throw Error('The specified element mode is not supported on element: "' + j.getName() + '".');
                this.element = j;
                this.elementMode = o;
                this.name = this.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO && (j.getId() || j.getNameAtt())
            } else this.elementMode = CKEDITOR.ELEMENT_MODE_NONE;
            this._ = {};
            this.commands = {};
            this.templates = {};
            this.name = this.name || c();
            this.id = CKEDITOR.tools.getNextId();
            this.config = CKEDITOR.tools.prototypedCopy(CKEDITOR.config);
            this.ui = new CKEDITOR.ui(this);
            this.focusManager =
                new CKEDITOR.focusManager(this);
            this.keystrokeHandler = new CKEDITOR.keystrokeHandler(this);
            this.on("mode", a);
            this.on("readOnly", a);
            this.on("selectionChange", f);
            this.on("instanceReady", function () {
                this.config.startupFocus && this.focus()
            });
            CKEDITOR.fire("instanceCreated", null, this);
            CKEDITOR.add(this);
            CKEDITOR.tools.setTimeout(function () {
                d(this, b)
            }, 0, this)
        }

        function c() {
            do var a = "editor" + ++n; while (CKEDITOR.instances[a]);
            return a
        }

        function a() {
            var a, b = this.commands, c = this.mode;
            if (c)for (var d in b) {
                a = b[d];
                a[a.startDisabled ? "disable" : this.readOnly && !a.readOnly ? "disable" : a.modes[c] ? "enable" : "disable"]()
            }
        }

        function f(a) {
            var b = this.commands, c = a.editor, d = a.data.path, o;
            for (o in b) {
                a = b[o];
                a.contextSensitive && a.refresh(c, d)
            }
        }

        function e(a) {
            var b = a.config.customConfig;
            if (!b)return false;
            var b = CKEDITOR.getUrl(b), c = o[b] || (o[b] = {});
            if (c.fn) {
                c.fn.call(a, a.config);
                (CKEDITOR.getUrl(a.config.customConfig) == b || !e(a)) && a.fireOnce("customConfigLoaded")
            } else CKEDITOR.scriptLoader.load(b, function () {
                c.fn = CKEDITOR.editorConfig ?
                    CKEDITOR.editorConfig : function () {
                };
                e(a)
            });
            return true
        }

        function d(a, b) {
            a.on("customConfigLoaded", function () {
                if (b) {
                    if (b.on)for (var c in b.on)a.on(c, b.on[c]);
                    CKEDITOR.tools.extend(a.config, b, true);
                    delete a.config.on
                }
                a.readOnly = !(!a.config.readOnly && !(a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a.element.isReadOnly() : a.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && a.element.getAttribute("disabled")));
                a.blockless = a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE && !CKEDITOR.dtd[a.element.getName()].p;
                a.tabIndex =
                    a.config.tabIndex || a.element && a.element.getAttribute("tabindex") || 0;
                if (a.config.skin)CKEDITOR.skinName = a.config.skin;
                a.fireOnce("configLoaded");
                a.dataProcessor = new CKEDITOR.htmlDataProcessor(a);
                g(a)
            });
            if (b && b.customConfig != void 0)a.config.customConfig = b.customConfig;
            e(a) || a.fireOnce("customConfigLoaded")
        }

        function g(a) {
            CKEDITOR.skin.loadPart("editor", function () {
                k(a)
            })
        }

        function k(a) {
            CKEDITOR.lang.load(a.config.language, a.config.defaultLanguage, function (b, c) {
                a.langCode = b;
                a.lang = CKEDITOR.tools.prototypedCopy(c);
                if (CKEDITOR.env.gecko && CKEDITOR.env.version < 10900 && a.lang.dir == "rtl")a.lang.dir = "ltr";
                if (!a.config.contentsLangDirection)a.config.contentsLangDirection = a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a.element.getDirection(1) : a.lang.dir;
                a.fire("langLoaded");
                h(a)
            })
        }

        function h(a) {
            var b = a.config, c = b.plugins, d = b.extraPlugins, o = b.removePlugins;
            if (d)var e = RegExp("(?:^|,)(?:" + d.replace(/\s*,\s*/g, "|") + ")(?=,|$)", "g"), c = c.replace(e, ""), c = c + ("," + d);
            if (o)var g = RegExp("(?:^|,)(?:" + o.replace(/\s*,\s*/g, "|") + ")(?=,|$)",
                "g"), c = c.replace(g, "");
            CKEDITOR.env.air && (c = c + ",adobeair");
            CKEDITOR.plugins.load(c.split(","), function (c) {
                var d = [], o = [], e = [];
                a.plugins = c;
                for (var f in c) {
                    var i = c[f], h = i.lang, q = null, t = i.requires, k;
                    CKEDITOR.tools.isArray(t) && (t = t.join(","));
                    if (t && (k = t.match(g)))for (; t = k.pop();)CKEDITOR.tools.setTimeout(function (a, b) {
                        throw Error('Plugin "' + a.replace(",", "") + '" cannot be removed from the plugins list, because it\'s required by "' + b + '" plugin.');
                    }, 0, null, [t, f]);
                    if (h && !a.lang[f]) {
                        h.split && (h = h.split(","));
                        if (CKEDITOR.tools.indexOf(h, a.langCode) >= 0)q = a.langCode; else {
                            q = a.langCode.replace(/-.*/, "");
                            q = q != a.langCode && CKEDITOR.tools.indexOf(h, q) >= 0 ? q : CKEDITOR.tools.indexOf(h, "en") >= 0 ? "en" : h[0]
                        }
                        if (!i.langEntries || !i.langEntries[q])e.push(CKEDITOR.getUrl(i.path + "lang/" + q + ".js")); else {
                            a.lang[f] = i.langEntries[q];
                            q = null
                        }
                    }
                    o.push(q);
                    d.push(i)
                }
                CKEDITOR.scriptLoader.load(e, function () {
                    for (var c = ["beforeInit", "init", "afterInit"], e = 0; e < c.length; e++)for (var g = 0; g < d.length; g++) {
                        var f = d[g];
                        e === 0 && (o[g] && f.lang && f.langEntries) &&
                        (a.lang[f.name] = f.langEntries[o[g]]);
                        if (f[c[e]])f[c[e]](a)
                    }
                    a.fireOnce("pluginsLoaded");
                    b.keystrokes && a.setKeystroke(a.config.keystrokes);
                    for (g = 0; g < a.config.blockedKeystrokes.length; g++)a.keystrokeHandler.blockedKeystrokes[a.config.blockedKeystrokes[g]] = 1;
                    a.fireOnce("loaded");
                    CKEDITOR.fire("instanceLoaded", null, a)
                })
            })
        }

        function m() {
            var a = this.element;
            if (a && this.elementMode != CKEDITOR.ELEMENT_MODE_APPENDTO) {
                var b = this.getData();
                this.config.htmlEncodeOutput && (b = CKEDITOR.tools.htmlEncode(b));
                a.is("textarea") ?
                    a.setValue(b) : a.setHtml(b);
                return true
            }
            return false
        }

        b.prototype = CKEDITOR.editor.prototype;
        CKEDITOR.editor = b;
        var n = 0, o = {};
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {addCommand: function (a, b) {
            return this.commands[a] = new CKEDITOR.command(this, b)
        }, destroy: function (a) {
            this.fire("beforeDestroy");
            !a && m.call(this);
            this.editable(null);
            this.fire("destroy");
            this.removeAllListeners();
            CKEDITOR.remove(this);
            CKEDITOR.fire("instanceDestroyed", null, this)
        }, elementPath: function (a) {
            return(a = a || this.getSelection().getStartElement()) ?
                new CKEDITOR.dom.elementPath(a, this.editable()) : null
        }, createRange: function () {
            var a = this.editable();
            return a ? new CKEDITOR.dom.range(a) : null
        }, execCommand: function (a, b) {
            var c = this.getCommand(a), d = {name: a, commandData: b, command: c};
            if (c && c.state != CKEDITOR.TRISTATE_DISABLED && this.fire("beforeCommandExec", d) !== true) {
                d.returnValue = c.exec(d.commandData);
                if (!c.async && this.fire("afterCommandExec", d) !== true)return d.returnValue
            }
            return false
        }, getCommand: function (a) {
            return this.commands[a]
        }, getData: function (a) {
            !a &&
            this.fire("beforeGetData");
            var b = this._.data;
            if (typeof b != "string")b = (b = this.element) && this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE ? b.is("textarea") ? b.getValue() : b.getHtml() : "";
            b = {dataValue: b};
            !a && this.fire("getData", b);
            return b.dataValue
        }, getSnapshot: function () {
            var a = this.fire("getSnapshot");
            if (typeof a != "string") {
                var b = this.element;
                b && this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && (a = b.is("textarea") ? b.getValue() : b.getHtml())
            }
            return a
        }, loadSnapshot: function (a) {
            this.fire("loadSnapshot", a)
        },
            setData: function (a, b, c) {
                if (b)this.on("dataReady", function (a) {
                    a.removeListener();
                    b.call(a.editor)
                });
                a = {dataValue: a};
                !c && this.fire("setData", a);
                this._.data = a.dataValue;
                !c && this.fire("afterSetData", a)
            }, setReadOnly: function (a) {
                a = a == void 0 || a;
                if (this.readOnly != a) {
                    this.readOnly = a;
                    this.editable().setReadOnly(a);
                    this.fire("readOnly")
                }
            }, insertHtml: function (a, b) {
                this.fire("insertHtml", {dataValue: a, mode: b})
            }, insertText: function (a) {
                this.fire("insertText", a)
            }, insertElement: function (a) {
                this.fire("insertElement",
                    a)
            }, focus: function () {
                this.fire("beforeFocus")
            }, checkDirty: function () {
                return this._.previousValue !== this.getSnapshot()
            }, resetDirty: function () {
                this._.previousValue = this.getSnapshot()
            }, updateElement: function () {
                return m.call(this)
            }, setKeystroke: function () {
                for (var a = this.keystrokeHandler.keystrokes, b = CKEDITOR.tools.isArray(arguments[0]) ? arguments[0] : [[].slice.call(arguments, 0)], c, d, o = b.length; o--;) {
                    c = b[o];
                    d = 0;
                    if (CKEDITOR.tools.isArray(c)) {
                        d = c[1];
                        c = c[0]
                    }
                    d ? a[c] = d : delete a[c]
                }
            }})
    })();
    CKEDITOR.ELEMENT_MODE_NONE = 0;
    CKEDITOR.ELEMENT_MODE_REPLACE = 1;
    CKEDITOR.ELEMENT_MODE_APPENDTO = 2;
    CKEDITOR.ELEMENT_MODE_INLINE = 3;
    CKEDITOR.htmlParser = function () {
        this._ = {htmlPartsRegex: RegExp("<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)--\>)|(?:([^\\s>]+)\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\"'>])*)\\/?>))", "g")}
    };
    (function () {
        var b = /([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g, c = {checked: 1, compact: 1, declare: 1, defer: 1, disabled: 1, ismap: 1, multiple: 1, nohref: 1, noresize: 1, noshade: 1, nowrap: 1, readonly: 1, selected: 1};
        CKEDITOR.htmlParser.prototype = {onTagOpen: function () {
        }, onTagClose: function () {
        }, onText: function () {
        }, onCDATA: function () {
        }, onComment: function () {
        }, parse: function (a) {
            for (var f, e, d = 0, g; f = this._.htmlPartsRegex.exec(a);) {
                e = f.index;
                if (e > d) {
                    d = a.substring(d, e);
                    if (g)g.push(d); else this.onText(d)
                }
                d =
                    this._.htmlPartsRegex.lastIndex;
                if (e = f[1]) {
                    e = e.toLowerCase();
                    if (g && CKEDITOR.dtd.$cdata[e]) {
                        this.onCDATA(g.join(""));
                        g = null
                    }
                    if (!g) {
                        this.onTagClose(e);
                        continue
                    }
                }
                if (g)g.push(f[0]); else if (e = f[3]) {
                    e = e.toLowerCase();
                    if (!/="/.test(e)) {
                        var k = {}, h;
                        f = f[4];
                        var m = !!(f && f.charAt(f.length - 1) == "/");
                        if (f)for (; h = b.exec(f);) {
                            var n = h[1].toLowerCase();
                            h = h[2] || h[3] || h[4] || "";
                            k[n] = !h && c[n] ? n : h
                        }
                        this.onTagOpen(e, k, m);
                        !g && CKEDITOR.dtd.$cdata[e] && (g = [])
                    }
                } else if (e = f[2])this.onComment(e)
            }
            if (a.length > d)this.onText(a.substring(d,
                a.length))
        }}
    })();
    CKEDITOR.htmlParser.basicWriter = CKEDITOR.tools.createClass({$: function () {
        this._ = {output: []}
    }, proto: {openTag: function (b) {
        this._.output.push("<", b)
    }, openTagClose: function (b, c) {
        c ? this._.output.push(" />") : this._.output.push(">")
    }, attribute: function (b, c) {
        typeof c == "string" && (c = CKEDITOR.tools.htmlEncodeAttr(c));
        this._.output.push(" ", b, '="', c, '"')
    }, closeTag: function (b) {
        this._.output.push("</", b, ">")
    }, text: function (b) {
        this._.output.push(b)
    }, comment: function (b) {
        this._.output.push("<\!--", b, "--\>")
    }, write: function (b) {
        this._.output.push(b)
    },
        reset: function () {
            this._.output = [];
            this._.indent = false
        }, getHtml: function (b) {
            var c = this._.output.join("");
            b && this.reset();
            return c
        }}});
    CKEDITOR.htmlParser.comment = function (b) {
        this.value = b;
        this._ = {isBlockLike: false}
    };
    CKEDITOR.htmlParser.comment.prototype = {type: CKEDITOR.NODE_COMMENT, writeHtml: function (b, c) {
        var a = this.value;
        if (c) {
            if (!(a = c.onComment(a, this)))return;
            if (typeof a != "string") {
                a.parent = this.parent;
                a.writeHtml(b, c);
                return
            }
        }
        b.comment(a)
    }};
    (function () {
        CKEDITOR.htmlParser.text = function (b) {
            this.value = b;
            this._ = {isBlockLike: false}
        };
        CKEDITOR.htmlParser.text.prototype = {type: CKEDITOR.NODE_TEXT, writeHtml: function (b, c) {
            var a = this.value;
            (!c || (a = c.onText(a, this))) && b.text(a)
        }}
    })();
    (function () {
        CKEDITOR.htmlParser.cdata = function (b) {
            this.value = b
        };
        CKEDITOR.htmlParser.cdata.prototype = {type: CKEDITOR.NODE_TEXT, writeHtml: function (b) {
            b.write(this.value)
        }}
    })();
    CKEDITOR.htmlParser.fragment = function () {
        this.children = [];
        this.parent = null;
        this._ = {isBlockLike: true, hasInlineStarted: false}
    };
    (function () {
        function b(a) {
            return a.name == "a" && a.attributes.href || CKEDITOR.dtd.$removeEmpty[a.name]
        }

        var c = CKEDITOR.tools.extend({table: 1, ul: 1, ol: 1, dl: 1}, CKEDITOR.dtd.table, CKEDITOR.dtd.ul, CKEDITOR.dtd.ol, CKEDITOR.dtd.dl), a = {ol: 1, ul: 1}, f = CKEDITOR.tools.extend({}, {html: 1}, CKEDITOR.dtd.html, CKEDITOR.dtd.body, CKEDITOR.dtd.head, {style: 1, script: 1});
        CKEDITOR.htmlParser.fragment.fromHtml = function (e, d, g) {
            function k(a) {
                var b;
                if (y.length > 0)for (var c = 0; c < y.length; c++) {
                    var d = y[c], l = d.name, o = CKEDITOR.dtd[l], j = i.name &&
                        CKEDITOR.dtd[i.name];
                    if ((!j || j[l]) && (!a || !o || o[a] || !CKEDITOR.dtd[a])) {
                        if (!b) {
                            h();
                            b = 1
                        }
                        d = d.clone();
                        d.parent = i;
                        i = d;
                        y.splice(c, 1);
                        c--
                    } else if (l == i.name) {
                        n(i, i.parent, 1);
                        c--
                    }
                }
            }

            function h() {
                for (; z.length;)n(z.shift(), i)
            }

            function m(a) {
                if (a._.isBlockLike && a.name != "pre" && a.name != "textarea") {
                    var b = a.children.length, c = a.children[b - 1], d;
                    if (c && c.type == CKEDITOR.NODE_TEXT)(d = CKEDITOR.tools.rtrim(c.value)) ? c.value = d : a.children.length = b - 1
                }
            }

            function n(a, c, d) {
                var c = c || i || q, l = i;
                if (a.previous === void 0) {
                    if (o(c, a)) {
                        i = c;
                        j.onTagOpen(g, {});
                        a.returnPoint = c = i
                    }
                    m(a);
                    (!b(a) || a.children.length) && c.add(a);
                    a.name == "pre" && (A = false);
                    a.name == "textarea" && (s = false)
                }
                if (a.returnPoint) {
                    i = a.returnPoint;
                    delete a.returnPoint
                } else i = d ? c : l
            }

            function o(a, b) {
                if ((a == q || a.name == "body") && g && (!a.name || CKEDITOR.dtd[a.name][g])) {
                    var c, d;
                    return(c = b.attributes && (d = b.attributes["data-cke-real-element-type"]) ? d : b.name) && c in CKEDITOR.dtd.$inline && !(c in CKEDITOR.dtd.head) && !b.isOrphan || b.type == CKEDITOR.NODE_TEXT
                }
            }

            function l(a, b) {
                return a in CKEDITOR.dtd.$listItem ||
                    a in CKEDITOR.dtd.$tableContent ? a == b || a == "dt" && b == "dd" || a == "dd" && b == "dt" : false
            }

            var j = new CKEDITOR.htmlParser, q = d instanceof CKEDITOR.htmlParser.element ? d : typeof d == "string" ? new CKEDITOR.htmlParser.element(d) : new CKEDITOR.htmlParser.fragment, y = [], z = [], i = q, s = q.name == "textarea", A = q.name == "pre";
            j.onTagOpen = function (d, o, g, e) {
                o = new CKEDITOR.htmlParser.element(d, o);
                if (o.isUnknown && g)o.isEmpty = true;
                o.isOptionalClose = e;
                if (b(o))y.push(o); else {
                    if (d == "pre")A = true; else {
                        if (d == "br" && A) {
                            i.add(new CKEDITOR.htmlParser.text("\n"));
                            return
                        }
                        d == "textarea" && (s = true)
                    }
                    if (d == "br")z.push(o); else {
                        for (; ;) {
                            e = (g = i.name) ? CKEDITOR.dtd[g] || (i._.isBlockLike ? CKEDITOR.dtd.div : CKEDITOR.dtd.span) : f;
                            if (!o.isUnknown && !i.isUnknown && !e[d])if (i.isOptionalClose)j.onTagClose(g); else if (d in a && g in a) {
                                g = i.children;
                                (g = g[g.length - 1]) && g.name == "li" || n(g = new CKEDITOR.htmlParser.element("li"), i);
                                !o.returnPoint && (o.returnPoint = i);
                                i = g
                            } else if (d in CKEDITOR.dtd.$listItem && !l(d, g))j.onTagOpen(d == "li" ? "ul" : "dl", {}, 0, 1); else if (g in c && !l(d, g)) {
                                !o.returnPoint &&
                                (o.returnPoint = i);
                                i = i.parent
                            } else {
                                g in CKEDITOR.dtd.$inline && y.unshift(i);
                                if (i.parent)n(i, i.parent, 1); else {
                                    o.isOrphan = 1;
                                    break
                                }
                            } else break
                        }
                        k(d);
                        h();
                        o.parent = i;
                        o.isEmpty ? n(o) : i = o
                    }
                }
            };
            j.onTagClose = function (a) {
                for (var b = y.length - 1; b >= 0; b--)if (a == y[b].name) {
                    y.splice(b, 1);
                    return
                }
                for (var c = [], d = [], o = i; o != q && o.name != a;) {
                    o._.isBlockLike || d.unshift(o);
                    c.push(o);
                    o = o.returnPoint || o.parent
                }
                if (o != q) {
                    for (b = 0; b < c.length; b++) {
                        var l = c[b];
                        n(l, l.parent)
                    }
                    i = o;
                    o._.isBlockLike && h();
                    n(o, o.parent);
                    if (o == i)i = i.parent;
                    y = y.concat(d)
                }
                a ==
                    "body" && (g = false)
            };
            j.onText = function (b) {
                if ((!i._.hasInlineStarted || z.length) && !A && !s) {
                    b = CKEDITOR.tools.ltrim(b);
                    if (b.length === 0)return
                }
                var d = i.name, l = d ? CKEDITOR.dtd[d] || (i._.isBlockLike ? CKEDITOR.dtd.div : CKEDITOR.dtd.span) : f;
                if (!s && !l["#"] && d in c) {
                    j.onTagOpen(d in a ? "li" : d == "dl" ? "dd" : d == "table" ? "tr" : d == "tr" ? "td" : "");
                    j.onText(b)
                } else {
                    h();
                    k();
                    !A && !s && (b = b.replace(/[\t\r\n ]{2,}|[\t\r\n]/g, " "));
                    b = new CKEDITOR.htmlParser.text(b);
                    if (o(i, b))this.onTagOpen(g, {}, 0, 1);
                    i.add(b)
                }
            };
            j.onCDATA = function (a) {
                i.add(new CKEDITOR.htmlParser.cdata(a))
            };
            j.onComment = function (a) {
                h();
                k();
                i.add(new CKEDITOR.htmlParser.comment(a))
            };
            j.parse(e);
            for (h(!CKEDITOR.env.ie && 1); i != q;)n(i, i.parent, 1);
            m(q);
            return q
        };
        CKEDITOR.htmlParser.fragment.prototype = {type: CKEDITOR.NODE_DOCUMENT_FRAGMENT, add: function (a, b) {
            isNaN(b) && (b = this.children.length);
            var c = b > 0 ? this.children[b - 1] : null;
            if (c) {
                if (a._.isBlockLike && c.type == CKEDITOR.NODE_TEXT) {
                    c.value = CKEDITOR.tools.rtrim(c.value);
                    if (c.value.length === 0) {
                        this.children.pop();
                        this.add(a);
                        return
                    }
                }
                c.next = a
            }
            a.previous = c;
            a.parent = this;
            this.children.splice(b, 0, a);
            if (!this._.hasInlineStarted)this._.hasInlineStarted = a.type == CKEDITOR.NODE_TEXT || a.type == CKEDITOR.NODE_ELEMENT && !a._.isBlockLike
        }, writeHtml: function (a, b) {
            var c;
            this.filterChildren = function () {
                var a = new CKEDITOR.htmlParser.basicWriter;
                this.writeChildrenHtml.call(this, a, b);
                a = a.getHtml();
                this.children = (new CKEDITOR.htmlParser.fragment.fromHtml(a)).children;
                c = 1
            };
            b && b.onRoot(this);
            this.writeChildrenHtml(a, c ? null : b)
        }, writeChildrenHtml: function (a, b, c) {
            if (c && !this.parent && b)b.onRoot(this);
            for (c = 0; c < this.children.length; c++)this.children[c].writeHtml(a, b)
        }}
    })();
    (function () {
        function b(a, b) {
            for (var c = 0; a && c < b.length; c++)var e = b[c], a = a.replace(e[0], e[1]);
            return a
        }

        function c(a, b, c) {
            typeof b == "function" && (b = [b]);
            var e, f;
            f = a.length;
            var n = b && b.length;
            if (n) {
                for (e = 0; e < f && a[e].pri < c; e++);
                for (f = n - 1; f >= 0; f--)if (n = b[f]) {
                    n.pri = c;
                    a.splice(e, 0, n)
                }
            }
        }

        function a(a, b, c) {
            if (b)for (var e in b) {
                var m = a[e];
                a[e] = f(m, b[e], c);
                m || a.$length++
            }
        }

        function f(a, b, f) {
            if (b) {
                b.pri = f;
                if (a) {
                    if (a.splice)c(a, b, f); else {
                        a = a.pri > f ? [b, a] : [a, b];
                        a.filter = e
                    }
                    return a
                }
                return b.filter = b
            }
        }

        function e(a) {
            for (var b =
                a.type || a instanceof CKEDITOR.htmlParser.fragment, c = 0; c < this.length; c++) {
                if (b)var e = a.type, f = a.name;
                var n = this[c].apply(window, arguments);
                if (n === false)return n;
                if (b) {
                    if (n && (n.name != f || n.type != e))return n
                } else if (typeof n != "string")return n;
                n != void 0 && (a = n)
            }
            return a
        }

        CKEDITOR.htmlParser.filter = CKEDITOR.tools.createClass({$: function (a) {
            this._ = {elementNames: [], attributeNames: [], elements: {$length: 0}, attributes: {$length: 0}};
            a && this.addRules(a, 10)
        }, proto: {addRules: function (b, e) {
            typeof e != "number" && (e = 10);
            c(this._.elementNames, b.elementNames, e);
            c(this._.attributeNames, b.attributeNames, e);
            a(this._.elements, b.elements, e);
            a(this._.attributes, b.attributes, e);
            this._.text = f(this._.text, b.text, e) || this._.text;
            this._.comment = f(this._.comment, b.comment, e) || this._.comment;
            this._.root = f(this._.root, b.root, e) || this._.root
        }, onElementName: function (a) {
            return b(a, this._.elementNames)
        }, onAttributeName: function (a) {
            return b(a, this._.attributeNames)
        }, onText: function (a) {
            var b = this._.text;
            return b ? b.filter(a) : a
        }, onComment: function (a, b) {
            var c = this._.comment;
            return c ? c.filter(a, b) : a
        }, onRoot: function (a) {
            var b = this._.root;
            return b ? b.filter(a) : a
        }, onElement: function (a) {
            for (var b = [this._.elements["^"], this._.elements[a.name], this._.elements.$], c, e = 0; e < 3; e++)if (c = b[e]) {
                c = c.filter(a, this);
                if (c === false)return null;
                if (c && c != a)return this.onNode(c);
                if (a.parent && !a.name)break
            }
            return a
        }, onNode: function (a) {
            var b = a.type;
            return b == CKEDITOR.NODE_ELEMENT ? this.onElement(a) : b == CKEDITOR.NODE_TEXT ? new CKEDITOR.htmlParser.text(this.onText(a.value)) :
                b == CKEDITOR.NODE_COMMENT ? new CKEDITOR.htmlParser.comment(this.onComment(a.value)) : null
        }, onAttribute: function (a, b, c) {
            if (b = this._.attributes[b]) {
                a = b.filter(c, a, this);
                if (a === false)return false;
                if (typeof a != "undefined")return a
            }
            return c
        }}})
    })();
    (function () {
        function b(b, c) {
            function o(a) {
                return a || CKEDITOR.env.ie ? new CKEDITOR.htmlParser.text(" ") : new CKEDITOR.htmlParser.element("br", {"data-cke-bogus": 1})
            }

            function l(b, c) {
                return function (l) {
                    if (l.type != CKEDITOR.NODE_DOCUMENT_FRAGMENT) {
                        var e = [], g = a(l), i, K;
                        if (g)for (j(g, 1) && e.push(g); g;) {
                            if (d(g) && (i = f(g)) && j(i))if ((K = f(i)) && !d(K))e.push(i); else {
                                var h = i, q = o(t), m = h.parent.children, y = CKEDITOR.tools.indexOf(m, h);
                                m.splice(y + 1, 0, q);
                                m = h.next;
                                h.next = q;
                                q.previous = h;
                                q.parent = h.parent;
                                q.next = m;
                                k(i)
                            }
                            g = g.previous
                        }
                        for (g =
                                 0; g < e.length; g++)k(e[g]);
                        if (e = CKEDITOR.env.opera && !b || (typeof c == "function" ? c(l) !== false : c))if (!t && CKEDITOR.env.ie && l.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT)e = false; else if (!t && CKEDITOR.env.ie && (document.documentMode > 7 || l.name in CKEDITOR.dtd.tr || l.name in CKEDITOR.dtd.$listItem))e = false; else {
                            e = a(l);
                            e = !e || l.name == "form" && e.name == "input"
                        }
                        e && l.add(o(b))
                    }
                }
            }

            function j(a, b) {
                if ((!t || !CKEDITOR.env.ie) && a.type == CKEDITOR.NODE_ELEMENT && a.name == "br" && !a.attributes["data-cke-eol"])return true;
                var c;
                if (a.type ==
                    CKEDITOR.NODE_TEXT && (c = a.value.match(s))) {
                    if (c.index) {
                        g(a, new CKEDITOR.htmlParser.text(a.value.substring(0, c.index)));
                        a.value = c[0]
                    }
                    if (CKEDITOR.env.ie && t && (!b || a.parent.name in h))return true;
                    if (!t)if ((c = a.previous) && c.name == "br" || !c || d(c))return true
                }
                return false
            }

            var i = {elements: {}}, t = c == "html", h = CKEDITOR.tools.extend({}, E), q;
            for (q in h)"#"in B[q] || delete h[q];
            for (q in h)i.elements[q] = l(t, b.config.fillEmptyBlocks !== false);
            i.root = l(t);
            i.elements.br = function (a) {
                return function (b) {
                    if (b.parent.type !=
                        CKEDITOR.NODE_DOCUMENT_FRAGMENT) {
                        var c = b.attributes;
                        if ("data-cke-bogus"in c || "data-cke-eol"in c)delete c["data-cke-bogus"]; else {
                            for (c = b.next; c && e(c);)c = c.next;
                            var l = f(b);
                            if (!c && d(b.parent)) {
                                b = b.parent;
                                c = o(a);
                                l = b.children[b.children.length - 1];
                                b.children.push(c);
                                c.parent = b;
                                if (l) {
                                    l.next = c;
                                    c.previous = l
                                }
                            } else d(c) && (l && !d(l)) && g(c, o(a))
                        }
                    }
                }
            }(t);
            return i
        }

        function c(a) {
            return a.enterMode != CKEDITOR.ENTER_BR && a.autoParagraph !== false ? a.enterMode == CKEDITOR.ENTER_DIV ? "div" : "p" : false
        }

        function a(a) {
            for (a = a.children[a.children.length -
                1]; a && e(a);)a = a.previous;
            return a
        }

        function f(a) {
            for (a = a.previous; a && e(a);)a = a.previous;
            return a
        }

        function e(a) {
            return a.type == CKEDITOR.NODE_TEXT && !CKEDITOR.tools.trim(a.value) || a.type == CKEDITOR.NODE_ELEMENT && a.attributes["data-cke-bookmark"]
        }

        function d(a) {
            return a && (a.type == CKEDITOR.NODE_ELEMENT && a.name in E || a.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT)
        }

        function g(a, b) {
            var c = a.parent.children, d = CKEDITOR.tools.indexOf(c, a);
            c.splice(d, 0, b);
            c = a.previous;
            a.previous = b;
            b.next = a;
            b.parent = a.parent;
            if (c) {
                b.previous =
                    c;
                c.next = b
            }
        }

        function k(a) {
            var b = a.parent.children, c = CKEDITOR.tools.indexOf(b, a), d = a.previous, a = a.next;
            d && (d.next = a);
            a && (a.previous = d);
            b.splice(c, 1)
        }

        function h(a) {
            var b = a.parent;
            return b ? CKEDITOR.tools.indexOf(b.children, a) : -1
        }

        function m(a) {
            a = a.attributes;
            a.contenteditable != "false" && (a["data-cke-editable"] = a.contenteditable ? "true" : 1);
            a.contenteditable = "false"
        }

        function n(a) {
            a = a.attributes;
            switch (a["data-cke-editable"]) {
                case "true":
                    a.contenteditable = "true";
                    break;
                case "1":
                    delete a.contenteditable
            }
        }

        function o(a) {
            return a.replace(v,
                function (a, b, c) {
                    return"<" + b + c.replace(t, function (a, b) {
                        return!/^on/.test(b) && c.indexOf("data-cke-saved-" + b) == -1 ? " data-cke-saved-" + a + " data-cke-" + CKEDITOR.rnd + "-" + a : a
                    }) + ">"
                })
        }

        function l(a) {
            return a.replace(w, function (a) {
                return"<cke:encoded>" + encodeURIComponent(a) + "</cke:encoded>"
            })
        }

        function j(a) {
            return a.replace(I, function (a, b) {
                return decodeURIComponent(b)
            })
        }

        function q(a) {
            return a.replace(/<\!--(?!{cke_protected})[\s\S]+?--\>/g, function (a) {
                return"<\!--" + A + "{C}" + encodeURIComponent(a).replace(/--/g,
                    "%2D%2D") + "--\>"
            })
        }

        function y(a) {
            return a.replace(/<\!--\{cke_protected\}\{C\}([\s\S]+?)--\>/g, function (a, b) {
                return decodeURIComponent(b)
            })
        }

        function z(a, b) {
            var c = b._.dataStore;
            return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,function (a, b) {
                return decodeURIComponent(b)
            }).replace(/\{cke_protected_(\d+)\}/g, function (a, b) {
                return c && c[b] || ""
            })
        }

        function i(a, b) {
            for (var c = [], d = b.config.protectedSource, o = b._.dataStore || (b._.dataStore = {id: 1}), l = /<\!--\{cke_temp(comment)?\}(\d*?)--\>/g, d = [/<script[\s\S]*?<\/script>/gi,
                /<noscript[\s\S]*?<\/noscript>/gi].concat(d), a = a.replace(/<\!--[\s\S]*?--\>/g, function (a) {
                return"<\!--{cke_tempcomment}" + (c.push(a) - 1) + "--\>"
            }), j = 0; j < d.length; j++)a = a.replace(d[j], function (a) {
                a = a.replace(l, function (a, b, d) {
                    return c[d]
                });
                return/cke_temp(comment)?/.test(a) ? a : "<\!--{cke_temp}" + (c.push(a) - 1) + "--\>"
            });
            a = a.replace(l, function (a, b, d) {
                return"<\!--" + A + (b ? "{C}" : "") + encodeURIComponent(c[d]).replace(/--/g, "%2D%2D") + "--\>"
            });
            return a.replace(/(['"]).*?\1/g, function (a) {
                return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,
                    function (a, b) {
                        o[o.id] = decodeURIComponent(b);
                        return"{cke_protected_" + o.id++ + "}"
                    })
            })
        }

        CKEDITOR.htmlDataProcessor = function (a) {
            var c, d;
            this.editor = a;
            this.dataFilter = c = new CKEDITOR.htmlParser.filter;
            this.htmlFilter = d = new CKEDITOR.htmlParser.filter;
            this.writer = new CKEDITOR.htmlParser.basicWriter;
            c.addRules(u);
            c.addRules(b(a, "data"));
            d.addRules(r);
            d.addRules(b(a, "html"))
        };
        CKEDITOR.htmlDataProcessor.prototype = {toHtml: function (a, b, d) {
            var a = i(a, this.editor), a = o(a), a = l(a), a = a.replace(G, "$1cke:$2"), a = a.replace(Q,
                "<cke:$1$2></cke:$1>"), a = CKEDITOR.env.opera ? a : a.replace(/(<pre\b[^>]*>)(\r\n|\n)/g, "$1$2$2"), e = this.editor.editable(), f;
            !b && b !== null && (b = e.getName());
            e = b || e.getName();
            if (CKEDITOR.env.ie && CKEDITOR.env.version < 9 && e == "pre") {
                e = "div";
                a = "<pre>" + a + "</pre>";
                f = 1
            }
            e = this.editor.document.createElement(e);
            e.setHtml("a" + a);
            a = e.getHtml().substr(1);
            a = a.replace(RegExp(" data-cke-" + CKEDITOR.rnd + "-", "ig"), " ");
            f && (a = a.replace(/^<pre>|<\/pre>$/gi, ""));
            a = a.replace(C, "$1$2");
            a = j(a);
            a = y(a);
            a = CKEDITOR.htmlParser.fragment.fromHtml(a,
                b, d === false ? false : c(this.editor.config));
            b = new CKEDITOR.htmlParser.basicWriter;
            a.writeChildrenHtml(b, this.dataFilter, 1);
            a = b.getHtml(true);
            return a = q(a)
        }, toDataFormat: function (a) {
            var b = this.editor.editable(), d = this.writer, a = CKEDITOR.htmlParser.fragment.fromHtml(a, b.getName(), c(this.editor.config));
            d.reset();
            a.writeChildrenHtml(d, this.htmlFilter, 1);
            d = d.getHtml(true);
            d = y(d);
            return d = z(d, this.editor)
        }};
        var s = /(?:&nbsp;|\xa0)$/, A = "{cke_protected}", B = CKEDITOR.dtd, p = ["caption", "colgroup", "col", "thead", "tfoot",
            "tbody"], E = CKEDITOR.tools.extend({}, B.$blockLimit, B.$block), u = {elements: {}, attributeNames: [
            [/^on/, "data-cke-pa-on"]
        ]}, r = {elementNames: [
            [/^cke:/, ""],
            [/^\?xml:namespace$/, ""]
        ], attributeNames: [
            [/^data-cke-(saved|pa)-/, ""],
            [/^data-cke-.*/, ""],
            ["hidefocus", ""]
        ], elements: {$: function (a) {
            var b = a.attributes;
            if (b) {
                if (b["data-cke-temp"])return false;
                for (var c = ["name", "href", "src"], d, o = 0; o < c.length; o++) {
                    d = "data-cke-saved-" + c[o];
                    d in b && delete b[c[o]]
                }
            }
            return a
        }, table: function (a) {
            a.children.slice(0).sort(function (a, b) {
                var c, d;
                if (a.type == CKEDITOR.NODE_ELEMENT && b.type == a.type) {
                    c = CKEDITOR.tools.indexOf(p, a.name);
                    d = CKEDITOR.tools.indexOf(p, b.name)
                }
                if (!(c > -1 && d > -1 && c != d)) {
                    c = h(a);
                    d = h(b)
                }
                return c > d ? 1 : -1
            })
        }, embed: function (a) {
            var b = a.parent;
            if (b && b.name == "object") {
                var c = b.attributes.width, b = b.attributes.height;
                c && (a.attributes.width = c);
                b && (a.attributes.height = b)
            }
        }, param: function (a) {
            a.children = [];
            a.isEmpty = true;
            return a
        }, a: function (a) {
            if (!a.children.length && !a.attributes.name && !a.attributes["data-cke-saved-name"])return false
        },
            span: function (a) {
                a.attributes["class"] == "Apple-style-span" && delete a.name
            }, html: function (a) {
                delete a.attributes.contenteditable;
                delete a.attributes["class"]
            }, body: function (a) {
                delete a.attributes.spellcheck;
                delete a.attributes.contenteditable
            }, style: function (a) {
                var b = a.children[0];
                b && b.value && (b.value = CKEDITOR.tools.trim(b.value));
                if (!a.attributes.type)a.attributes.type = "text/css"
            }, title: function (a) {
                var b = a.children[0];
                b && (b.value = a.attributes["data-cke-title"] || "")
            }}, attributes: {"class": function (a) {
            return CKEDITOR.tools.ltrim(a.replace(/(?:^|\s+)cke_[^\s]*/g,
                "")) || false
        }}};
        if (CKEDITOR.env.ie)r.attributes.style = function (a) {
            return a.replace(/(^|;)([^\:]+)/g, function (a) {
                return a.toLowerCase()
            })
        };
        for (var D in{input: 1, textarea: 1}) {
            u.elements[D] = m;
            r.elements[D] = n
        }
        var v = /<(a|area|img|input|source)\b([^>]*)>/gi, t = /\b(on\w+|href|src|name)\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|(?:[^ "'>]+))/gi, w = /(?:<style(?=[ >])[^>]*>[\s\S]*<\/style>)|(?:<(:?link|meta|base)[^>]*>)/gi, I = /<cke:encoded>([^<]*)<\/cke:encoded>/gi, G = /(<\/?)((?:object|embed|param|html|body|head|title)[^>]*>)/gi,
            C = /(<\/?)cke:((?:html|body|head|title)[^>]*>)/gi, Q = /<cke:(param|embed)([^>]*?)\/?>(?!\s*<\/cke:\1)/gi
    })();
    CKEDITOR.htmlParser.element = function (b, c) {
        this.name = b;
        this.attributes = c || {};
        this.children = [];
        var a = b || "", f = a.match(/^cke:(.*)/);
        f && (a = f[1]);
        a = !(!CKEDITOR.dtd.$nonBodyContent[a] && !CKEDITOR.dtd.$block[a] && !CKEDITOR.dtd.$listItem[a] && !CKEDITOR.dtd.$tableContent[a] && !(CKEDITOR.dtd.$nonEditable[a] || a == "br"));
        this.isEmpty = !!CKEDITOR.dtd.$empty[b];
        this.isUnknown = !CKEDITOR.dtd[b];
        this._ = {isBlockLike: a, hasInlineStarted: this.isEmpty || !a}
    };
    CKEDITOR.htmlParser.cssStyle = function (b) {
        var c = {};
        ((b instanceof CKEDITOR.htmlParser.element ? b.attributes.style : b) || "").replace(/&quot;/g, '"').replace(/\s*([^ :;]+)\s*:\s*([^;]+)\s*(?=;|$)/g, function (a, b, e) {
            b == "font-family" && (e = e.replace(/["']/g, ""));
            c[b.toLowerCase()] = e
        });
        return{rules: c, populate: function (a) {
            var b = this.toString();
            if (b)a instanceof CKEDITOR.dom.element ? a.setAttribute("style", b) : a instanceof CKEDITOR.htmlParser.element ? a.attributes.style = b : a.style = b
        }, toString: function () {
            var a = [], b;
            for (b in c)c[b] && a.push(b, ":", c[b], ";");
            return a.join("")
        }}
    };
    (function () {
        var b = function (b, a) {
            b = b[0];
            a = a[0];
            return b < a ? -1 : b > a ? 1 : 0
        };
        CKEDITOR.htmlParser.element.prototype = {type: CKEDITOR.NODE_ELEMENT, add: CKEDITOR.htmlParser.fragment.prototype.add, clone: function () {
            return new CKEDITOR.htmlParser.element(this.name, this.attributes)
        }, writeHtml: function (c, a) {
            var f = this.attributes, e = this, d = e.name, g, k, h, m;
            e.filterChildren = function () {
                if (!m) {
                    var b = new CKEDITOR.htmlParser.basicWriter;
                    CKEDITOR.htmlParser.fragment.prototype.writeChildrenHtml.call(e, b, a);
                    e.children = (new CKEDITOR.htmlParser.fragment.fromHtml(b.getHtml(),
                        e.clone(), 0)).children;
                    m = 1
                }
            };
            if (a) {
                if (!this.parent)a.onRoot(this);
                for (; ;) {
                    if (!(d = a.onElementName(d)))return;
                    e.name = d;
                    if (!(e = a.onElement(e)))return;
                    e.parent = this.parent;
                    if (e.name == d)break;
                    if (e.type != CKEDITOR.NODE_ELEMENT) {
                        e.writeHtml(c, a);
                        return
                    }
                    d = e.name;
                    if (!d) {
                        for (var d = 0, n = this.children.length; d < n; d++)this.children[d].parent = e.parent;
                        this.writeChildrenHtml.call(e, c, m ? null : a);
                        return
                    }
                }
                f = e.attributes
            }
            c.openTag(d, f);
            for (var n = [], o = 0; o < 2; o++)for (g in f) {
                k = g;
                h = f[g];
                if (o == 1)n.push([g, h]); else if (a) {
                    for (; ;)if (k =
                        a.onAttributeName(g))if (k != g) {
                        delete f[g];
                        g = k
                    } else break; else {
                        delete f[g];
                        break
                    }
                    k && ((h = a.onAttribute(e, k, h)) === false ? delete f[k] : f[k] = h)
                }
            }
            c.sortAttributes && n.sort(b);
            f = n.length;
            for (o = 0; o < f; o++) {
                g = n[o];
                c.attribute(g[0], g[1])
            }
            c.openTagClose(d, e.isEmpty);
            if (!e.isEmpty) {
                this.writeChildrenHtml.call(e, c, m ? null : a);
                c.closeTag(d)
            }
        }, writeChildrenHtml: function (b, a) {
            CKEDITOR.htmlParser.fragment.prototype.writeChildrenHtml.apply(this, arguments)
        }}
    })();
    (function () {
        var b = {};
        CKEDITOR.template = function (c) {
            if (b[c])this.output = b[c]; else {
                var a = c.replace(/'/g, "\\'").replace(/{([^}]+)}/g, function (a, b) {
                    return"',data['" + b + "']==undefined?'{" + b + "}':data['" + b + "'],'"
                });
                this.output = b[c] = Function("data", "buffer", "return buffer?buffer.push('" + a + "'):['" + a + "'].join('');")
            }
        }
    })();
    delete CKEDITOR.loadFullCore;
    CKEDITOR.instances = {};
    CKEDITOR.document = new CKEDITOR.dom.document(document);
    CKEDITOR.add = function (b) {
        CKEDITOR.instances[b.name] = b;
        b.on("focus", function () {
            if (CKEDITOR.currentInstance != b) {
                CKEDITOR.currentInstance = b;
                CKEDITOR.fire("currentInstance")
            }
        });
        b.on("blur", function () {
            if (CKEDITOR.currentInstance == b) {
                CKEDITOR.currentInstance = null;
                CKEDITOR.fire("currentInstance")
            }
        });
        CKEDITOR.fire("instance", null, b)
    };
    CKEDITOR.remove = function (b) {
        delete CKEDITOR.instances[b.name]
    };
    (function () {
        var b = {};
        CKEDITOR.addTemplate = function (c, a) {
            var f = b[c];
            if (f)return f;
            f = {name: c, source: a};
            CKEDITOR.fire("template", f);
            return b[c] = new CKEDITOR.template(f.source)
        };
        CKEDITOR.getTemplate = function (c) {
            return b[c]
        }
    })();
    (function () {
        var b = [];
        CKEDITOR.addCss = function (c) {
            b.push(c)
        };
        CKEDITOR.getCss = function () {
            return b.join("\n")
        }
    })();
    CKEDITOR.on("instanceDestroyed", function () {
        CKEDITOR.tools.isEmpty(this.instances) && CKEDITOR.fire("reset")
    });
    CKEDITOR.TRISTATE_ON = 1;
    CKEDITOR.TRISTATE_OFF = 2;
    CKEDITOR.TRISTATE_DISABLED = 0;
    (function () {
        CKEDITOR.inline = function (b, c) {
            if (!CKEDITOR.env.isCompatible)return null;
            b = CKEDITOR.dom.element.get(b);
            if (b.getEditor())throw'The editor instance "' + b.getEditor().name + '" is already attached to the provided element.';
            var a = new CKEDITOR.editor(c, b, CKEDITOR.ELEMENT_MODE_INLINE);
            a.setData(b.getHtml(), null, true);
            a.on("loaded", function () {
                a.fire("uiReady");
                a.editable(b);
                a.container = b;
                a.setData(a.getData(1));
                a.fire("contentDom");
                a.mode = "wysiwyg";
                a.fire("mode");
                a.fireOnce("instanceReady");
                CKEDITOR.fire("instanceReady",
                    null, a);
                a.resetDirty()
            }, null, null, 1E4);
            a.on("destroy", function () {
                a.element.clearCustomData();
                delete a.element
            });
            return a
        };
        CKEDITOR.inlineAll = function () {
            var b, c, a;
            for (a in CKEDITOR.dtd.$editable)for (var f = CKEDITOR.document.getElementsByTag(a), e = 0, d = f.count(); e < d; e++) {
                b = f.getItem(e);
                if (b.getAttribute("contenteditable") == "true") {
                    c = {element: b, config: {}};
                    CKEDITOR.fire("inline", c) !== false && CKEDITOR.inline(b, c.config)
                }
            }
        };
        CKEDITOR.domReady(function () {
            !CKEDITOR.disableAutoInline && CKEDITOR.inlineAll()
        })
    })();
    CKEDITOR.replaceClass = "ckeditor";
    (function () {
        function b(b, e, k, h) {
            if (!CKEDITOR.env.isCompatible)return null;
            b = CKEDITOR.dom.element.get(b);
            if (b.getEditor())throw'The editor instance "' + b.getEditor().name + '" is already attached to the provided element.';
            var m = new CKEDITOR.editor(e, b, h);
            h == CKEDITOR.ELEMENT_MODE_REPLACE && b.setStyle("visibility", "hidden");
            k && m.setData(k, null, true);
            m.on("loaded", function () {
                a(m);
                h == CKEDITOR.ELEMENT_MODE_REPLACE && m.config.autoUpdateElement && f(m);
                m.setMode(m.config.startupMode, function () {
                    m.fireOnce("instanceReady");
                    CKEDITOR.fire("instanceReady", null, m);
                    m.resetDirty()
                })
            });
            m.on("destroy", c);
            return m
        }

        function c() {
            var a = this.container, b = this.element;
            if (a) {
                a.clearCustomData();
                a.remove()
            }
            if (b) {
                b.clearCustomData();
                this.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && b.show();
                delete this.element
            }
        }

        function a(a) {
            var b = a.name, c = a.element, f = a.elementMode, m = a.fire("uiSpace", {space: "top", html: ""}).html, n = a.fireOnce("uiSpace", {space: "bottom", html: ""}).html;
            e || (e = CKEDITOR.addTemplate("maincontainer", '<{outerEl} id="cke_{name}" class="{id} cke cke_reset cke_chrome cke_editor_{name} cke_{langDir} ' +
                CKEDITOR.env.cssClass + '"  dir="{langDir}" lang="{langCode}" role="application" aria-labelledby="cke_{name}_arialbl"><span id="cke_{name}_arialbl" class="cke_voice_label">{voiceLabel}</span><{outerEl} class="cke_inner cke_reset" role="presentation">{topHtml}<{outerEl} id="{contentId}" class="cke_contents cke_reset" role="presentation"></{outerEl}>{bottomHtml}</{outerEl}></{outerEl}>'));
            b = CKEDITOR.dom.element.createFromHtml(e.output({id: a.id, name: b, langDir: a.lang.dir, langCode: a.langCode, voiceLabel: a.lang.editor,
                topHtml: m ? '<span id="' + a.ui.spaceId("top") + '" class="cke_top cke_reset_all" role="presentation" style="height:auto">' + m + "</span>" : "", contentId: a.ui.spaceId("contents"), bottomHtml: n ? '<span id="' + a.ui.spaceId("bottom") + '" class="cke_bottom cke_reset_all" role="presentation">' + n + "</span>" : "", outerEl: CKEDITOR.env.ie ? "span" : "div"}));
            if (f == CKEDITOR.ELEMENT_MODE_REPLACE) {
                c.hide();
                b.insertAfter(c)
            } else c.append(b);
            a.container = b;
            m && a.ui.space("top").unselectable();
            n && a.ui.space("bottom").unselectable();
            c =
                a.config.width;
            f = a.config.height;
            c && b.setStyle("width", CKEDITOR.tools.cssLength(c));
            f && a.ui.space("contents").setStyle("height", CKEDITOR.tools.cssLength(f));
            b.disableContextMenu();
            CKEDITOR.env.webkit && b.on("focus", function () {
                a.focus()
            });
            a.fireOnce("uiReady")
        }

        function f(a) {
            var b = a.element;
            if (a.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE && b.is("textarea")) {
                var c = b.$.form && new CKEDITOR.dom.element(b.$.form);
                if (c) {
                    var e = function () {
                        a.updateElement()
                    };
                    c.on("submit", e);
                    if (!c.$.submit.nodeName && !c.$.submit.length)c.$.submit =
                        CKEDITOR.tools.override(c.$.submit, function (b) {
                            return function () {
                                a.updateElement();
                                b.apply ? b.apply(this, arguments) : b()
                            }
                        });
                    a.on("destroy", function () {
                        c.removeListener("submit", e)
                    })
                }
            }
        }

        CKEDITOR.replace = function (a, c) {
            return b(a, c, null, CKEDITOR.ELEMENT_MODE_REPLACE)
        };
        CKEDITOR.appendTo = function (a, c, e) {
            return b(a, c, e, CKEDITOR.ELEMENT_MODE_APPENDTO)
        };
        CKEDITOR.replaceAll = function () {
            for (var a = document.getElementsByTagName("textarea"), b = 0; b < a.length; b++) {
                var c = null, e = a[b];
                if (e.name || e.id) {
                    if (typeof arguments[0] ==
                        "string") {
                        if (!RegExp("(?:^|\\s)" + arguments[0] + "(?:$|\\s)").test(e.className))continue
                    } else if (typeof arguments[0] == "function") {
                        c = {};
                        if (arguments[0](e, c) === false)continue
                    }
                    this.replace(e, c)
                }
            }
        };
        CKEDITOR.editor.prototype.addMode = function (a, b) {
            (this._.modes || (this._.modes = {}))[a] = b
        };
        CKEDITOR.editor.prototype.setMode = function (a, b) {
            var c = this, e = this._.modes;
            if (!(a == c.mode || !e || !e[a])) {
                c.fire("beforeSetMode", a);
                if (c.mode) {
                    var f = c.checkDirty();
                    c._.previousMode = c.mode;
                    c.fire("beforeModeUnload");
                    c.editable(0);
                    c.ui.space("contents").setHtml("");
                    c.mode = ""
                }
                this._.modes[a](function () {
                    c.mode = a;
                    if (f !== void 0) {
                        c.mayBeDirty = true;
                        !f && c.resetDirty()
                    }
                    setTimeout(function () {
                        c.fire("mode");
                        b && b.call(c)
                    }, 0)
                })
            }
        };
        CKEDITOR.editor.prototype.resize = function (a, b, c, e) {
            var f = this.container, n = this.ui.space("contents"), o = CKEDITOR.env.webkit && this.document && this.document.getWindow().$.frameElement, e = e ? f.getChild(1) : f;
            e.setSize("width", a, true);
            o && (o.style.width = "1%");
            n.setStyle("height", Math.max(b - (c ? 0 : (e.$.offsetHeight || 0) - (n.$.clientHeight ||
                0)), 0) + "px");
            o && (o.style.width = "100%");
            this.fire("resize")
        };
        CKEDITOR.editor.prototype.getResizable = function (a) {
            return a ? this.ui.space("contents") : this.container
        };
        var e;
        CKEDITOR.domReady(function () {
            CKEDITOR.replaceClass && CKEDITOR.replaceAll(CKEDITOR.replaceClass)
        })
    })();
    CKEDITOR.config.startupMode = "wysiwyg";
    (function () {
        function b(b) {
            var c = b.editor, d = c.editable(), e = b.data.path, f = e.blockLimit, g = b.data.selection.getRanges()[0], i = c.config.enterMode;
            if (CKEDITOR.env.gecko) {
                var h = e.block || e.blockLimit || e.root, m = h && h.getLast(a);
                h && (h.isBlockBoundary() && (!m || !(m.type == CKEDITOR.NODE_ELEMENT && m.isBlockBoundary())) && !h.is("pre") && !h.getBogus()) && h.appendBogus()
            }
            if (c.config.autoParagraph !== false && i != CKEDITOR.ENTER_BR && g.collapsed && d.equals(f) && !e.block) {
                d = g.clone();
                d.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);
                e = new CKEDITOR.dom.walker(d);
                e.guard = function (b) {
                    return!a(b) || b.type == CKEDITOR.NODE_COMMENT || b.isReadOnly()
                };
                if (!e.checkForward() || d.checkStartOfBlock() && d.checkEndOfBlock()) {
                    c = g.fixBlock(true, c.config.enterMode == CKEDITOR.ENTER_DIV ? "div" : "p");
                    if (CKEDITOR.env.ie)(c = c.getFirst(a)) && (c.type == CKEDITOR.NODE_TEXT && CKEDITOR.tools.trim(c.getText()).match(/^(?:&nbsp;|\xa0)$/)) && c.remove();
                    g.select();
                    b.cancel()
                }
            }
        }

        function c(a) {
            var b = a.data.getTarget();
            if (b.is("input")) {
                b = b.getAttribute("type");
                (b == "submit" || b == "reset") && a.data.preventDefault()
            }
        }

        function a(a) {
            return h(a) && m(a)
        }

        function f(a, b) {
            return function (c) {
                var d = CKEDITOR.dom.element.get(c.data.$.toElement || c.data.$.fromElement || c.data.$.relatedTarget);
                (!d || !b.equals(d) && !b.contains(d)) && a.call(this, c)
            }
        }

        function e(b) {
            var c, d = b.getRanges()[0], b = b.root, e = d.startPath(), f = {table: 1, ul: 1, ol: 1, dl: 1}, g = CKEDITOR.dom.walker.bogus();
            if (e.contains(f)) {
                var i = d.clone();
                i.collapse(1);
                i.setStartAt(b, CKEDITOR.POSITION_AFTER_START);
                i = new CKEDITOR.dom.walker(i);
                e = function (b, d) {
                    return function (b, o) {
                        o && (b.type ==
                            CKEDITOR.NODE_ELEMENT && b.is(f)) && (c = b);
                        if (a(b) && !o && (!d || !g(b)))return false
                    }
                };
                i.guard = e(i);
                i.checkBackward();
                if (c) {
                    i = d.clone();
                    i.collapse();
                    i.setEndAt(b, CKEDITOR.POSITION_BEFORE_END);
                    i = new CKEDITOR.dom.walker(i);
                    i.guard = e(i, 1);
                    c = 0;
                    i.checkForward();
                    return c
                }
            }
            return null
        }

        function d(a) {
            a.editor.focus();
            a.editor.fire("saveSnapshot")
        }

        function g(a, b) {
            var c = a.editor;
            !b && c.getSelection().scrollIntoView();
            setTimeout(function () {
                c.fire("saveSnapshot")
            }, 0)
        }

        CKEDITOR.editable = CKEDITOR.tools.createClass({base: CKEDITOR.dom.element,
            $: function (a, b) {
                this.base(b.$ || b);
                this.editor = a;
                this.hasFocus = false;
                this.setup()
            }, proto: {focus: function () {
                this.$[CKEDITOR.env.ie && this.getDocument().equals(CKEDITOR.document) ? "setActive" : "focus"]();
                CKEDITOR.env.safari && !this.isInline() && (CKEDITOR.document.getActive().equals(this.getWindow().getFrame()) || this.getWindow().focus())
            }, on: function (a, b) {
                var c = Array.prototype.slice.call(arguments, 0);
                if (CKEDITOR.env.ie && /^focus|blur$/.exec(a)) {
                    a = a == "focus" ? "focusin" : "focusout";
                    b = f(b, this);
                    c[0] = a;
                    c[1] = b
                }
                return CKEDITOR.dom.element.prototype.on.apply(this,
                    c)
            }, attachListener: function (a, b, c, d, e, f) {
                !this._.listeners && (this._.listeners = []);
                var g = Array.prototype.slice.call(arguments, 1);
                this._.listeners.push(a.on.apply(a, g))
            }, clearListeners: function () {
                var a = this._.listeners;
                try {
                    for (; a.length;)a.pop().removeListener()
                } catch (b) {
                }
            }, restoreAttrs: function () {
                var a = this._.attrChanges, b, c;
                for (c in a)if (a.hasOwnProperty(c)) {
                    b = a[c];
                    b !== null ? this.setAttribute(c, b) : this.removeAttribute(c)
                }
            }, attachClass: function (a) {
                var b = this.getCustomData("classes");
                if (!this.hasClass(a)) {
                    !b &&
                    (b = []);
                    b.push(a);
                    this.setCustomData("classes", b);
                    this.addClass(a)
                }
            }, changeAttr: function (a, b) {
                var c = this.getAttribute(a);
                if (b !== c) {
                    !this._.attrChanges && (this._.attrChanges = {});
                    a in this._.attrChanges || (this._.attrChanges[a] = c);
                    this.setAttribute(a, b)
                }
            }, insertHtml: function (a, b) {
                d(this);
                n(this, b == "text" ? "text" : "html", a)
            }, insertText: function (a) {
                d(this);
                var b = this.editor, c = b.getSelection().getStartElement().hasAscendant("pre", true) ? CKEDITOR.ENTER_BR : b.config.enterMode, b = c == CKEDITOR.ENTER_BR, e = CKEDITOR.tools,
                    a = e.htmlEncode(a.replace(/\r\n/g, "\n")), a = a.replace(/\t/g, "&nbsp;&nbsp; &nbsp;"), c = c == CKEDITOR.ENTER_P ? "p" : "div";
                if (!b) {
                    var f = /\n{2}/g;
                    if (f.test(a))var g = "<" + c + ">", i = "</" + c + ">", a = g + a.replace(f, function () {
                        return i + g
                    }) + i
                }
                a = a.replace(/\n/g, "<br>");
                b || (a = a.replace(RegExp("<br>(?=</" + c + ">)"), function (a) {
                    return e.repeat(a, 2)
                }));
                a = a.replace(/^ | $/g, "&nbsp;");
                a = a.replace(/(>|\s) /g,function (a, b) {
                    return b + "&nbsp;"
                }).replace(/ (?=<)/g, "&nbsp;");
                n(this, "text", a)
            }, insertElement: function (b) {
                d(this);
                for (var c =
                    this.editor, e = c.config.enterMode, f = c.getSelection(), h = f.getRanges(), m = b.getName(), i = CKEDITOR.dtd.$block[m], n, k, B, p = h.length - 1; p >= 0; p--) {
                    n = h[p];
                    if (!n.checkReadOnly()) {
                        n.deleteContents(1);
                        k = !p && b || b.clone(1);
                        var E, u;
                        if (i)for (; (E = n.getCommonAncestor(0, 1)) && (u = CKEDITOR.dtd[E.getName()]) && (!u || !u[m]);)if (E.getName()in CKEDITOR.dtd.span)n.splitElement(E); else if (n.checkStartOfBlock() && n.checkEndOfBlock()) {
                            n.setStartBefore(E);
                            n.collapse(true);
                            E.remove()
                        } else n.splitBlock(e == CKEDITOR.ENTER_DIV ? "div" : "p",
                            c.editable());
                        n.insertNode(k);
                        B || (B = k)
                    }
                }
                if (B) {
                    n.moveToPosition(B, CKEDITOR.POSITION_AFTER_END);
                    if (i)if ((b = B.getNext(a)) && b.type == CKEDITOR.NODE_ELEMENT && b.is(CKEDITOR.dtd.$block))b.getDtd()["#"] ? n.moveToElementEditStart(b) : n.moveToElementEditEnd(B); else if (!b && e != CKEDITOR.ENTER_BR) {
                        b = n.fixBlock(true, e == CKEDITOR.ENTER_DIV ? "div" : "p");
                        n.moveToElementEditStart(b)
                    }
                }
                f.selectRanges([n]);
                g(this, CKEDITOR.env.opera)
            }, setData: function (a, b) {
                !b && this.editor.dataProcessor && (a = this.editor.dataProcessor.toHtml(a));
                this.setHtml(a);
                this.editor.fire("dataReady")
            }, getData: function (a) {
                var b = this.getHtml();
                !a && this.editor.dataProcessor && (b = this.editor.dataProcessor.toDataFormat(b));
                return b
            }, setReadOnly: function (a) {
                this.setAttribute("contenteditable", !a)
            }, detach: function () {
                this.removeClass("cke_editable");
                var a = this.editor;
                this._.detach();
                delete a.document;
                delete a.window
            }, isInline: function () {
                return this.getDocument().equals(CKEDITOR.document)
            }, setup: function () {
                var a = this.editor;
                this.attachListener(a, "beforeGetData",
                    function () {
                        var b = this.getData();
                        this.is("textarea") || a.config.ignoreEmptyParagraph !== false && (b = b.replace(k, function (a, b) {
                            return b
                        }));
                        a.setData(b, null, 1)
                    }, this);
                this.attachListener(a, "getSnapshot", function (a) {
                    a.data = this.getData(1)
                }, this);
                this.attachListener(a, "afterSetData", function () {
                    this.setData(a.getData(1))
                }, this);
                this.attachListener(a, "loadSnapshot", function (a) {
                    this.setData(a.data, 1)
                }, this);
                this.attachListener(a, "beforeFocus", function () {
                    var b = a.getSelection();
                    (b = b && b.getNative()) && b.type == "Control" ||
                    this.focus()
                }, this);
                this.attachListener(a, "insertHtml", function (a) {
                    this.insertHtml(a.data.dataValue, a.data.mode)
                }, this);
                this.attachListener(a, "insertElement", function (a) {
                    this.insertElement(a.data)
                }, this);
                this.attachListener(a, "insertText", function (a) {
                    this.insertText(a.data)
                }, this);
                this.setReadOnly(a.readOnly);
                this.attachClass("cke_editable");
                this.attachClass(a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? "cke_editable_inline" : a.elementMode == CKEDITOR.ELEMENT_MODE_REPLACE || a.elementMode == CKEDITOR.ELEMENT_MODE_APPENDTO ?
                    "cke_editable_themed" : "");
                this.attachClass("cke_contents_" + a.config.contentsLangDirection);
                a.keystrokeHandler.blockedKeystrokes[8] = a.readOnly;
                a.keystrokeHandler.attach(this);
                this.on("blur", function (a) {
                    CKEDITOR.env.opera && CKEDITOR.document.getActive().equals(this.isInline() ? this : this.getWindow().getFrame()) ? a.cancel() : this.hasFocus = false
                }, null, null, -1);
                this.on("focus", function () {
                    this.hasFocus = true
                }, null, null, -1);
                a.focusManager.add(this);
                if (this.equals(CKEDITOR.document.getActive())) {
                    this.hasFocus =
                        true;
                    a.once("contentDom", function () {
                        a.focusManager.focus()
                    })
                }
                this.isInline() && this.changeAttr("tabindex", a.tabIndex);
                if (!this.is("textarea")) {
                    a.document = this.getDocument();
                    a.window = this.getWindow();
                    var b = a.document;
                    this.changeAttr("spellcheck", !a.config.disableNativeSpellChecker);
                    var d = a.config.contentsLangDirection;
                    this.getDirection(1) != d && this.changeAttr("dir", d);
                    var f = CKEDITOR.getCss();
                    if (f) {
                        d = b.getHead();
                        if (!d.getCustomData("stylesheet")) {
                            f = b.appendStyleText(f);
                            f = new CKEDITOR.dom.element(f.ownerNode ||
                                f.owningElement);
                            d.setCustomData("stylesheet", f);
                            f.data("cke-temp", 1)
                        }
                    }
                    d = b.getCustomData("stylesheet_ref") || 0;
                    b.setCustomData("stylesheet_ref", d + 1);
                    this.setCustomData("cke_includeReadonly", !a.config.disableReadonlyStyling);
                    this.attachListener(this, "click", function (a) {
                        var a = a.data, b = a.getTarget();
                        b.is("a") && (a.$.button != 2 && b.isReadOnly()) && a.preventDefault()
                    });
                    this.attachListener(a, "key", function (b) {
                        if (a.readOnly)return true;
                        var c = b.data.keyCode, d;
                        if (c in{8: 1, 46: 1}) {
                            var l = a.getSelection(), b = l.getRanges()[0],
                                f = b.startPath(), j, g, m, c = c == 8;
                            if (l = e(l)) {
                                a.fire("saveSnapshot");
                                b.moveToPosition(l, CKEDITOR.POSITION_BEFORE_START);
                                l.remove();
                                b.select();
                                a.fire("saveSnapshot");
                                d = 1
                            } else if (b.collapsed)if ((j = f.block) && b[c ? "checkStartOfBlock" : "checkEndOfBlock"]() && (m = j[c ? "getPrevious" : "getNext"](h)) && m.is("table")) {
                                a.fire("saveSnapshot");
                                b[c ? "checkEndOfBlock" : "checkStartOfBlock"]() && j.remove();
                                b["moveToElementEdit" + (c ? "End" : "Start")](m);
                                b.select();
                                a.fire("saveSnapshot");
                                d = 1
                            } else if (f.blockLimit && f.blockLimit.is("td") &&
                                (g = f.blockLimit.getAscendant("table")) && b.checkBoundaryOfElement(g, c ? CKEDITOR.START : CKEDITOR.END) && (m = g[c ? "getPrevious" : "getNext"](h))) {
                                a.fire("saveSnapshot");
                                b["moveToElementEdit" + (c ? "End" : "Start")](m);
                                b.checkStartOfBlock() && b.checkEndOfBlock() ? m.remove() : b.select();
                                a.fire("saveSnapshot");
                                d = 1
                            } else if ((g = f.contains(["td", "th", "caption"])) && b.checkBoundaryOfElement(g, c ? CKEDITOR.START : CKEDITOR.END))if ((m = g[c ? "getPreviousSourceNode" : "getNextSourceNode"](1, CKEDITOR.NODE_ELEMENT)) && !m.isReadOnly() && b.root.contains(m)) {
                                b[c ?
                                    "moveToElementEditEnd" : "moveToElementEditStart"](m);
                                b.select();
                                d = 1
                            }
                        }
                        return!d
                    });
                    CKEDITOR.env.ie && this.attachListener(this, "click", c);
                    !CKEDITOR.env.ie && !CKEDITOR.env.opera && this.attachListener(this, "mousedown", function (b) {
                        var c = b.data.getTarget();
                        if (c.is("img", "hr", "input", "textarea", "select")) {
                            a.getSelection().selectElement(c);
                            c.is("input", "textarea", "select") && b.data.preventDefault()
                        }
                    });
                    CKEDITOR.env.gecko && this.attachListener(this, "mouseup", function (b) {
                        if (b.data.$.button == 2) {
                            b = b.data.getTarget();
                            if (!b.getOuterHtml().replace(k, "")) {
                                var c = a.createRange();
                                c.moveToElementEditStart(b);
                                c.select(true)
                            }
                        }
                    });
                    if (CKEDITOR.env.webkit) {
                        this.attachListener(this, "click", function (a) {
                            a.data.getTarget().is("input", "select") && a.data.preventDefault()
                        });
                        this.attachListener(this, "mouseup", function (a) {
                            a.data.getTarget().is("input", "textarea") && a.data.preventDefault()
                        })
                    }
                }
            }}, _: {detach: function () {
                this.editor.setData(this.editor.getData(), 0, 1);
                this.clearListeners();
                this.restoreAttrs();
                var a;
                if (a = this.removeCustomData("classes"))for (; a.length;)this.removeClass(a.pop());
                a = this.getDocument();
                var b = a.getHead();
                if (b.getCustomData("stylesheet")) {
                    var c = a.getCustomData("stylesheet_ref");
                    if (--c)a.setCustomData("stylesheet_ref", c); else {
                        a.removeCustomData("stylesheet_ref");
                        b.removeCustomData("stylesheet").remove()
                    }
                }
                delete this.editor
            }}});
        CKEDITOR.editor.prototype.editable = function (a) {
            var b = this._.editable;
            if (b && a)return 0;
            if (arguments.length)b = this._.editable = a ? a instanceof CKEDITOR.editable ? a : new CKEDITOR.editable(this, a) : (b && b.detach(), null);
            return b
        };
        var k = /(^|<body\b[^>]*>)\s*<(p|div|address|h\d|center|pre)[^>]*>\s*(?:<br[^>]*>|&nbsp;|\u00A0|&#160;)?\s*(:?<\/\2>)?\s*(?=$|<\/body>)/gi,
            h = CKEDITOR.dom.walker.whitespaces(true), m = CKEDITOR.dom.walker.bookmark(false, true);
        CKEDITOR.on("instanceLoaded", function (a) {
            var c = a.editor;
            c.on("insertElement", function (a) {
                a = a.data;
                if (a.type == CKEDITOR.NODE_ELEMENT && (a.is("input") || a.is("textarea"))) {
                    a.getAttribute("contentEditable") != "false" && a.data("cke-editable", a.hasAttribute("contenteditable") ? "true" : "1");
                    a.setAttribute("contentEditable", false)
                }
            });
            c.on("selectionChange", function (a) {
                if (!c.readOnly) {
                    var d = c.getSelection();
                    if (d && !d.isLocked) {
                        d = c.checkDirty();
                        c.fire("lockSnapshot");
                        b(a);
                        c.fire("unlockSnapshot");
                        !d && c.resetDirty()
                    }
                }
            })
        });
        CKEDITOR.on("instanceCreated", function (a) {
            var b = a.editor;
            b.on("mode", function () {
                var a = b.editable();
                if (a && a.isInline()) {
                    var c = this.lang.editor + ", " + this.name;
                    a.changeAttr("role", "textbox");
                    a.changeAttr("aria-label", c);
                    a.changeAttr("title", c);
                    if (c = this.ui.space(this.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? "top" : "contents")) {
                        var d = CKEDITOR.tools.getNextId(), e = CKEDITOR.dom.element.createFromHtml('<span id="' + d + '" class="cke_voice_label">' +
                            this.lang.common.editorHelp + "</span>");
                        c.append(e);
                        a.changeAttr("aria-describedby", d)
                    }
                }
            })
        });
        CKEDITOR.addCss(".cke_editable{cursor:text}.cke_editable img,.cke_editable input,.cke_editable textarea{cursor:default}");
        var n = function () {
            function b(a) {
                return a.type == CKEDITOR.NODE_ELEMENT
            }

            function c(a, d) {
                var e, f, j, g, t = [], h = d.range.startContainer;
                e = d.range.startPath();
                for (var h = i[h.getName()], m = 0, n = a.getChildren(), q = n.count(), k = -1, z = -1, y = 0, s = e.contains(i.$list); m < q; ++m) {
                    e = n.getItem(m);
                    if (b(e)) {
                        j = e.getName();
                        if (s && j in CKEDITOR.dtd.$list)t = t.concat(c(e, d)); else {
                            g = !!h[j];
                            if (j == "br" && e.data("cke-eol") && (!m || m == q - 1)) {
                                y = (f = m ? t[m - 1].node : n.getItem(m + 1)) && (!b(f) || !f.is("br"));
                                f = f && b(f) && i.$block[f.getName()]
                            }
                            k == -1 && !g && (k = m);
                            g || (z = m);
                            t.push({isElement: 1, isLineBreak: y, isBlock: e.isBlockBoundary(), hasBlockSibling: f, node: e, name: j, allowed: g});
                            f = y = 0
                        }
                    } else t.push({isElement: 0, node: e, allowed: 1})
                }
                if (k > -1)t[k].firstNotAllowed = 1;
                if (z > -1)t[z].lastNotAllowed = 1;
                return t
            }

            function d(a, c) {
                var e = [], f = a.getChildren(), l = f.count(),
                    g, t = 0, h = i[c], m = !a.is(i.$inline) || a.is("br");
                for (m && e.push(" "); t < l; t++) {
                    g = f.getItem(t);
                    b(g) && !g.is(h) ? e = e.concat(d(g, c)) : e.push(g)
                }
                m && e.push(" ");
                return e
            }

            function e(a) {
                return a && b(a) && (a.is(i.$removeEmpty) || a.is("a") && !a.isBlockBoundary())
            }

            function f(a, c, d, e) {
                var l = a.clone(), j, g;
                l.setEndAt(c, CKEDITOR.POSITION_BEFORE_END);
                if ((j = (new CKEDITOR.dom.walker(l)).next()) && b(j) && m[j.getName()] && (g = j.getPrevious()) && b(g) && !g.getParent().equals(a.startContainer) && d.contains(g) && e.contains(j) && j.isIdentical(g)) {
                    j.moveChildren(g);
                    j.remove();
                    f(a, c, d, e)
                }
            }

            function h(a, c) {
                function d(a, c) {
                    if (c.isBlock && c.isElement && !c.node.is("br") && b(a) && a.is("br")) {
                        a.remove();
                        return 1
                    }
                }

                var e = c.endContainer.getChild(c.endOffset), f = c.endContainer.getChild(c.endOffset - 1);
                e && d(e, a[a.length - 1]);
                if (f && d(f, a[0])) {
                    c.setEnd(c.endContainer, c.endOffset - 1);
                    c.collapse()
                }
            }

            var i = CKEDITOR.dtd, m = {p: 1, div: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, ul: 1, ol: 1, li: 1, pre: 1, dl: 1, blockquote: 1}, n = {p: 1, div: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1}, k = CKEDITOR.tools.extend({}, i.$inline);
            delete k.br;
            return function (m, s, u) {
                var r = m.editor;
                m.getDocument();
                var D = r.getSelection().getRanges()[0];
                if (!D.checkReadOnly()) {
                    var v = (new CKEDITOR.dom.elementPath(D.startContainer, D.root)).blockLimit || D.root, s = {type: s, editable: m, editor: r, range: D, blockLimit: v, mergeCandidates: [], zombies: []}, r = s.range, v = s.mergeCandidates, t, w, I, G, C;
                    if (s.type == "text" && r.shrink(CKEDITOR.SHRINK_ELEMENT, true, false)) {
                        w = CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>", r.document);
                        r.insertNode(w);
                        r.setStartAfter(w)
                    }
                    I = new CKEDITOR.dom.elementPath(r.startContainer);
                    s.endPath = G = new CKEDITOR.dom.elementPath(r.endContainer);
                    if (!r.collapsed) {
                        t = G.block || G.blockLimit;
                        var Q = r.getCommonAncestor();
                        t && (!t.equals(Q) && !t.contains(Q) && r.checkEndOfBlock()) && s.zombies.push(t);
                        r.deleteContents()
                    }
                    for (; (C = b(r.startContainer) && r.startContainer.getChild(r.startOffset - 1)) && b(C) && C.isBlockBoundary() && I.contains(C);)r.moveToPosition(C, CKEDITOR.POSITION_BEFORE_END);
                    f(r, s.blockLimit, I, G);
                    if (w) {
                        r.setEndBefore(w);
                        r.collapse();
                        w.remove()
                    }
                    w = r.startPath();
                    if (t = w.contains(e, false, 1)) {
                        r.splitElement(t);
                        s.inlineStylesRoot = t;
                        s.inlineStylesPeak = w.lastElement
                    }
                    w = r.createBookmark();
                    (t = w.startNode.getPrevious(a)) && b(t) && e(t) && v.push(t);
                    (t = w.startNode.getNext(a)) && b(t) && e(t) && v.push(t);
                    for (t = w.startNode; (t = t.getParent()) && e(t);)v.push(t);
                    r.moveToBookmark(w);
                    if (u) {
                        C = u;
                        u = s.range;
                        if (s.type == "text" && s.inlineStylesRoot) {
                            w = C;
                            C = s.inlineStylesPeak;
                            r = C.getDocument().createText("{cke-peak}");
                            for (v = s.inlineStylesRoot.getParent(); !C.equals(v);) {
                                r = r.appendTo(C.clone());
                                C = C.getParent()
                            }
                            C = r.getOuterHtml().replace("{cke-peak}",
                                w)
                        }
                        w = s.blockLimit.getName();
                        if (/^\s+|\s+$/.test(C) && "span"in CKEDITOR.dtd[w]) {
                            var K = '<span data-cke-marker="1">&nbsp;</span>';
                            C = K + C + K
                        }
                        C = s.editor.dataProcessor.toHtml(C, null, false);
                        w = u.document.createElement("body");
                        w.setHtml(C);
                        if (K) {
                            w.getFirst().remove();
                            w.getLast().remove()
                        }
                        if ((K = u.startPath().block) && !(K.getChildCount() == 1 && K.getBogus()))a:{
                            var F;
                            if (w.getChildCount() == 1 && b(F = w.getFirst()) && F.is(n)) {
                                K = F.getElementsByTag("*");
                                u = 0;
                                for (r = K.count(); u < r; u++) {
                                    C = K.getItem(u);
                                    if (!C.is(k))break a
                                }
                                F.moveChildren(F.getParent(1));
                                F.remove()
                            }
                        }
                        s.dataWrapper = w;
                        F = s.range;
                        var K = F.document, x, u = s.blockLimit;
                        w = 0;
                        var J;
                        C = [];
                        var H, N, v = r = 0, L, O;
                        I = F.startContainer;
                        t = s.endPath.elements[0];
                        var P;
                        G = t.getPosition(I);
                        Q = !!t.getCommonAncestor(I) && G != CKEDITOR.POSITION_IDENTICAL && !(G & CKEDITOR.POSITION_CONTAINS + CKEDITOR.POSITION_IS_CONTAINED);
                        I = c(s.dataWrapper, s);
                        for (h(I, F); w < I.length; w++) {
                            G = I[w];
                            if (x = G.isLineBreak) {
                                x = F;
                                L = u;
                                var M = void 0, R = void 0;
                                if (G.hasBlockSibling)x = 1; else {
                                    M = x.startContainer.getAscendant(i.$block, 1);
                                    if (!M || !M.is({div: 1, p: 1}))x =
                                        0; else {
                                        R = M.getPosition(L);
                                        if (R == CKEDITOR.POSITION_IDENTICAL || R == CKEDITOR.POSITION_CONTAINS)x = 0; else {
                                            L = x.splitElement(M);
                                            x.moveToPosition(L, CKEDITOR.POSITION_AFTER_START);
                                            x = 1
                                        }
                                    }
                                }
                            }
                            if (x)v = w > 0; else {
                                x = F.startPath();
                                if (!G.isBlock && (N = s.editor.config.enterMode != CKEDITOR.ENTER_BR && s.editor.config.autoParagraph !== false ? s.editor.config.enterMode == CKEDITOR.ENTER_DIV ? "div" : "p" : false) && !x.block && x.blockLimit && x.blockLimit.equals(F.root)) {
                                    N = K.createElement(N);
                                    !CKEDITOR.env.ie && N.appendBogus();
                                    F.insertNode(N);
                                    !CKEDITOR.env.ie &&
                                        (J = N.getBogus()) && J.remove();
                                    F.moveToPosition(N, CKEDITOR.POSITION_BEFORE_END)
                                }
                                if ((x = F.startPath().block) && !x.equals(H)) {
                                    if (J = x.getBogus()) {
                                        J.remove();
                                        C.push(x)
                                    }
                                    H = x
                                }
                                G.firstNotAllowed && (r = 1);
                                if (r && G.isElement) {
                                    x = F.startContainer;
                                    for (L = null; x && !i[x.getName()][G.name];) {
                                        if (x.equals(u)) {
                                            x = null;
                                            break
                                        }
                                        L = x;
                                        x = x.getParent()
                                    }
                                    if (x) {
                                        if (L) {
                                            O = F.splitElement(L);
                                            s.zombies.push(O);
                                            s.zombies.push(L)
                                        }
                                    } else {
                                        L = u.getName();
                                        P = !w;
                                        x = w == I.length - 1;
                                        L = d(G.node, L);
                                        for (var M = [], R = L.length, T = 0, U = void 0, V = 0, W = -1; T < R; T++) {
                                            U = L[T];
                                            if (U == " ") {
                                                if (!V && (!P || T)) {
                                                    M.push(new CKEDITOR.dom.text(" "));
                                                    W = M.length
                                                }
                                                V = 1
                                            } else {
                                                M.push(U);
                                                V = 0
                                            }
                                        }
                                        x && W == M.length && M.pop();
                                        P = M
                                    }
                                }
                                if (P) {
                                    for (; x = P.pop();)F.insertNode(x);
                                    P = 0
                                } else F.insertNode(G.node);
                                if (G.lastNotAllowed && w < I.length - 1) {
                                    (O = Q ? t : O) && F.setEndAt(O, CKEDITOR.POSITION_AFTER_START);
                                    r = 0
                                }
                                F.collapse()
                            }
                        }
                        s.dontMoveCaret = v;
                        s.bogusNeededBlocks = C
                    }
                    J = s.range;
                    var S;
                    O = s.bogusNeededBlocks;
                    for (P = J.createBookmark(); H = s.zombies.pop();)if (H.getParent()) {
                        N = J.clone();
                        N.moveToElementEditStart(H);
                        N.removeEmptyBlocksAtEnd()
                    }
                    if (O)for (; H =
                                     O.pop();)H.append(CKEDITOR.env.ie ? J.document.createText(" ") : J.document.createElement("br"));
                    for (; H = s.mergeCandidates.pop();)H.mergeSiblings();
                    J.moveToBookmark(P);
                    if (!s.dontMoveCaret) {
                        for (H = b(J.startContainer) && J.startContainer.getChild(J.startOffset - 1); H && b(H) && !H.is(i.$empty);) {
                            if (H.isBlockBoundary())J.moveToPosition(H, CKEDITOR.POSITION_BEFORE_END); else {
                                if (e(H) && H.getHtml().match(/(\s|&nbsp;)$/g)) {
                                    S = null;
                                    break
                                }
                                S = J.clone();
                                S.moveToPosition(H, CKEDITOR.POSITION_BEFORE_END)
                            }
                            H = H.getLast(a)
                        }
                        S && J.moveToRange(S)
                    }
                    D.select();
                    g(m)
                }
            }
        }()
    })();
    (function () {
        function b() {
            var a = this.getSelection(1);
            if (a.getType() != CKEDITOR.SELECTION_NONE) {
                this.fire("selectionCheck", a);
                var b = this.elementPath();
                if (!b.compare(this._.selectionPreviousPath)) {
                    this._.selectionPreviousPath = b;
                    this.fire("selectionChange", {selection: a, path: b})
                }
            }
        }

        function c() {
            k = true;
            if (!g) {
                a.call(this);
                g = CKEDITOR.tools.setTimeout(a, 200, this)
            }
        }

        function a() {
            g = null;
            if (k) {
                CKEDITOR.tools.setTimeout(b, 0, this);
                k = false
            }
        }

        function f(a) {
            function b(c, d) {
                return!c || c.type == CKEDITOR.NODE_TEXT ? false :
                    a.clone()["moveToElementEdit" + (d ? "End" : "Start")](c)
            }

            if (!(a.root instanceof CKEDITOR.editable))return false;
            var c = a.startContainer, d = a.getPreviousNode(h, null, c), e = a.getNextNode(h, null, c);
            return b(d) || b(e, 1) || !d && !e && !(c.type == CKEDITOR.NODE_ELEMENT && c.isBlockBoundary() && c.getBogus()) ? true : false
        }

        function e(a) {
            return a.getCustomData("cke-fillingChar")
        }

        function d(a, b) {
            var c = a && a.removeCustomData("cke-fillingChar");
            if (c) {
                if (b !== false) {
                    var d, e = a.getDocument().getSelection().getNative(), f = e && e.type != "None" &&
                        e.getRangeAt(0);
                    if (c.getLength() > 1 && f && f.intersectsNode(c.$)) {
                        d = [e.anchorOffset, e.focusOffset];
                        f = e.focusNode == c.$ && e.focusOffset > 0;
                        e.anchorNode == c.$ && e.anchorOffset > 0 && d[0]--;
                        f && d[1]--;
                        var g;
                        f = e;
                        if (!f.isCollapsed) {
                            g = f.getRangeAt(0);
                            g.setStart(f.anchorNode, f.anchorOffset);
                            g.setEnd(f.focusNode, f.focusOffset);
                            g = g.collapsed
                        }
                        g && d.unshift(d.pop())
                    }
                }
                c.setText(c.getText().replace(/\u200B/g, ""));
                if (d) {
                    c = e.getRangeAt(0);
                    c.setStart(c.startContainer, d[0]);
                    c.setEnd(c.startContainer, d[1]);
                    e.removeAllRanges();
                    e.addRange(c)
                }
            }
        }

        var g, k, h = CKEDITOR.dom.walker.invisible(1);
        CKEDITOR.on("instanceCreated", function (a) {
            function e() {
                var a = f.getSelection();
                a && a.removeAllRanges()
            }

            var f = a.editor;
            f.define("selectionChange", {errorProof: 1});
            f.on("contentDom", function () {
                var a = f.document, e = CKEDITOR.document, l = f.editable(), g = a.getBody(), o = a.getDocumentElement(), h = l.isInline();
                if (CKEDITOR.env.ie || CKEDITOR.env.opera || h) {
                    var n;
                    l.attachListener(l, "focus", function () {
                        f.unlockSelection(n);
                        n = 0
                    }, null, null, -1);
                    var k, E = function () {
                        k = f.getSelection(1);
                        k.lock()
                    };
                    m ? l.attachListener(l, "beforedeactivate", E, null, null, -1) : l.attachListener(f, "selectionCheck", E, null, null, -1);
                    l.attachListener(l, "blur", function () {
                        f.lockSelection(k);
                        n = 1
                    }, null, null, -1);
                    l.attachListener(l, "mousedown", function () {
                        n = 0
                    })
                }
                if (CKEDITOR.env.ie && !h) {
                    var u;
                    l.attachListener(l, "mousedown", function (a) {
                        a.data.$.button == 2 && f.document.$.selection.type == "None" && (u = f.window.getScrollPosition())
                    });
                    l.attachListener(l, "mouseup", function (a) {
                        if (a.data.$.button == 2 && u) {
                            f.document.$.documentElement.scrollLeft =
                                u.x;
                            f.document.$.documentElement.scrollTop = u.y
                        }
                        u = null
                    });
                    if (a.$.compatMode != "BackCompat") {
                        if (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat)o.on("mousedown", function (a) {
                            function b(a) {
                                a = a.data.$;
                                if (d) {
                                    var c = g.$.createTextRange();
                                    try {
                                        c.moveToPoint(a.x, a.y)
                                    } catch (e) {
                                    }
                                    d.setEndPoint(l.compareEndPoints("StartToStart", c) < 0 ? "EndToEnd" : "StartToStart", c);
                                    d.select()
                                }
                            }

                            function c() {
                                o.removeListener("mousemove", b);
                                e.removeListener("mouseup", c);
                                o.removeListener("mouseup", c);
                                d.select()
                            }

                            a = a.data;
                            if (a.getTarget().is("html") &&
                                a.$.y < o.$.clientHeight && a.$.x < o.$.clientWidth) {
                                var d = g.$.createTextRange();
                                try {
                                    d.moveToPoint(a.$.x, a.$.y)
                                } catch (f) {
                                }
                                var l = d.duplicate();
                                o.on("mousemove", b);
                                e.on("mouseup", c);
                                o.on("mouseup", c)
                            }
                        });
                        if (CKEDITOR.env.version > 7) {
                            o.on("mousedown", function (a) {
                                if (a.data.getTarget().is("html")) {
                                    e.on("mouseup", r);
                                    o.on("mouseup", r)
                                }
                            });
                            var r = function () {
                                e.removeListener("mouseup", r);
                                o.removeListener("mouseup", r);
                                var b = CKEDITOR.document.$.selection, c = b.createRange();
                                b.type != "None" && c.parentElement().ownerDocument ==
                                    a.$ && c.select()
                            }
                        }
                    }
                }
                l.attachListener(l, "selectionchange", b, f);
                l.attachListener(l, "keyup", c, f);
                l.attachListener(l, "focus", function () {
                    f.forceNextSelectionCheck();
                    f.selectionChange(1)
                });
                if (l.isInline() ? CKEDITOR.env.webkit || CKEDITOR.env.gecko : CKEDITOR.env.opera) {
                    var D;
                    l.attachListener(l, "mousedown", function () {
                        D = 1
                    });
                    l.attachListener(a.getDocumentElement(), "mouseup", function () {
                        D && c.call(f);
                        D = 0
                    })
                } else l.attachListener(l, "mouseup", c, f);
                if (CKEDITOR.env.webkit)a.on("keydown", function (a) {
                        switch (a.data.getKey()) {
                            case 13:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 37:
                            case 39:
                            case 8:
                            case 45:
                            case 46:
                                d(f.editable())
                        }
                    },
                    null, null, -1)
            });
            f.on("contentDomUnload", f.forceNextSelectionCheck, f);
            f.on("dataReady", function () {
                f.selectionChange(1)
            });
            CKEDITOR.env.ie9Compat && f.on("beforeDestroy", e, null, null, 9);
            CKEDITOR.env.webkit && f.on("setData", e);
            f.on("contentDomUnload", function () {
                f.unlockSelection()
            })
        });
        CKEDITOR.on("instanceReady", function (a) {
            var b = a.editor, c = b.editable();
            if (CKEDITOR.env.webkit) {
                b.on("selectionChange", function () {
                    var a = e(c);
                    a && (a.getCustomData("ready") ? d(c) : a.setCustomData("ready", 1))
                }, null, null, -1);
                b.on("beforeSetMode",
                    function () {
                        d(c)
                    }, null, null, -1);
                var f, g, a = function () {
                    var a = b.document, d = e(c);
                    if (d) {
                        a = a.$.defaultView.getSelection();
                        a.type == "Caret" && a.anchorNode == d.$ && (g = 1);
                        f = d.getText();
                        d.setText(f.replace(/\u200B/g, ""))
                    }
                }, h = function () {
                    var a = b.document, d = e(c);
                    if (d) {
                        d.setText(f);
                        if (g) {
                            a.$.defaultView.getSelection().setPosition(d.$, d.getLength());
                            g = 0
                        }
                    }
                };
                b.on("beforeUndoImage", a);
                b.on("afterUndoImage", h);
                b.on("beforeGetData", a, null, null, 0);
                b.on("getData", h)
            }
        });
        CKEDITOR.editor.prototype.selectionChange = function (a) {
            (a ?
                b : c).call(this)
        };
        CKEDITOR.editor.prototype.getSelection = function (a) {
            if (this._.savedSelection && !a)return this._.savedSelection;
            return(a = this.editable()) ? new CKEDITOR.dom.selection(a) : null
        };
        CKEDITOR.editor.prototype.lockSelection = function (a) {
            a = a || this.getSelection(1);
            if (a.getType() != CKEDITOR.SELECTION_NONE) {
                !a.isLocked && a.lock();
                this._.savedSelection = a;
                return true
            }
            return false
        };
        CKEDITOR.editor.prototype.unlockSelection = function (a) {
            var b = this._.savedSelection;
            if (b) {
                b.unlock(a);
                delete this._.savedSelection;
                return true
            }
            return false
        };
        CKEDITOR.editor.prototype.forceNextSelectionCheck = function () {
            delete this._.selectionPreviousPath
        };
        CKEDITOR.dom.document.prototype.getSelection = function () {
            return new CKEDITOR.dom.selection(this)
        };
        CKEDITOR.dom.range.prototype.select = function () {
            var a = this.root instanceof CKEDITOR.editable ? this.root.editor.getSelection() : new CKEDITOR.dom.selection(this.root);
            a.selectRanges([this]);
            return a
        };
        CKEDITOR.SELECTION_NONE = 1;
        CKEDITOR.SELECTION_TEXT = 2;
        CKEDITOR.SELECTION_ELEMENT = 3;
        var m =
            typeof window.getSelection != "function";
        CKEDITOR.dom.selection = function (a) {
            var b = a instanceof CKEDITOR.dom.element;
            this.document = a instanceof CKEDITOR.dom.document ? a : a.getDocument();
            this.root = b ? a : this.document.getBody();
            this.isLocked = 0;
            this._ = {cache: {}};
            if (CKEDITOR.env.webkit) {
                a = this.document.getWindow().$.getSelection();
                if (a.type == "None" && this.document.getActive().equals(this.root) || a.type == "Caret" && a.anchorNode.nodeType == CKEDITOR.NODE_DOCUMENT) {
                    var c = new CKEDITOR.dom.range(this.root);
                    c.moveToPosition(this.root,
                        CKEDITOR.POSITION_AFTER_START);
                    b = this.document.$.createRange();
                    b.setStart(c.startContainer.$, c.startOffset);
                    b.collapse(1);
                    a.addRange(b)
                }
            }
            var a = this.getNative(), d;
            if (a)if (a.getRangeAt)d = (c = a.rangeCount && a.getRangeAt(0)) && new CKEDITOR.dom.node(c.commonAncestorContainer); else {
                try {
                    c = a.createRange()
                } catch (e) {
                }
                d = c && CKEDITOR.dom.element.get(c.item && c.item(0) || c.parentElement())
            }
            if (!d || !this.root.equals(d) && !this.root.contains(d)) {
                this._.cache.type = CKEDITOR.SELECTION_NONE;
                this._.cache.startElement = null;
                this._.cache.selectedElement =
                    null;
                this._.cache.selectedText = "";
                this._.cache.ranges = new CKEDITOR.dom.rangeList
            }
            return this
        };
        var n = {img: 1, hr: 1, li: 1, table: 1, tr: 1, td: 1, th: 1, embed: 1, object: 1, ol: 1, ul: 1, a: 1, input: 1, form: 1, select: 1, textarea: 1, button: 1, fieldset: 1, thead: 1, tfoot: 1};
        CKEDITOR.dom.selection.prototype = {getNative: function () {
            return this._.cache.nativeSel !== void 0 ? this._.cache.nativeSel : this._.cache.nativeSel = m ? this.document.$.selection : this.document.getWindow().$.getSelection()
        }, getType: m ? function () {
            var a = this._.cache;
            if (a.type)return a.type;
            var b = CKEDITOR.SELECTION_NONE;
            try {
                var c = this.getNative(), d = c.type;
                if (d == "Text")b = CKEDITOR.SELECTION_TEXT;
                if (d == "Control")b = CKEDITOR.SELECTION_ELEMENT;
                if (c.createRange().parentElement())b = CKEDITOR.SELECTION_TEXT
            } catch (e) {
            }
            return a.type = b
        } : function () {
            var a = this._.cache;
            if (a.type)return a.type;
            var b = CKEDITOR.SELECTION_TEXT, c = this.getNative();
            if (!c || !c.rangeCount)b = CKEDITOR.SELECTION_NONE; else if (c.rangeCount == 1) {
                var c = c.getRangeAt(0), d = c.startContainer;
                if (d == c.endContainer && d.nodeType == 1 && c.endOffset -
                    c.startOffset == 1 && n[d.childNodes[c.startOffset].nodeName.toLowerCase()])b = CKEDITOR.SELECTION_ELEMENT
            }
            return a.type = b
        }, getRanges: function () {
            var a = m ? function () {
                function a(b) {
                    return(new CKEDITOR.dom.node(b)).getIndex()
                }

                var b = function (b, c) {
                    b = b.duplicate();
                    b.collapse(c);
                    var d = b.parentElement(), e = d.ownerDocument;
                    if (!d.hasChildNodes())return{container: d, offset: 0};
                    for (var f = d.children, g, j, h = b.duplicate(), o = 0, m = f.length - 1, n = -1, k, v; o <= m;) {
                        n = Math.floor((o + m) / 2);
                        g = f[n];
                        h.moveToElementText(g);
                        k = h.compareEndPoints("StartToStart",
                            b);
                        if (k > 0)m = n - 1; else if (k < 0)o = n + 1; else {
                            if (CKEDITOR.env.ie9Compat && g.tagName == "BR") {
                                f = e.defaultView.getSelection();
                                return{container: f[c ? "anchorNode" : "focusNode"], offset: f[c ? "anchorOffset" : "focusOffset"]}
                            }
                            return{container: d, offset: a(g)}
                        }
                    }
                    if (n == -1 || n == f.length - 1 && k < 0) {
                        h.moveToElementText(d);
                        h.setEndPoint("StartToStart", b);
                        e = h.text.replace(/(\r\n|\r)/g, "\n").length;
                        f = d.childNodes;
                        if (!e) {
                            g = f[f.length - 1];
                            return g.nodeType != CKEDITOR.NODE_TEXT ? {container: d, offset: f.length} : {container: g, offset: g.nodeValue.length}
                        }
                        for (d =
                                 f.length; e > 0 && d > 0;) {
                            j = f[--d];
                            if (j.nodeType == CKEDITOR.NODE_TEXT) {
                                v = j;
                                e = e - j.nodeValue.length
                            }
                        }
                        return{container: v, offset: -e}
                    }
                    h.collapse(k > 0 ? true : false);
                    h.setEndPoint(k > 0 ? "StartToStart" : "EndToStart", b);
                    e = h.text.replace(/(\r\n|\r)/g, "\n").length;
                    if (!e)return{container: d, offset: a(g) + (k > 0 ? 0 : 1)};
                    for (; e > 0;)try {
                        j = g[k > 0 ? "previousSibling" : "nextSibling"];
                        if (j.nodeType == CKEDITOR.NODE_TEXT) {
                            e = e - j.nodeValue.length;
                            v = j
                        }
                        g = j
                    } catch (t) {
                        return{container: d, offset: a(g)}
                    }
                    return{container: v, offset: k > 0 ? -e : v.nodeValue.length +
                        e}
                };
                return function () {
                    var a = this.getNative(), c = a && a.createRange(), d = this.getType();
                    if (!a)return[];
                    if (d == CKEDITOR.SELECTION_TEXT) {
                        a = new CKEDITOR.dom.range(this.root);
                        d = b(c, true);
                        a.setStart(new CKEDITOR.dom.node(d.container), d.offset);
                        d = b(c);
                        a.setEnd(new CKEDITOR.dom.node(d.container), d.offset);
                        a.endContainer.getPosition(a.startContainer) & CKEDITOR.POSITION_PRECEDING && a.endOffset <= a.startContainer.getIndex() && a.collapse();
                        return[a]
                    }
                    if (d == CKEDITOR.SELECTION_ELEMENT) {
                        for (var d = [], e = 0; e < c.length; e++) {
                            for (var f =
                                c.item(e), g = f.parentNode, l = 0, a = new CKEDITOR.dom.range(this.root); l < g.childNodes.length && g.childNodes[l] != f; l++);
                            a.setStart(new CKEDITOR.dom.node(g), l);
                            a.setEnd(new CKEDITOR.dom.node(g), l + 1);
                            d.push(a)
                        }
                        return d
                    }
                    return[]
                }
            }() : function () {
                var a = [], b, c = this.getNative();
                if (!c)return a;
                for (var d = 0; d < c.rangeCount; d++) {
                    var e = c.getRangeAt(d);
                    b = new CKEDITOR.dom.range(this.root);
                    b.setStart(new CKEDITOR.dom.node(e.startContainer), e.startOffset);
                    b.setEnd(new CKEDITOR.dom.node(e.endContainer), e.endOffset);
                    a.push(b)
                }
                return a
            };
            return function (b) {
                var c = this._.cache;
                if (c.ranges && !b)return c.ranges;
                if (!c.ranges)c.ranges = new CKEDITOR.dom.rangeList(a.call(this));
                if (b)for (var d = c.ranges, e = 0; e < d.length; e++) {
                    var f = d[e];
                    f.getCommonAncestor().isReadOnly() && d.splice(e, 1);
                    if (!f.collapsed) {
                        if (f.startContainer.isReadOnly())for (var b = f.startContainer, g; b;) {
                            if ((g = b.type == CKEDITOR.NODE_ELEMENT) && b.is("body") || !b.isReadOnly())break;
                            g && b.getAttribute("contentEditable") == "false" && f.setStartAfter(b);
                            b = b.getParent()
                        }
                        b = f.startContainer;
                        g = f.endContainer;
                        var h = f.startOffset, m = f.endOffset, n = f.clone();
                        b && b.type == CKEDITOR.NODE_TEXT && (h >= b.getLength() ? n.setStartAfter(b) : n.setStartBefore(b));
                        g && g.type == CKEDITOR.NODE_TEXT && (m ? n.setEndAfter(g) : n.setEndBefore(g));
                        b = new CKEDITOR.dom.walker(n);
                        b.evaluator = function (a) {
                            if (a.type == CKEDITOR.NODE_ELEMENT && a.isReadOnly()) {
                                var b = f.clone();
                                f.setEndBefore(a);
                                f.collapsed && d.splice(e--, 1);
                                if (!(a.getPosition(n.endContainer) & CKEDITOR.POSITION_CONTAINS)) {
                                    b.setStartAfter(a);
                                    b.collapsed || d.splice(e + 1, 0, b)
                                }
                                return true
                            }
                            return false
                        };
                        b.next()
                    }
                }
                return c.ranges
            }
        }(), getStartElement: function () {
            var a = this._.cache;
            if (a.startElement !== void 0)return a.startElement;
            var b;
            switch (this.getType()) {
                case CKEDITOR.SELECTION_ELEMENT:
                    return this.getSelectedElement();
                case CKEDITOR.SELECTION_TEXT:
                    var c = this.getRanges()[0];
                    if (c) {
                        if (c.collapsed) {
                            b = c.startContainer;
                            b.type != CKEDITOR.NODE_ELEMENT && (b = b.getParent())
                        } else {
                            for (c.optimize(); ;) {
                                b = c.startContainer;
                                if (c.startOffset == (b.getChildCount ? b.getChildCount() : b.getLength()) && !b.isBlockBoundary())c.setStartAfter(b);
                                else break
                            }
                            b = c.startContainer;
                            if (b.type != CKEDITOR.NODE_ELEMENT)return b.getParent();
                            b = b.getChild(c.startOffset);
                            if (!b || b.type != CKEDITOR.NODE_ELEMENT)b = c.startContainer; else for (c = b.getFirst(); c && c.type == CKEDITOR.NODE_ELEMENT;) {
                                b = c;
                                c = c.getFirst()
                            }
                        }
                        b = b.$
                    }
            }
            return a.startElement = b ? new CKEDITOR.dom.element(b) : null
        }, getSelectedElement: function () {
            var a = this._.cache;
            if (a.selectedElement !== void 0)return a.selectedElement;
            var b = this, c = CKEDITOR.tools.tryThese(function () {
                    return b.getNative().createRange().item(0)
                },
                function () {
                    for (var a = b.getRanges()[0], c, d, e = 2; e && (!(c = a.getEnclosedNode()) || !(c.type == CKEDITOR.NODE_ELEMENT && n[c.getName()] && (d = c))); e--)a.shrink(CKEDITOR.SHRINK_ELEMENT);
                    return d.$
                });
            return a.selectedElement = c ? new CKEDITOR.dom.element(c) : null
        }, getSelectedText: function () {
            var a = this._.cache;
            if (a.selectedText !== void 0)return a.selectedText;
            var b = this.getNative(), b = m ? b.type == "Control" ? "" : b.createRange().text : b.toString();
            return a.selectedText = b
        }, lock: function () {
            this.getRanges();
            this.getStartElement();
            this.getSelectedElement();
            this.getSelectedText();
            this._.cache.nativeSel = null;
            this.isLocked = 1
        }, unlock: function (a) {
            if (this.isLocked) {
                if (a)var b = this.getSelectedElement(), c = !b && this.getRanges();
                this.isLocked = 0;
                this.reset();
                if (a)(a = b || c[0].getCommonAncestor()) && a.getAscendant("body", 1) && (b ? this.selectElement(b) : this.selectRanges(c))
            }
        }, reset: function () {
            this._.cache = {}
        }, selectElement: function (a) {
            var b = new CKEDITOR.dom.range(this.root);
            b.setStartBefore(a);
            b.setEndAfter(a);
            this.selectRanges([b])
        }, selectRanges: function (a) {
            if (a.length)if (this.isLocked) {
                var b =
                    CKEDITOR.document.getActive();
                this.unlock();
                this.selectRanges(a);
                this.lock();
                !b.equals(this.root) && b.focus()
            } else {
                if (m) {
                    var c = CKEDITOR.dom.walker.whitespaces(true), e = /\ufeff|\u00a0/, g = {table: 1, tbody: 1, tr: 1};
                    if (a.length > 1) {
                        b = a[a.length - 1];
                        a[0].setEnd(b.endContainer, b.endOffset)
                    }
                    var b = a[0], a = b.collapsed, h, i, k, A = b.getEnclosedNode();
                    if (A && A.type == CKEDITOR.NODE_ELEMENT && A.getName()in n && (!A.is("a") || !A.getText()))try {
                        k = A.$.createControlRange();
                        k.addElement(A.$);
                        k.select();
                        return
                    } catch (B) {
                    }
                    (b.startContainer.type ==
                        CKEDITOR.NODE_ELEMENT && b.startContainer.getName()in g || b.endContainer.type == CKEDITOR.NODE_ELEMENT && b.endContainer.getName()in g) && b.shrink(CKEDITOR.NODE_ELEMENT, true);
                    k = b.createBookmark();
                    var g = k.startNode, p;
                    if (!a)p = k.endNode;
                    k = b.document.$.body.createTextRange();
                    k.moveToElementText(g.$);
                    k.moveStart("character", 1);
                    if (p) {
                        e = b.document.$.body.createTextRange();
                        e.moveToElementText(p.$);
                        k.setEndPoint("EndToEnd", e);
                        k.moveEnd("character", -1)
                    } else {
                        h = g.getNext(c);
                        i = g.hasAscendant("pre");
                        h = !(h && h.getText &&
                            h.getText().match(e)) && (i || !g.hasPrevious() || g.getPrevious().is && g.getPrevious().is("br"));
                        i = b.document.createElement("span");
                        i.setHtml("&#65279;");
                        i.insertBefore(g);
                        h && b.document.createText("﻿").insertBefore(g)
                    }
                    b.setStartBefore(g);
                    g.remove();
                    if (a) {
                        if (h) {
                            k.moveStart("character", -1);
                            k.select();
                            b.document.$.selection.clear()
                        } else k.select();
                        b.moveToPosition(i, CKEDITOR.POSITION_BEFORE_START);
                        i.remove()
                    } else {
                        b.setEndBefore(p);
                        p.remove();
                        k.select()
                    }
                } else {
                    p = this.getNative();
                    if (!p)return;
                    if (CKEDITOR.env.opera) {
                        b =
                            this.document.$.createRange();
                        b.selectNodeContents(this.root.$);
                        p.addRange(b)
                    }
                    this.removeAllRanges();
                    for (e = 0; e < a.length; e++) {
                        if (e < a.length - 1) {
                            b = a[e];
                            k = a[e + 1];
                            i = b.clone();
                            i.setStart(b.endContainer, b.endOffset);
                            i.setEnd(k.startContainer, k.startOffset);
                            if (!i.collapsed) {
                                i.shrink(CKEDITOR.NODE_ELEMENT, true);
                                h = i.getCommonAncestor();
                                i = i.getEnclosedNode();
                                if (h.isReadOnly() || i && i.isReadOnly()) {
                                    k.setStart(b.startContainer, b.startOffset);
                                    a.splice(e--, 1);
                                    continue
                                }
                            }
                        }
                        b = a[e];
                        k = this.document.$.createRange();
                        h = b.startContainer;
                        if (CKEDITOR.env.opera && b.collapsed && h.type == CKEDITOR.NODE_ELEMENT) {
                            i = h.getChild(b.startOffset - 1);
                            c = h.getChild(b.startOffset);
                            if (!i && !c && h.is(CKEDITOR.dtd.$removeEmpty) || i && i.type == CKEDITOR.NODE_ELEMENT || c && c.type == CKEDITOR.NODE_ELEMENT) {
                                b.insertNode(this.document.createText(""));
                                b.collapse(1)
                            }
                        }
                        if (b.collapsed && CKEDITOR.env.webkit && f(b)) {
                            h = this.root;
                            d(h, false);
                            i = h.getDocument().createText("​");
                            h.setCustomData("cke-fillingChar", i);
                            b.insertNode(i);
                            if ((h = i.getNext()) && !i.getPrevious() && h.type == CKEDITOR.NODE_ELEMENT &&
                                h.getName() == "br") {
                                d(this.root);
                                b.moveToPosition(h, CKEDITOR.POSITION_BEFORE_START)
                            } else b.moveToPosition(i, CKEDITOR.POSITION_AFTER_END)
                        }
                        k.setStart(b.startContainer.$, b.startOffset);
                        try {
                            k.setEnd(b.endContainer.$, b.endOffset)
                        } catch (E) {
                            if (E.toString().indexOf("NS_ERROR_ILLEGAL_VALUE") >= 0) {
                                b.collapse(1);
                                k.setEnd(b.endContainer.$, b.endOffset)
                            } else throw E;
                        }
                        p.addRange(k)
                    }
                }
                this.reset();
                this.root.fire("selectionchange")
            }
        }, createBookmarks: function (a) {
            return this.getRanges().createBookmarks(a)
        }, createBookmarks2: function (a) {
            return this.getRanges().createBookmarks2(a)
        },
            selectBookmarks: function (a) {
                for (var b = [], c = 0; c < a.length; c++) {
                    var d = new CKEDITOR.dom.range(this.root);
                    d.moveToBookmark(a[c]);
                    b.push(d)
                }
                this.selectRanges(b);
                return this
            }, getCommonAncestor: function () {
                var a = this.getRanges();
                return a[0].startContainer.getCommonAncestor(a[a.length - 1].endContainer)
            }, scrollIntoView: function () {
                this.type != CKEDITOR.SELECTION_NONE && this.getRanges()[0].scrollIntoView()
            }, removeAllRanges: function () {
                var a = this.getNative();
                try {
                    a && a[m ? "empty" : "removeAllRanges"]()
                } catch (b) {
                }
                this.reset()
            }}
    })();
    CKEDITOR.editor.prototype.attachStyleStateChange = function (b, c) {
        var a = this._.styleStateChangeCallbacks;
        if (!a) {
            a = this._.styleStateChangeCallbacks = [];
            this.on("selectionChange", function (b) {
                for (var c = 0; c < a.length; c++) {
                    var d = a[c], g = d.style.checkActive(b.data.path) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF;
                    d.fn.call(this, g)
                }
            })
        }
        a.push({style: b, fn: c})
    };
    CKEDITOR.STYLE_BLOCK = 1;
    CKEDITOR.STYLE_INLINE = 2;
    CKEDITOR.STYLE_OBJECT = 3;
    (function () {
        function b(a, b) {
            for (var c, d; a = a.getParent();) {
                if (a.equals(b))break;
                if (a.getAttribute("data-nostyle"))c = a; else if (!d) {
                    var e = a.getAttribute("contentEditable");
                    e == "false" ? c = a : e == "true" && (d = 1)
                }
            }
            return c
        }

        function c(a) {
            var c = a.document;
            if (a.collapsed) {
                c = y(this, c);
                a.insertNode(c);
                a.moveToPosition(c, CKEDITOR.POSITION_BEFORE_END)
            } else {
                var d = this.element, e = this._.definition, f, g = e.ignoreReadonly, h = g || e.includeReadonly;
                h == void 0 && (h = a.root.getCustomData("cke_includeReadonly"));
                var j = CKEDITOR.dtd[d] ||
                    (f = true, CKEDITOR.dtd.span);
                a.enlarge(CKEDITOR.ENLARGE_INLINE, 1);
                a.trim();
                var m = a.createBookmark(), i = m.startNode, n = m.endNode, k = i, o;
                if (!g) {
                    var q = a.getCommonAncestor(), g = b(i, q), q = b(n, q);
                    g && (k = g.getNextSourceNode(true));
                    q && (n = q)
                }
                for (k.getPosition(n) == CKEDITOR.POSITION_FOLLOWING && (k = 0); k;) {
                    g = false;
                    if (k.equals(n)) {
                        k = null;
                        g = true
                    } else {
                        var p = k.type, r = p == CKEDITOR.NODE_ELEMENT ? k.getName() : null, q = r && k.getAttribute("contentEditable") == "false", s = r && k.getAttribute("data-nostyle");
                        if (r && k.data("cke-bookmark")) {
                            k =
                                k.getNextSourceNode(true);
                            continue
                        }
                        if (!r || j[r] && !s && (!q || h) && (k.getPosition(n) | CKEDITOR.POSITION_PRECEDING | CKEDITOR.POSITION_IDENTICAL | CKEDITOR.POSITION_IS_CONTAINED) == CKEDITOR.POSITION_PRECEDING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED && (!e.childRule || e.childRule(k))) {
                            var u = k.getParent();
                            if (u && ((u.getDtd() || CKEDITOR.dtd.span)[d] || f) && (!e.parentRule || e.parentRule(u))) {
                                if (!o && (!r || !CKEDITOR.dtd.$removeEmpty[r] || (k.getPosition(n) | CKEDITOR.POSITION_PRECEDING | CKEDITOR.POSITION_IDENTICAL |
                                    CKEDITOR.POSITION_IS_CONTAINED) == CKEDITOR.POSITION_PRECEDING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED)) {
                                    o = a.clone();
                                    o.setStartBefore(k)
                                }
                                if (p == CKEDITOR.NODE_TEXT || q || p == CKEDITOR.NODE_ELEMENT && !k.getChildCount()) {
                                    for (var p = k, v; (g = !p.getNext(D)) && (v = p.getParent(), j[v.getName()]) && (v.getPosition(i) | CKEDITOR.POSITION_FOLLOWING | CKEDITOR.POSITION_IDENTICAL | CKEDITOR.POSITION_IS_CONTAINED) == CKEDITOR.POSITION_FOLLOWING + CKEDITOR.POSITION_IDENTICAL + CKEDITOR.POSITION_IS_CONTAINED && (!e.childRule ||
                                        e.childRule(v));)p = v;
                                    o.setEndAfter(p)
                                }
                            } else g = true
                        } else g = true;
                        k = k.getNextSourceNode(s || q && !h)
                    }
                    if (g && o && !o.collapsed) {
                        for (var g = y(this, c), q = g.hasAttributes(), s = o.getCommonAncestor(), p = {}, r = {}, u = {}, z = {}, A, B, E; g && s;) {
                            if (s.getName() == d) {
                                for (A in e.attributes)if (!z[A] && (E = s.getAttribute(B)))g.getAttribute(A) == E ? r[A] = 1 : z[A] = 1;
                                for (B in e.styles)if (!u[B] && (E = s.getStyle(B)))g.getStyle(B) == E ? p[B] = 1 : u[B] = 1
                            }
                            s = s.getParent()
                        }
                        for (A in r)g.removeAttribute(A);
                        for (B in p)g.removeStyle(B);
                        q && !g.hasAttributes() && (g =
                            null);
                        if (g) {
                            o.extractContents().appendTo(g);
                            l.call(this, g);
                            o.insertNode(g);
                            g.mergeSiblings();
                            CKEDITOR.env.ie || g.$.normalize()
                        } else {
                            g = new CKEDITOR.dom.element("span");
                            o.extractContents().appendTo(g);
                            o.insertNode(g);
                            l.call(this, g);
                            g.remove(true)
                        }
                        o = null
                    }
                }
                a.moveToBookmark(m);
                a.shrink(CKEDITOR.SHRINK_TEXT)
            }
        }

        function a(a) {
            a.enlarge(CKEDITOR.ENLARGE_INLINE, 1);
            var b = a.createBookmark(), c = b.startNode;
            if (a.collapsed) {
                for (var d = new CKEDITOR.dom.elementPath(c.getParent(), a.root), e, f = 0, g; f < d.elements.length && (g =
                    d.elements[f]); f++) {
                    if (g == d.block || g == d.blockLimit)break;
                    if (this.checkElementRemovable(g)) {
                        var h;
                        if (a.collapsed && (a.checkBoundaryOfElement(g, CKEDITOR.END) || (h = a.checkBoundaryOfElement(g, CKEDITOR.START)))) {
                            e = g;
                            e.match = h ? "start" : "end"
                        } else {
                            g.mergeSiblings();
                            g.getName() == this.element ? o.call(this, g) : j(g, s(this)[g.getName()])
                        }
                    }
                }
                if (e) {
                    g = c;
                    for (f = 0; ; f++) {
                        h = d.elements[f];
                        if (h.equals(e))break; else if (h.match)continue; else h = h.clone();
                        h.append(g);
                        g = h
                    }
                    g[e.match == "start" ? "insertBefore" : "insertAfter"](e)
                }
            } else {
                var m =
                    b.endNode, l = this, d = function () {
                    for (var a = new CKEDITOR.dom.elementPath(c.getParent()), b = new CKEDITOR.dom.elementPath(m.getParent()), d = null, e = null, f = 0; f < a.elements.length; f++) {
                        var g = a.elements[f];
                        if (g == a.block || g == a.blockLimit)break;
                        l.checkElementRemovable(g) && (d = g)
                    }
                    for (f = 0; f < b.elements.length; f++) {
                        g = b.elements[f];
                        if (g == b.block || g == b.blockLimit)break;
                        l.checkElementRemovable(g) && (e = g)
                    }
                    e && m.breakParent(e);
                    d && c.breakParent(d)
                };
                d();
                for (e = c; !e.equals(m);) {
                    f = e.getNextSourceNode();
                    if (e.type == CKEDITOR.NODE_ELEMENT &&
                        this.checkElementRemovable(e)) {
                        e.getName() == this.element ? o.call(this, e) : j(e, s(this)[e.getName()]);
                        if (f.type == CKEDITOR.NODE_ELEMENT && f.contains(c)) {
                            d();
                            f = c.getNext()
                        }
                    }
                    e = f
                }
            }
            a.moveToBookmark(b)
        }

        function f(a) {
            var b = a.getEnclosedNode() || a.getCommonAncestor(false, true);
            (a = (new CKEDITOR.dom.elementPath(b, a.root)).contains(this.element, 1)) && !a.isReadOnly() && z(a, this)
        }

        function e(a) {
            var b = a.getCommonAncestor(true, true);
            if (a = (new CKEDITOR.dom.elementPath(b, a.root)).contains(this.element, 1)) {
                var b = this._.definition,
                    c = b.attributes;
                if (c)for (var d in c)a.removeAttribute(d, c[d]);
                if (b.styles)for (var e in b.styles)b.styles.hasOwnProperty(e) && a.removeStyle(e)
            }
        }

        function d(a) {
            var b = a.createBookmark(true), c = a.createIterator();
            c.enforceRealBlocks = true;
            if (this._.enterMode)c.enlargeBr = this._.enterMode != CKEDITOR.ENTER_BR;
            for (var d, e = a.document; d = c.getNextParagraph();)if (!d.isReadOnly()) {
                var f = y(this, e, d);
                k(d, f)
            }
            a.moveToBookmark(b)
        }

        function g(a) {
            var b = a.createBookmark(1), c = a.createIterator();
            c.enforceRealBlocks = true;
            c.enlargeBr =
                this._.enterMode != CKEDITOR.ENTER_BR;
            for (var d; d = c.getNextParagraph();)if (this.checkElementRemovable(d))if (d.is("pre")) {
                var e = this._.enterMode == CKEDITOR.ENTER_BR ? null : a.document.createElement(this._.enterMode == CKEDITOR.ENTER_P ? "p" : "div");
                e && d.copyAttributes(e);
                k(d, e)
            } else o.call(this, d);
            a.moveToBookmark(b)
        }

        function k(a, b) {
            var c = !b;
            if (c) {
                b = a.getDocument().createElement("div");
                a.copyAttributes(b)
            }
            var d = b && b.is("pre"), e = a.is("pre"), f = !d && e;
            if (d && !e) {
                e = b;
                (f = a.getBogus()) && f.remove();
                f = a.getHtml();
                f = m(f,
                    /(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g, "");
                f = f.replace(/[ \t\r\n]*(<br[^>]*>)[ \t\r\n]*/gi, "$1");
                f = f.replace(/([ \t\n\r]+|&nbsp;)/g, " ");
                f = f.replace(/<br\b[^>]*>/gi, "\n");
                if (CKEDITOR.env.ie) {
                    var g = a.getDocument().createElement("div");
                    g.append(e);
                    e.$.outerHTML = "<pre>" + f + "</pre>";
                    e.copyAttributes(g.getFirst());
                    e = g.getFirst().remove()
                } else e.setHtml(f);
                b = e
            } else f ? b = n(c ? [a.getHtml()] : h(a), b) : a.moveChildren(b);
            b.replace(a);
            if (d) {
                var c = b, j;
                if ((j = c.getPrevious(v)) && j.is && j.is("pre")) {
                    d = m(j.getHtml(), /\n$/, "") +
                        "\n\n" + m(c.getHtml(), /^\n/, "");
                    CKEDITOR.env.ie ? c.$.outerHTML = "<pre>" + d + "</pre>" : c.setHtml(d);
                    j.remove()
                }
            } else c && q(b)
        }

        function h(a) {
            a.getName();
            var b = [];
            m(a.getOuterHtml(), /(\S\s*)\n(?:\s|(<span[^>]+data-cke-bookmark.*?\/span>))*\n(?!$)/gi,function (a, b, c) {
                return b + "</pre>" + c + "<pre>"
            }).replace(/<pre\b.*?>([\s\S]*?)<\/pre>/gi, function (a, c) {
                b.push(c)
            });
            return b
        }

        function m(a, b, c) {
            var d = "", e = "", a = a.replace(/(^<span[^>]+data-cke-bookmark.*?\/span>)|(<span[^>]+data-cke-bookmark.*?\/span>$)/gi, function (a, b, c) {
                b && (d = b);
                c && (e = c);
                return""
            });
            return d + a.replace(b, c) + e
        }

        function n(a, b) {
            var c;
            a.length > 1 && (c = new CKEDITOR.dom.documentFragment(b.getDocument()));
            for (var d = 0; d < a.length; d++) {
                var e = a[d], e = e.replace(/(\r\n|\r)/g, "\n"), e = m(e, /^[ \t]*\n/, ""), e = m(e, /\n$/, ""), e = m(e, /^[ \t]+|[ \t]+$/g, function (a, b) {
                    return a.length == 1 ? "&nbsp;" : b ? " " + CKEDITOR.tools.repeat("&nbsp;", a.length - 1) : CKEDITOR.tools.repeat("&nbsp;", a.length - 1) + " "
                }), e = e.replace(/\n/g, "<br>"), e = e.replace(/[ \t]{2,}/g, function (a) {
                    return CKEDITOR.tools.repeat("&nbsp;",
                        a.length - 1) + " "
                });
                if (c) {
                    var f = b.clone();
                    f.setHtml(e);
                    c.append(f)
                } else b.setHtml(e)
            }
            return c || b
        }

        function o(a) {
            var b = this._.definition, c = b.attributes, b = b.styles, d = s(this)[a.getName()], e = CKEDITOR.tools.isEmpty(c) && CKEDITOR.tools.isEmpty(b), f;
            for (f in c)if (!((f == "class" || this._.definition.fullMatch) && a.getAttribute(f) != A(f, c[f]))) {
                e = a.hasAttribute(f);
                a.removeAttribute(f)
            }
            for (var g in b)if (!(this._.definition.fullMatch && a.getStyle(g) != A(g, b[g], true))) {
                e = e || !!a.getStyle(g);
                a.removeStyle(g)
            }
            j(a, d, p[a.getName()]);
            e && (this._.definition.alwaysRemoveElement ? q(a, 1) : !CKEDITOR.dtd.$block[a.getName()] || this._.enterMode == CKEDITOR.ENTER_BR && !a.hasAttributes() ? q(a) : a.renameNode(this._.enterMode == CKEDITOR.ENTER_P ? "p" : "div"))
        }

        function l(a) {
            for (var b = s(this), c = a.getElementsByTag(this.element), d = c.count(); --d >= 0;)o.call(this, c.getItem(d));
            for (var e in b)if (e != this.element) {
                c = a.getElementsByTag(e);
                for (d = c.count() - 1; d >= 0; d--) {
                    var f = c.getItem(d);
                    j(f, b[e])
                }
            }
        }

        function j(a, b, c) {
            if (b = b && b.attributes)for (var d = 0; d < b.length; d++) {
                var e =
                    b[d][0], f;
                if (f = a.getAttribute(e)) {
                    var g = b[d][1];
                    (g === null || g.test && g.test(f) || typeof g == "string" && f == g) && a.removeAttribute(e)
                }
            }
            c || q(a)
        }

        function q(a, b) {
            if (!a.hasAttributes() || b)if (CKEDITOR.dtd.$block[a.getName()]) {
                var c = a.getPrevious(v), d = a.getNext(v);
                c && (c.type == CKEDITOR.NODE_TEXT || !c.isBlockBoundary({br: 1})) && a.append("br", 1);
                d && (d.type == CKEDITOR.NODE_TEXT || !d.isBlockBoundary({br: 1})) && a.append("br");
                a.remove(true)
            } else {
                c = a.getFirst();
                d = a.getLast();
                a.remove(true);
                if (c) {
                    c.type == CKEDITOR.NODE_ELEMENT &&
                    c.mergeSiblings();
                    d && (!c.equals(d) && d.type == CKEDITOR.NODE_ELEMENT) && d.mergeSiblings()
                }
            }
        }

        function y(a, b, c) {
            var d;
            d = a.element;
            d == "*" && (d = "span");
            d = new CKEDITOR.dom.element(d, b);
            c && c.copyAttributes(d);
            d = z(d, a);
            b.getCustomData("doc_processing_style") && d.hasAttribute("id") ? d.removeAttribute("id") : b.setCustomData("doc_processing_style", 1);
            return d
        }

        function z(a, b) {
            var c = b._.definition, d = c.attributes, c = CKEDITOR.style.getStyleText(c);
            if (d)for (var e in d)a.setAttribute(e, d[e]);
            c && a.setAttribute("style", c);
            return a
        }

        function i(a, b) {
            for (var c in a)a[c] = a[c].replace(r, function (a, c) {
                return b[c]
            })
        }

        function s(a) {
            if (a._.overrides)return a._.overrides;
            var b = a._.overrides = {}, c = a._.definition.overrides;
            if (c) {
                CKEDITOR.tools.isArray(c) || (c = [c]);
                for (var d = 0; d < c.length; d++) {
                    var e = c[d], f, g;
                    if (typeof e == "string")f = e.toLowerCase(); else {
                        f = e.element ? e.element.toLowerCase() : a.element;
                        g = e.attributes
                    }
                    e = b[f] || (b[f] = {});
                    if (g) {
                        var e = e.attributes = e.attributes || [], h;
                        for (h in g)e.push([h.toLowerCase(), g[h]])
                    }
                }
            }
            return b
        }

        function A(a, b, c) {
            var d = new CKEDITOR.dom.element("span");
            d[c ? "setStyle" : "setAttribute"](a, b);
            return d[c ? "getStyle" : "getAttribute"](a)
        }

        function B(a, b) {
            for (var c = a.document, d = a.getRanges(), e = b ? this.removeFromRange : this.applyToRange, f, g = d.createIterator(); f = g.getNextRange();)e.call(this, f);
            a.selectRanges(d);
            c.removeCustomData("doc_processing_style")
        }

        var p = {address: 1, div: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, p: 1, pre: 1, section: 1, header: 1, footer: 1, nav: 1, article: 1, aside: 1, figure: 1, dialog: 1, hgroup: 1, time: 1, meter: 1, menu: 1, command: 1,
            keygen: 1, output: 1, progress: 1, details: 1, datagrid: 1, datalist: 1}, E = {a: 1, embed: 1, hr: 1, img: 1, li: 1, object: 1, ol: 1, table: 1, td: 1, tr: 1, th: 1, ul: 1, dl: 1, dt: 1, dd: 1, form: 1, audio: 1, video: 1}, u = /\s*(?:;\s*|$)/, r = /#\((.+?)\)/g, D = CKEDITOR.dom.walker.bookmark(0, 1), v = CKEDITOR.dom.walker.whitespaces(1);
        CKEDITOR.style = function (a, b) {
            var c = a.attributes;
            if (c && c.style) {
                a.styles = CKEDITOR.tools.extend({}, a.styles, CKEDITOR.tools.parseCssText(c.style));
                delete c.style
            }
            if (b) {
                a = CKEDITOR.tools.clone(a);
                i(a.attributes, b);
                i(a.styles,
                    b)
            }
            c = this.element = a.element ? typeof a.element == "string" ? a.element.toLowerCase() : a.element : "*";
            this.type = a.type || (p[c] ? CKEDITOR.STYLE_BLOCK : E[c] ? CKEDITOR.STYLE_OBJECT : CKEDITOR.STYLE_INLINE);
            if (typeof this.element == "object")this.type = CKEDITOR.STYLE_OBJECT;
            this._ = {definition: a}
        };
        CKEDITOR.editor.prototype.applyStyle = function (a) {
            B.call(a, this.getSelection())
        };
        CKEDITOR.editor.prototype.removeStyle = function (a) {
            B.call(a, this.getSelection(), 1)
        };
        CKEDITOR.style.prototype = {apply: function (a) {
            B.call(this, a.getSelection())
        },
            remove: function (a) {
                B.call(this, a.getSelection(), 1)
            }, applyToRange: function (a) {
                return(this.applyToRange = this.type == CKEDITOR.STYLE_INLINE ? c : this.type == CKEDITOR.STYLE_BLOCK ? d : this.type == CKEDITOR.STYLE_OBJECT ? f : null).call(this, a)
            }, removeFromRange: function (b) {
                return(this.removeFromRange = this.type == CKEDITOR.STYLE_INLINE ? a : this.type == CKEDITOR.STYLE_BLOCK ? g : this.type == CKEDITOR.STYLE_OBJECT ? e : null).call(this, b)
            }, applyToObject: function (a) {
                z(a, this)
            }, checkActive: function (a) {
                switch (this.type) {
                    case CKEDITOR.STYLE_BLOCK:
                        return this.checkElementRemovable(a.block ||
                            a.blockLimit, true);
                    case CKEDITOR.STYLE_OBJECT:
                    case CKEDITOR.STYLE_INLINE:
                        for (var b = a.elements, c = 0, d; c < b.length; c++) {
                            d = b[c];
                            if (!(this.type == CKEDITOR.STYLE_INLINE && (d == a.block || d == a.blockLimit))) {
                                if (this.type == CKEDITOR.STYLE_OBJECT) {
                                    var e = d.getName();
                                    if (!(typeof this.element == "string" ? e == this.element : e in this.element))continue
                                }
                                if (this.checkElementRemovable(d, true))return true
                            }
                        }
                }
                return false
            }, checkApplicable: function (a) {
                switch (this.type) {
                    case CKEDITOR.STYLE_OBJECT:
                        return a.contains(this.element)
                }
                return true
            },
            checkElementMatch: function (a, b) {
                var c = this._.definition;
                if (!a || !c.ignoreReadonly && a.isReadOnly())return false;
                var d = a.getName();
                if (typeof this.element == "string" ? d == this.element : d in this.element) {
                    if (!b && !a.hasAttributes())return true;
                    if (d = c._AC)c = d; else {
                        var d = {}, e = 0, f = c.attributes;
                        if (f)for (var g in f) {
                            e++;
                            d[g] = f[g]
                        }
                        if (g = CKEDITOR.style.getStyleText(c)) {
                            d.style || e++;
                            d.style = g
                        }
                        d._length = e;
                        c = c._AC = d
                    }
                    if (c._length) {
                        for (var h in c)if (h != "_length") {
                            e = a.getAttribute(h) || "";
                            if (h == "style")a:{
                                d = c[h];
                                typeof d ==
                                    "string" && (d = CKEDITOR.tools.parseCssText(d));
                                typeof e == "string" && (e = CKEDITOR.tools.parseCssText(e, true));
                                g = void 0;
                                for (g in d)if (!(g in e && (e[g] == d[g] || d[g] == "inherit" || e[g] == "inherit"))) {
                                    d = false;
                                    break a
                                }
                                d = true
                            } else d = c[h] == e;
                            if (d) {
                                if (!b)return true
                            } else if (b)return false
                        }
                        if (b)return true
                    } else return true
                }
                return false
            }, checkElementRemovable: function (a, b) {
                if (this.checkElementMatch(a, b))return true;
                var c = s(this)[a.getName()];
                if (c) {
                    var d;
                    if (!(c = c.attributes))return true;
                    for (var e = 0; e < c.length; e++) {
                        d =
                            c[e][0];
                        if (d = a.getAttribute(d)) {
                            var f = c[e][1];
                            if (f === null || typeof f == "string" && d == f || f.test(d))return true
                        }
                    }
                }
                return false
            }, buildPreview: function (a) {
                var b = this._.definition, c = [], d = b.element;
                d == "bdo" && (d = "span");
                var c = ["<", d], e = b.attributes;
                if (e)for (var f in e)c.push(" ", f, '="', e[f], '"');
                (e = CKEDITOR.style.getStyleText(b)) && c.push(' style="', e, '"');
                c.push(">", a || b.name, "</", d, ">");
                return c.join("")
            }};
        CKEDITOR.style.getStyleText = function (a) {
            var b = a._ST;
            if (b)return b;
            var b = a.styles, c = a.attributes && a.attributes.style ||
                "", d = "";
            c.length && (c = c.replace(u, ";"));
            for (var e in b) {
                var f = b[e], g = (e + ":" + f).replace(u, ";");
                f == "inherit" ? d = d + g : c = c + g
            }
            c.length && (c = CKEDITOR.tools.normalizeCssText(c, true));
            return a._ST = c + d
        }
    })();
    CKEDITOR.styleCommand = function (b) {
        this.style = b
    };
    CKEDITOR.styleCommand.prototype.exec = function (b) {
        b.focus();
        this.state == CKEDITOR.TRISTATE_OFF ? b.applyStyle(this.style) : this.state == CKEDITOR.TRISTATE_ON && b.removeStyle(this.style)
    };
    CKEDITOR.stylesSet = new CKEDITOR.resourceManager("", "stylesSet");
    CKEDITOR.addStylesSet = CKEDITOR.tools.bind(CKEDITOR.stylesSet.add, CKEDITOR.stylesSet);
    CKEDITOR.loadStylesSet = function (b, c, a) {
        CKEDITOR.stylesSet.addExternal(b, c, "");
        CKEDITOR.stylesSet.load(b, a)
    };
    CKEDITOR.editor.prototype.getStylesSet = function (b) {
        if (this._.stylesDefinitions)b(this._.stylesDefinitions); else {
            var c = this, a = c.config.stylesCombo_stylesSet || c.config.stylesSet || "default";
            if (a instanceof Array) {
                c._.stylesDefinitions = a;
                b(a)
            } else {
                var a = a.split(":"), f = a[0];
                CKEDITOR.stylesSet.addExternal(f, a[1] ? a.slice(1).join(":") : CKEDITOR.getUrl("styles.js"), "");
                CKEDITOR.stylesSet.load(f, function (a) {
                    c._.stylesDefinitions = a[f];
                    b(c._.stylesDefinitions)
                })
            }
        }
    };
    CKEDITOR.dom.comment = function (b, c) {
        typeof b == "string" && (b = (c ? c.$ : document).createComment(b));
        CKEDITOR.dom.domObject.call(this, b)
    };
    CKEDITOR.dom.comment.prototype = new CKEDITOR.dom.node;
    CKEDITOR.tools.extend(CKEDITOR.dom.comment.prototype, {type: CKEDITOR.NODE_COMMENT, getOuterHtml: function () {
        return"<\!--" + this.$.nodeValue + "--\>"
    }});
    (function () {
        var b = {}, c;
        for (c in CKEDITOR.dtd.$blockLimit)c in CKEDITOR.dtd.$list || (b[c] = 1);
        var a = {};
        for (c in CKEDITOR.dtd.$block)c in CKEDITOR.dtd.$blockLimit || c in CKEDITOR.dtd.$empty || (a[c] = 1);
        CKEDITOR.dom.elementPath = function (c, e) {
            var d = null, g = null, k = [], e = e || c.getDocument().getBody(), h = c;
            do if (h.type == CKEDITOR.NODE_ELEMENT) {
                k.push(h);
                if (!this.lastElement) {
                    this.lastElement = h;
                    if (h.is(CKEDITOR.dtd.$object))continue
                }
                var m = h.getName();
                if (!g) {
                    !d && a[m] && (d = h);
                    if (b[m]) {
                        var n;
                        if (n = !d) {
                            if (m = m == "div") {
                                a:{
                                    m =
                                        h.getChildren();
                                    n = 0;
                                    for (var o = m.count(); n < o; n++) {
                                        var l = m.getItem(n);
                                        if (l.type == CKEDITOR.NODE_ELEMENT && CKEDITOR.dtd.$block[l.getName()]) {
                                            m = true;
                                            break a
                                        }
                                    }
                                    m = false
                                }
                                m = !m && !h.equals(e)
                            }
                            n = m
                        }
                        n ? d = h : g = h
                    }
                }
                if (h.equals(e))break
            } while (h = h.getParent());
            this.block = d;
            this.blockLimit = g;
            this.root = e;
            this.elements = k
        }
    })();
    CKEDITOR.dom.elementPath.prototype = {compare: function (b) {
        var c = this.elements, b = b && b.elements;
        if (!b || c.length != b.length)return false;
        for (var a = 0; a < c.length; a++)if (!c[a].equals(b[a]))return false;
        return true
    }, contains: function (b, c, a) {
        var f;
        typeof b == "string" && (f = function (a) {
            return a.getName() == b
        });
        b instanceof CKEDITOR.dom.element ? f = function (a) {
            return a.equals(b)
        } : CKEDITOR.tools.isArray(b) ? f = function (a) {
            return CKEDITOR.tools.indexOf(b, a.getName()) > -1
        } : typeof b == "function" ? f = b : typeof b == "object" && (f =
            function (a) {
                return a.getName()in b
            });
        var e = this.elements, d = e.length;
        c && d--;
        if (a) {
            e = Array.prototype.slice.call(e, 0);
            e.reverse()
        }
        for (c = 0; c < d; c++)if (f(e[c]))return e[c];
        return null
    }, isContextFor: function (b) {
        var c;
        if (b in CKEDITOR.dtd.$block) {
            c = this.contains(CKEDITOR.dtd.$intermediate) || this.root.equals(this.block) && this.block || this.blockLimit;
            return!!c.getDtd()[b]
        }
        return true
    }, direction: function () {
        return(this.block || this.blockLimit || this.root).getDirection(1)
    }};
    CKEDITOR.dom.text = function (b, c) {
        typeof b == "string" && (b = (c ? c.$ : document).createTextNode(b));
        this.$ = b
    };
    CKEDITOR.dom.text.prototype = new CKEDITOR.dom.node;
    CKEDITOR.tools.extend(CKEDITOR.dom.text.prototype, {type: CKEDITOR.NODE_TEXT, getLength: function () {
        return this.$.nodeValue.length
    }, getText: function () {
        return this.$.nodeValue
    }, setText: function (b) {
        this.$.nodeValue = b
    }, split: function (b) {
        var c = this.$.parentNode, a = c.childNodes.length, f = this.getLength(), e = this.getDocument(), d = new CKEDITOR.dom.text(this.$.splitText(b), e);
        if (c.childNodes.length == a)if (b >= f) {
            d = e.createText("");
            d.insertAfter(this)
        } else {
            b = e.createText("");
            b.insertAfter(d);
            b.remove()
        }
        return d
    }, substring: function (b, c) {
        return typeof c != "number" ? this.$.nodeValue.substr(b) : this.$.nodeValue.substring(b, c)
    }});
    (function () {
        function b(a, b, c) {
            var d = a.serializable, g = b[c ? "endContainer" : "startContainer"], k = c ? "endOffset" : "startOffset", h = d ? b.document.getById(a.startNode) : a.startNode, a = d ? b.document.getById(a.endNode) : a.endNode;
            if (g.equals(h.getPrevious())) {
                b.startOffset = b.startOffset - g.getLength() - a.getPrevious().getLength();
                g = a.getNext()
            } else if (g.equals(a.getPrevious())) {
                b.startOffset = b.startOffset - g.getLength();
                g = a.getNext()
            }
            g.equals(h.getParent()) && b[k]++;
            g.equals(a.getParent()) && b[k]++;
            b[c ? "endContainer" : "startContainer"] =
                g;
            return b
        }

        CKEDITOR.dom.rangeList = function (a) {
            if (a instanceof CKEDITOR.dom.rangeList)return a;
            a ? a instanceof CKEDITOR.dom.range && (a = [a]) : a = [];
            return CKEDITOR.tools.extend(a, c)
        };
        var c = {createIterator: function () {
            var a = this, b = CKEDITOR.dom.walker.bookmark(), c = [], d;
            return{getNextRange: function (g) {
                d = d == void 0 ? 0 : d + 1;
                var k = a[d];
                if (k && a.length > 1) {
                    if (!d)for (var h = a.length - 1; h >= 0; h--)c.unshift(a[h].createBookmark(true));
                    if (g)for (var m = 0; a[d + m + 1];) {
                        for (var n = k.document, g = 0, h = n.getById(c[m].endNode), n = n.getById(c[m +
                            1].startNode); ;) {
                            h = h.getNextSourceNode(false);
                            if (n.equals(h))g = 1; else if (b(h) || h.type == CKEDITOR.NODE_ELEMENT && h.isBlockBoundary())continue;
                            break
                        }
                        if (!g)break;
                        m++
                    }
                    for (k.moveToBookmark(c.shift()); m--;) {
                        h = a[++d];
                        h.moveToBookmark(c.shift());
                        k.setEnd(h.endContainer, h.endOffset)
                    }
                }
                return k
            }}
        }, createBookmarks: function (a) {
            for (var c = [], e, d = 0; d < this.length; d++) {
                c.push(e = this[d].createBookmark(a, true));
                for (var g = d + 1; g < this.length; g++) {
                    this[g] = b(e, this[g]);
                    this[g] = b(e, this[g], true)
                }
            }
            return c
        }, createBookmarks2: function (a) {
            for (var b =
                [], c = 0; c < this.length; c++)b.push(this[c].createBookmark2(a));
            return b
        }, moveToBookmarks: function (a) {
            for (var b = 0; b < this.length; b++)this[b].moveToBookmark(a[b])
        }}
    })();
    (function () {
        function b() {
            return CKEDITOR.getUrl(CKEDITOR.skinName.split(",")[1] || "skins/" + CKEDITOR.skinName.split(",")[0] + "/")
        }

        function c(a) {
            var c = CKEDITOR.skin["ua_" + a], d = CKEDITOR.env;
            if (c)for (var c = c.split(",").sort(function (a, b) {
                return a > b ? -1 : 1
            }), e = 0, f; e < c.length; e++) {
                f = c[e];
                if (d.ie && (f.replace(/^ie/, "") == d.version || d.quirks && f == "iequirks"))f = "ie";
                if (d[f]) {
                    a = a + ("_" + c[e]);
                    break
                }
            }
            return CKEDITOR.getUrl(b() + a + ".css")
        }

        function a(a, b) {
            if (!d[a]) {
                CKEDITOR.document.appendStyleSheet(c(a));
                d[a] = 1
            }
            b && b()
        }

        function f(a) {
            var b = a.getById(g);
            if (!b) {
                b = a.getHead().append("style");
                b.setAttribute("id", g);
                b.setAttribute("type", "text/css")
            }
            return b
        }

        function e(a, b, c) {
            var d, e, f;
            if (CKEDITOR.env.webkit) {
                b = b.split("}").slice(0, -1);
                for (e = 0; e < b.length; e++)b[e] = b[e].split("{")
            }
            for (var g = 0; g < a.length; g++)if (CKEDITOR.env.webkit)for (e = 0; e < b.length; e++) {
                f = b[e][1];
                for (d = 0; d < c.length; d++)f = f.replace(c[d][0], c[d][1]);
                a[g].$.sheet.addRule(b[e][0], f)
            } else {
                f = b;
                for (d = 0; d < c.length; d++)f = f.replace(c[d][0], c[d][1]);
                CKEDITOR.env.ie ?
                    a[g].$.styleSheet.cssText = a[g].$.styleSheet.cssText + f : a[g].$.innerHTML = a[g].$.innerHTML + f
            }
        }

        var d = {};
        CKEDITOR.skin = {path: b, loadPart: function (c, d) {
            CKEDITOR.skin.name != CKEDITOR.skinName.split(",")[0] ? CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(b() + "skin.js"), function () {
                a(c, d)
            }) : a(c, d)
        }, getPath: function (a) {
            return CKEDITOR.getUrl(c(a))
        }, icons: {}, addIcon: function (a, b, c) {
            a = a.toLowerCase();
            this.icons[a] || (this.icons[a] = {path: b, offset: c || 0})
        }, getIconStyle: function (a, b, c, d) {
            var e;
            if (a) {
                a = a.toLowerCase();
                b &&
                (e = this.icons[a + "-rtl"]);
                e || (e = this.icons[a])
            }
            a = c || e && e.path || "";
            d = d || e && e.offset;
            return a && "background-image:url(" + CKEDITOR.getUrl(a) + ");background-position:0 " + d + "px;"
        }};
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {getUiColor: function () {
            return this.uiColor
        }, setUiColor: function (a) {
            var b = f(CKEDITOR.document);
            return(this.setUiColor = function (a) {
                var c = CKEDITOR.skin.chameleon, d = [
                    [h, a]
                ];
                this.uiColor = a;
                e([b], c(this, "editor"), d);
                e(k, c(this, "panel"), d)
            }).call(this, a)
        }});
        var g = "cke_ui_color", k = [], h = /\$color/g;
        CKEDITOR.on("instanceLoaded", function (a) {
            if (!CKEDITOR.env.ie || !CKEDITOR.env.quirks) {
                var b = a.editor, a = function (a) {
                    a = (a.data[0] || a.data).element.getElementsByTag("iframe").getItem(0).getFrameDocument();
                    if (!a.getById("cke_ui_color")) {
                        a = f(a);
                        k.push(a);
                        var c = b.getUiColor();
                        c && e([a], CKEDITOR.skin.chameleon(b, "panel"), [
                            [h, c]
                        ])
                    }
                };
                b.on("panelShow", a);
                b.on("menuShow", a);
                b.config.uiColor && b.setUiColor(b.config.uiColor)
            }
        })
    })();
    (function () {
        if (CKEDITOR.env.webkit)CKEDITOR.env.hc = false; else {
            var b = CKEDITOR.dom.element.createFromHtml('<div style="width:0px;height:0px;position:absolute;left:-10000px;border: 1px solid;border-color: red blue;"></div>', CKEDITOR.document);
            b.appendTo(CKEDITOR.document.getHead());
            try {
                CKEDITOR.env.hc = b.getComputedStyle("border-top-color") == b.getComputedStyle("border-right-color")
            } catch (c) {
                CKEDITOR.env.hc = false
            }
            b.remove()
        }
        if (CKEDITOR.env.hc)CKEDITOR.env.cssClass = CKEDITOR.env.cssClass + " cke_hc";
        CKEDITOR.document.appendStyleText(".cke{visibility:hidden;}");
        CKEDITOR.status = "loaded";
        CKEDITOR.fireOnce("loaded");
        if (b = CKEDITOR._.pending) {
            delete CKEDITOR._.pending;
            for (var a = 0; a < b.length; a++) {
                CKEDITOR.editor.prototype.constructor.apply(b[a][0], b[a][1]);
                CKEDITOR.add(b[a][0])
            }
        }
    })();
    /*
     Copyright (c) 2003-2013, CKSource - Frederico Knabben. All rights reserved.
     For licensing, see LICENSE.html or http://ckeditor.com/license
     */
    CKEDITOR.skin.name = "moono";
    CKEDITOR.skin.ua_editor = "ie,iequirks,ie7,ie8,gecko";
    CKEDITOR.skin.ua_dialog = "ie,iequirks,ie7,ie8,opera";
    CKEDITOR.skin.chameleon = function () {
        var b = function () {
            return function (b, e) {
                for (var a = b.match(/[^#]./g), c = 0; 3 > c; c++) {
                    var f = a, h = c, d;
                    d = parseInt(a[c], 16);
                    d = ("0" + (0 > e ? 0 | d * (1 + e) : 0 | d + (255 - d) * e).toString(16)).slice(-2);
                    f[h] = d
                }
                return"#" + a.join("")
            }
        }(), c = function () {
            var b = new CKEDITOR.template("background:#{to};background-image:-webkit-gradient(linear,lefttop,leftbottom,from({from}),to({to}));background-image:-moz-linear-gradient(top,{from},{to});background-image:-webkit-linear-gradient(top,{from},{to});background-image:-o-linear-gradient(top,{from},{to});background-image:-ms-linear-gradient(top,{from},{to});background-image:linear-gradient(top,{from},{to});filter:progid:DXImageTransform.Microsoft.gradient(gradientType=0,startColorstr='{from}',endColorstr='{to}');");
            return function (c, a) {
                return b.output({from: c, to: a})
            }
        }(), f = {editor: new CKEDITOR.template("{id}.cke_chrome [border-color:{defaultBorder};] {id} .cke_top [ {defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_bottom [{defaultGradient}border-top-color:{defaultBorder};] {id} .cke_resizer [border-right-color:{ckeResizer}] {id} .cke_dialog_title [{defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_dialog_footer [{defaultGradient}outline-color:{defaultBorder};border-top-color:{defaultBorder};] {id} .cke_dialog_tab [{lightGradient}border-color:{defaultBorder};] {id} .cke_dialog_tab:hover [{mediumGradient}] {id} .cke_dialog_contents [border-top-color:{defaultBorder};] {id} .cke_dialog_tab_selected, {id} .cke_dialog_tab_selected:hover [background:{dialogTabSelected};border-bottom-color:{dialogTabSelectedBorder};] {id} .cke_dialog_body [background:{dialogBody};border-color:{defaultBorder};] {id} .cke_toolgroup [{lightGradient}border-color:{defaultBorder};] {id} a.cke_button_off:hover, {id} a.cke_button_off:focus, {id} a.cke_button_off:active [{mediumGradient}] {id} .cke_button_on [{ckeButtonOn}] {id} .cke_toolbar_separator [background-color: {ckeToolbarSeparator};] {id} .cke_combo_button [border-color:{defaultBorder};{lightGradient}] {id} a.cke_combo_button:hover, {id} a.cke_combo_button:focus, {id} .cke_combo_on a.cke_combo_button [border-color:{defaultBorder};{mediumGradient}] {id} .cke_path_item [color:{elementsPathColor};] {id} a.cke_path_item:hover, {id} a.cke_path_item:focus, {id} a.cke_path_item:active [background-color:{elementsPathBg};] {id}.cke_panel [border-color:{defaultBorder};] "),
            panel: new CKEDITOR.template(".cke_panel_grouptitle [{lightGradient}border-color:{defaultBorder};] .cke_menubutton_icon [background-color:{menubuttonIcon};] .cke_menubutton:hover .cke_menubutton_icon, .cke_menubutton:focus .cke_menubutton_icon, .cke_menubutton:active .cke_menubutton_icon [background-color:{menubuttonIconHover};] .cke_menuseparator [background-color:{menubuttonIcon};] a:hover.cke_colorbox, a:focus.cke_colorbox, a:active.cke_colorbox [border-color:{defaultBorder};] a:hover.cke_colorauto, a:hover.cke_colormore, a:focus.cke_colorauto, a:focus.cke_colormore, a:active.cke_colorauto, a:active.cke_colormore [background-color:{ckeColorauto};border-color:{defaultBorder};] ")};
        return function (g, e) {
            var a = g.uiColor, a = {id: "." + g.id, defaultBorder: b(a, -0.1), defaultGradient: c(b(a, 0.9), a), lightGradient: c(b(a, 1), b(a, 0.7)), mediumGradient: c(b(a, 0.8), b(a, 0.5)), ckeButtonOn: c(b(a, 0.6), b(a, 0.7)), ckeResizer: b(a, -0.4), ckeToolbarSeparator: b(a, 0.5), ckeColorauto: b(a, 0.8), dialogBody: b(a, 0.7), dialogTabSelected: c("#FFFFFF", "#FFFFFF"), dialogTabSelectedBorder: "#FFF", elementsPathColor: b(a, -0.6), elementsPathBg: a, menubuttonIcon: b(a, 0.5), menubuttonIconHover: b(a, 0.3)};
            return f[e].output(a).replace(/\[/g,
                "{").replace(/\]/g, "}")
        }
    }();
    CKEDITOR.plugins.add("dialogui", {onLoad: function () {
        var h = function (b) {
            this._ || (this._ = {});
            this._["default"] = this._.initValue = b["default"] || "";
            this._.required = b.required || !1;
            for (var a = [this._], d = 1; d < arguments.length; d++)a.push(arguments[d]);
            a.push(!0);
            CKEDITOR.tools.extend.apply(CKEDITOR.tools, a);
            return this._
        }, r = {build: function (b, a, d) {
            return new CKEDITOR.ui.dialog.textInput(b, a, d)
        }}, l = {build: function (b, a, d) {
            return new CKEDITOR.ui.dialog[a.type](b, a, d)
        }}, n = {isChanged: function () {
            return this.getValue() !=
                this.getInitValue()
        }, reset: function (b) {
            this.setValue(this.getInitValue(), b)
        }, setInitValue: function () {
            this._.initValue = this.getValue()
        }, resetInitValue: function () {
            this._.initValue = this._["default"]
        }, getInitValue: function () {
            return this._.initValue
        }}, o = CKEDITOR.tools.extend({}, CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors, {onChange: function (b, a) {
            this._.domOnChangeRegistered || (b.on("load", function () {
                this.getInputElement().on("change", function () {
                        b.parts.dialog.isVisible() && this.fire("change", {value: this.getValue()})
                    },
                    this)
            }, this), this._.domOnChangeRegistered = !0);
            this.on("change", a)
        }}, !0), s = /^on([A-Z]\w+)/, p = function (b) {
            for (var a in b)(s.test(a) || "title" == a || "type" == a) && delete b[a];
            return b
        };
        CKEDITOR.tools.extend(CKEDITOR.ui.dialog, {labeledElement: function (b, a, d, e) {
            if (!(4 > arguments.length)) {
                var c = h.call(this, a);
                c.labelId = CKEDITOR.tools.getNextId() + "_label";
                this._.children = [];
                CKEDITOR.ui.dialog.uiElement.call(this, b, a, d, "div", null, {role: "presentation"}, function () {
                    var f = [], d = a.required ? " cke_required" : "";
                    "horizontal" !=
                        a.labelLayout ? f.push('<label class="cke_dialog_ui_labeled_label' + d + '" ', ' id="' + c.labelId + '"', c.inputId ? ' for="' + c.inputId + '"' : "", (a.labelStyle ? ' style="' + a.labelStyle + '"' : "") + ">", a.label, "</label>", '<div class="cke_dialog_ui_labeled_content"' + (a.controlStyle ? ' style="' + a.controlStyle + '"' : "") + ' role="presentation">', e.call(this, b, a), "</div>") : (d = {type: "hbox", widths: a.widths, padding: 0, children: [
                        {type: "html", html: '<label class="cke_dialog_ui_labeled_label' + d + '" id="' + c.labelId + '" for="' + c.inputId + '"' +
                            (a.labelStyle ? ' style="' + a.labelStyle + '"' : "") + ">" + CKEDITOR.tools.htmlEncode(a.label) + "</span>"},
                        {type: "html", html: '<span class="cke_dialog_ui_labeled_content"' + (a.controlStyle ? ' style="' + a.controlStyle + '"' : "") + ">" + e.call(this, b, a) + "</span>"}
                    ]}, CKEDITOR.dialog._.uiElementBuilders.hbox.build(b, d, f));
                    return f.join("")
                })
            }
        }, textInput: function (b, a, d) {
            if (!(3 > arguments.length)) {
                h.call(this, a);
                var e = this._.inputId = CKEDITOR.tools.getNextId() + "_textInput", c = {"class": "cke_dialog_ui_input_" + a.type, id: e, type: a.type};
                a.validate && (this.validate = a.validate);
                a.maxLength && (c.maxlength = a.maxLength);
                a.size && (c.size = a.size);
                a.inputStyle && (c.style = a.inputStyle);
                var f = this, i = !1;
                b.on("load", function () {
                    f.getInputElement().on("keydown", function (a) {
                        a.data.getKeystroke() == 13 && (i = true)
                    });
                    f.getInputElement().on("keyup", function (a) {
                        if (a.data.getKeystroke() == 13 && i) {
                            b.getButton("ok") && setTimeout(function () {
                                b.getButton("ok").click()
                            }, 0);
                            i = false
                        }
                    }, null, null, 1E3)
                });
                CKEDITOR.ui.dialog.labeledElement.call(this, b, a, d, function () {
                    var b =
                        ['<div class="cke_dialog_ui_input_', a.type, '" role="presentation"'];
                    a.width && b.push('style="width:' + a.width + '" ');
                    b.push("><input ");
                    c["aria-labelledby"] = this._.labelId;
                    this._.required && (c["aria-required"] = this._.required);
                    for (var f in c)b.push(f + '="' + c[f] + '" ');
                    b.push(" /></div>");
                    return b.join("")
                })
            }
        }, textarea: function (b, a, d) {
            if (!(3 > arguments.length)) {
                h.call(this, a);
                var e = this, c = this._.inputId = CKEDITOR.tools.getNextId() + "_textarea", f = {};
                a.validate && (this.validate = a.validate);
                f.rows = a.rows || 5;
                f.cols =
                    a.cols || 20;
                "undefined" != typeof a.inputStyle && (f.style = a.inputStyle);
                CKEDITOR.ui.dialog.labeledElement.call(this, b, a, d, function () {
                    f["aria-labelledby"] = this._.labelId;
                    this._.required && (f["aria-required"] = this._.required);
                    var a = ['<div class="cke_dialog_ui_input_textarea" role="presentation"><textarea class="cke_dialog_ui_input_textarea" id="', c, '" '], b;
                    for (b in f)a.push(b + '="' + CKEDITOR.tools.htmlEncode(f[b]) + '" ');
                    a.push(">", CKEDITOR.tools.htmlEncode(e._["default"]), "</textarea></div>");
                    return a.join("")
                })
            }
        },
            checkbox: function (b, a, d) {
                if (!(3 > arguments.length)) {
                    var e = h.call(this, a, {"default": !!a["default"]});
                    a.validate && (this.validate = a.validate);
                    CKEDITOR.ui.dialog.uiElement.call(this, b, a, d, "span", null, null, function () {
                        var c = CKEDITOR.tools.extend({}, a, {id: a.id ? a.id + "_checkbox" : CKEDITOR.tools.getNextId() + "_checkbox"}, true), f = [], d = CKEDITOR.tools.getNextId() + "_label", g = {"class": "cke_dialog_ui_checkbox_input", type: "checkbox", "aria-labelledby": d};
                        p(c);
                        if (a["default"])g.checked = "checked";
                        if (typeof c.inputStyle !=
                            "undefined")c.style = c.inputStyle;
                        e.checkbox = new CKEDITOR.ui.dialog.uiElement(b, c, f, "input", null, g);
                        f.push(' <label id="', d, '" for="', g.id, '"' + (a.labelStyle ? ' style="' + a.labelStyle + '"' : "") + ">", CKEDITOR.tools.htmlEncode(a.label), "</label>");
                        return f.join("")
                    })
                }
            }, radio: function (b, a, d) {
                if (!(3 > arguments.length)) {
                    h.call(this, a);
                    this._["default"] || (this._["default"] = this._.initValue = a.items[0][1]);
                    a.validate && (this.validate = a.valdiate);
                    var e = [], c = this;
                    CKEDITOR.ui.dialog.labeledElement.call(this, b, a, d, function () {
                        for (var f =
                            [], d = [], g = a.id ? a.id + "_radio" : CKEDITOR.tools.getNextId() + "_radio", j = 0; j < a.items.length; j++) {
                            var k = a.items[j], h = k[2] !== void 0 ? k[2] : k[0], l = k[1] !== void 0 ? k[1] : k[0], m = CKEDITOR.tools.getNextId() + "_radio_input", n = m + "_label", m = CKEDITOR.tools.extend({}, a, {id: m, title: null, type: null}, true), h = CKEDITOR.tools.extend({}, m, {title: h}, true), o = {type: "radio", "class": "cke_dialog_ui_radio_input", name: g, value: l, "aria-labelledby": n}, q = [];
                            if (c._["default"] == l)o.checked = "checked";
                            p(m);
                            p(h);
                            if (typeof m.inputStyle != "undefined")m.style =
                                m.inputStyle;
                            e.push(new CKEDITOR.ui.dialog.uiElement(b, m, q, "input", null, o));
                            q.push(" ");
                            new CKEDITOR.ui.dialog.uiElement(b, h, q, "label", null, {id: n, "for": o.id}, k[0]);
                            f.push(q.join(""))
                        }
                        new CKEDITOR.ui.dialog.hbox(b, e, f, d);
                        return d.join("")
                    });
                    this._.children = e
                }
            }, button: function (b, a, d) {
                if (arguments.length) {
                    "function" == typeof a && (a = a(b.getParentEditor()));
                    h.call(this, a, {disabled: a.disabled || !1});
                    CKEDITOR.event.implementOn(this);
                    var e = this;
                    b.on("load", function () {
                        var a = this.getElement();
                        (function () {
                            a.on("click",
                                e.click, e);
                            a.on("keydown", function (a) {
                                a.data.getKeystroke()in{32: 1} && (e.click(), a.data.preventDefault())
                            })
                        })();
                        a.unselectable()
                    }, this);
                    var c = CKEDITOR.tools.extend({}, a);
                    delete c.style;
                    var f = CKEDITOR.tools.getNextId() + "_label";
                    CKEDITOR.ui.dialog.uiElement.call(this, b, c, d, "a", null, {style: a.style, href: "javascript:void(0)", title: a.label, hidefocus: "true", "class": a["class"], role: "button", "aria-labelledby": f}, '<span id="' + f + '" class="cke_dialog_ui_button">' + CKEDITOR.tools.htmlEncode(a.label) + "</span>")
                }
            },
            select: function (b, a, d) {
                if (!(3 > arguments.length)) {
                    var e = h.call(this, a);
                    a.validate && (this.validate = a.validate);
                    e.inputId = CKEDITOR.tools.getNextId() + "_select";
                    CKEDITOR.ui.dialog.labeledElement.call(this, b, a, d, function () {
                        var c = CKEDITOR.tools.extend({}, a, {id: a.id ? a.id + "_select" : CKEDITOR.tools.getNextId() + "_select"}, true), d = [], i = [], g = {id: e.inputId, "class": "cke_dialog_ui_input_select", "aria-labelledby": this._.labelId};
                        d.push('<div class="cke_dialog_ui_input_', a.type, '" role="presentation"');
                        a.width && d.push('style="width:' +
                            a.width + '" ');
                        d.push(">");
                        if (a.size != void 0)g.size = a.size;
                        if (a.multiple != void 0)g.multiple = a.multiple;
                        p(c);
                        for (var j = 0, k; j < a.items.length && (k = a.items[j]); j++)i.push('<option value="', CKEDITOR.tools.htmlEncode(k[1] !== void 0 ? k[1] : k[0]).replace(/"/g, "&quot;"), '" /> ', CKEDITOR.tools.htmlEncode(k[0]));
                        if (typeof c.inputStyle != "undefined")c.style = c.inputStyle;
                        e.select = new CKEDITOR.ui.dialog.uiElement(b, c, d, "select", null, g, i.join(""));
                        d.push("</div>");
                        return d.join("")
                    })
                }
            }, file: function (b, a, d) {
                if (!(3 > arguments.length)) {
                    void 0 ===
                        a["default"] && (a["default"] = "");
                    var e = CKEDITOR.tools.extend(h.call(this, a), {definition: a, buttons: []});
                    a.validate && (this.validate = a.validate);
                    b.on("load", function () {
                        CKEDITOR.document.getById(e.frameId).getParent().addClass("cke_dialog_ui_input_file")
                    });
                    CKEDITOR.ui.dialog.labeledElement.call(this, b, a, d, function () {
                        e.frameId = CKEDITOR.tools.getNextId() + "_fileInput";
                        var b = CKEDITOR.env.isCustomDomain(), d = ['<iframe frameborder="0" allowtransparency="0" class="cke_dialog_ui_input_file" role="presentation" id="',
                            e.frameId, '" title="', a.label, '" src="javascript:void('];
                        d.push(b ? "(function(){document.open();document.domain='" + document.domain + "';document.close();})()" : "0");
                        d.push(')"></iframe>');
                        return d.join("")
                    })
                }
            }, fileButton: function (b, a, d) {
                if (!(3 > arguments.length)) {
                    h.call(this, a);
                    var e = this;
                    a.validate && (this.validate = a.validate);
                    var c = CKEDITOR.tools.extend({}, a), f = c.onClick;
                    c.className = (c.className ? c.className + " " : "") + "cke_dialog_ui_button";
                    c.onClick = function (c) {
                        var d = a["for"];
                        if (!f || f.call(this, c) !== false) {
                            b.getContentElement(d[0],
                                d[1]).submit();
                            this.disable()
                        }
                    };
                    b.on("load", function () {
                        b.getContentElement(a["for"][0], a["for"][1])._.buttons.push(e)
                    });
                    CKEDITOR.ui.dialog.button.call(this, b, c, d)
                }
            }, html: function () {
                var b = /^\s*<[\w:]+\s+([^>]*)?>/, a = /^(\s*<[\w:]+(?:\s+[^>]*)?)((?:.|\r|\n)+)$/, d = /\/$/;
                return function (e, c, f) {
                    if (!(3 > arguments.length)) {
                        var i = [], g = c.html;
                        "<" != g.charAt(0) && (g = "<span>" + g + "</span>");
                        var j = c.focus;
                        j && (this.focus = function () {
                            this.selectParentTab();
                            "function" == typeof j && j.call(this);
                            this.fire("focus")
                        }, c.isFocusable &&
                            (this.isFocusable = this.isFocusable), this.keyboardFocusable = !0);
                        CKEDITOR.ui.dialog.uiElement.call(this, e, c, i, "span", null, null, "");
                        i = i.join("").match(b);
                        g = g.match(a) || ["", "", ""];
                        d.test(g[1]) && (g[1] = g[1].slice(0, -1), g[2] = "/" + g[2]);
                        f.push([g[1], " ", i[1] || "", g[2]].join(""))
                    }
                }
            }(), fieldset: function (b, a, d, e, c) {
                var f = c.label;
                this._ = {children: a};
                CKEDITOR.ui.dialog.uiElement.call(this, b, c, e, "fieldset", null, null, function () {
                    var a = [];
                    f && a.push("<legend" + (c.labelStyle ? ' style="' + c.labelStyle + '"' : "") + ">" + f + "</legend>");
                    for (var b = 0; b < d.length; b++)a.push(d[b]);
                    return a.join("")
                })
            }}, !0);
        CKEDITOR.ui.dialog.html.prototype = new CKEDITOR.ui.dialog.uiElement;
        CKEDITOR.ui.dialog.labeledElement.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {setLabel: function (b) {
            var a = CKEDITOR.document.getById(this._.labelId);
            1 > a.getChildCount() ? (new CKEDITOR.dom.text(b, CKEDITOR.document)).appendTo(a) : a.getChild(0).$.nodeValue = b;
            return this
        }, getLabel: function () {
            var b = CKEDITOR.document.getById(this._.labelId);
            return!b || 1 > b.getChildCount() ?
                "" : b.getChild(0).getText()
        }, eventProcessors: o}, !0);
        CKEDITOR.ui.dialog.button.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {click: function () {
            return!this._.disabled ? this.fire("click", {dialog: this._.dialog}) : !1
        }, enable: function () {
            this._.disabled = !1;
            var b = this.getElement();
            b && b.removeClass("cke_disabled")
        }, disable: function () {
            this._.disabled = !0;
            this.getElement().addClass("cke_disabled")
        }, isVisible: function () {
            return this.getElement().getFirst().isVisible()
        }, isEnabled: function () {
            return!this._.disabled
        },
            eventProcessors: CKEDITOR.tools.extend({}, CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors, {onClick: function (b, a) {
                this.on("click", function () {
                    a.apply(this, arguments)
                })
            }}, !0), accessKeyUp: function () {
                this.click()
            }, accessKeyDown: function () {
                this.focus()
            }, keyboardFocusable: !0}, !0);
        CKEDITOR.ui.dialog.textInput.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement, {getInputElement: function () {
            return CKEDITOR.document.getById(this._.inputId)
        }, focus: function () {
            var b = this.selectParentTab();
            setTimeout(function () {
                var a = b.getInputElement();
                a && a.$.focus()
            }, 0)
        }, select: function () {
            var b = this.selectParentTab();
            setTimeout(function () {
                var a = b.getInputElement();
                a && (a.$.focus(), a.$.select())
            }, 0)
        }, accessKeyUp: function () {
            this.select()
        }, setValue: function (b) {
            !b && (b = "");
            return CKEDITOR.ui.dialog.uiElement.prototype.setValue.apply(this, arguments)
        }, keyboardFocusable: !0}, n, !0);
        CKEDITOR.ui.dialog.textarea.prototype = new CKEDITOR.ui.dialog.textInput;
        CKEDITOR.ui.dialog.select.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,
            {getInputElement: function () {
                return this._.select.getElement()
            }, add: function (b, a, d) {
                var e = new CKEDITOR.dom.element("option", this.getDialog().getParentEditor().document), c = this.getInputElement().$;
                e.$.text = b;
                e.$.value = void 0 === a || null === a ? b : a;
                void 0 === d || null === d ? CKEDITOR.env.ie ? c.add(e.$) : c.add(e.$, null) : c.add(e.$, d);
                return this
            }, remove: function (b) {
                this.getInputElement().$.remove(b);
                return this
            }, clear: function () {
                for (var b = this.getInputElement().$; 0 < b.length;)b.remove(0);
                return this
            }, keyboardFocusable: !0},
            n, !0);
        CKEDITOR.ui.dialog.checkbox.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {getInputElement: function () {
            return this._.checkbox.getElement()
        }, setValue: function (b, a) {
            this.getInputElement().$.checked = b;
            !a && this.fire("change", {value: b})
        }, getValue: function () {
            return this.getInputElement().$.checked
        }, accessKeyUp: function () {
            this.setValue(!this.getValue())
        }, eventProcessors: {onChange: function (b, a) {
            if (!CKEDITOR.env.ie || 8 < CKEDITOR.env.version)return o.onChange.apply(this, arguments);
            b.on("load",
                function () {
                    var a = this._.checkbox.getElement();
                    a.on("propertychange", function (b) {
                        b = b.data.$;
                        "checked" == b.propertyName && this.fire("change", {value: a.$.checked})
                    }, this)
                }, this);
            this.on("change", a);
            return null
        }}, keyboardFocusable: !0}, n, !0);
        CKEDITOR.ui.dialog.radio.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {setValue: function (b, a) {
            for (var d = this._.children, e, c = 0; c < d.length && (e = d[c]); c++)e.getElement().$.checked = e.getValue() == b;
            !a && this.fire("change", {value: b})
        }, getValue: function () {
            for (var b =
                this._.children, a = 0; a < b.length; a++)if (b[a].getElement().$.checked)return b[a].getValue();
            return null
        }, accessKeyUp: function () {
            var b = this._.children, a;
            for (a = 0; a < b.length; a++)if (b[a].getElement().$.checked) {
                b[a].getElement().focus();
                return
            }
            b[0].getElement().focus()
        }, eventProcessors: {onChange: function (b, a) {
            if (CKEDITOR.env.ie)b.on("load", function () {
                for (var a = this._.children, b = this, c = 0; c < a.length; c++)a[c].getElement().on("propertychange", function (a) {
                    a = a.data.$;
                    "checked" == a.propertyName && this.$.checked &&
                    b.fire("change", {value: this.getAttribute("value")})
                })
            }, this), this.on("change", a); else return o.onChange.apply(this, arguments);
            return null
        }}, keyboardFocusable: !0}, n, !0);
        CKEDITOR.ui.dialog.file.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement, n, {getInputElement: function () {
            var b = CKEDITOR.document.getById(this._.frameId).getFrameDocument();
            return 0 < b.$.forms.length ? new CKEDITOR.dom.element(b.$.forms[0].elements[0]) : this.getElement()
        }, submit: function () {
            this.getInputElement().getParent().$.submit();
            return this
        }, getAction: function () {
            return this.getInputElement().getParent().$.action
        }, registerEvents: function (b) {
            var a = /^on([A-Z]\w+)/, d, e = function (a, b, c, d) {
                a.on("formLoaded", function () {
                    a.getInputElement().on(c, d, a)
                })
            }, c;
            for (c in b)if (d = c.match(a))this.eventProcessors[c] ? this.eventProcessors[c].call(this, this._.dialog, b[c]) : e(this, this._.dialog, d[1].toLowerCase(), b[c]);
            return this
        }, reset: function () {
            function b() {
                d.$.open();
                CKEDITOR.env.isCustomDomain() && (d.$.domain = document.domain);
                var b = "";
                e.size &&
                (b = e.size - (CKEDITOR.env.ie ? 7 : 0));
                var h = a.frameId + "_input";
                d.$.write(['<html dir="' + g + '" lang="' + j + '"><head><title></title></head><body style="margin: 0; overflow: hidden; background: transparent;">', '<form enctype="multipart/form-data" method="POST" dir="' + g + '" lang="' + j + '" action="', CKEDITOR.tools.htmlEncode(e.action), '"><label id="', a.labelId, '" for="', h, '" style="display:none">', CKEDITOR.tools.htmlEncode(e.label), '</label><input id="', h, '" aria-labelledby="', a.labelId, '" type="file" name="', CKEDITOR.tools.htmlEncode(e.id ||
                    "cke_upload"), '" size="', CKEDITOR.tools.htmlEncode(0 < b ? b : ""), '" /></form></body></html>', "<script>window.parent.CKEDITOR.tools.callFunction(" + f + ");", "window.onbeforeunload = function() {window.parent.CKEDITOR.tools.callFunction(" + i + ")}<\/script>"].join(""));
                d.$.close();
                for (b = 0; b < c.length; b++)c[b].enable()
            }

            var a = this._, d = CKEDITOR.document.getById(a.frameId).getFrameDocument(), e = a.definition, c = a.buttons, f = this.formLoadedNumber, i = this.formUnloadNumber, g = a.dialog._.editor.lang.dir, j = a.dialog._.editor.langCode;
            f || (f = this.formLoadedNumber = CKEDITOR.tools.addFunction(function () {
                this.fire("formLoaded")
            }, this), i = this.formUnloadNumber = CKEDITOR.tools.addFunction(function () {
                this.getInputElement().clearCustomData()
            }, this), this.getDialog()._.editor.on("destroy", function () {
                CKEDITOR.tools.removeFunction(f);
                CKEDITOR.tools.removeFunction(i)
            }));
            CKEDITOR.env.gecko ? setTimeout(b, 500) : b()
        }, getValue: function () {
            return this.getInputElement().$.value || ""
        }, setInitValue: function () {
            this._.initValue = ""
        }, eventProcessors: {onChange: function (b, a) {
            this._.domOnChangeRegistered || (this.on("formLoaded", function () {
                this.getInputElement().on("change", function () {
                    this.fire("change", {value: this.getValue()})
                }, this)
            }, this), this._.domOnChangeRegistered = !0);
            this.on("change", a)
        }}, keyboardFocusable: !0}, !0);
        CKEDITOR.ui.dialog.fileButton.prototype = new CKEDITOR.ui.dialog.button;
        CKEDITOR.ui.dialog.fieldset.prototype = CKEDITOR.tools.clone(CKEDITOR.ui.dialog.hbox.prototype);
        CKEDITOR.dialog.addUIElement("text", r);
        CKEDITOR.dialog.addUIElement("password", r);
        CKEDITOR.dialog.addUIElement("textarea",
            l);
        CKEDITOR.dialog.addUIElement("checkbox", l);
        CKEDITOR.dialog.addUIElement("radio", l);
        CKEDITOR.dialog.addUIElement("button", l);
        CKEDITOR.dialog.addUIElement("select", l);
        CKEDITOR.dialog.addUIElement("file", l);
        CKEDITOR.dialog.addUIElement("fileButton", l);
        CKEDITOR.dialog.addUIElement("html", l);
        CKEDITOR.dialog.addUIElement("fieldset", {build: function (b, a, d) {
            for (var e = a.children, c, f = [], i = [], g = 0; g < e.length && (c = e[g]); g++) {
                var h = [];
                f.push(h);
                i.push(CKEDITOR.dialog._.uiElementBuilders[c.type].build(b, c, h))
            }
            return new CKEDITOR.ui.dialog[a.type](b,
                i, f, d, a)
        }})
    }});
    CKEDITOR.DIALOG_RESIZE_NONE = 0;
    CKEDITOR.DIALOG_RESIZE_WIDTH = 1;
    CKEDITOR.DIALOG_RESIZE_HEIGHT = 2;
    CKEDITOR.DIALOG_RESIZE_BOTH = 3;
    (function () {
        function p() {
            for (var a = this._.tabIdList.length, b = CKEDITOR.tools.indexOf(this._.tabIdList, this._.currentTabId) + a, c = b - 1; c > b - a; c--)if (this._.tabs[this._.tabIdList[c % a]][0].$.offsetHeight)return this._.tabIdList[c % a];
            return null
        }

        function u() {
            for (var a = this._.tabIdList.length, b = CKEDITOR.tools.indexOf(this._.tabIdList, this._.currentTabId), c = b + 1; c < b + a; c++)if (this._.tabs[this._.tabIdList[c % a]][0].$.offsetHeight)return this._.tabIdList[c % a];
            return null
        }

        function q(a, b) {
            for (var c = a.$.getElementsByTagName("input"),
                     e = 0, d = c.length; e < d; e++) {
                var g = new CKEDITOR.dom.element(c[e]);
                "text" == g.getAttribute("type").toLowerCase() && (b ? (g.setAttribute("value", g.getCustomData("fake_value") || ""), g.removeCustomData("fake_value")) : (g.setCustomData("fake_value", g.getAttribute("value")), g.setAttribute("value", "")))
            }
        }

        function P(a, b) {
            var c = this.getInputElement();
            c && (a ? c.removeAttribute("aria-invalid") : c.setAttribute("aria-invalid", !0));
            a || (this.select ? this.select() : this.focus());
            b && alert(b);
            this.fire("validated", {valid: a, msg: b})
        }

        function Q() {
            var a = this.getInputElement();
            a && a.removeAttribute("aria-invalid")
        }

        function R(a) {
            var a = CKEDITOR.dom.element.createFromHtml(CKEDITOR.addTemplate("dialog", S).output({id: CKEDITOR.tools.getNextNumber(), editorId: a.id, langDir: a.lang.dir, langCode: a.langCode, editorDialogClass: "cke_editor_" + a.name.replace(/\./g, "\\.") + "_dialog", closeTitle: a.lang.common.close})), b = a.getChild([0, 0, 0, 0, 0]), c = b.getChild(0), e = b.getChild(1);
            if (CKEDITOR.env.ie && !CKEDITOR.env.ie6Compat) {
                var d = CKEDITOR.env.isCustomDomain(),
                    d = "javascript:void(function(){" + encodeURIComponent("document.open();" + (d ? 'document.domain="' + document.domain + '";' : "") + "document.close();") + "}())";
                CKEDITOR.dom.element.createFromHtml('<iframe frameBorder="0" class="cke_iframe_shim" src="' + d + '" tabIndex="-1"></iframe>').appendTo(b.getParent())
            }
            c.unselectable();
            e.unselectable();
            return{element: a, parts: {dialog: a.getChild(0), title: c, close: e, tabs: b.getChild(2), contents: b.getChild([3, 0, 0, 0]), footer: b.getChild([3, 0, 1, 0])}}
        }

        function H(a, b, c) {
            this.element = b;
            this.focusIndex = c;
            this.tabIndex = 0;
            this.isFocusable = function () {
                return!b.getAttribute("disabled") && b.isVisible()
            };
            this.focus = function () {
                a._.currentFocusIndex = this.focusIndex;
                this.element.focus()
            };
            b.on("keydown", function (a) {
                a.data.getKeystroke()in{32: 1, 13: 1} && this.fire("click")
            });
            b.on("focus", function () {
                this.fire("mouseover")
            });
            b.on("blur", function () {
                this.fire("mouseout")
            })
        }

        function T(a) {
            function b() {
                a.layout()
            }

            var c = CKEDITOR.document.getWindow();
            c.on("resize", b);
            a.on("hide", function () {
                c.removeListener("resize",
                    b)
            })
        }

        function I(a, b) {
            this._ = {dialog: a};
            CKEDITOR.tools.extend(this, b)
        }

        function U(a) {
            function b(b) {
                var c = a.getSize(), h = CKEDITOR.document.getWindow().getViewPaneSize(), o = b.data.$.screenX, i = b.data.$.screenY, n = o - e.x, l = i - e.y;
                e = {x: o, y: i};
                d.x += n;
                d.y += l;
                a.move(d.x + k[3] < f ? -k[3] : d.x - k[1] > h.width - c.width - f ? h.width - c.width + ("rtl" == g.lang.dir ? 0 : k[1]) : d.x, d.y + k[0] < f ? -k[0] : d.y - k[2] > h.height - c.height - f ? h.height - c.height + k[2] : d.y, 1);
                b.data.preventDefault()
            }

            function c() {
                CKEDITOR.document.removeListener("mousemove",
                    b);
                CKEDITOR.document.removeListener("mouseup", c);
                if (CKEDITOR.env.ie6Compat) {
                    var a = r.getChild(0).getFrameDocument();
                    a.removeListener("mousemove", b);
                    a.removeListener("mouseup", c)
                }
            }

            var e = null, d = null;
            a.getElement().getFirst();
            var g = a.getParentEditor(), f = g.config.dialog_magnetDistance, k = CKEDITOR.skin.margins || [0, 0, 0, 0];
            "undefined" == typeof f && (f = 20);
            a.parts.title.on("mousedown", function (f) {
                e = {x: f.data.$.screenX, y: f.data.$.screenY};
                CKEDITOR.document.on("mousemove", b);
                CKEDITOR.document.on("mouseup", c);
                d =
                    a.getPosition();
                if (CKEDITOR.env.ie6Compat) {
                    var g = r.getChild(0).getFrameDocument();
                    g.on("mousemove", b);
                    g.on("mouseup", c)
                }
                f.data.preventDefault()
            }, a)
        }

        function V(a) {
            var b, c;

            function e(d) {
                var e = "rtl" == k.lang.dir, i = o.width, D = o.height, E = i + (d.data.$.screenX - b) * (e ? -1 : 1) * (a._.moved ? 1 : 2), n = D + (d.data.$.screenY - c) * (a._.moved ? 1 : 2), x = a._.element.getFirst(), x = e && x.getComputedStyle("right"), y = a.getPosition();
                y.y + n > h.height && (n = h.height - y.y);
                if ((e ? x : y.x) + E > h.width)E = h.width - (e ? x : y.x);
                if (f == CKEDITOR.DIALOG_RESIZE_WIDTH ||
                    f == CKEDITOR.DIALOG_RESIZE_BOTH)i = Math.max(g.minWidth || 0, E - m);
                if (f == CKEDITOR.DIALOG_RESIZE_HEIGHT || f == CKEDITOR.DIALOG_RESIZE_BOTH)D = Math.max(g.minHeight || 0, n - j);
                a.resize(i, D);
                a._.moved || a.layout();
                d.data.preventDefault()
            }

            function d() {
                CKEDITOR.document.removeListener("mouseup", d);
                CKEDITOR.document.removeListener("mousemove", e);
                i && (i.remove(), i = null);
                if (CKEDITOR.env.ie6Compat) {
                    var a = r.getChild(0).getFrameDocument();
                    a.removeListener("mouseup", d);
                    a.removeListener("mousemove", e)
                }
            }

            var g = a.definition, f = g.resizable;
            if (f != CKEDITOR.DIALOG_RESIZE_NONE) {
                var k = a.getParentEditor(), m, j, h, o, i, n = CKEDITOR.tools.addFunction(function (f) {
                    o = a.getSize();
                    var g = a.parts.contents;
                    g.$.getElementsByTagName("iframe").length && (i = CKEDITOR.dom.element.createFromHtml('<div class="cke_dialog_resize_cover" style="height: 100%; position: absolute; width: 100%;"></div>'), g.append(i));
                    j = o.height - a.parts.contents.getSize("height", !(CKEDITOR.env.gecko || CKEDITOR.env.opera || CKEDITOR.env.ie && CKEDITOR.env.quirks));
                    m = o.width - a.parts.contents.getSize("width",
                        1);
                    b = f.screenX;
                    c = f.screenY;
                    h = CKEDITOR.document.getWindow().getViewPaneSize();
                    CKEDITOR.document.on("mousemove", e);
                    CKEDITOR.document.on("mouseup", d);
                    CKEDITOR.env.ie6Compat && (g = r.getChild(0).getFrameDocument(), g.on("mousemove", e), g.on("mouseup", d));
                    f.preventDefault && f.preventDefault()
                });
                a.on("load", function () {
                    var b = "";
                    f == CKEDITOR.DIALOG_RESIZE_WIDTH ? b = " cke_resizer_horizontal" : f == CKEDITOR.DIALOG_RESIZE_HEIGHT && (b = " cke_resizer_vertical");
                    b = CKEDITOR.dom.element.createFromHtml('<div class="cke_resizer' +
                        b + " cke_resizer_" + k.lang.dir + '" title="' + CKEDITOR.tools.htmlEncode(k.lang.common.resize) + '" onmousedown="CKEDITOR.tools.callFunction(' + n + ', event )">' + ("ltr" == k.lang.dir ? "◢" : "◣") + "</div>");
                    a.parts.footer.append(b, 1)
                });
                k.on("destroy", function () {
                    CKEDITOR.tools.removeFunction(n)
                })
            }
        }

        function F(a) {
            a.data.preventDefault(1)
        }

        function J(a) {
            var b = CKEDITOR.document.getWindow(), c = a.config, e = c.dialog_backgroundCoverColor || "white", d = c.dialog_backgroundCoverOpacity, g = c.baseFloatZIndex, c = CKEDITOR.tools.genKey(e,
                d, g), f = w[c];
            if (f)f.show(); else {
                g = ['<div tabIndex="-1" style="position: ', CKEDITOR.env.ie6Compat ? "absolute" : "fixed", "; z-index: ", g, "; top: 0px; left: 0px; ", !CKEDITOR.env.ie6Compat ? "background-color: " + e : "", '" class="cke_dialog_background_cover">'];
                if (CKEDITOR.env.ie6Compat) {
                    var k = CKEDITOR.env.isCustomDomain(), e = "<html><body style=\\'background-color:" + e + ";\\'></body></html>";
                    g.push('<iframe hidefocus="true" frameborder="0" id="cke_dialog_background_iframe" src="javascript:');
                    g.push("void((function(){document.open();" +
                        (k ? "document.domain='" + document.domain + "';" : "") + "document.write( '" + e + "' );document.close();})())");
                    g.push('" style="position:absolute;left:0;top:0;width:100%;height: 100%;filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0)"></iframe>')
                }
                g.push("</div>");
                f = CKEDITOR.dom.element.createFromHtml(g.join(""));
                f.setOpacity(void 0 != d ? d : 0.5);
                f.on("keydown", F);
                f.on("keypress", F);
                f.on("keyup", F);
                f.appendTo(CKEDITOR.document.getBody());
                w[c] = f
            }
            a.focusManager.add(f);
            r = f;
            var a = function () {
                var a = b.getViewPaneSize();
                f.setStyles({width: a.width + "px", height: a.height + "px"})
            }, m = function () {
                var a = b.getScrollPosition(), c = CKEDITOR.dialog._.currentTop;
                f.setStyles({left: a.x + "px", top: a.y + "px"});
                if (c) {
                    do a = c.getPosition(), c.move(a.x, a.y); while (c = c._.parentDialog)
                }
            };
            G = a;
            b.on("resize", a);
            a();
            (!CKEDITOR.env.mac || !CKEDITOR.env.webkit) && f.focus();
            if (CKEDITOR.env.ie6Compat) {
                var j = function () {
                    m();
                    arguments.callee.prevScrollHandler.apply(this, arguments)
                };
                b.$.setTimeout(function () {
                    j.prevScrollHandler = window.onscroll || function () {
                    };
                    window.onscroll = j
                }, 0);
                m()
            }
        }

        function K(a) {
            r && (a.focusManager.remove(r), a = CKEDITOR.document.getWindow(), r.hide(), a.removeListener("resize", G), CKEDITOR.env.ie6Compat && a.$.setTimeout(function () {
                window.onscroll = window.onscroll && window.onscroll.prevScrollHandler || null
            }, 0), G = null)
        }

        var s = CKEDITOR.tools.cssLength, S = '<div class="cke cke_reset_all {editorId} {editorDialogClass}" dir="{langDir}" lang="{langCode}" role="application"><table class="cke_dialog ' + CKEDITOR.env.cssClass + ' cke_{langDir}" aria-labelledby="cke_dialog_title_{id}" style="position:absolute" role="dialog"><tr><td role="presentation"><div class="cke_dialog_body" role="presentation"><div id="cke_dialog_title_{id}" class="cke_dialog_title" role="presentation"></div><a id="cke_dialog_close_button_{id}" class="cke_dialog_close_button" href="javascript:void(0)" title="{closeTitle}" role="button"><span class="cke_label">X</span></a><div id="cke_dialog_tabs_{id}" class="cke_dialog_tabs" role="tablist"></div><table class="cke_dialog_contents" role="presentation"><tr><td id="cke_dialog_contents_{id}" class="cke_dialog_contents_body" role="presentation"></td></tr><tr><td id="cke_dialog_footer_{id}" class="cke_dialog_footer" role="presentation"></td></tr></table></div></td></tr></table></div>';
        CKEDITOR.dialog = function (a, b) {
            function c() {
                var a = l._.focusList;
                a.sort(function (a, b) {
                    return a.tabIndex != b.tabIndex ? b.tabIndex - a.tabIndex : a.focusIndex - b.focusIndex
                });
                for (var b = a.length, c = 0; c < b; c++)a[c].focusIndex = c
            }

            function e(a) {
                var b = l._.focusList, a = a || 0;
                if (!(1 > b.length)) {
                    var c = l._.currentFocusIndex;
                    try {
                        b[c].getInputElement().$.blur()
                    } catch (d) {
                    }
                    for (var f = c = (c + a + b.length) % b.length; a && !b[f].isFocusable() && !(f = (f + a + b.length) % b.length, f == c););
                    b[f].focus();
                    "text" == b[f].type && b[f].select()
                }
            }

            function d(b) {
                if (l ==
                    CKEDITOR.dialog._.currentTop) {
                    var c = b.data.getKeystroke(), f = "rtl" == a.lang.dir;
                    o = i = 0;
                    if (9 == c || c == CKEDITOR.SHIFT + 9)c = c == CKEDITOR.SHIFT + 9, l._.tabBarMode ? (c = c ? p.call(l) : u.call(l), l.selectPage(c), l._.tabs[c][0].focus()) : e(c ? -1 : 1), o = 1; else if (c == CKEDITOR.ALT + 121 && !l._.tabBarMode && 1 < l.getPageCount())l._.tabBarMode = !0, l._.tabs[l._.currentTabId][0].focus(), o = 1; else if ((37 == c || 39 == c) && l._.tabBarMode)c = c == (f ? 39 : 37) ? p.call(l) : u.call(l), l.selectPage(c), l._.tabs[c][0].focus(), o = 1; else if ((13 == c || 32 == c) && l._.tabBarMode)this.selectPage(this._.currentTabId),
                        this._.tabBarMode = !1, this._.currentFocusIndex = -1, e(1), o = 1; else if (13 == c) {
                        c = b.data.getTarget();
                        if (!c.is("a", "button", "select", "textarea") && (!c.is("input") || "button" != c.$.type))(c = this.getButton("ok")) && CKEDITOR.tools.setTimeout(c.click, 0, c), o = 1;
                        i = 1
                    } else if (27 == c)(c = this.getButton("cancel")) ? CKEDITOR.tools.setTimeout(c.click, 0, c) : !1 !== this.fire("cancel", {hide: !0}).hide && this.hide(), i = 1; else return;
                    g(b)
                }
            }

            function g(a) {
                o ? a.data.preventDefault(1) : i && a.data.stopPropagation()
            }

            var f = CKEDITOR.dialog._.dialogDefinitions[b],
                k = CKEDITOR.tools.clone(W), m = a.config.dialog_buttonsOrder || "OS", j = a.lang.dir, h = {}, o, i;
            ("OS" == m && CKEDITOR.env.mac || "rtl" == m && "ltr" == j || "ltr" == m && "rtl" == j) && k.buttons.reverse();
            f = CKEDITOR.tools.extend(f(a), k);
            f = CKEDITOR.tools.clone(f);
            f = new L(this, f);
            k = R(a);
            this._ = {editor: a, element: k.element, name: b, contentSize: {width: 0, height: 0}, size: {width: 0, height: 0}, contents: {}, buttons: {}, accessKeyMap: {}, tabs: {}, tabIdList: [], currentTabId: null, currentTabIndex: null, pageCount: 0, lastTab: null, tabBarMode: !1, focusList: [],
                currentFocusIndex: 0, hasFocus: !1};
            this.parts = k.parts;
            CKEDITOR.tools.setTimeout(function () {
                a.fire("ariaWidget", this.parts.contents)
            }, 0, this);
            k = {position: CKEDITOR.env.ie6Compat ? "absolute" : "fixed", top: 0, visibility: "hidden"};
            k["rtl" == j ? "right" : "left"] = 0;
            this.parts.dialog.setStyles(k);
            CKEDITOR.event.call(this);
            this.definition = f = CKEDITOR.fire("dialogDefinition", {name: b, definition: f}, a).definition;
            if (!("removeDialogTabs"in a._) && a.config.removeDialogTabs) {
                k = a.config.removeDialogTabs.split(";");
                for (j = 0; j <
                    k.length; j++)if (m = k[j].split(":"), 2 == m.length) {
                    var n = m[0];
                    h[n] || (h[n] = []);
                    h[n].push(m[1])
                }
                a._.removeDialogTabs = h
            }
            if (a._.removeDialogTabs && (h = a._.removeDialogTabs[b]))for (j = 0; j < h.length; j++)f.removeContents(h[j]);
            if (f.onLoad)this.on("load", f.onLoad);
            if (f.onShow)this.on("show", f.onShow);
            if (f.onHide)this.on("hide", f.onHide);
            if (f.onOk)this.on("ok", function (b) {
                a.fire("saveSnapshot");
                setTimeout(function () {
                    a.fire("saveSnapshot")
                }, 0);
                !1 === f.onOk.call(this, b) && (b.data.hide = !1)
            });
            if (f.onCancel)this.on("cancel",
                function (a) {
                    !1 === f.onCancel.call(this, a) && (a.data.hide = !1)
                });
            var l = this, C = function (a) {
                var b = l._.contents, c = !1, f;
                for (f in b)for (var d in b[f])if (c = a.call(this, b[f][d]))return
            };
            this.on("ok", function (a) {
                C(function (b) {
                    if (b.validate) {
                        var c = b.validate(this), f = "string" == typeof c || !1 === c;
                        f && (a.data.hide = !1, a.stop());
                        P.call(b, !f, "string" == typeof c ? c : void 0);
                        return f
                    }
                })
            }, this, null, 0);
            this.on("cancel", function (b) {
                    C(function (c) {
                        if (c.isChanged())return confirm(a.lang.common.confirmCancel) || (b.data.hide = !1), !0
                    })
                },
                this, null, 0);
            this.parts.close.on("click", function (a) {
                !1 !== this.fire("cancel", {hide: !0}).hide && this.hide();
                a.data.preventDefault()
            }, this);
            this.changeFocus = e;
            var v = this._.element;
            a.focusManager.add(v, 1);
            this.on("show", function () {
                v.on("keydown", d, this);
                if (CKEDITOR.env.opera || CKEDITOR.env.gecko)v.on("keypress", g, this)
            });
            this.on("hide", function () {
                v.removeListener("keydown", d);
                (CKEDITOR.env.opera || CKEDITOR.env.gecko) && v.removeListener("keypress", g);
                C(function (a) {
                    Q.apply(a)
                })
            });
            this.on("iframeAdded", function (a) {
                (new CKEDITOR.dom.document(a.data.iframe.$.contentWindow.document)).on("keydown",
                    d, this, null, 0)
            });
            this.on("show", function () {
                c();
                if (a.config.dialog_startupFocusTab && 1 < l._.pageCount)l._.tabBarMode = !0, l._.tabs[l._.currentTabId][0].focus(); else if (!this._.hasFocus)if (this._.currentFocusIndex = -1, f.onFocus) {
                    var b = f.onFocus.call(this);
                    b && b.focus()
                } else e(1)
            }, this, null, 4294967295);
            if (CKEDITOR.env.ie6Compat)this.on("load", function () {
                var a = this.getElement(), b = a.getFirst();
                b.remove();
                b.appendTo(a)
            }, this);
            U(this);
            V(this);
            (new CKEDITOR.dom.text(f.title, CKEDITOR.document)).appendTo(this.parts.title);
            for (j = 0; j < f.contents.length; j++)(h = f.contents[j]) && this.addPage(h);
            this.parts.tabs.on("click", function (a) {
                var b = a.data.getTarget();
                b.hasClass("cke_dialog_tab") && (b = b.$.id, this.selectPage(b.substring(4, b.lastIndexOf("_"))), this._.tabBarMode && (this._.tabBarMode = !1, this._.currentFocusIndex = -1, e(1)), a.data.preventDefault())
            }, this);
            j = [];
            h = CKEDITOR.dialog._.uiElementBuilders.hbox.build(this, {type: "hbox", className: "cke_dialog_footer_buttons", widths: [], children: f.buttons}, j).getChild();
            this.parts.footer.setHtml(j.join(""));
            for (j = 0; j < h.length; j++)this._.buttons[h[j].id] = h[j]
        };
        CKEDITOR.dialog.prototype = {destroy: function () {
            this.hide();
            this._.element.remove()
        }, resize: function () {
            return function (a, b) {
                if (!this._.contentSize || !(this._.contentSize.width == a && this._.contentSize.height == b))CKEDITOR.dialog.fire("resize", {dialog: this, width: a, height: b}, this._.editor), this.fire("resize", {width: a, height: b}, this._.editor), this.parts.contents.setStyles({width: a + "px", height: b + "px"}), "rtl" == this._.editor.lang.dir && this._.position && (this._.position.x =
                    CKEDITOR.document.getWindow().getViewPaneSize().width - this._.contentSize.width - parseInt(this._.element.getFirst().getStyle("right"), 10)), this._.contentSize = {width: a, height: b}
            }
        }(), getSize: function () {
            var a = this._.element.getFirst();
            return{width: a.$.offsetWidth || 0, height: a.$.offsetHeight || 0}
        }, move: function (a, b, c) {
            var e = this._.element.getFirst(), d = "rtl" == this._.editor.lang.dir, g = "fixed" == e.getComputedStyle("position");
            CKEDITOR.env.ie && e.setStyle("zoom", "100%");
            if (!g || !this._.position || !(this._.position.x ==
                a && this._.position.y == b))this._.position = {x: a, y: b}, g || (g = CKEDITOR.document.getWindow().getScrollPosition(), a += g.x, b += g.y), d && (g = this.getSize(), a = CKEDITOR.document.getWindow().getViewPaneSize().width - g.width - a), b = {top: (0 < b ? b : 0) + "px"}, b[d ? "right" : "left"] = (0 < a ? a : 0) + "px", e.setStyles(b), c && (this._.moved = 1)
        }, getPosition: function () {
            return CKEDITOR.tools.extend({}, this._.position)
        }, show: function () {
            var a = this._.element, b = this.definition;
            !a.getParent() || !a.getParent().equals(CKEDITOR.document.getBody()) ? a.appendTo(CKEDITOR.document.getBody()) :
                a.setStyle("display", "block");
            if (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version) {
                var c = this.parts.dialog;
                c.setStyle("position", "absolute");
                setTimeout(function () {
                    c.setStyle("position", "fixed")
                }, 0)
            }
            this.resize(this._.contentSize && this._.contentSize.width || b.width || b.minWidth, this._.contentSize && this._.contentSize.height || b.height || b.minHeight);
            this.reset();
            this.selectPage(this.definition.contents[0].id);
            null === CKEDITOR.dialog._.currentZIndex && (CKEDITOR.dialog._.currentZIndex = this._.editor.config.baseFloatZIndex);
            this._.element.getFirst().setStyle("z-index", CKEDITOR.dialog._.currentZIndex += 10);
            null === CKEDITOR.dialog._.currentTop ? (CKEDITOR.dialog._.currentTop = this, this._.parentDialog = null, J(this._.editor)) : (this._.parentDialog = CKEDITOR.dialog._.currentTop, this._.parentDialog.getElement().getFirst().$.style.zIndex -= Math.floor(this._.editor.config.baseFloatZIndex / 2), CKEDITOR.dialog._.currentTop = this);
            a.on("keydown", M);
            a.on(CKEDITOR.env.opera ? "keypress" : "keyup", N);
            this._.hasFocus = !1;
            CKEDITOR.tools.setTimeout(function () {
                this.layout();
                T(this);
                this.parts.dialog.setStyle("visibility", "");
                this.fireOnce("load", {});
                CKEDITOR.ui.fire("ready", this);
                this.fire("show", {});
                this._.editor.fire("dialogShow", this);
                this._.parentDialog || this._.editor.focusManager.lock();
                this.foreach(function (a) {
                    a.setInitValue && a.setInitValue()
                })
            }, 100, this)
        }, layout: function () {
            var a = this.parts.dialog, b = this.getSize(), c = CKEDITOR.document.getWindow().getViewPaneSize(), e = (c.width - b.width) / 2, d = (c.height - b.height) / 2;
            CKEDITOR.env.ie6Compat || (b.height + (0 < d ? d : 0) > c.height ||
                b.width + (0 < e ? e : 0) > c.width ? a.setStyle("position", "absolute") : a.setStyle("position", "fixed"));
            this.move(this._.moved ? this._.position.x : e, this._.moved ? this._.position.y : d)
        }, foreach: function (a) {
            for (var b in this._.contents)for (var c in this._.contents[b])a.call(this, this._.contents[b][c]);
            return this
        }, reset: function () {
            var a = function (a) {
                a.reset && a.reset(1)
            };
            return function () {
                this.foreach(a);
                return this
            }
        }(), setupContent: function () {
            var a = arguments;
            this.foreach(function (b) {
                b.setup && b.setup.apply(b, a)
            })
        },
            commitContent: function () {
                var a = arguments;
                this.foreach(function (b) {
                    CKEDITOR.env.ie && this._.currentFocusIndex == b.focusIndex && b.getInputElement().$.blur();
                    b.commit && b.commit.apply(b, a)
                })
            }, hide: function () {
                if (this.parts.dialog.isVisible()) {
                    this.fire("hide", {});
                    this._.editor.fire("dialogHide", this);
                    this.selectPage(this._.tabIdList[0]);
                    var a = this._.element;
                    a.setStyle("display", "none");
                    this.parts.dialog.setStyle("visibility", "hidden");
                    for (X(this); CKEDITOR.dialog._.currentTop != this;)CKEDITOR.dialog._.currentTop.hide();
                    if (this._.parentDialog) {
                        var b = this._.parentDialog.getElement().getFirst();
                        b.setStyle("z-index", parseInt(b.$.style.zIndex, 10) + Math.floor(this._.editor.config.baseFloatZIndex / 2))
                    } else K(this._.editor);
                    if (CKEDITOR.dialog._.currentTop = this._.parentDialog)CKEDITOR.dialog._.currentZIndex -= 10; else {
                        CKEDITOR.dialog._.currentZIndex = null;
                        a.removeListener("keydown", M);
                        a.removeListener(CKEDITOR.env.opera ? "keypress" : "keyup", N);
                        var c = this._.editor;
                        c.focus();
                        setTimeout(function () {
                            c.focusManager.unlock()
                        }, 0)
                    }
                    delete this._.parentDialog;
                    this.foreach(function (a) {
                        a.resetInitValue && a.resetInitValue()
                    })
                }
            }, addPage: function (a) {
                var b = [], c = a.label ? ' title="' + CKEDITOR.tools.htmlEncode(a.label) + '"' : "", e = CKEDITOR.dialog._.uiElementBuilders.vbox.build(this, {type: "vbox", className: "cke_dialog_page_contents", children: a.elements, expand: !!a.expand, padding: a.padding, style: a.style || "width: 100%;"}, b), b = CKEDITOR.dom.element.createFromHtml(b.join(""));
                b.setAttribute("role", "tabpanel");
                var d = CKEDITOR.env, g = "cke_" + a.id + "_" + CKEDITOR.tools.getNextNumber(),
                    c = CKEDITOR.dom.element.createFromHtml(['<a class="cke_dialog_tab"', 0 < this._.pageCount ? " cke_last" : "cke_first", c, a.hidden ? ' style="display:none"' : "", ' id="', g, '"', d.gecko && 10900 <= d.version && !d.hc ? "" : ' href="javascript:void(0)"', ' tabIndex="-1" hidefocus="true" role="tab">', a.label, "</a>"].join(""));
                b.setAttribute("aria-labelledby", g);
                this._.tabs[a.id] = [c, b];
                this._.tabIdList.push(a.id);
                !a.hidden && this._.pageCount++;
                this._.lastTab = c;
                this.updateStyle();
                g = this._.contents[a.id] = {};
                for (d = e.getChild(); e =
                    d.shift();)g[e.id] = e, "function" == typeof e.getChild && d.push.apply(d, e.getChild());
                b.setAttribute("name", a.id);
                b.appendTo(this.parts.contents);
                c.unselectable();
                this.parts.tabs.append(c);
                a.accessKey && (O(this, this, "CTRL+" + a.accessKey, Y, Z), this._.accessKeyMap["CTRL+" + a.accessKey] = a.id)
            }, selectPage: function (a) {
                if (this._.currentTabId != a && !0 !== this.fire("selectPage", {page: a, currentPage: this._.currentTabId})) {
                    for (var b in this._.tabs) {
                        var c = this._.tabs[b][0], e = this._.tabs[b][1];
                        b != a && (c.removeClass("cke_dialog_tab_selected"),
                            e.hide());
                        e.setAttribute("aria-hidden", b != a)
                    }
                    var d = this._.tabs[a];
                    d[0].addClass("cke_dialog_tab_selected");
                    CKEDITOR.env.ie6Compat || CKEDITOR.env.ie7Compat ? (q(d[1]), d[1].show(), setTimeout(function () {
                        q(d[1], 1)
                    }, 0)) : d[1].show();
                    this._.currentTabId = a;
                    this._.currentTabIndex = CKEDITOR.tools.indexOf(this._.tabIdList, a)
                }
            }, updateStyle: function () {
                this.parts.dialog[(1 === this._.pageCount ? "add" : "remove") + "Class"]("cke_single_page")
            }, hidePage: function (a) {
                var b = this._.tabs[a] && this._.tabs[a][0];
                b && (1 != this._.pageCount &&
                    b.isVisible()) && (a == this._.currentTabId && this.selectPage(p.call(this)), b.hide(), this._.pageCount--, this.updateStyle())
            }, showPage: function (a) {
                if (a = this._.tabs[a] && this._.tabs[a][0])a.show(), this._.pageCount++, this.updateStyle()
            }, getElement: function () {
                return this._.element
            }, getName: function () {
                return this._.name
            }, getContentElement: function (a, b) {
                var c = this._.contents[a];
                return c && c[b]
            }, getValueOf: function (a, b) {
                return this.getContentElement(a, b).getValue()
            }, setValueOf: function (a, b, c) {
                return this.getContentElement(a,
                    b).setValue(c)
            }, getButton: function (a) {
                return this._.buttons[a]
            }, click: function (a) {
                return this._.buttons[a].click()
            }, disableButton: function (a) {
                return this._.buttons[a].disable()
            }, enableButton: function (a) {
                return this._.buttons[a].enable()
            }, getPageCount: function () {
                return this._.pageCount
            }, getParentEditor: function () {
                return this._.editor
            }, getSelectedElement: function () {
                return this.getParentEditor().getSelection().getSelectedElement()
            }, addFocusable: function (a, b) {
                if ("undefined" == typeof b)b = this._.focusList.length,
                    this._.focusList.push(new H(this, a, b)); else {
                    this._.focusList.splice(b, 0, new H(this, a, b));
                    for (var c = b + 1; c < this._.focusList.length; c++)this._.focusList[c].focusIndex++
                }
            }};
        CKEDITOR.tools.extend(CKEDITOR.dialog, {add: function (a, b) {
            if (!this._.dialogDefinitions[a] || "function" == typeof b)this._.dialogDefinitions[a] = b
        }, exists: function (a) {
            return!!this._.dialogDefinitions[a]
        }, getCurrent: function () {
            return CKEDITOR.dialog._.currentTop
        }, okButton: function () {
            var a = function (a, c) {
                c = c || {};
                return CKEDITOR.tools.extend({id: "ok",
                    type: "button", label: a.lang.common.ok, "class": "cke_dialog_ui_button_ok", onClick: function (a) {
                        a = a.data.dialog;
                        !1 !== a.fire("ok", {hide: !0}).hide && a.hide()
                    }}, c, !0)
            };
            a.type = "button";
            a.override = function (b) {
                return CKEDITOR.tools.extend(function (c) {
                    return a(c, b)
                }, {type: "button"}, !0)
            };
            return a
        }(), cancelButton: function () {
            var a = function (a, c) {
                c = c || {};
                return CKEDITOR.tools.extend({id: "cancel", type: "button", label: a.lang.common.cancel, "class": "cke_dialog_ui_button_cancel", onClick: function (a) {
                    a = a.data.dialog;
                    !1 !==
                        a.fire("cancel", {hide: !0}).hide && a.hide()
                }}, c, !0)
            };
            a.type = "button";
            a.override = function (b) {
                return CKEDITOR.tools.extend(function (c) {
                    return a(c, b)
                }, {type: "button"}, !0)
            };
            return a
        }(), addUIElement: function (a, b) {
            this._.uiElementBuilders[a] = b
        }});
        CKEDITOR.dialog._ = {uiElementBuilders: {}, dialogDefinitions: {}, currentTop: null, currentZIndex: null};
        CKEDITOR.event.implementOn(CKEDITOR.dialog);
        CKEDITOR.event.implementOn(CKEDITOR.dialog.prototype);
        var W = {resizable: CKEDITOR.DIALOG_RESIZE_BOTH, minWidth: 600, minHeight: 400,
            buttons: [CKEDITOR.dialog.okButton, CKEDITOR.dialog.cancelButton]}, z = function (a, b, c) {
            for (var e = 0, d; d = a[e]; e++)if (d.id == b || c && d[c] && (d = z(d[c], b, c)))return d;
            return null
        }, A = function (a, b, c, e, d) {
            if (c) {
                for (var g = 0, f; f = a[g]; g++) {
                    if (f.id == c)return a.splice(g, 0, b), b;
                    if (e && f[e] && (f = A(f[e], b, c, e, !0)))return f
                }
                if (d)return null
            }
            a.push(b);
            return b
        }, B = function (a, b, c) {
            for (var e = 0, d; d = a[e]; e++) {
                if (d.id == b)return a.splice(e, 1);
                if (c && d[c] && (d = B(d[c], b, c)))return d
            }
            return null
        }, L = function (a, b) {
            this.dialog = a;
            for (var c =
                b.contents, e = 0, d; d = c[e]; e++)c[e] = d && new I(a, d);
            CKEDITOR.tools.extend(this, b)
        };
        L.prototype = {getContents: function (a) {
            return z(this.contents, a)
        }, getButton: function (a) {
            return z(this.buttons, a)
        }, addContents: function (a, b) {
            return A(this.contents, a, b)
        }, addButton: function (a, b) {
            return A(this.buttons, a, b)
        }, removeContents: function (a) {
            B(this.contents, a)
        }, removeButton: function (a) {
            B(this.buttons, a)
        }};
        I.prototype = {get: function (a) {
            return z(this.elements, a, "children")
        }, add: function (a, b) {
            return A(this.elements, a, b,
                "children")
        }, remove: function (a) {
            B(this.elements, a, "children")
        }};
        var G, w = {}, r, t = {}, M = function (a) {
                var b = a.data.$.ctrlKey || a.data.$.metaKey, c = a.data.$.altKey, e = a.data.$.shiftKey, d = String.fromCharCode(a.data.$.keyCode);
                if ((b = t[(b ? "CTRL+" : "") + (c ? "ALT+" : "") + (e ? "SHIFT+" : "") + d]) && b.length)b = b[b.length - 1], b.keydown && b.keydown.call(b.uiElement, b.dialog, b.key), a.data.preventDefault()
            }, N = function (a) {
                var b = a.data.$.ctrlKey || a.data.$.metaKey, c = a.data.$.altKey, e = a.data.$.shiftKey, d = String.fromCharCode(a.data.$.keyCode);
                if ((b = t[(b ? "CTRL+" : "") + (c ? "ALT+" : "") + (e ? "SHIFT+" : "") + d]) && b.length)b = b[b.length - 1], b.keyup && (b.keyup.call(b.uiElement, b.dialog, b.key), a.data.preventDefault())
            }, O = function (a, b, c, e, d) {
                (t[c] || (t[c] = [])).push({uiElement: a, dialog: b, key: c, keyup: d || a.accessKeyUp, keydown: e || a.accessKeyDown})
            }, X = function (a) {
                for (var b in t) {
                    for (var c = t[b], e = c.length - 1; 0 <= e; e--)(c[e].dialog == a || c[e].uiElement == a) && c.splice(e, 1);
                    0 === c.length && delete t[b]
                }
            }, Z = function (a, b) {
                a._.accessKeyMap[b] && a.selectPage(a._.accessKeyMap[b])
            },
            Y = function () {
            };
        (function () {
            CKEDITOR.ui.dialog = {uiElement: function (a, b, c, e, d, g, f) {
                if (!(4 > arguments.length)) {
                    var k = (e.call ? e(b) : e) || "div", m = ["<", k, " "], j = (d && d.call ? d(b) : d) || {}, h = (g && g.call ? g(b) : g) || {}, o = (f && f.call ? f.call(this, a, b) : f) || "", i = this.domId = h.id || CKEDITOR.tools.getNextId() + "_uiElement";
                    this.id = b.id;
                    h.id = i;
                    var n = {};
                    b.type && (n["cke_dialog_ui_" + b.type] = 1);
                    b.className && (n[b.className] = 1);
                    b.disabled && (n.cke_disabled = 1);
                    for (var l = h["class"] && h["class"].split ? h["class"].split(" ") : [], i = 0; i < l.length; i++)l[i] &&
                    (n[l[i]] = 1);
                    l = [];
                    for (i in n)l.push(i);
                    h["class"] = l.join(" ");
                    b.title && (h.title = b.title);
                    n = (b.style || "").split(";");
                    b.align && (l = b.align, j["margin-left"] = "left" == l ? 0 : "auto", j["margin-right"] = "right" == l ? 0 : "auto");
                    for (i in j)n.push(i + ":" + j[i]);
                    b.hidden && n.push("display:none");
                    for (i = n.length - 1; 0 <= i; i--)"" === n[i] && n.splice(i, 1);
                    0 < n.length && (h.style = (h.style ? h.style + "; " : "") + n.join("; "));
                    for (i in h)m.push(i + '="' + CKEDITOR.tools.htmlEncode(h[i]) + '" ');
                    m.push(">", o, "</", k, ">");
                    c.push(m.join(""));
                    (this._ ||
                        (this._ = {})).dialog = a;
                    "boolean" == typeof b.isChanged && (this.isChanged = function () {
                        return b.isChanged
                    });
                    "function" == typeof b.isChanged && (this.isChanged = b.isChanged);
                    "function" == typeof b.setValue && (this.setValue = CKEDITOR.tools.override(this.setValue, function (a) {
                        return function (c) {
                            a.call(this, b.setValue.call(this, c))
                        }
                    }));
                    "function" == typeof b.getValue && (this.getValue = CKEDITOR.tools.override(this.getValue, function (a) {
                        return function () {
                            return b.getValue.call(this, a.call(this))
                        }
                    }));
                    CKEDITOR.event.implementOn(this);
                    this.registerEvents(b);
                    this.accessKeyUp && (this.accessKeyDown && b.accessKey) && O(this, a, "CTRL+" + b.accessKey);
                    var p = this;
                    a.on("load", function () {
                        var b = p.getInputElement();
                        if (b) {
                            var c = p.type in{checkbox: 1, ratio: 1} && CKEDITOR.env.ie && CKEDITOR.env.version < 8 ? "cke_dialog_ui_focused" : "";
                            b.on("focus", function () {
                                a._.tabBarMode = false;
                                a._.hasFocus = true;
                                p.fire("focus");
                                c && this.addClass(c)
                            });
                            b.on("blur", function () {
                                p.fire("blur");
                                c && this.removeClass(c)
                            })
                        }
                    });
                    this.keyboardFocusable && (this.tabIndex = b.tabIndex || 0, this.focusIndex =
                        a._.focusList.push(this) - 1, this.on("focus", function () {
                        a._.currentFocusIndex = p.focusIndex
                    }));
                    CKEDITOR.tools.extend(this, b)
                }
            }, hbox: function (a, b, c, e, d) {
                if (!(4 > arguments.length)) {
                    this._ || (this._ = {});
                    var g = this._.children = b, f = d && d.widths || null, k = d && d.height || null, m, j = {role: "presentation"};
                    d && d.align && (j.align = d.align);
                    CKEDITOR.ui.dialog.uiElement.call(this, a, d || {type: "hbox"}, e, "table", {}, j, function () {
                        var a = ['<tbody><tr class="cke_dialog_ui_hbox">'];
                        for (m = 0; m < c.length; m++) {
                            var b = "cke_dialog_ui_hbox_child",
                                e = [];
                            0 === m && (b = "cke_dialog_ui_hbox_first");
                            m == c.length - 1 && (b = "cke_dialog_ui_hbox_last");
                            a.push('<td class="', b, '" role="presentation" ');
                            f ? f[m] && e.push("width:" + s(f[m])) : e.push("width:" + Math.floor(100 / c.length) + "%");
                            k && e.push("height:" + s(k));
                            d && void 0 != d.padding && e.push("padding:" + s(d.padding));
                            CKEDITOR.env.ie && (CKEDITOR.env.quirks && g[m].align) && e.push("text-align:" + g[m].align);
                            0 < e.length && a.push('style="' + e.join("; ") + '" ');
                            a.push(">", c[m], "</td>")
                        }
                        a.push("</tr></tbody>");
                        return a.join("")
                    })
                }
            }, vbox: function (a, b, c, e, d) {
                if (!(3 > arguments.length)) {
                    this._ || (this._ = {});
                    var g = this._.children = b, f = d && d.width || null, k = d && d.heights || null;
                    CKEDITOR.ui.dialog.uiElement.call(this, a, d || {type: "vbox"}, e, "div", null, {role: "presentation"}, function () {
                        var b = ['<table role="presentation" cellspacing="0" border="0" '];
                        b.push('style="');
                        d && d.expand && b.push("height:100%;");
                        b.push("width:" + s(f || "100%"), ";");
                        b.push('"');
                        b.push('align="', CKEDITOR.tools.htmlEncode(d && d.align || ("ltr" == a.getParentEditor().lang.dir ? "left" : "right")), '" ');
                        b.push("><tbody>");
                        for (var e = 0; e < c.length; e++) {
                            var h = [];
                            b.push('<tr><td role="presentation" ');
                            f && h.push("width:" + s(f || "100%"));
                            k ? h.push("height:" + s(k[e])) : d && d.expand && h.push("height:" + Math.floor(100 / c.length) + "%");
                            d && void 0 != d.padding && h.push("padding:" + s(d.padding));
                            CKEDITOR.env.ie && (CKEDITOR.env.quirks && g[e].align) && h.push("text-align:" + g[e].align);
                            0 < h.length && b.push('style="', h.join("; "), '" ');
                            b.push(' class="cke_dialog_ui_vbox_child">', c[e], "</td></tr>")
                        }
                        b.push("</tbody></table>");
                        return b.join("")
                    })
                }
            }}
        })();
        CKEDITOR.ui.dialog.uiElement.prototype = {getElement: function () {
            return CKEDITOR.document.getById(this.domId)
        }, getInputElement: function () {
            return this.getElement()
        }, getDialog: function () {
            return this._.dialog
        }, setValue: function (a, b) {
            this.getInputElement().setValue(a);
            !b && this.fire("change", {value: a});
            return this
        }, getValue: function () {
            return this.getInputElement().getValue()
        }, isChanged: function () {
            return!1
        }, selectParentTab: function () {
            for (var a = this.getInputElement(); (a = a.getParent()) && -1 == a.$.className.search("cke_dialog_page_contents"););
            if (!a)return this;
            a = a.getAttribute("name");
            this._.dialog._.currentTabId != a && this._.dialog.selectPage(a);
            return this
        }, focus: function () {
            this.selectParentTab().getInputElement().focus();
            return this
        }, registerEvents: function (a) {
            var b = /^on([A-Z]\w+)/, c, e = function (a, b, c, d) {
                b.on("load", function () {
                    a.getInputElement().on(c, d, a)
                })
            }, d;
            for (d in a)if (c = d.match(b))this.eventProcessors[d] ? this.eventProcessors[d].call(this, this._.dialog, a[d]) : e(this, this._.dialog, c[1].toLowerCase(), a[d]);
            return this
        }, eventProcessors: {onLoad: function (a, b) {
            a.on("load", b, this)
        }, onShow: function (a, b) {
            a.on("show", b, this)
        }, onHide: function (a, b) {
            a.on("hide", b, this)
        }}, accessKeyDown: function () {
            this.focus()
        }, accessKeyUp: function () {
        }, disable: function () {
            var a = this.getElement();
            this.getInputElement().setAttribute("disabled", "true");
            a.addClass("cke_disabled")
        }, enable: function () {
            var a = this.getElement();
            this.getInputElement().removeAttribute("disabled");
            a.removeClass("cke_disabled")
        }, isEnabled: function () {
            return!this.getElement().hasClass("cke_disabled")
        }, isVisible: function () {
            return this.getInputElement().isVisible()
        },
            isFocusable: function () {
                return!this.isEnabled() || !this.isVisible() ? !1 : !0
            }};
        CKEDITOR.ui.dialog.hbox.prototype = CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement, {getChild: function (a) {
            if (1 > arguments.length)return this._.children.concat();
            a.splice || (a = [a]);
            return 2 > a.length ? this._.children[a[0]] : this._.children[a[0]] && this._.children[a[0]].getChild ? this._.children[a[0]].getChild(a.slice(1, a.length)) : null
        }}, !0);
        CKEDITOR.ui.dialog.vbox.prototype = new CKEDITOR.ui.dialog.hbox;
        (function () {
            var a = {build: function (a, c, e) {
                for (var d = c.children, g, f = [], k = [], m = 0; m < d.length && (g = d[m]); m++) {
                    var j = [];
                    f.push(j);
                    k.push(CKEDITOR.dialog._.uiElementBuilders[g.type].build(a, g, j))
                }
                return new CKEDITOR.ui.dialog[c.type](a, k, f, e, c)
            }};
            CKEDITOR.dialog.addUIElement("hbox", a);
            CKEDITOR.dialog.addUIElement("vbox", a)
        })();
        CKEDITOR.dialogCommand = function (a, b) {
            this.dialogName = a;
            CKEDITOR.tools.extend(this, b, !0)
        };
        CKEDITOR.dialogCommand.prototype = {exec: function (a) {
            CKEDITOR.env.opera ? CKEDITOR.tools.setTimeout(function () {
                    a.openDialog(this.dialogName)
                },
                0, this) : a.openDialog(this.dialogName)
        }, canUndo: !1, editorFocus: CKEDITOR.env.ie || CKEDITOR.env.webkit};
        (function () {
            var a = /^([a]|[^a])+$/, b = /^\d*$/, c = /^\d*(?:\.\d+)?$/, e = /^(((\d*(\.\d+))|(\d*))(px|\%)?)?$/, d = /^(((\d*(\.\d+))|(\d*))(px|em|ex|in|cm|mm|pt|pc|\%)?)?$/i, g = /^(\s*[\w-]+\s*:\s*[^:;]+(?:;|$))*$/;
            CKEDITOR.VALIDATE_OR = 1;
            CKEDITOR.VALIDATE_AND = 2;
            CKEDITOR.dialog.validate = {functions: function () {
                var a = arguments;
                return function () {
                    var b = this && this.getValue ? this.getValue() : a[0], c = void 0, d = CKEDITOR.VALIDATE_AND,
                        e = [], g;
                    for (g = 0; g < a.length; g++)if ("function" == typeof a[g])e.push(a[g]); else break;
                    g < a.length && "string" == typeof a[g] && (c = a[g], g++);
                    g < a.length && "number" == typeof a[g] && (d = a[g]);
                    var i = d == CKEDITOR.VALIDATE_AND ? !0 : !1;
                    for (g = 0; g < e.length; g++)i = d == CKEDITOR.VALIDATE_AND ? i && e[g](b) : i || e[g](b);
                    return!i ? c : !0
                }
            }, regex: function (a, b) {
                return function (c) {
                    c = this && this.getValue ? this.getValue() : c;
                    return!a.test(c) ? b : !0
                }
            }, notEmpty: function (b) {
                return this.regex(a, b)
            }, integer: function (a) {
                return this.regex(b, a)
            }, number: function (a) {
                return this.regex(c,
                    a)
            }, cssLength: function (a) {
                return this.functions(function (a) {
                    return d.test(CKEDITOR.tools.trim(a))
                }, a)
            }, htmlLength: function (a) {
                return this.functions(function (a) {
                    return e.test(CKEDITOR.tools.trim(a))
                }, a)
            }, inlineStyle: function (a) {
                return this.functions(function (a) {
                    return g.test(CKEDITOR.tools.trim(a))
                }, a)
            }, equals: function (a, b) {
                return this.functions(function (b) {
                    return b == a
                }, b)
            }, notEqual: function (a, b) {
                return this.functions(function (b) {
                    return b != a
                }, b)
            }};
            CKEDITOR.on("instanceDestroyed", function (a) {
                if (CKEDITOR.tools.isEmpty(CKEDITOR.instances)) {
                    for (var b; b =
                        CKEDITOR.dialog._.currentTop;)b.hide();
                    for (var c in w)w[c].remove();
                    w = {}
                }
                var a = a.editor._.storedDialogs, d;
                for (d in a)a[d].destroy()
            })
        })();
        CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {openDialog: function (a, b) {
            var c = null, e = CKEDITOR.dialog._.dialogDefinitions[a];
            null === CKEDITOR.dialog._.currentTop && J(this);
            if ("function" == typeof e)c = this._.storedDialogs || (this._.storedDialogs = {}), c = c[a] || (c[a] = new CKEDITOR.dialog(this, a)), b && b.call(c, c), c.show(); else {
                if ("failed" == e)throw K(this), Error('[CKEDITOR.dialog.openDialog] Dialog "' +
                    a + '" failed when loading definition.');
                "string" == typeof e && CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(e), function () {
                    "function" != typeof CKEDITOR.dialog._.dialogDefinitions[a] && (CKEDITOR.dialog._.dialogDefinitions[a] = "failed");
                    this.openDialog(a, b)
                }, this, 0, 1)
            }
            CKEDITOR.skin.loadPart("dialog");
            return c
        }})
    })();
    CKEDITOR.plugins.add("dialog", {requires: "dialogui", init: function (p) {
        p.on("contentDom", function () {
            var u = p.editable();
            u.attachListener(u, "dblclick", function (q) {
                if (p.readOnly)return!1;
                q = {element: q.data.getTarget()};
                p.fire("doubleclick", q);
                q.dialog && p.openDialog(q.dialog);
                return 1
            })
        })
    }});
    CKEDITOR.plugins.add("about", {requires: "dialog", init: function (a) {
        var b = a.addCommand("about", new CKEDITOR.dialogCommand("about"));
        b.modes = {wysiwyg: 1, source: 1};
        b.canUndo = !1;
        b.readOnly = 1;
        a.ui.addButton && a.ui.addButton("About", {label: a.lang.about.title, command: "about", toolbar: "about"});
        CKEDITOR.dialog.add("about", this.path + "dialogs/about.js")
    }});
    (function () {
        CKEDITOR.plugins.add("a11yhelp", {requires: "dialog", availableLangs: {en: 1, ar: 1, bg: 1, ca: 1, et: 1, cs: 1, cy: 1, da: 1, de: 1, el: 1, eo: 1, es: 1, fa: 1, fi: 1, fr: 1, gu: 1, he: 1, hi: 1, hr: 1, hu: 1, it: 1, ja: 1, ku: 1, lt: 1, lv: 1, mk: 1, mn: 1, nb: 1, nl: 1, no: 1, pl: 1, pt: 1, "pt-br": 1, ro: 1, ru: 1, sk: 1, sl: 1, sv: 1, tr: 1, ug: 1, uk: 1, vi: 1, "zh-cn": 1}, init: function (b) {
            var c = this;
            b.addCommand("a11yHelp", {exec: function () {
                var a = b.langCode, a = c.availableLangs[a] ? a : c.availableLangs[a.replace(/-.*/, "")] ? a.replace(/-.*/, "") : "en";
                CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(c.path +
                    "dialogs/lang/" + a + ".js"), function () {
                    b.lang.a11yhelp = c.langEntries[a];
                    b.openDialog("a11yHelp")
                })
            }, modes: {wysiwyg: 1, source: 1}, readOnly: 1, canUndo: !1});
            b.setKeystroke(CKEDITOR.ALT + 48, "a11yHelp");
            CKEDITOR.dialog.add("a11yHelp", this.path + "dialogs/a11yhelp.js")
        }})
    })();
    CKEDITOR.plugins.add("basicstyles", {init: function (c) {
        var f = 0, a = function (a, d, b, e) {
            e && (e = new CKEDITOR.style(e), c.attachStyleStateChange(e, function (a) {
                !c.readOnly && c.getCommand(b).setState(a)
            }), c.addCommand(b, new CKEDITOR.styleCommand(e)), c.ui.addButton && c.ui.addButton(a, {label: d, command: b, toolbar: "basicstyles," + (f += 10)}))
        }, d = c.config, b = c.lang.basicstyles;
        a("Bold", b.bold, "bold", d.coreStyles_bold);
        a("Italic", b.italic, "italic", d.coreStyles_italic);
        a("Underline", b.underline, "underline", d.coreStyles_underline);
        a("Strike", b.strike, "strike", d.coreStyles_strike);
        a("Subscript", b.subscript, "subscript", d.coreStyles_subscript);
        a("Superscript", b.superscript, "superscript", d.coreStyles_superscript);
        c.setKeystroke([
            [CKEDITOR.CTRL + 66, "bold"],
            [CKEDITOR.CTRL + 73, "italic"],
            [CKEDITOR.CTRL + 85, "underline"]
        ])
    }});
    CKEDITOR.config.coreStyles_bold = {element: "strong", overrides: "b"};
    CKEDITOR.config.coreStyles_italic = {element: "em", overrides: "i"};
    CKEDITOR.config.coreStyles_underline = {element: "u"};
    CKEDITOR.config.coreStyles_strike = {element: "strike"};
    CKEDITOR.config.coreStyles_subscript = {element: "sub"};
    CKEDITOR.config.coreStyles_superscript = {element: "sup"};
    (function () {
        var k = {exec: function (g) {
            var a = g.getCommand("blockquote").state, i = g.getSelection(), c = i && i.getRanges(!0)[0];
            if (c) {
                var h = i.createBookmarks();
                if (CKEDITOR.env.ie) {
                    var e = h[0].startNode, b = h[0].endNode, d;
                    if (e && "blockquote" == e.getParent().getName())for (d = e; d = d.getNext();)if (d.type == CKEDITOR.NODE_ELEMENT && d.isBlockBoundary()) {
                        e.move(d, !0);
                        break
                    }
                    if (b && "blockquote" == b.getParent().getName())for (d = b; d = d.getPrevious();)if (d.type == CKEDITOR.NODE_ELEMENT && d.isBlockBoundary()) {
                        b.move(d);
                        break
                    }
                }
                var f = c.createIterator();
                f.enlargeBr = g.config.enterMode != CKEDITOR.ENTER_BR;
                if (a == CKEDITOR.TRISTATE_OFF) {
                    for (e = []; a = f.getNextParagraph();)e.push(a);
                    1 > e.length && (a = g.document.createElement(g.config.enterMode == CKEDITOR.ENTER_P ? "p" : "div"), b = h.shift(), c.insertNode(a), a.append(new CKEDITOR.dom.text("﻿", g.document)), c.moveToBookmark(b), c.selectNodeContents(a), c.collapse(!0), b = c.createBookmark(), e.push(a), h.unshift(b));
                    d = e[0].getParent();
                    c = [];
                    for (b = 0; b < e.length; b++)a = e[b], d = d.getCommonAncestor(a.getParent());
                    for (a = {table: 1, tbody: 1,
                        tr: 1, ol: 1, ul: 1}; a[d.getName()];)d = d.getParent();
                    for (b = null; 0 < e.length;) {
                        for (a = e.shift(); !a.getParent().equals(d);)a = a.getParent();
                        a.equals(b) || c.push(a);
                        b = a
                    }
                    for (; 0 < c.length;)if (a = c.shift(), "blockquote" == a.getName()) {
                        for (b = new CKEDITOR.dom.documentFragment(g.document); a.getFirst();)b.append(a.getFirst().remove()), e.push(b.getLast());
                        b.replace(a)
                    } else e.push(a);
                    c = g.document.createElement("blockquote");
                    for (c.insertBefore(e[0]); 0 < e.length;)a = e.shift(), c.append(a)
                } else if (a == CKEDITOR.TRISTATE_ON) {
                    b = [];
                    for (d = {}; a = f.getNextParagraph();) {
                        for (e = c = null; a.getParent();) {
                            if ("blockquote" == a.getParent().getName()) {
                                c = a.getParent();
                                e = a;
                                break
                            }
                            a = a.getParent()
                        }
                        c && (e && !e.getCustomData("blockquote_moveout")) && (b.push(e), CKEDITOR.dom.element.setMarker(d, e, "blockquote_moveout", !0))
                    }
                    CKEDITOR.dom.element.clearAllMarkers(d);
                    a = [];
                    e = [];
                    for (d = {}; 0 < b.length;)f = b.shift(), c = f.getParent(), f.getPrevious() ? f.getNext() ? (f.breakParent(f.getParent()), e.push(f.getNext())) : f.remove().insertAfter(c) : f.remove().insertBefore(c), c.getCustomData("blockquote_processed") ||
                        (e.push(c), CKEDITOR.dom.element.setMarker(d, c, "blockquote_processed", !0)), a.push(f);
                    CKEDITOR.dom.element.clearAllMarkers(d);
                    for (b = e.length - 1; 0 <= b; b--) {
                        c = e[b];
                        a:{
                            d = c;
                            for (var f = 0, k = d.getChildCount(), j = void 0; f < k && (j = d.getChild(f)); f++)if (j.type == CKEDITOR.NODE_ELEMENT && j.isBlockBoundary()) {
                                d = !1;
                                break a
                            }
                            d = !0
                        }
                        d && c.remove()
                    }
                    if (g.config.enterMode == CKEDITOR.ENTER_BR)for (c = !0; a.length;)if (f = a.shift(), "div" == f.getName()) {
                        b = new CKEDITOR.dom.documentFragment(g.document);
                        c && (f.getPrevious() && !(f.getPrevious().type ==
                            CKEDITOR.NODE_ELEMENT && f.getPrevious().isBlockBoundary())) && b.append(g.document.createElement("br"));
                        for (c = f.getNext() && !(f.getNext().type == CKEDITOR.NODE_ELEMENT && f.getNext().isBlockBoundary()); f.getFirst();)f.getFirst().remove().appendTo(b);
                        c && b.append(g.document.createElement("br"));
                        b.replace(f);
                        c = !1
                    }
                }
                i.selectBookmarks(h);
                g.focus()
            }
        }, refresh: function (g, a) {
            this.setState(g.elementPath(a.block || a.blockLimit).contains("blockquote", 1) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF)
        }, context: "blockquote"};
        CKEDITOR.plugins.add("blockquote", {init: function (g) {
            g.blockless || (g.addCommand("blockquote", k), g.ui.addButton && g.ui.addButton("Blockquote", {label: g.lang.blockquote.toolbar, command: "blockquote", toolbar: "blocks,10"}))
        }})
    })();
    (function () {
        function v(b) {
            function a() {
                var e = b.editable();
                e.on(q, function (b) {
                    (!CKEDITOR.env.ie || !m) && u(b)
                });
                CKEDITOR.env.ie && e.on("paste", function (e) {
                    r || (f(), e.data.preventDefault(), u(e), l("paste") || b.openDialog("paste"))
                });
                CKEDITOR.env.ie && (e.on("contextmenu", h, null, null, 0), e.on("beforepaste", function (b) {
                    b.data && !b.data.$.ctrlKey && h()
                }, null, null, 0));
                e.on("beforecut", function () {
                    !m && j(b)
                });
                e.on("mouseup", function () {
                    setTimeout(function () {
                        s()
                    }, 0)
                });
                e.on("keyup", s)
            }

            function d(e) {
                return{type: e, canUndo: "cut" ==
                    e, startDisabled: !0, exec: function () {
                    "cut" == this.type && j();
                    var e;
                    var a = this.type;
                    if (CKEDITOR.env.ie)e = l(a); else try {
                        e = b.document.$.execCommand(a, !1, null)
                    } catch (c) {
                        e = !1
                    }
                    e || alert(b.lang.clipboard[this.type + "Error"]);
                    return e
                }}
            }

            function c() {
                return{canUndo: !1, async: !0, exec: function (b, a) {
                    var c = function (a, c) {
                        a && g(a.type, a.dataValue, !!c);
                        b.fire("afterCommandExec", {name: "paste", command: d, returnValue: !!a})
                    }, d = this;
                    "string" == typeof a ? c({type: "auto", dataValue: a}, 1) : b.getClipboardData(c)
                }}
            }

            function f() {
                r = 1;
                setTimeout(function () {
                    r =
                        0
                }, 100)
            }

            function h() {
                m = 1;
                setTimeout(function () {
                    m = 0
                }, 10)
            }

            function l(e) {
                var a = b.document, c = a.getBody(), d = !1, j = function () {
                    d = !0
                };
                c.on(e, j);
                (7 < CKEDITOR.env.version ? a.$ : a.$.selection.createRange()).execCommand(e);
                c.removeListener(e, j);
                return d
            }

            function g(e, a, c) {
                e = {type: e};
                if (c && !b.fire("beforePaste", e) || !a)return!1;
                e.dataValue = a;
                return b.fire("paste", e)
            }

            function j() {
                if (CKEDITOR.env.ie && !CKEDITOR.env.quirks) {
                    var e = b.getSelection(), a, c, d;
                    if (e.getType() == CKEDITOR.SELECTION_ELEMENT && (a = e.getSelectedElement()))c =
                        e.getRanges()[0], d = b.document.createText(""), d.insertBefore(a), c.setStartBefore(d), c.setEndAfter(a), e.selectRanges([c]), setTimeout(function () {
                        a.getParent() && (d.remove(), e.selectElement(a))
                    }, 0)
                }
            }

            function k(a, c) {
                var d = b.document, j = b.editable(), k = function (b) {
                    b.cancel()
                }, f = CKEDITOR.env.gecko && 10902 >= CKEDITOR.env.version;
                if (!d.getById("cke_pastebin")) {
                    var h = b.getSelection(), o = h.createBookmarks(), i = new CKEDITOR.dom.element(j.is("body") && !CKEDITOR.env.ie && !CKEDITOR.env.opera ? "body" : "div", d);
                    i.setAttribute("id",
                        "cke_pastebin");
                    CKEDITOR.env.opera && i.appendBogus();
                    var g = 0, d = d.getWindow();
                    f ? (i.insertAfter(o[0].startNode), i.setStyle("display", "inline")) : (CKEDITOR.env.webkit ? (j.append(i), i.addClass("cke_editable"), g = (j.is("body") ? j : CKEDITOR.dom.element.get(i.$.offsetParent)).getDocumentPosition().y) : j.getAscendant(CKEDITOR.env.ie || CKEDITOR.env.opera ? "body" : "html", 1).append(i), i.setStyles({position: "absolute", top: d.getScrollPosition().y - g + 10 + "px", width: "1px", height: Math.max(1, d.getViewPaneSize().height - 20) + "px",
                        overflow: "hidden", margin: 0, padding: 0}));
                    (f = i.getParent().isReadOnly()) ? (i.setOpacity(0), i.setAttribute("contenteditable", !0)) : i.setStyle("ltr" == b.config.contentsLangDirection ? "left" : "right", "-1000px");
                    b.on("selectionChange", k, null, null, 0);
                    f && i.focus();
                    f = new CKEDITOR.dom.range(i);
                    f.selectNodeContents(i);
                    var l = f.select();
                    if (CKEDITOR.env.ie)var m = j.once("blur", function () {
                        b.lockSelection(l)
                    });
                    var n = CKEDITOR.document.getWindow().getScrollPosition().y;
                    setTimeout(function () {
                        if (CKEDITOR.env.webkit || CKEDITOR.env.opera)CKEDITOR.document[CKEDITOR.env.webkit ?
                            "getBody" : "getDocumentElement"]().$.scrollTop = n;
                        m && m.removeListener();
                        CKEDITOR.env.ie && j.focus();
                        h.selectBookmarks(o);
                        i.remove();
                        var a;
                        if (CKEDITOR.env.webkit && (a = i.getFirst()) && a.is && a.hasClass("Apple-style-span"))i = a;
                        b.removeListener("selectionChange", k);
                        c(i.getHtml())
                    }, 0)
                }
            }

            function o() {
                if (CKEDITOR.env.ie) {
                    b.focus();
                    f();
                    var a = b.focusManager;
                    a.lock();
                    if (b.editable().fire(q) && !l("paste"))return a.unlock(), !1;
                    a.unlock()
                } else try {
                    if (b.editable().fire(q) && !b.document.$.execCommand("Paste", !1, null))throw 0;
                } catch (c) {
                    return!1
                }
                return!0
            }

            function p(a) {
                if ("wysiwyg" == b.mode)switch (a.data.keyCode) {
                    case CKEDITOR.CTRL + 86:
                    case CKEDITOR.SHIFT + 45:
                        a = b.editable();
                        f();
                        !CKEDITOR.env.ie && a.fire("beforepaste");
                        (CKEDITOR.env.opera || CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version) && a.fire("paste");
                        break;
                    case CKEDITOR.CTRL + 88:
                    case CKEDITOR.SHIFT + 46:
                        b.fire("saveSnapshot"), setTimeout(function () {
                            b.fire("saveSnapshot")
                        }, 0)
                }
            }

            function u(a) {
                var c = {type: "auto"}, d = b.fire("beforePaste", c);
                k(a, function (b) {
                    b = b.replace(/<span[^>]+data-cke-bookmark[^<]*?<\/span>/ig,
                        "");
                    d && g(c.type, b, 0, 1)
                })
            }

            function s() {
                if ("wysiwyg" == b.mode) {
                    var a = n("Paste");
                    b.getCommand("cut").setState(n("Cut"));
                    b.getCommand("copy").setState(n("Copy"));
                    b.getCommand("paste").setState(a);
                    b.fire("pasteState", a)
                }
            }

            function n(a) {
                var c;
                if (t && a in{Paste: 1, Cut: 1})return CKEDITOR.TRISTATE_DISABLED;
                if ("Paste" == a) {
                    CKEDITOR.env.ie && (m = 1);
                    try {
                        c = b.document.$.queryCommandEnabled(a) || CKEDITOR.env.webkit
                    } catch (d) {
                    }
                    m = 0
                } else a = b.getSelection(), c = a.getRanges(), c = a.type != CKEDITOR.SELECTION_NONE && !(1 == c.length && c[0].collapsed);
                return c ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED
            }

            var m = 0, r = 0, t = 0, q = CKEDITOR.env.ie ? "beforepaste" : "paste";
            (function () {
                b.on("key", p);
                b.on("contentDom", a);
                b.on("selectionChange", function (b) {
                    t = b.data.selection.getRanges()[0].checkReadOnly();
                    s()
                });
                b.contextMenu && b.contextMenu.addListener(function (b, a) {
                    t = a.getRanges()[0].checkReadOnly();
                    return{cut: n("Cut"), copy: n("Copy"), paste: n("Paste")}
                })
            })();
            (function () {
                function a(c, d, j, e, f) {
                    var k = b.lang.clipboard[d];
                    b.addCommand(d, j);
                    b.ui.addButton && b.ui.addButton(c,
                        {label: k, command: d, toolbar: "clipboard," + e});
                    b.addMenuItems && b.addMenuItem(d, {label: k, command: d, group: "clipboard", order: f})
                }

                a("Cut", "cut", d("cut"), 10, 1);
                a("Copy", "copy", d("copy"), 20, 4);
                a("Paste", "paste", c(), 30, 8)
            })();
            b.getClipboardData = function (a, c) {
                function d(a) {
                    a.removeListener();
                    a.cancel();
                    c(a.data)
                }

                function j(a) {
                    a.removeListener();
                    a.cancel();
                    g = !0;
                    c({type: h, dataValue: a.data})
                }

                function f() {
                    this.customTitle = a && a.title
                }

                var k = !1, h = "auto", g = !1;
                c || (c = a, a = null);
                b.on("paste", d, null, null, 0);
                b.on("beforePaste",
                    function (a) {
                        a.removeListener();
                        k = true;
                        h = a.data.type
                    }, null, null, 1E3);
                !1 === o() && (b.removeListener("paste", d), k && b.fire("pasteDialog", f) ? (b.on("pasteDialogCommit", j), b.on("dialogHide", function (a) {
                    a.removeListener();
                    a.data.removeListener("pasteDialogCommit", j);
                    setTimeout(function () {
                        g || c(null)
                    }, 10)
                })) : c(null))
            }
        }

        function w(b) {
            if (CKEDITOR.env.webkit) {
                if (!b.match(/^[^<]*$/g) && !b.match(/^(<div><br( ?\/)?><\/div>|<div>[^<]*<\/div>)*$/gi))return"html"
            } else if (CKEDITOR.env.ie) {
                if (!b.match(/^([^<]|<br( ?\/)?>)*$/gi) && !b.match(/^(<p>([^<]|<br( ?\/)?>)*<\/p>|(\r\n))*$/gi))return"html"
            } else if (CKEDITOR.env.gecko || CKEDITOR.env.opera) {
                if (!b.match(/^([^<]|<br( ?\/)?>)*$/gi))return"html"
            } else return"html";
            return"htmlifiedtext"
        }

        function x(b, a) {
            function d(a) {
                return CKEDITOR.tools.repeat("</p><p>", ~~(a / 2)) + (1 == a % 2 ? "<br>" : "")
            }

            a = a.replace(/\s+/g, " ").replace(/> +</g, "><").replace(/<br ?\/>/gi, "<br>");
            a = a.replace(/<\/?[A-Z]+>/g, function (a) {
                return a.toLowerCase()
            });
            if (a.match(/^[^<]$/))return a;
            CKEDITOR.env.webkit && -1 < a.indexOf("<div>") &&
            (a = a.replace(/^(<div>(<br>|)<\/div>)(?!$|(<div>(<br>|)<\/div>))/g, "<br>").replace(/^(<div>(<br>|)<\/div>){2}(?!$)/g, "<div></div>"), a.match(/<div>(<br>|)<\/div>/) && (a = "<p>" + a.replace(/(<div>(<br>|)<\/div>)+/g, function (a) {
                return d(a.split("</div><div>").length + 1)
            }) + "</p>"), a = a.replace(/<\/div><div>/g, "<br>"), a = a.replace(/<\/?div>/g, ""));
            if ((CKEDITOR.env.gecko || CKEDITOR.env.opera) && b.enterMode != CKEDITOR.ENTER_BR)CKEDITOR.env.gecko && (a = a.replace(/^<br><br>$/, "<br>")), -1 < a.indexOf("<br><br>") && (a = "<p>" +
                a.replace(/(<br>){2,}/g, function (a) {
                    return d(a.length / 4)
                }) + "</p>");
            return p(b, a)
        }

        function y() {
            var b = new CKEDITOR.htmlParser.filter, a = {blockquote: 1, dl: 1, fieldset: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, ol: 1, p: 1, table: 1, ul: 1}, d = CKEDITOR.tools.extend({br: 0}, CKEDITOR.dtd.$inline), c = {p: 1, br: 1, "cke:br": 1}, f = CKEDITOR.dtd, h = CKEDITOR.tools.extend({area: 1, basefont: 1, embed: 1, iframe: 1, map: 1, object: 1, param: 1}, CKEDITOR.dtd.$nonBodyContent, CKEDITOR.dtd.$cdata), l = function (a) {
                    delete a.name;
                    a.add(new CKEDITOR.htmlParser.text(" "))
                },
                g = function (a) {
                    for (var b = a, c; (b = b.next) && b.name && b.name.match(/^h\d$/);) {
                        c = new CKEDITOR.htmlParser.element("cke:br");
                        c.isEmpty = !0;
                        for (a.add(c); c = b.children.shift();)a.add(c)
                    }
                };
            b.addRules({elements: {h1: g, h2: g, h3: g, h4: g, h5: g, h6: g, img: function (a) {
                var a = CKEDITOR.tools.trim(a.attributes.alt || ""), b = " ";
                a && !a.match(/(^http|\.(jpe?g|gif|png))/i) && (b = " [" + a + "] ");
                return new CKEDITOR.htmlParser.text(b)
            }, td: l, th: l, $: function (b) {
                var k = b.name, g;
                if (h[k])return!1;
                delete b.attributes;
                if ("br" == k)return b;
                if (a[k])b.name =
                    "p"; else if (d[k])delete b.name; else if (f[k]) {
                    g = new CKEDITOR.htmlParser.element("cke:br");
                    g.isEmpty = !0;
                    if (CKEDITOR.dtd.$empty[k])return g;
                    b.add(g, 0);
                    g = g.clone();
                    g.isEmpty = !0;
                    b.add(g);
                    delete b.name
                }
                c[b.name] || delete b.name;
                return b
            }}});
            return b
        }

        function z(b, a, d) {
            var a = new CKEDITOR.htmlParser.fragment.fromHtml(a), c = new CKEDITOR.htmlParser.basicWriter;
            a.writeHtml(c, d);
            var a = c.getHtml(), a = a.replace(/\s*(<\/?[a-z:]+ ?\/?>)\s*/g, "$1").replace(/(<cke:br \/>){2,}/g, "<cke:br />").replace(/(<cke:br \/>)(<\/?p>|<br \/>)/g,
                "$2").replace(/(<\/?p>|<br \/>)(<cke:br \/>)/g, "$1").replace(/<(cke:)?br( \/)?>/g, "<br>").replace(/<p><\/p>/g, ""), f = 0, a = a.replace(/<\/?p>/g,function (a) {
                if ("<p>" == a) {
                    if (1 < ++f)return"</p><p>"
                } else if (0 < --f)return"</p><p>";
                return a
            }).replace(/<p><\/p>/g, "");
            return p(b, a)
        }

        function p(b, a) {
            b.enterMode == CKEDITOR.ENTER_BR ? a = a.replace(/(<\/p><p>)+/g,function (a) {
                return CKEDITOR.tools.repeat("<br>", 2 * (a.length / 7))
            }).replace(/<\/?p>/g, "") : b.enterMode == CKEDITOR.ENTER_DIV && (a = a.replace(/<(\/)?p>/g, "<$1div>"));
            return a
        }

        CKEDITOR.plugins.add("clipboard", {requires: "dialog", init: function (b) {
            var a;
            v(b);
            CKEDITOR.dialog.add("paste", CKEDITOR.getUrl(this.path + "dialogs/paste.js"));
            b.on("paste", function (a) {
                var b = a.data.dataValue, f = CKEDITOR.dtd.$block;
                -1 < b.indexOf("Apple-") && (b = b.replace(/<span class="Apple-converted-space">&nbsp;<\/span>/gi, " "), "html" != a.data.type && (b = b.replace(/<span class="Apple-tab-span"[^>]*>([^<]*)<\/span>/gi, function (a, b) {
                    return b.replace(/\t/g, "&nbsp;&nbsp; &nbsp;")
                })), -1 < b.indexOf('<br class="Apple-interchange-newline">') &&
                    (a.data.startsWithEOL = 1, a.data.preSniffing = "html", b = b.replace(/<br class="Apple-interchange-newline">/, "")), b = b.replace(/(<[^>]+) class="Apple-[^"]*"/gi, "$1"));
                if (b.match(/^<[^<]+cke_(editable|contents)/i)) {
                    var h, l, g = new CKEDITOR.dom.element("div");
                    for (g.setHtml(b); 1 == g.getChildCount() && (h = g.getFirst()) && h.type == CKEDITOR.NODE_ELEMENT && (h.hasClass("cke_editable") || h.hasClass("cke_contents"));)g = l = h;
                    l && (b = l.getHtml().replace(/<br>$/i, ""))
                }
                CKEDITOR.env.ie ? b = b.replace(/^&nbsp;(?: |\r\n)?<(\w+)/g, function (b, c) {
                    if (c.toLowerCase()in f) {
                        a.data.preSniffing = "html";
                        return"<" + c
                    }
                    return b
                }) : CKEDITOR.env.webkit ? b = b.replace(/<\/(\w+)><div><br><\/div>$/, function (b, c) {
                    if (c in f) {
                        a.data.endsWithEOL = 1;
                        return"</" + c + ">"
                    }
                    return b
                }) : CKEDITOR.env.gecko && (b = b.replace(/(\s)<br>$/, "$1"));
                a.data.dataValue = b
            }, null, null, 3);
            b.on("paste", function (d) {
                var d = d.data, c = d.type, f = d.dataValue, h, l = b.config.clipboard_defaultContentType || "html";
                h = "html" == c || "html" == d.preSniffing ? "html" : w(f);
                "htmlifiedtext" == h ? f = x(b.config, f) : "text" == c && "html" ==
                    h && (f = z(b.config, f, a || (a = y(b))));
                d.startsWithEOL && (f = '<br data-cke-eol="1">' + f);
                d.endsWithEOL && (f += '<br data-cke-eol="1">');
                "auto" == c && (c = "html" == h || "html" == l ? "html" : "text");
                d.type = c;
                d.dataValue = f;
                delete d.preSniffing;
                delete d.startsWithEOL;
                delete d.endsWithEOL
            }, null, null, 6);
            b.on("paste", function (a) {
                a = a.data;
                b.insertHtml(a.dataValue, a.type);
                setTimeout(function () {
                    b.fire("afterPaste")
                }, 0)
            }, null, null, 1E3);
            b.on("pasteDialog", function (a) {
                setTimeout(function () {
                    b.openDialog("paste", a.data)
                }, 0)
            })
        }})
    })();
    (function () {
        CKEDITOR.plugins.add("panel", {beforeInit: function (a) {
            a.ui.addHandler(CKEDITOR.UI_PANEL, CKEDITOR.ui.panel.handler)
        }});
        CKEDITOR.UI_PANEL = "panel";
        CKEDITOR.ui.panel = function (a, b) {
            b && CKEDITOR.tools.extend(this, b);
            CKEDITOR.tools.extend(this, {className: "", css: []});
            this.id = CKEDITOR.tools.getNextId();
            this.document = a;
            this.isFramed = this.forceIFrame || this.css.length;
            this._ = {blocks: {}}
        };
        CKEDITOR.ui.panel.handler = {create: function (a) {
            return new CKEDITOR.ui.panel(a)
        }};
        var e = CKEDITOR.addTemplate("panel",
            '<div lang="{langCode}" id="{id}" dir={dir} class="cke cke_reset_all {editorId} cke_panel cke_panel {cls} cke_{dir}" style="z-index:{z-index}" role="presentation">{frame}</div>'), f = CKEDITOR.addTemplate("panel-frame", '<iframe id="{id}" class="cke_panel_frame" role="application" frameborder="0" src="{src}"></iframe>'), g = CKEDITOR.addTemplate("panel-frame-inner", '<!DOCTYPE html><html class="cke_panel_container {env}" dir="{dir}" lang="{langCode}"><head>{css}</head><body class="cke_{dir}" style="margin:0;padding:0" onload="{onload}"></body></html>');
        CKEDITOR.ui.panel.prototype = {render: function (a, b) {
            this.getHolderElement = function () {
                var a = this._.holder;
                if (!a) {
                    if (this.isFramed) {
                        var a = this.document.getById(this.id + "_frame"), b = a.getParent(), a = a.getFrameDocument();
                        CKEDITOR.env.iOS && b.setStyles({overflow: "scroll", "-webkit-overflow-scrolling": "touch"});
                        b = CKEDITOR.tools.addFunction(CKEDITOR.tools.bind(function () {
                            this.isLoaded = !0;
                            if (this.onLoad)this.onLoad()
                        }, this));
                        a.write(g.output(CKEDITOR.tools.extend({css: CKEDITOR.tools.buildStyleHtml(this.css), onload: "window.parent.CKEDITOR.tools.callFunction(" +
                            b + ");"}, c)));
                        a.getWindow().$.CKEDITOR = CKEDITOR;
                        a.on("key" + (CKEDITOR.env.opera ? "press" : "down"), function (a) {
                            var b = a.data.getKeystroke(), c = this.document.getById(this.id).getAttribute("dir");
                            this._.onKeyDown && !1 === this._.onKeyDown(b) ? a.data.preventDefault() : (27 == b || b == ("rtl" == c ? 39 : 37)) && this.onEscape && !1 === this.onEscape(b) && a.data.preventDefault()
                        }, this);
                        a = a.getBody();
                        a.unselectable();
                        CKEDITOR.env.air && CKEDITOR.tools.callFunction(b)
                    } else a = this.document.getById(this.id);
                    this._.holder = a
                }
                return a
            };
            var c =
            {editorId: a.id, id: this.id, langCode: a.langCode, dir: a.lang.dir, cls: this.className, frame: "", env: CKEDITOR.env.cssClass, "z-index": a.config.baseFloatZIndex + 1};
            this.isFramed && (c.frame = f.output({id: this.id + "_frame", src: "javascript:void(document.open()," + (CKEDITOR.env.isCustomDomain() ? "document.domain='" + document.domain + "'," : "") + 'document.close())">'}));
            var d = e.output(c);
            b && b.push(d);
            return d
        }, addBlock: function (a, b) {
            b = this._.blocks[a] = b instanceof CKEDITOR.ui.panel.block ? b : new CKEDITOR.ui.panel.block(this.getHolderElement(),
                b);
            this._.currentBlock || this.showBlock(a);
            return b
        }, getBlock: function (a) {
            return this._.blocks[a]
        }, showBlock: function (a) {
            var a = this._.blocks[a], b = this._.currentBlock, c = !this.forceIFrame || CKEDITOR.env.ie ? this._.holder : this.document.getById(this.id + "_frame");
            b && (c.removeAttributes(b.attributes), b.hide());
            this._.currentBlock = a;
            c.setAttributes(a.attributes);
            CKEDITOR.fire("ariaWidget", c);
            a._.focusIndex = -1;
            this._.onKeyDown = a.onKeyDown && CKEDITOR.tools.bind(a.onKeyDown, a);
            a.show();
            return a
        }, destroy: function () {
            this.element &&
            this.element.remove()
        }};
        CKEDITOR.ui.panel.block = CKEDITOR.tools.createClass({$: function (a, b) {
            this.element = a.append(a.getDocument().createElement("div", {attributes: {tabIndex: -1, "class": "cke_panel_block", role: "presentation"}, styles: {display: "none"}}));
            b && CKEDITOR.tools.extend(this, b);
            this.attributes.title || (this.attributes.title = this.attributes["aria-label"]);
            this.keys = {};
            this._.focusIndex = -1;
            this.element.disableContextMenu()
        }, _: {markItem: function (a) {
            -1 != a && (a = this.element.getElementsByTag("a").getItem(this._.focusIndex =
                a), (CKEDITOR.env.webkit || CKEDITOR.env.opera) && a.getDocument().getWindow().focus(), a.focus(), this.onMark && this.onMark(a))
        }}, proto: {show: function () {
            this.element.setStyle("display", "")
        }, hide: function () {
            (!this.onHide || !0 !== this.onHide.call(this)) && this.element.setStyle("display", "none")
        }, onKeyDown: function (a) {
            var b = this.keys[a];
            switch (b) {
                case "next":
                    for (var a = this._.focusIndex, b = this.element.getElementsByTag("a"), c; c = b.getItem(++a);)if (c.getAttribute("_cke_focus") && c.$.offsetWidth) {
                        this._.focusIndex =
                            a;
                        c.focus();
                        break
                    }
                    return!1;
                case "prev":
                    a = this._.focusIndex;
                    for (b = this.element.getElementsByTag("a"); 0 < a && (c = b.getItem(--a));)if (c.getAttribute("_cke_focus") && c.$.offsetWidth) {
                        this._.focusIndex = a;
                        c.focus();
                        break
                    }
                    return!1;
                case "click":
                case "mouseup":
                    return a = this._.focusIndex, (c = 0 <= a && this.element.getElementsByTag("a").getItem(a)) && (c.$[b] ? c.$[b]() : c.$["on" + b]()), !1
            }
            return!0
        }}})
    })();
    CKEDITOR.plugins.add("floatpanel", {requires: "panel"});
    (function () {
        function o(a, b, c, h, g) {
            var g = CKEDITOR.tools.genKey(b.getUniqueId(), c.getUniqueId(), a.lang.dir, a.uiColor || "", h.css || "", g || ""), e = i[g];
            e || (e = i[g] = new CKEDITOR.ui.panel(b, h), e.element = c.append(CKEDITOR.dom.element.createFromHtml(e.render(a), b)), e.element.setStyles({display: "none", position: "absolute"}));
            return e
        }

        var i = {};
        CKEDITOR.ui.floatPanel = CKEDITOR.tools.createClass({$: function (a, b, c, h) {
            function g() {
                j.hide()
            }

            c.forceIFrame = 1;
            c.toolbarRelated && a.elementMode == CKEDITOR.ELEMENT_MODE_INLINE &&
            (b = CKEDITOR.document.getById("cke_" + a.name));
            var e = b.getDocument(), h = o(a, e, b, c, h || 0), k = h.element, d = k.getFirst(), j = this;
            k.disableContextMenu();
            k.setAttribute("role", "application");
            this.element = k;
            this._ = {editor: a, panel: h, parentElement: b, definition: c, document: e, iframe: d, children: [], dir: a.lang.dir};
            a.on("mode", g);
            a.on("resize", g);
            e.getWindow().on("resize", g)
        }, proto: {addBlock: function (a, b) {
            return this._.panel.addBlock(a, b)
        }, addListBlock: function (a, b) {
            return this._.panel.addListBlock(a, b)
        }, getBlock: function (a) {
            return this._.panel.getBlock(a)
        },
            showBlock: function (a, b, c, h, g) {
                var e = this._.panel, k = e.showBlock(a);
                this.allowBlur(!1);
                a = this._.editor.editable();
                this._.returnFocus = a.hasFocus ? a : new CKEDITOR.dom.element(CKEDITOR.document.$.activeElement);
                var d = this.element, a = this._.iframe, a = CKEDITOR.env.ie ? a : new CKEDITOR.dom.window(a.$.contentWindow), j = d.getDocument(), i = this._.parentElement.getPositionedAncestor(), n = b.getDocumentPosition(j), j = i ? i.getDocumentPosition(j) : {x: 0, y: 0}, m = "rtl" == this._.dir, f = n.x + (h || 0) - j.x, l = n.y + (g || 0) - j.y;
                if (m && (1 == c || 4 ==
                    c))f += b.$.offsetWidth; else if (!m && (2 == c || 3 == c))f += b.$.offsetWidth - 1;
                if (3 == c || 4 == c)l += b.$.offsetHeight - 1;
                this._.panel._.offsetParentId = b.getId();
                d.setStyles({top: l + "px", left: 0, display: ""});
                d.setOpacity(0);
                d.getFirst().removeStyle("width");
                this._.editor.focusManager.add(a);
                this._.blurSet || (CKEDITOR.event.useCapture = !0, a.on("blur", function (a) {
                    this.allowBlur() && a.data.getPhase() == CKEDITOR.EVENT_PHASE_AT_TARGET && (this.visible && !this._.activeChild) && (delete this._.returnFocus, this.hide())
                }, this), a.on("focus",
                    function () {
                        this._.focused = !0;
                        this.hideChild();
                        this.allowBlur(!0)
                    }, this), CKEDITOR.event.useCapture = !1, this._.blurSet = 1);
                e.onEscape = CKEDITOR.tools.bind(function (a) {
                    if (this.onEscape && this.onEscape(a) === false)return false
                }, this);
                CKEDITOR.tools.setTimeout(function () {
                    var a = CKEDITOR.tools.bind(function () {
                        d.removeStyle("width");
                        if (k.autoSize) {
                            var a = k.element.getDocument(), a = (CKEDITOR.env.webkit ? k.element : a.getBody()).$.scrollWidth;
                            CKEDITOR.env.ie && (CKEDITOR.env.quirks && a > 0) && (a = a + ((d.$.offsetWidth || 0) - (d.$.clientWidth ||
                                0) + 3));
                            d.setStyle("width", a + 10 + "px");
                            a = k.element.$.scrollHeight;
                            CKEDITOR.env.ie && (CKEDITOR.env.quirks && a > 0) && (a = a + ((d.$.offsetHeight || 0) - (d.$.clientHeight || 0) + 3));
                            d.setStyle("height", a + "px");
                            e._.currentBlock.element.setStyle("display", "none").removeStyle("display")
                        } else d.removeStyle("height");
                        m && (f = f - d.$.offsetWidth);
                        d.setStyle("left", f + "px");
                        var b = e.element.getWindow(), a = d.$.getBoundingClientRect(), b = b.getViewPaneSize(), c = a.width || a.right - a.left, g = a.height || a.bottom - a.top, h = m ? a.right : b.width - a.left,
                            i = m ? b.width - a.right : a.left;
                        m ? h < c && (f = i > c ? f + c : b.width > c ? f - a.left : f - a.right + b.width) : h < c && (f = i > c ? f - c : b.width > c ? f - a.right + b.width : f - a.left);
                        c = a.top;
                        b.height - a.top < g && (l = c > g ? l - g : b.height > g ? l - a.bottom + b.height : l - a.top);
                        if (CKEDITOR.env.ie) {
                            b = a = new CKEDITOR.dom.element(d.$.offsetParent);
                            b.getName() == "html" && (b = b.getDocument().getBody());
                            b.getComputedStyle("direction") == "rtl" && (f = CKEDITOR.env.ie8Compat ? f - d.getDocument().getDocumentElement().$.scrollLeft * 2 : f - (a.$.scrollWidth - a.$.clientWidth))
                        }
                        var a = d.getFirst(),
                            j;
                        (j = a.getCustomData("activePanel")) && j.onHide && j.onHide.call(this, 1);
                        a.setCustomData("activePanel", this);
                        d.setStyles({top: l + "px", left: f + "px"});
                        d.setOpacity(1)
                    }, this);
                    e.isLoaded ? a() : e.onLoad = a;
                    CKEDITOR.tools.setTimeout(function () {
                        this.focus();
                        this.allowBlur(true);
                        this._.editor.fire("panelShow", this)
                    }, 0, this)
                }, CKEDITOR.env.air ? 200 : 0, this);
                this.visible = 1;
                this.onShow && this.onShow.call(this)
            }, focus: function () {
                if (CKEDITOR.env.webkit) {
                    var a = CKEDITOR.document.getActive();
                    !a.equals(this._.iframe) && a.$.blur()
                }
                (this._.lastFocused ||
                    this._.iframe.getFrameDocument().getWindow()).focus()
            }, blur: function () {
                var a = this._.iframe.getFrameDocument().getActive();
                a.is("a") && (this._.lastFocused = a)
            }, hide: function (a) {
                if (this.visible && (!this.onHide || !0 !== this.onHide.call(this))) {
                    this.hideChild();
                    CKEDITOR.env.gecko && this._.iframe.getFrameDocument().$.activeElement.blur();
                    this.element.setStyle("display", "none");
                    this.visible = 0;
                    this.element.getFirst().removeCustomData("activePanel");
                    if (a = a && this._.returnFocus)CKEDITOR.env.webkit && a.type && a.getWindow().$.focus(),
                        a.focus();
                    delete this._.lastFocused;
                    this._.editor.fire("panelHide", this)
                }
            }, allowBlur: function (a) {
                var b = this._.panel;
                void 0 != a && (b.allowBlur = a);
                return b.allowBlur
            }, showAsChild: function (a, b, c, h, g, e) {
                this._.activeChild == a && a._.panel._.offsetParentId == c.getId() || (this.hideChild(), a.onHide = CKEDITOR.tools.bind(function () {
                    CKEDITOR.tools.setTimeout(function () {
                        this._.focused || this.hide()
                    }, 0, this)
                }, this), this._.activeChild = a, this._.focused = !1, a.showBlock(b, c, h, g, e), this.blur(), (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat) &&
                    setTimeout(function () {
                        a.element.getChild(0).$.style.cssText += ""
                    }, 100))
            }, hideChild: function (a) {
                var b = this._.activeChild;
                b && (delete b.onHide, delete this._.activeChild, b.hide(), a && this.focus())
            }}});
        CKEDITOR.on("instanceDestroyed", function () {
            var a = CKEDITOR.tools.isEmpty(CKEDITOR.instances), b;
            for (b in i) {
                var c = i[b];
                a ? c.destroy() : c.element.hide()
            }
            a && (i = {})
        })
    })();
    CKEDITOR.plugins.add("menu", {requires: "floatpanel", beforeInit: function (k) {
        for (var g = k.config.menu_groups.split(","), m = k._.menuGroups = {}, l = k._.menuItems = {}, a = 0; a < g.length; a++)m[g[a]] = a + 1;
        k.addMenuGroup = function (b, a) {
            m[b] = a || 100
        };
        k.addMenuItem = function (a, c) {
            m[c.group] && (l[a] = new CKEDITOR.menuItem(this, a, c))
        };
        k.addMenuItems = function (a) {
            for (var c in a)this.addMenuItem(c, a[c])
        };
        k.getMenuItem = function (a) {
            return l[a]
        };
        k.removeMenuItem = function (a) {
            delete l[a]
        }
    }});
    (function () {
        function k(a) {
            a.sort(function (a, c) {
                return a.group < c.group ? -1 : a.group > c.group ? 1 : a.order < c.order ? -1 : a.order > c.order ? 1 : 0
            })
        }

        var g = '<span class="cke_menuitem"><a id="{id}" class="cke_menubutton cke_menubutton__{name} cke_menubutton_{state} {cls}" href="{href}" title="{title}" tabindex="-1"_cke_focus=1 hidefocus="true" role="menuitem" aria-haspopup="{hasPopup}" aria-disabled="{disabled}" aria-pressed="{pressed}"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac)g += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (g += ' onblur="this.style.cssText = this.style.cssText;"');
        var g = g + (' onmouseover="CKEDITOR.tools.callFunction({hoverFn},{index});" onmouseout="CKEDITOR.tools.callFunction({moveOutFn},{index});" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup' : "onclick") + '="CKEDITOR.tools.callFunction({clickFn},{index}); return false;">'), m = CKEDITOR.addTemplate("menuItem", g + '<span class="cke_menubutton_inner"><span class="cke_menubutton_icon"><span class="cke_button_icon cke_button__{iconName}_icon" style="{iconStyle}"></span></span><span class="cke_menubutton_label">{label}</span>{arrowHtml}</span></a></span>'),
            l = CKEDITOR.addTemplate("menuArrow", '<span class="cke_menuarrow"><span>{label}</span></span>');
        CKEDITOR.menu = CKEDITOR.tools.createClass({$: function (a, b) {
            b = this._.definition = b || {};
            this.id = CKEDITOR.tools.getNextId();
            this.editor = a;
            this.items = [];
            this._.listeners = [];
            this._.level = b.level || 1;
            var c = CKEDITOR.tools.extend({}, b.panel, {css: [CKEDITOR.skin.getPath("editor")], level: this._.level - 1, block: {}}), j = c.block.attributes = c.attributes || {};
            !j.role && (j.role = "menu");
            this._.panelDefinition = c
        }, _: {onShow: function () {
            var a =
                this.editor.getSelection(), b = a && a.getStartElement(), c = this.editor.elementPath(), j = this._.listeners;
            this.removeAll();
            for (var e = 0; e < j.length; e++) {
                var i = j[e](b, a, c);
                if (i)for (var f in i) {
                    var h = this.editor.getMenuItem(f);
                    if (h && (!h.command || this.editor.getCommand(h.command).state))h.state = i[f], this.add(h)
                }
            }
        }, onClick: function (a) {
            this.hide();
            if (a.onClick)a.onClick(); else a.command && this.editor.execCommand(a.command)
        }, onEscape: function (a) {
            var b = this.parent;
            b ? b._.panel.hideChild(1) : 27 == a && this.hide(1);
            return!1
        },
            onHide: function () {
                this.onHide && this.onHide()
            }, showSubMenu: function (a) {
                var b = this._.subMenu, c = this.items[a];
                if (c = c.getItems && c.getItems()) {
                    b ? b.removeAll() : (b = this._.subMenu = new CKEDITOR.menu(this.editor, CKEDITOR.tools.extend({}, this._.definition, {level: this._.level + 1}, !0)), b.parent = this, b._.onClick = CKEDITOR.tools.bind(this._.onClick, this));
                    for (var j in c) {
                        var e = this.editor.getMenuItem(j);
                        e && (e.state = c[j], b.add(e))
                    }
                    var i = this._.panel.getBlock(this.id).element.getDocument().getById(this.id + ("" + a));
                    setTimeout(function () {
                        b.show(i,
                            2)
                    }, 0)
                } else this._.panel.hideChild(1)
            }}, proto: {add: function (a) {
            a.order || (a.order = this.items.length);
            this.items.push(a)
        }, removeAll: function () {
            this.items = []
        }, show: function (a, b, c, j) {
            if (!this.parent && (this._.onShow(), !this.items.length))return;
            var b = b || ("rtl" == this.editor.lang.dir ? 2 : 1), e = this.items, i = this.editor, f = this._.panel, h = this._.element;
            if (!f) {
                f = this._.panel = new CKEDITOR.ui.floatPanel(this.editor, CKEDITOR.document.getBody(), this._.panelDefinition, this._.level);
                f.onEscape = CKEDITOR.tools.bind(function (a) {
                    if (!1 ===
                        this._.onEscape(a))return!1
                }, this);
                f.onShow = function () {
                    f._.panel.getHolderElement().getParent().addClass("cke cke_reset_all")
                };
                f.onHide = CKEDITOR.tools.bind(function () {
                    this._.onHide && this._.onHide()
                }, this);
                h = f.addBlock(this.id, this._.panelDefinition.block);
                h.autoSize = !0;
                var d = h.keys;
                d[40] = "next";
                d[9] = "next";
                d[38] = "prev";
                d[CKEDITOR.SHIFT + 9] = "prev";
                d["rtl" == i.lang.dir ? 37 : 39] = CKEDITOR.env.ie ? "mouseup" : "click";
                d[32] = CKEDITOR.env.ie ? "mouseup" : "click";
                CKEDITOR.env.ie && (d[13] = "mouseup");
                h = this._.element =
                    h.element;
                d = h.getDocument();
                d.getBody().setStyle("overflow", "hidden");
                d.getElementsByTag("html").getItem(0).setStyle("overflow", "hidden");
                this._.itemOverFn = CKEDITOR.tools.addFunction(function (a) {
                    clearTimeout(this._.showSubTimeout);
                    this._.showSubTimeout = CKEDITOR.tools.setTimeout(this._.showSubMenu, i.config.menu_subMenuDelay || 400, this, [a])
                }, this);
                this._.itemOutFn = CKEDITOR.tools.addFunction(function () {
                    clearTimeout(this._.showSubTimeout)
                }, this);
                this._.itemClickFn = CKEDITOR.tools.addFunction(function (a) {
                    var b =
                        this.items[a];
                    if (b.state == CKEDITOR.TRISTATE_DISABLED)this.hide(1); else if (b.getItems)this._.showSubMenu(a); else this._.onClick(b)
                }, this)
            }
            k(e);
            for (var d = i.elementPath(), d = ['<div class="cke_menu' + (d && d.direction() != i.lang.dir ? " cke_mixed_dir_content" : "") + '" role="presentation">'], g = e.length, m = g && e[0].group, l = 0; l < g; l++) {
                var n = e[l];
                m != n.group && (d.push('<div class="cke_menuseparator" role="separator"></div>'), m = n.group);
                n.render(this, l, d)
            }
            d.push("</div>");
            h.setHtml(d.join(""));
            CKEDITOR.ui.fire("ready",
                this);
            this.parent ? this.parent._.panel.showAsChild(f, this.id, a, b, c, j) : f.showBlock(this.id, a, b, c, j);
            i.fire("menuShow", [f])
        }, addListener: function (a) {
            this._.listeners.push(a)
        }, hide: function (a) {
            this._.onHide && this._.onHide();
            this._.panel && this._.panel.hide(a)
        }}});
        CKEDITOR.menuItem = CKEDITOR.tools.createClass({$: function (a, b, c) {
            CKEDITOR.tools.extend(this, c, {order: 0, className: "cke_menubutton__" + b});
            this.group = a._.menuGroups[this.group];
            this.editor = a;
            this.name = b
        }, proto: {render: function (a, b, c) {
            var g = a.id + ("" +
                b), e = "undefined" == typeof this.state ? CKEDITOR.TRISTATE_OFF : this.state, i = e == CKEDITOR.TRISTATE_ON ? "on" : e == CKEDITOR.TRISTATE_DISABLED ? "disabled" : "off", f = this.getItems, h = "&#" + ("rtl" == this.editor.lang.dir ? "9668" : "9658") + ";", d = this.name;
            this.icon && !/\./.test(this.icon) && (d = this.icon);
            a = {id: g, name: this.name, iconName: d, label: this.label, cls: this.className || "", state: i, hasPopup: f ? "true" : "false", disabled: e == CKEDITOR.TRISTATE_DISABLED, pressed: e == CKEDITOR.TRISTATE_ON, title: this.label, href: "javascript:void('" + (this.label ||
                "").replace("'") + "')", hoverFn: a._.itemOverFn, moveOutFn: a._.itemOutFn, clickFn: a._.itemClickFn, index: b, iconStyle: CKEDITOR.skin.getIconStyle(d, "rtl" == this.editor.lang.dir, d == this.icon ? null : this.icon, this.iconOffset), arrowHtml: f ? l.output({label: h}) : ""};
            m.output(a, c)
        }}})
    })();
    CKEDITOR.config.menu_groups = "clipboard,form,tablecell,tablecellproperties,tablerow,tablecolumn,table,anchor,link,image,flash,checkbox,radio,textfield,hiddenfield,imagebutton,button,select,textarea,div";
    CKEDITOR.plugins.add("contextmenu", {requires: "menu", onLoad: function () {
        CKEDITOR.plugins.contextMenu = CKEDITOR.tools.createClass({base: CKEDITOR.menu, $: function (b) {
            this.base.call(this, b, {panel: {className: "cke_menu_panel", attributes: {"aria-label": b.lang.contextmenu.options}}})
        }, proto: {addTarget: function (b, d) {
            if (CKEDITOR.env.opera && !("oncontextmenu"in document.body)) {
                var c;
                b.on("mousedown", function (a) {
                    a = a.data;
                    if (2 != a.$.button)a.getKeystroke() == CKEDITOR.CTRL + 1 && b.fire("contextmenu", a); else if (!d || !(CKEDITOR.env.mac ?
                        a.$.metaKey : a.$.ctrlKey)) {
                        var g = a.getTarget();
                        c || (g = g.getDocument(), c = g.createElement("input"), c.$.type = "button", g.getBody().append(c));
                        c.setAttribute("style", "position:absolute;top:" + (a.$.clientY - 2) + "px;left:" + (a.$.clientX - 2) + "px;width:5px;height:5px;opacity:0.01")
                    }
                });
                b.on("mouseup", function (a) {
                    c && (c.remove(), c = void 0, b.fire("contextmenu", a.data))
                })
            }
            b.on("contextmenu", function (a) {
                a = a.data;
                if (!d || !(CKEDITOR.env.webkit ? e : CKEDITOR.env.mac ? a.$.metaKey : a.$.ctrlKey)) {
                    a.preventDefault();
                    var b = a.getTarget().getDocument(),
                        c = a.getTarget().getDocument().getDocumentElement(), f = !b.equals(CKEDITOR.document), b = b.getWindow().getScrollPosition(), h = f ? a.$.clientX : a.$.pageX || b.x + a.$.clientX, i = f ? a.$.clientY : a.$.pageY || b.y + a.$.clientY;
                    CKEDITOR.tools.setTimeout(function () {
                        this.open(c, null, h, i)
                    }, CKEDITOR.env.ie ? 200 : 0, this)
                }
            }, this);
            if (CKEDITOR.env.opera)b.on("keypress", function (a) {
                a = a.data;
                0 === a.$.keyCode && a.preventDefault()
            });
            if (CKEDITOR.env.webkit) {
                var e, f = function () {
                    e = 0
                };
                b.on("keydown", function (a) {
                    e = CKEDITOR.env.mac ? a.data.$.metaKey :
                        a.data.$.ctrlKey
                });
                b.on("keyup", f);
                b.on("contextmenu", f)
            }
        }, open: function (b, d, c, e) {
            this.editor.focus();
            b = b || CKEDITOR.document.getDocumentElement();
            this.editor.selectionChange(1);
            this.show(b, d, c, e)
        }}})
    }, beforeInit: function (b) {
        var d = b.contextMenu = new CKEDITOR.plugins.contextMenu(b);
        b.on("contentDom", function () {
            d.addTarget(b.editable(), !1 !== b.config.browserContextMenuOnCtrl)
        });
        b.addCommand("contextMenu", {exec: function () {
            b.contextMenu.open(b.document.getBody())
        }});
        b.setKeystroke(CKEDITOR.SHIFT + 121, "contextMenu");
        b.setKeystroke(CKEDITOR.CTRL + CKEDITOR.SHIFT + 121, "contextMenu")
    }});
    CKEDITOR.plugins.add("resize", {init: function (b) {
        var f, g, n, o, a = b.config, q = b.ui.spaceId("resizer"), h = b.element ? b.element.getDirection(1) : "ltr";
        !a.resize_dir && (a.resize_dir = "vertical");
        void 0 == a.resize_maxWidth && (a.resize_maxWidth = 3E3);
        void 0 == a.resize_maxHeight && (a.resize_maxHeight = 3E3);
        void 0 == a.resize_minWidth && (a.resize_minWidth = 750);
        void 0 == a.resize_minHeight && (a.resize_minHeight = 250);
        if (!1 !== a.resize_enabled) {
            var c = null, i = ("both" == a.resize_dir || "horizontal" == a.resize_dir) && a.resize_minWidth != a.resize_maxWidth,
                l = ("both" == a.resize_dir || "vertical" == a.resize_dir) && a.resize_minHeight != a.resize_maxHeight, j = function (d) {
                    var e = f, m = g, c = e + (d.data.$.screenX - n) * ("rtl" == h ? -1 : 1), d = m + (d.data.$.screenY - o);
                    i && (e = Math.max(a.resize_minWidth, Math.min(c, a.resize_maxWidth)));
                    l && (m = Math.max(a.resize_minHeight, Math.min(d, a.resize_maxHeight)));
                    b.resize(i ? e : null, m)
                }, k = function () {
                    CKEDITOR.document.removeListener("mousemove", j);
                    CKEDITOR.document.removeListener("mouseup", k);
                    b.document && (b.document.removeListener("mousemove", j), b.document.removeListener("mouseup",
                        k))
                }, p = CKEDITOR.tools.addFunction(function (d) {
                    c || (c = b.getResizable());
                    f = c.$.offsetWidth || 0;
                    g = c.$.offsetHeight || 0;
                    n = d.screenX;
                    o = d.screenY;
                    a.resize_minWidth > f && (a.resize_minWidth = f);
                    a.resize_minHeight > g && (a.resize_minHeight = g);
                    CKEDITOR.document.on("mousemove", j);
                    CKEDITOR.document.on("mouseup", k);
                    b.document && (b.document.on("mousemove", j), b.document.on("mouseup", k));
                    d.preventDefault && d.preventDefault()
                });
            b.on("destroy", function () {
                CKEDITOR.tools.removeFunction(p)
            });
            b.on("uiSpace", function (a) {
                if ("bottom" ==
                    a.data.space) {
                    var e = "";
                    i && !l && (e = " cke_resizer_horizontal");
                    !i && l && (e = " cke_resizer_vertical");
                    var c = '<span id="' + q + '" class="cke_resizer' + e + " cke_resizer_" + h + '" title="' + CKEDITOR.tools.htmlEncode(b.lang.common.resize) + '" onmousedown="CKEDITOR.tools.callFunction(' + p + ', event)">' + ("ltr" == h ? "◢" : "◣") + "</span>";
                    "ltr" == h && "ltr" == e ? a.data.html += c : a.data.html = c + a.data.html
                }
            }, b, null, 100);
            b.on("maximize", function (a) {
                b.ui.space("resizer")[a.data == CKEDITOR.TRISTATE_ON ? "hide" : "show"]()
            })
        }
    }});
    (function () {
        var a = '<a id="{id}" class="cke_button cke_button__{name} cke_button_{state} {cls}"' + (CKEDITOR.env.gecko && 10900 <= CKEDITOR.env.version && !CKEDITOR.env.hc ? "" : '" href="javascript:void(\'{titleJs}\')"') + ' title="{title}" tabindex="-1" hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="{hasArrow}"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac)a += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (a += ' onblur="this.style.cssText = this.style.cssText;"');
        var a =
                a + (' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event);" onfocus="return CKEDITOR.tools.callFunction({focusFn},event);"  onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup' : "onclick") + '="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span class="cke_button_icon cke_button__{iconName}_icon" style="{style}"'), a = a + '>&nbsp;</span><span id="{id}_label" class="cke_button_label cke_button__{name}_label">{label}</span>{arrowHtml}</a>',
            m = CKEDITOR.addTemplate("buttonArrow", '<span class="cke_button_arrow">' + (CKEDITOR.env.hc ? "&#9660;" : "") + "</span>"), n = CKEDITOR.addTemplate("button", a);
        CKEDITOR.plugins.add("button", {beforeInit: function (b) {
            b.ui.addHandler(CKEDITOR.UI_BUTTON, CKEDITOR.ui.button.handler)
        }});
        CKEDITOR.UI_BUTTON = "button";
        CKEDITOR.ui.button = function (b) {
            CKEDITOR.tools.extend(this, b, {title: b.label, click: b.click || function (e) {
                e.execCommand(b.command)
            }});
            this._ = {}
        };
        CKEDITOR.ui.button.handler = {create: function (b) {
            return new CKEDITOR.ui.button(b)
        }};
        CKEDITOR.ui.button.prototype = {render: function (b, e) {
            var a = CKEDITOR.env, i = this._.id = CKEDITOR.tools.getNextId(), f = "", d = this.command, l;
            this._.editor = b;
            var c = {id: i, button: this, editor: b, focus: function () {
                CKEDITOR.document.getById(i).focus()
            }, execute: function () {
                this.button.click(b)
            }, attach: function (b) {
                this.button.attach(b)
            }}, o = CKEDITOR.tools.addFunction(function (b) {
                if (c.onkey)return b = new CKEDITOR.dom.event(b), !1 !== c.onkey(c, b.getKeystroke())
            }), p = CKEDITOR.tools.addFunction(function (b) {
                var a;
                c.onfocus && (a =
                    !1 !== c.onfocus(c, new CKEDITOR.dom.event(b)));
                CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version && b.preventBubble();
                return a
            }), j = 0, q = CKEDITOR.tools.addFunction(function () {
                if (CKEDITOR.env.opera) {
                    var a = b.editable();
                    a.isInline() && a.hasFocus && (b.lockSelection(), j = 1)
                }
            });
            c.clickFn = l = CKEDITOR.tools.addFunction(function () {
                j && (b.unlockSelection(1), j = 0);
                c.execute()
            });
            if (this.modes) {
                var k = {}, g = function () {
                    var a = b.mode;
                    a && (a = this.modes[a] ? void 0 != k[a] ? k[a] : CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, this.setState(b.readOnly && !this.readOnly ? CKEDITOR.TRISTATE_DISABLED : a))
                };
                b.on("beforeModeUnload", function () {
                    b.mode && this._.state != CKEDITOR.TRISTATE_DISABLED && (k[b.mode] = this._.state)
                }, this);
                b.on("mode", g, this);
                !this.readOnly && b.on("readOnly", g, this)
            } else if (d && (d = b.getCommand(d)))d.on("state", function () {
                this.setState(d.state)
            }, this), f += d.state == CKEDITOR.TRISTATE_ON ? "on" : d.state == CKEDITOR.TRISTATE_DISABLED ? "disabled" : "off";
            if (this.directional)b.on("contentDirChanged", function (a) {
                var e = CKEDITOR.document.getById(this._.id), c =
                    e.getFirst(), a = a.data;
                a != b.lang.dir ? e.addClass("cke_" + a) : e.removeClass("cke_ltr").removeClass("cke_rtl");
                c.setAttribute("style", CKEDITOR.skin.getIconStyle(h, "rtl" == a, this.icon, this.iconOffset))
            }, this);
            d || (f += "off");
            var h = g = this.name || this.command;
            this.icon && !/\./.test(this.icon) && (h = this.icon, this.icon = null);
            a = {id: i, name: g, iconName: h, label: this.label, cls: this.className || "", state: f, title: this.title, titleJs: a.gecko && 10900 <= a.version && !a.hc ? "" : (this.title || "").replace("'", ""), hasArrow: this.hasArrow ?
                "true" : "false", keydownFn: o, mousedownFn: q, focusFn: p, clickFn: l, style: CKEDITOR.skin.getIconStyle(h, "rtl" == b.lang.dir, this.icon, this.iconOffset), arrowHtml: this.hasArrow ? m.output() : ""};
            n.output(a, e);
            if (this.onRender)this.onRender();
            return c
        }, setState: function (b) {
            if (this._.state == b)return!1;
            this._.state = b;
            var a = CKEDITOR.document.getById(this._.id);
            return a ? (a.setState(b, "cke_button"), b == CKEDITOR.TRISTATE_DISABLED ? a.setAttribute("aria-disabled", !0) : a.removeAttribute("aria-disabled"), b == CKEDITOR.TRISTATE_ON ?
                a.setAttribute("aria-pressed", !0) : a.removeAttribute("aria-pressed"), !0) : !1
        }};
        CKEDITOR.ui.prototype.addButton = function (b, a) {
            this.add(b, CKEDITOR.UI_BUTTON, a)
        }
    })();
    (function () {
        function w(a) {
            function e() {
                for (var b = h(), g = CKEDITOR.tools.clone(a.config.toolbarGroups) || o(a), f = 0; f < g.length; f++) {
                    var d = g[f];
                    if ("/" != d) {
                        "string" == typeof d && (d = g[f] = {name: d});
                        var e, n = d.groups;
                        if (n)for (var l = 0; l < n.length; l++)e = n[l], (e = b[e]) && c(d, e);
                        (e = b[d.name]) && c(d, e)
                    }
                }
                return g
            }

            function h() {
                var b = {}, c, f, d;
                for (c in a.ui.items)f = a.ui.items[c], d = f.toolbar || "others", d = d.split(","), f = d[0], d = parseInt(d[1] || -1, 10), b[f] || (b[f] = []), b[f].push({name: c, order: d});
                for (f in b)b[f] = b[f].sort(function (a, b) {
                    return a.order == b.order ? 0 : 0 > b.order ? -1 : 0 > a.order ? 1 : a.order < b.order ? -1 : 1
                });
                return b
            }

            function c(a, c) {
                if (c.length) {
                    a.items ? a.items.push("-") : a.items = [];
                    for (var d; d = c.shift();)a.items.push(d.name)
                }
            }

            var d = a.config.toolbar;
            "string" == typeof d && (d = a.config["toolbar_" + d]);
            return a.toolbar = d || e()
        }

        function o(a) {
            return a._.toolbarGroups || (a._.toolbarGroups = [
                {name: "document", groups: ["mode", "document", "doctools"]},
                {name: "clipboard", groups: ["clipboard", "undo"]},
                {name: "editing", groups: ["find", "selection", "spellchecker"]},
                {name: "forms"},
                "/",
                {name: "basicstyles", groups: ["basicstyles", "cleanup"]},
                {name: "paragraph", groups: ["list", "indent", "blocks", "align"]},
                {name: "links"},
                {name: "insert"},
                "/",
                {name: "styles"},
                {name: "colors"},
                {name: "tools"},
                {name: "others"},
                {name: "about"}
            ])
        }

        var t = function () {
            this.toolbars = [];
            this.focusCommandExecuted = !1
        };
        t.prototype.focus = function () {
            for (var a = 0, e; e = this.toolbars[a++];)for (var h = 0, c; c = e.items[h++];)if (c.focus) {
                c.focus();
                return
            }
        };
        var x = {modes: {wysiwyg: 1, source: 1}, readOnly: 1, exec: function (a) {
            a.toolbox &&
            (a.toolbox.focusCommandExecuted = !0, CKEDITOR.env.ie || CKEDITOR.env.air ? setTimeout(function () {
                a.toolbox.focus()
            }, 100) : a.toolbox.focus())
        }};
        CKEDITOR.plugins.add("toolbar", {requires: "button", init: function (a) {
            var e, h = function (c, d) {
                var b, g = "rtl" == a.lang.dir, f = a.config.toolbarGroupCycling, f = void 0 === f || f;
                switch (d) {
                    case 9:
                    case CKEDITOR.SHIFT + 9:
                        for (; !b || !b.items.length;)if (b = 9 == d ? (b ? b.next : c.toolbar.next) || a.toolbox.toolbars[0] : (b ? b.previous : c.toolbar.previous) || a.toolbox.toolbars[a.toolbox.toolbars.length -
                            1], b.items.length)for (c = b.items[e ? b.items.length - 1 : 0]; c && !c.focus;)(c = e ? c.previous : c.next) || (b = 0);
                        c && c.focus();
                        return!1;
                    case g ? 37 : 39:
                    case 40:
                        b = c;
                        do b = b.next, !b && f && (b = c.toolbar.items[0]); while (b && !b.focus);
                        b ? b.focus() : h(c, 9);
                        return!1;
                    case g ? 39 : 37:
                    case 38:
                        b = c;
                        do b = b.previous, !b && f && (b = c.toolbar.items[c.toolbar.items.length - 1]); while (b && !b.focus);
                        b ? b.focus() : (e = 1, h(c, CKEDITOR.SHIFT + 9), e = 0);
                        return!1;
                    case 27:
                        return a.focus(), !1;
                    case 13:
                    case 32:
                        return c.execute(), !1
                }
                return!0
            };
            a.on("uiSpace", function (c) {
                if (c.data.space ==
                    a.config.toolbarLocation) {
                    a.toolbox = new t;
                    var d = CKEDITOR.tools.getNextId(), b = a.config.removeButtons, b = b && b.split(","), g = ['<span id="', d, '" class="cke_voice_label">', a.lang.toolbar.toolbars, "</span>", '<span id="' + a.ui.spaceId("toolbox") + '" class="cke_toolbox" role="group" aria-labelledby="', d, '" onmousedown="return false;">'], d = !1 !== a.config.toolbarStartupExpanded, f, e;
                    a.config.toolbarCanCollapse && a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE && g.push('<span class="cke_toolbox_main"' + (d ? ">" : ' style="display:none">'));
                    for (var o = a.toolbox.toolbars, n = w(a), l = 0; l < n.length; l++) {
                        var j, i = 0, q, m = n[l], r;
                        if (m)if (f && (g.push("</span>"), e = f = 0), "/" === m)g.push('<span class="cke_toolbar_break"></span>'); else {
                            r = m.items || m;
                            for (var s = 0; s < r.length; s++) {
                                var k;
                                k = r[s];
                                var u;
                                if (!(b && 0 <= CKEDITOR.tools.indexOf(b, k)) && (k = a.ui.create(k)))if (k.type == CKEDITOR.UI_SEPARATOR)e = f && k; else {
                                    u = !1 !== k.canGroup;
                                    if (!i) {
                                        j = CKEDITOR.tools.getNextId();
                                        i = {id: j, items: []};
                                        q = m.name && (a.lang.toolbar.toolbarGroups[m.name] || m.name);
                                        g.push('<span id="', j, '" class="cke_toolbar"',
                                            q ? ' aria-labelledby="' + j + '_label"' : "", ' role="toolbar">');
                                        q && g.push('<span id="', j, '_label" class="cke_voice_label">', q, "</span>");
                                        g.push('<span class="cke_toolbar_start"></span>');
                                        var p = o.push(i) - 1;
                                        0 < p && (i.previous = o[p - 1], i.previous.next = i)
                                    }
                                    u ? f || (g.push('<span class="cke_toolgroup" role="presentation">'), f = 1) : f && (g.push("</span>"), f = 0);
                                    j = function (b) {
                                        b = b.render(a, g);
                                        p = i.items.push(b) - 1;
                                        if (p > 0) {
                                            b.previous = i.items[p - 1];
                                            b.previous.next = b
                                        }
                                        b.toolbar = i;
                                        b.onkey = h;
                                        b.onfocus = function () {
                                            a.toolbox.focusCommandExecuted ||
                                            a.focus()
                                        }
                                    };
                                    e && (j(e), e = 0);
                                    j(k)
                                }
                            }
                            f && (g.push("</span>"), e = f = 0);
                            i && g.push('<span class="cke_toolbar_end"></span></span>')
                        }
                    }
                    a.config.toolbarCanCollapse && g.push("</span>");
                    if (a.config.toolbarCanCollapse && a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                        var v = CKEDITOR.tools.addFunction(function () {
                            a.execCommand("toolbarCollapse")
                        });
                        a.on("destroy", function () {
                            CKEDITOR.tools.removeFunction(v)
                        });
                        a.addCommand("toolbarCollapse", {readOnly: 1, exec: function (a) {
                            var b = a.ui.space("toolbar_collapser"), c = b.getPrevious(), d =
                                a.ui.space("contents"), e = c.getParent(), f = parseInt(d.$.style.height, 10), g = e.$.offsetHeight, h = b.hasClass("cke_toolbox_collapser_min");
                            h ? (c.show(), b.removeClass("cke_toolbox_collapser_min"), b.setAttribute("title", a.lang.toolbar.toolbarCollapse)) : (c.hide(), b.addClass("cke_toolbox_collapser_min"), b.setAttribute("title", a.lang.toolbar.toolbarExpand));
                            b.getFirst().setText(h ? "▲" : "◀");
                            d.setStyle("height", f - (e.$.offsetHeight - g) + "px");
                            a.fire("resize")
                        }, modes: {wysiwyg: 1, source: 1}});
                        a.setKeystroke(CKEDITOR.ALT +
                            (CKEDITOR.env.ie || CKEDITOR.env.webkit ? 189 : 109), "toolbarCollapse");
                        g.push('<a title="' + (d ? a.lang.toolbar.toolbarCollapse : a.lang.toolbar.toolbarExpand) + '" id="' + a.ui.spaceId("toolbar_collapser") + '" tabIndex="-1" class="cke_toolbox_collapser');
                        d || g.push(" cke_toolbox_collapser_min");
                        g.push('" onclick="CKEDITOR.tools.callFunction(' + v + ')">', '<span class="cke_arrow">&#9650;</span>', "</a>")
                    }
                    g.push("</span>");
                    c.data.html += g.join("")
                }
            });
            a.on("destroy", function () {
                if (this.toolbox) {
                    var a, d = 0, b, e, f;
                    for (a = this.toolbox.toolbars; d <
                        a.length; d++) {
                        e = a[d].items;
                        for (b = 0; b < e.length; b++)f = e[b], f.clickFn && CKEDITOR.tools.removeFunction(f.clickFn), f.keyDownFn && CKEDITOR.tools.removeFunction(f.keyDownFn)
                    }
                }
            });
            a.on("uiReady", function () {
                var c = a.ui.space("toolbox");
                c && a.focusManager.add(c, 1)
            });
            a.addCommand("toolbarFocus", x);
            a.setKeystroke(CKEDITOR.ALT + 121, "toolbarFocus");
            a.ui.add("-", CKEDITOR.UI_SEPARATOR, {});
            a.ui.addHandler(CKEDITOR.UI_SEPARATOR, {create: function () {
                return{render: function (a, d) {
                    d.push('<span class="cke_toolbar_separator" role="separator"></span>');
                    return{}
                }}
            }})
        }});
        CKEDITOR.ui.prototype.addToolbarGroup = function (a, e, h) {
            var c = o(this.editor), d = 0 === e, b = {name: a};
            if (h) {
                if (h = CKEDITOR.tools.search(c, function (a) {
                    return a.name == h
                })) {
                    !h.groups && (h.groups = []);
                    if (e && (e = CKEDITOR.tools.indexOf(h.groups, e), 0 <= e)) {
                        h.groups.splice(e + 1, 0, a);
                        return
                    }
                    d ? h.groups.splice(0, 0, a) : h.groups.push(a);
                    return
                }
                e = null
            }
            e && (e = CKEDITOR.tools.indexOf(c, function (a) {
                return a.name == e
            }));
            d ? c.splice(0, 0, a) : "number" == typeof e ? c.splice(e + 1, 0, b) : c.push(a)
        }
    })();
    CKEDITOR.UI_SEPARATOR = "separator";
    CKEDITOR.config.toolbarLocation = "top";
    (function () {
        var o = {editorFocus: !1, readOnly: 1, exec: function (a) {
            (a = CKEDITOR.document.getById(a._.elementsPath.idBase + "0")) && a.focus(CKEDITOR.env.ie || CKEDITOR.env.air)
        }}, m = '<span class="cke_path_empty">&nbsp;</span>', d = "";
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac)d += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (d += ' onblur="this.style.cssText = this.style.cssText;"');
        var p = CKEDITOR.addTemplate("pathItem", '<a id="{id}" href="{jsTitle}" tabindex="-1" class="cke_path_item" title="{label}"' +
            (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version ? ' onfocus="event.preventBubble();"' : "") + d + ' hidefocus="true"  onkeydown="return CKEDITOR.tools.callFunction({keyDownFn},{index}, event );" onclick="CKEDITOR.tools.callFunction({clickFn},{index}); return false;" role="button" aria-label="{label}">{text}</a>');
        CKEDITOR.plugins.add("elementspath", {init: function (a) {
            function d(b) {
                a.focus();
                b = a._.elementsPath.list[b];
                if (b.equals(a.editable())) {
                    var e = a.createRange();
                    e.selectNodeContents(b);
                    e.select()
                } else a.getSelection().selectElement(b)
            }

            function h() {
                i && i.setHtml(m);
                delete a._.elementsPath.list
            }

            if (a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                var l = a.ui.spaceId("path"), i, n = "cke_elementspath_" + CKEDITOR.tools.getNextNumber() + "_";
                a._.elementsPath = {idBase: n, filters: []};
                a.on("uiSpace", function (b) {
                    "bottom" == b.data.space && (b.data.html += '<span id="' + l + '_label" class="cke_voice_label">' + a.lang.elementspath.eleLabel + '</span><span id="' + l + '" class="cke_path" role="group" aria-labelledby="' + l + '_label">' + m + "</span>")
                });
                a.on("uiReady", function () {
                    var b =
                        a.ui.space("path");
                    b && a.focusManager.add(b, 1)
                });
                var q = CKEDITOR.tools.addFunction(d), r = CKEDITOR.tools.addFunction(function (b, e) {
                    var c = a._.elementsPath.idBase, f, e = new CKEDITOR.dom.event(e);
                    f = "rtl" == a.lang.dir;
                    switch (e.getKeystroke()) {
                        case f ? 39 : 37:
                        case 9:
                            return(f = CKEDITOR.document.getById(c + (b + 1))) || (f = CKEDITOR.document.getById(c + "0")), f.focus(), !1;
                        case f ? 37 : 39:
                        case CKEDITOR.SHIFT + 9:
                            return(f = CKEDITOR.document.getById(c + (b - 1))) || (f = CKEDITOR.document.getById(c + (a._.elementsPath.list.length - 1))), f.focus(),
                                !1;
                        case 27:
                            return a.focus(), !1;
                        case 13:
                        case 32:
                            return d(b), !1
                    }
                    return!0
                });
                a.on("selectionChange", function (b) {
                    for (var e = a.editable(), c = b.data.selection.getStartElement(), b = [], f = a._.elementsPath.list = [], d = a._.elementsPath.filters; c;) {
                        var j = 0, g;
                        g = c.data("cke-display-name") ? c.data("cke-display-name") : c.data("cke-real-element-type") ? c.data("cke-real-element-type") : c.getName();
                        for (var k = 0; k < d.length; k++) {
                            var h = d[k](c, g);
                            if (!1 === h) {
                                j = 1;
                                break
                            }
                            g = h || g
                        }
                        j || (j = f.push(c) - 1, k = a.lang.elementspath.eleTitle.replace(/%1/,
                            g), g = p.output({id: n + j, label: k, text: g, jsTitle: "javascript:void('" + g + "')", index: j, keyDownFn: r, clickFn: q}), b.unshift(g));
                        if (c.equals(e))break;
                        c = c.getParent()
                    }
                    i || (i = CKEDITOR.document.getById(l));
                    e = i;
                    e.setHtml(b.join("") + m);
                    a.fire("elementsPathUpdate", {space: e})
                });
                a.on("readOnly", h);
                a.on("contentDomUnload", h);
                a.addCommand("elementsPathFocus", o);
                a.setKeystroke(CKEDITOR.ALT + 122, "elementsPathFocus")
            }
        }})
    })();
    (function () {
        function C(c, j, f) {
            function b(b) {
                if ((d = a[b ? "getFirst" : "getLast"]()) && (!d.is || !d.isBlockBoundary()) && (m = j.root[b ? "getPrevious" : "getNext"](CKEDITOR.dom.walker.invisible(!0))) && (!m.is || !m.isBlockBoundary({br: 1})))c.document.createElement("br")[b ? "insertBefore" : "insertAfter"](d)
            }

            for (var i = CKEDITOR.plugins.list.listToArray(j.root, f), e = [], h = 0; h < j.contents.length; h++) {
                var g = j.contents[h];
                if ((g = g.getAscendant("li", !0)) && !g.getCustomData("list_item_processed"))e.push(g), CKEDITOR.dom.element.setMarker(f,
                    g, "list_item_processed", !0)
            }
            g = null;
            for (h = 0; h < e.length; h++)g = e[h].getCustomData("listarray_index"), i[g].indent = -1;
            for (h = g + 1; h < i.length; h++)if (i[h].indent > i[h - 1].indent + 1) {
                e = i[h - 1].indent + 1 - i[h].indent;
                for (g = i[h].indent; i[h] && i[h].indent >= g;)i[h].indent += e, h++;
                h--
            }
            var a = CKEDITOR.plugins.list.arrayToList(i, f, null, c.config.enterMode, j.root.getAttribute("dir")).listNode, d, m;
            b(!0);
            b();
            a.replace(j.root)
        }

        function x(c, j) {
            this.name = c;
            this.context = this.type = j
        }

        function y(c, j, f, b) {
            for (var i, e; i = c[b ? "getLast" :
                "getFirst"](D);)(e = i.getDirection(1)) !== j.getDirection(1) && i.setAttribute("dir", e), i.remove(), f ? i[b ? "insertBefore" : "insertAfter"](f) : j.append(i, b)
        }

        function A(c) {
            var j;
            (j = function (f) {
                var b = c[f ? "getPrevious" : "getNext"](q);
                b && (b.type == CKEDITOR.NODE_ELEMENT && b.is(c.getName())) && (y(c, b, null, !f), c.remove(), c = b)
            })();
            j(1)
        }

        function B(c) {
            return c.type == CKEDITOR.NODE_ELEMENT && (c.getName()in CKEDITOR.dtd.$block || c.getName()in CKEDITOR.dtd.$listItem) && CKEDITOR.dtd[c.getName()]["#"]
        }

        function v(c, j, f) {
            c.fire("saveSnapshot");
            f.enlarge(CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS);
            var b = f.extractContents();
            j.trim(!1, !0);
            var i = j.createBookmark(), e = new CKEDITOR.dom.elementPath(j.startContainer), h = e.block, e = e.lastElement.getAscendant("li", 1) || h, g = new CKEDITOR.dom.elementPath(f.startContainer), a = g.contains(CKEDITOR.dtd.$listItem), g = g.contains(CKEDITOR.dtd.$list);
            h ? (h = h.getBogus()) && h.remove() : g && (h = g.getPrevious(q)) && u(h) && h.remove();
            (h = b.getLast()) && (h.type == CKEDITOR.NODE_ELEMENT && h.is("br")) && h.remove();
            (h = j.startContainer.getChild(j.startOffset)) ?
                b.insertBefore(h) : j.startContainer.append(b);
            if (a && (b = w(a)))e.contains(a) ? (y(b, a.getParent(), a), b.remove()) : e.append(b);
            for (; f.checkStartOfBlock() && f.checkEndOfBlock();)g = f.startPath(), b = g.block, b.is("li") && (e = b.getParent(), b.equals(e.getLast(q)) && b.equals(e.getFirst(q)) && (b = e)), f.moveToPosition(b, CKEDITOR.POSITION_BEFORE_START), b.remove();
            f = f.clone();
            b = c.editable();
            f.setEndAt(b, CKEDITOR.POSITION_BEFORE_END);
            f = new CKEDITOR.dom.walker(f);
            f.evaluator = function (a) {
                return q(a) && !u(a)
            };
            (f = f.next()) && (f.type ==
                CKEDITOR.NODE_ELEMENT && f.getName()in CKEDITOR.dtd.$list) && A(f);
            j.moveToBookmark(i);
            j.select();
            c.fire("saveSnapshot")
        }

        function w(c) {
            return(c = c.getLast(q)) && c.type == CKEDITOR.NODE_ELEMENT && c.getName()in r ? c : null
        }

        var r = {ol: 1, ul: 1}, E = CKEDITOR.dom.walker.whitespaces(), F = CKEDITOR.dom.walker.bookmark(), q = function (c) {
            return!(E(c) || F(c))
        }, u = CKEDITOR.dom.walker.bogus();
        CKEDITOR.plugins.list = {listToArray: function (c, j, f, b, i) {
            if (!r[c.getName()])return[];
            b || (b = 0);
            f || (f = []);
            for (var e = 0, h = c.getChildCount(); e < h; e++) {
                var g =
                    c.getChild(e);
                g.type == CKEDITOR.NODE_ELEMENT && g.getName()in CKEDITOR.dtd.$list && CKEDITOR.plugins.list.listToArray(g, j, f, b + 1);
                if ("li" == g.$.nodeName.toLowerCase()) {
                    var a = {parent: c, indent: b, element: g, contents: []};
                    i ? a.grandparent = i : (a.grandparent = c.getParent(), a.grandparent && "li" == a.grandparent.$.nodeName.toLowerCase() && (a.grandparent = a.grandparent.getParent()));
                    j && CKEDITOR.dom.element.setMarker(j, g, "listarray_index", f.length);
                    f.push(a);
                    for (var d = 0, m = g.getChildCount(), k; d < m; d++)k = g.getChild(d), k.type ==
                        CKEDITOR.NODE_ELEMENT && r[k.getName()] ? CKEDITOR.plugins.list.listToArray(k, j, f, b + 1, a.grandparent) : a.contents.push(k)
                }
            }
            return f
        }, arrayToList: function (c, j, f, b, i) {
            f || (f = 0);
            if (!c || c.length < f + 1)return null;
            for (var e, h = c[f].parent.getDocument(), g = new CKEDITOR.dom.documentFragment(h), a = null, d = f, m = Math.max(c[f].indent, 0), k = null, n, l, p = b == CKEDITOR.ENTER_P ? "p" : "div"; ;) {
                var o = c[d];
                e = o.grandparent;
                n = o.element.getDirection(1);
                if (o.indent == m) {
                    if (!a || c[d].parent.getName() != a.getName())a = c[d].parent.clone(!1, 1), i &&
                        a.setAttribute("dir", i), g.append(a);
                    k = a.append(o.element.clone(0, 1));
                    n != a.getDirection(1) && k.setAttribute("dir", n);
                    for (e = 0; e < o.contents.length; e++)k.append(o.contents[e].clone(1, 1));
                    d++
                } else if (o.indent == Math.max(m, 0) + 1)l = c[d - 1].element.getDirection(1), d = CKEDITOR.plugins.list.arrayToList(c, null, d, b, l != n ? n : null), !k.getChildCount() && (CKEDITOR.env.ie && !(7 < h.$.documentMode)) && k.append(h.createText(" ")), k.append(d.listNode), d = d.nextIndex; else if (-1 == o.indent && !f && e) {
                    r[e.getName()] ? (k = o.element.clone(!1,
                        !0), n != e.getDirection(1) && k.setAttribute("dir", n)) : k = new CKEDITOR.dom.documentFragment(h);
                    var a = e.getDirection(1) != n, s = o.element, z = s.getAttribute("class"), u = s.getAttribute("style"), w = k.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT && (b != CKEDITOR.ENTER_BR || a || u || z), t, x = o.contents.length;
                    for (e = 0; e < x; e++) {
                        t = o.contents[e];
                        if (t.type == CKEDITOR.NODE_ELEMENT && t.isBlockBoundary()) {
                            a && !t.getDirection() && t.setAttribute("dir", n);
                            var v = t, y = s.getAttribute("style");
                            y && v.setAttribute("style", y.replace(/([^;])$/, "$1;") + (v.getAttribute("style") ||
                                ""));
                            z && t.addClass(z)
                        } else w && (l || (l = h.createElement(p), a && l.setAttribute("dir", n)), u && l.setAttribute("style", u), z && l.setAttribute("class", z), l.append(t.clone(1, 1)));
                        k.append(l || t.clone(1, 1))
                    }
                    k.type == CKEDITOR.NODE_DOCUMENT_FRAGMENT && d != c.length - 1 && ((n = k.getLast()) && (n.type == CKEDITOR.NODE_ELEMENT && "_moz" == n.getAttribute("type")) && n.remove(), (!k.getLast(q) || !(n.type == CKEDITOR.NODE_ELEMENT && n.getName()in CKEDITOR.dtd.$block)) && k.append(h.createElement("br")));
                    n = k.$.nodeName.toLowerCase();
                    !CKEDITOR.env.ie &&
                        ("div" == n || "p" == n) && k.appendBogus();
                    g.append(k);
                    a = null;
                    d++
                } else return null;
                l = null;
                if (c.length <= d || Math.max(c[d].indent, 0) < m)break
            }
            if (j)for (c = g.getFirst(); c;) {
                if (c.type == CKEDITOR.NODE_ELEMENT && (CKEDITOR.dom.element.clearMarkers(j, c), c.getName()in CKEDITOR.dtd.$listItem && (f = c, h = i = b = void 0, b = f.getDirection()))) {
                    for (i = f.getParent(); i && !(h = i.getDirection());)i = i.getParent();
                    b == h && f.removeAttribute("dir")
                }
                c = c.getNextSourceNode()
            }
            return{listNode: g, nextIndex: d}
        }};
        var G = /^h[1-6]$/, D = CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_ELEMENT);
        x.prototype = {exec: function (c) {
            this.refresh(c, c.elementPath());
            var j = c.config, f = c.getSelection(), b = f && f.getRanges(!0);
            if (this.state == CKEDITOR.TRISTATE_OFF) {
                var i = c.editable();
                if (i.getFirst(q)) {
                    var e = 1 == b.length && b[0];
                    (j = e && e.getEnclosedNode()) && (j.is && this.type == j.getName()) && this.setState(CKEDITOR.TRISTATE_ON)
                } else j.enterMode == CKEDITOR.ENTER_BR ? i.appendBogus() : b[0].fixBlock(1, j.enterMode == CKEDITOR.ENTER_P ? "p" : "div"), f.selectRanges(b)
            }
            for (var j = f.createBookmarks(!0), i = [], h = {}, b = b.createIterator(),
                     g = 0; (e = b.getNextRange()) && ++g;) {
                var a = e.getBoundaryNodes(), d = a.startNode, m = a.endNode;
                d.type == CKEDITOR.NODE_ELEMENT && "td" == d.getName() && e.setStartAt(a.startNode, CKEDITOR.POSITION_AFTER_START);
                m.type == CKEDITOR.NODE_ELEMENT && "td" == m.getName() && e.setEndAt(a.endNode, CKEDITOR.POSITION_BEFORE_END);
                e = e.createIterator();
                for (e.forceBrBreak = this.state == CKEDITOR.TRISTATE_OFF; a = e.getNextParagraph();)if (!a.getCustomData("list_block")) {
                    CKEDITOR.dom.element.setMarker(h, a, "list_block", 1);
                    for (var k = c.elementPath(a),
                             d = k.elements, m = 0, k = k.blockLimit, n, l = d.length - 1; 0 <= l && (n = d[l]); l--)if (r[n.getName()] && k.contains(n)) {
                        k.removeCustomData("list_group_object_" + g);
                        (d = n.getCustomData("list_group_object")) ? d.contents.push(a) : (d = {root: n, contents: [a]}, i.push(d), CKEDITOR.dom.element.setMarker(h, n, "list_group_object", d));
                        m = 1;
                        break
                    }
                    m || (m = k, m.getCustomData("list_group_object_" + g) ? m.getCustomData("list_group_object_" + g).contents.push(a) : (d = {root: m, contents: [a]}, CKEDITOR.dom.element.setMarker(h, m, "list_group_object_" + g, d), i.push(d)))
                }
            }
            for (n =
                     []; 0 < i.length;)if (d = i.shift(), this.state == CKEDITOR.TRISTATE_OFF)if (r[d.root.getName()]) {
                a = c;
                b = d;
                d = h;
                g = n;
                m = CKEDITOR.plugins.list.listToArray(b.root, d);
                k = [];
                for (e = 0; e < b.contents.length; e++)if (l = b.contents[e], (l = l.getAscendant("li", !0)) && !l.getCustomData("list_item_processed"))k.push(l), CKEDITOR.dom.element.setMarker(d, l, "list_item_processed", !0);
                for (var l = b.root.getDocument(), p = void 0, o = void 0, e = 0; e < k.length; e++) {
                    var s = k[e].getCustomData("listarray_index"), p = m[s].parent;
                    p.is(this.type) || (o = l.createElement(this.type),
                        p.copyAttributes(o, {start: 1, type: 1}), o.removeStyle("list-style-type"), m[s].parent = o)
                }
                a = CKEDITOR.plugins.list.arrayToList(m, d, null, a.config.enterMode);
                d = void 0;
                m = a.listNode.getChildCount();
                for (e = 0; e < m && (d = a.listNode.getChild(e)); e++)d.getName() == this.type && g.push(d);
                a.listNode.replace(b.root)
            } else {
                m = c;
                a = d;
                e = n;
                k = a.contents;
                b = a.root.getDocument();
                g = [];
                1 == k.length && k[0].equals(a.root) && (d = b.createElement("div"), k[0].moveChildren && k[0].moveChildren(d), k[0].append(d), k[0] = d);
                a = a.contents[0].getParent();
                for (l = 0; l < k.length; l++)a = a.getCommonAncestor(k[l].getParent());
                p = m.config.useComputedState;
                m = d = void 0;
                p = void 0 === p || p;
                for (l = 0; l < k.length; l++)for (o = k[l]; s = o.getParent();) {
                    if (s.equals(a)) {
                        g.push(o);
                        !m && o.getDirection() && (m = 1);
                        o = o.getDirection(p);
                        null !== d && (d = d && d != o ? null : o);
                        break
                    }
                    o = s
                }
                if (!(1 > g.length)) {
                    k = g[g.length - 1].getNext();
                    l = b.createElement(this.type);
                    e.push(l);
                    for (p = e = void 0; g.length;)e = g.shift(), p = b.createElement("li"), e.is("pre") || G.test(e.getName()) ? e.appendTo(p) : (e.copyAttributes(p), d && e.getDirection() &&
                        (p.removeStyle("direction"), p.removeAttribute("dir")), e.moveChildren(p), e.remove()), p.appendTo(l);
                    d && m && l.setAttribute("dir", d);
                    k ? l.insertBefore(k) : l.appendTo(a)
                }
            } else this.state == CKEDITOR.TRISTATE_ON && r[d.root.getName()] && C.call(this, c, d, h);
            for (l = 0; l < n.length; l++)A(n[l]);
            CKEDITOR.dom.element.clearAllMarkers(h);
            f.selectBookmarks(j);
            c.focus()
        }, refresh: function (c, j) {
            var f = j.contains(r, 1), b = j.blockLimit || j.root;
            f && b.contains(f) ? this.setState(f.is(this.type) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF) :
                this.setState(CKEDITOR.TRISTATE_OFF)
        }};
        CKEDITOR.plugins.add("list", {init: function (c) {
            c.blockless || (c.addCommand("numberedlist", new x("numberedlist", "ol")), c.addCommand("bulletedlist", new x("bulletedlist", "ul")), c.ui.addButton && (c.ui.addButton("NumberedList", {label: c.lang.list.numberedlist, command: "numberedlist", directional: !0, toolbar: "list,10"}), c.ui.addButton("BulletedList", {label: c.lang.list.bulletedlist, command: "bulletedlist", directional: !0, toolbar: "list,20"})), c.on("key", function (j) {
                var f = j.data.keyCode;
                if (c.mode == "wysiwyg" && f in{8: 1, 46: 1}) {
                    var b = c.getSelection().getRanges()[0], i = b.startPath();
                    if (b.collapsed) {
                        var i = new CKEDITOR.dom.elementPath(b.startContainer), e = f == 8, h = c.editable(), g = new CKEDITOR.dom.walker(b.clone());
                        g.evaluator = function (a) {
                            return q(a) && !u(a)
                        };
                        g.guard = function (a, b) {
                            return!(b && a.type == CKEDITOR.NODE_ELEMENT && a.is("table"))
                        };
                        f = b.clone();
                        if (e) {
                            var a, d;
                            if ((a = i.contains(r)) && b.checkBoundaryOfElement(a, CKEDITOR.START) && (a = a.getParent()) && a.is("li") && (a = w(a))) {
                                d = a;
                                a = a.getPrevious(q);
                                f.moveToPosition(a &&
                                    u(a) ? a : d, CKEDITOR.POSITION_BEFORE_START)
                            } else {
                                g.range.setStartAt(h, CKEDITOR.POSITION_AFTER_START);
                                g.range.setEnd(b.startContainer, b.startOffset);
                                if ((a = g.previous()) && a.type == CKEDITOR.NODE_ELEMENT && (a.getName()in r || a.is("li"))) {
                                    if (!a.is("li")) {
                                        g.range.selectNodeContents(a);
                                        g.reset();
                                        g.evaluator = B;
                                        a = g.previous()
                                    }
                                    d = a;
                                    f.moveToElementEditEnd(d)
                                }
                            }
                            if (d) {
                                v(c, f, b);
                                j.cancel()
                            } else if ((f = i.contains(r)) && b.checkBoundaryOfElement(f, CKEDITOR.START)) {
                                d = f.getFirst(q);
                                if (b.checkBoundaryOfElement(d, CKEDITOR.START)) {
                                    a =
                                        f.getPrevious(q);
                                    if (w(d)) {
                                        if (a) {
                                            b.moveToElementEditEnd(a);
                                            b.select()
                                        }
                                    } else c.execCommand("outdent");
                                    j.cancel()
                                }
                            }
                        } else if (d = i.contains("li")) {
                            g.range.setEndAt(h, CKEDITOR.POSITION_BEFORE_END);
                            h = (i = d.getLast(q)) && B(i) ? i : d;
                            d = 0;
                            if ((a = g.next()) && a.type == CKEDITOR.NODE_ELEMENT && a.getName()in r && a.equals(i)) {
                                d = 1;
                                a = g.next()
                            } else b.checkBoundaryOfElement(h, CKEDITOR.END) && (d = 1);
                            if (d && a) {
                                b = b.clone();
                                b.moveToElementEditStart(a);
                                v(c, f, b);
                                j.cancel()
                            }
                        } else {
                            g.range.setEndAt(h, CKEDITOR.POSITION_BEFORE_END);
                            if ((a = g.next()) &&
                                a.type == CKEDITOR.NODE_ELEMENT && a.is(r)) {
                                a = a.getFirst(q);
                                if (i.block && b.checkStartOfBlock() && b.checkEndOfBlock()) {
                                    i.block.remove();
                                    b.moveToElementEditStart(a);
                                    b.select()
                                } else if (w(a)) {
                                    b.moveToElementEditStart(a);
                                    b.select()
                                } else {
                                    b = b.clone();
                                    b.moveToElementEditStart(a);
                                    v(c, f, b)
                                }
                                j.cancel()
                            }
                        }
                        setTimeout(function () {
                            c.selectionChange(1)
                        })
                    }
                }
            }))
        }})
    })();
    (function () {
        function p(d, i) {
            this.name = i;
            if (this.useIndentClasses = d.config.indentClasses && 0 < d.config.indentClasses.length) {
                this.classNameRegex = RegExp("(?:^|\\s+)(" + d.config.indentClasses.join("|") + ")(?=$|\\s)");
                this.indentClassMap = {};
                for (var a = 0; a < d.config.indentClasses.length; a++)this.indentClassMap[d.config.indentClasses[a]] = a + 1
            }
            this.startDisabled = "outdent" == i
        }

        function r(d, i) {
            return"ltr" == (i || d.getComputedStyle("direction")) ? "margin-left" : "margin-right"
        }

        function q(d) {
            return d.type == CKEDITOR.NODE_ELEMENT &&
                d.is("li")
        }

        var m = {ol: 1, ul: 1}, t = CKEDITOR.dom.walker.whitespaces(!0), u = CKEDITOR.dom.walker.bookmark(!1, !0);
        p.prototype = {context: "p", refresh: function (d, i) {
            var a = i && i.contains(m), f = i.block || i.blockLimit;
            a ? this.setState(CKEDITOR.TRISTATE_OFF) : !this.useIndentClasses && "indent" == this.name ? this.setState(CKEDITOR.TRISTATE_OFF) : f ? this.useIndentClasses ? (a = f.$.className.match(this.classNameRegex), f = 0, a && (a = a[1], f = this.indentClassMap[a]), "outdent" == this.name && !f || "indent" == this.name && f == d.config.indentClasses.length ?
                this.setState(CKEDITOR.TRISTATE_DISABLED) : this.setState(CKEDITOR.TRISTATE_OFF)) : (a = parseInt(f.getStyle(r(f)), 10), isNaN(a) && (a = 0), 0 >= a ? this.setState(CKEDITOR.TRISTATE_DISABLED) : this.setState(CKEDITOR.TRISTATE_OFF)) : this.setState(CKEDITOR.TRISTATE_DISABLED)
        }, exec: function (d) {
            function i(n) {
                for (var h = l.startContainer, b = l.endContainer; h && !h.getParent().equals(n);)h = h.getParent();
                for (; b && !b.getParent().equals(n);)b = b.getParent();
                if (h && b) {
                    for (var c = h, h = [], a = !1; !a;)c.equals(b) && (a = !0), h.push(c), c = c.getNext();
                    if (!(1 > h.length)) {
                        c = n.getParents(!0);
                        for (b = 0; b < c.length; b++)if (c[b].getName && m[c[b].getName()]) {
                            n = c[b];
                            break
                        }
                        for (var c = "indent" == e.name ? 1 : -1, b = h[0], h = h[h.length - 1], a = CKEDITOR.plugins.list.listToArray(n, o), k = a[h.getCustomData("listarray_index")].indent, b = b.getCustomData("listarray_index"); b <= h.getCustomData("listarray_index"); b++)if (a[b].indent += c, 0 < c) {
                            var i = a[b].parent;
                            a[b].parent = new CKEDITOR.dom.element(i.getName(), i.getDocument())
                        }
                        for (b = h.getCustomData("listarray_index") + 1; b < a.length && a[b].indent >
                            k; b++)a[b].indent += c;
                        h = CKEDITOR.plugins.list.arrayToList(a, o, null, d.config.enterMode, n.getDirection());
                        if ("outdent" == e.name) {
                            var j;
                            if ((j = n.getParent()) && j.is("li"))for (var c = h.listNode.getChildren(), f = [], g, b = c.count() - 1; 0 <= b; b--)(g = c.getItem(b)) && (g.is && g.is("li")) && f.push(g)
                        }
                        h && h.listNode.replace(n);
                        if (f && f.length)for (b = 0; b < f.length; b++) {
                            for (g = n = f[b]; (g = g.getNext()) && g.is && g.getName()in m;)CKEDITOR.env.ie && !n.getFirst(function (b) {
                                return t(b) && u(b)
                            }) && n.append(l.document.createText(" ")), n.append(g);
                            n.insertAfter(j)
                        }
                    }
                }
            }

            function a() {
                var a = l.createIterator(), e = d.config.enterMode;
                a.enforceRealBlocks = !0;
                a.enlargeBr = e != CKEDITOR.ENTER_BR;
                for (var b; b = a.getNextParagraph(e == CKEDITOR.ENTER_P ? "p" : "div");)f(b)
            }

            function f(a, g) {
                if (a.getCustomData("indent_processed"))return!1;
                if (e.useIndentClasses) {
                    var b = a.$.className.match(e.classNameRegex), c = 0;
                    b && (b = b[1], c = e.indentClassMap[b]);
                    "outdent" == e.name ? c-- : c++;
                    if (0 > c)return!1;
                    c = Math.min(c, d.config.indentClasses.length);
                    c = Math.max(c, 0);
                    a.$.className = CKEDITOR.tools.ltrim(a.$.className.replace(e.classNameRegex,
                        ""));
                    0 < c && a.addClass(d.config.indentClasses[c - 1])
                } else {
                    b = r(a, g);
                    c = parseInt(a.getStyle(b), 10);
                    isNaN(c) && (c = 0);
                    var f = d.config.indentOffset || 40, c = c + ("indent" == e.name ? 1 : -1) * f;
                    if (0 > c)return!1;
                    c = Math.max(c, 0);
                    c = Math.ceil(c / f) * f;
                    a.setStyle(b, c ? c + (d.config.indentUnit || "px") : "");
                    "" === a.getAttribute("style") && a.removeAttribute("style")
                }
                CKEDITOR.dom.element.setMarker(o, a, "indent_processed", 1);
                return!0
            }

            for (var e = this, o = {}, g = d.getSelection(), v = g.createBookmarks(1), l, p = (g && g.getRanges(1)).createIterator(); l = p.getNextRange();) {
                for (var j =
                    l.getCommonAncestor(); j && !(j.type == CKEDITOR.NODE_ELEMENT && m[j.getName()]);)j = j.getParent();
                if (!j) {
                    var k = l.getEnclosedNode();
                    k && (k.type == CKEDITOR.NODE_ELEMENT && k.getName()in m) && (l.setStartAt(k, CKEDITOR.POSITION_AFTER_START), l.setEndAt(k, CKEDITOR.POSITION_BEFORE_END), j = k)
                }
                j && (l.startContainer.type == CKEDITOR.NODE_ELEMENT && l.startContainer.getName()in m) && (k = new CKEDITOR.dom.walker(l), k.evaluator = q, l.startContainer = k.next());
                j && (l.endContainer.type == CKEDITOR.NODE_ELEMENT && l.endContainer.getName()in m) &&
                (k = new CKEDITOR.dom.walker(l), k.evaluator = q, l.endContainer = k.previous());
                if (j) {
                    var k = j.getFirst(q), w = !!k.getNext(q), s = l.startContainer;
                    (!k.equals(s) && !k.contains(s) || !("indent" == e.name || e.useIndentClasses || parseInt(j.getStyle(r(j)), 10)) || !f(j, !w && k.getDirection())) && i(j)
                } else a()
            }
            CKEDITOR.dom.element.clearAllMarkers(o);
            d.forceNextSelectionCheck();
            g.selectBookmarks(v)
        }};
        CKEDITOR.plugins.add("indent", {requires: "list", onLoad: function () {
            (CKEDITOR.env.ie6Compat || CKEDITOR.env.ie7Compat) && CKEDITOR.addCss(".cke_editable ul,.cke_editable ol{\tmargin-left: 0px;\tpadding-left: 40px;}")
        },
            init: function (d) {
                d.blockless || (d.addCommand("indent", new p(d, "indent")), d.addCommand("outdent", new p(d, "outdent")), d.ui.addButton && (d.ui.addButton("Indent", {label: d.lang.indent.indent, command: "indent", directional: !0, toolbar: "indent,20"}), d.ui.addButton("Outdent", {label: d.lang.indent.outdent, command: "outdent", directional: !0, toolbar: "indent,10"})), d.on("dirChanged", function (i) {
                    var a = d.createRange();
                    a.setStartBefore(i.data.node);
                    a.setEndAfter(i.data.node);
                    for (var f = new CKEDITOR.dom.walker(a), e; e = f.next();)if (e.type ==
                        CKEDITOR.NODE_ELEMENT)if (!e.equals(i.data.node) && e.getDirection()) {
                        a.setStartAfter(e);
                        f = new CKEDITOR.dom.walker(a)
                    } else {
                        var o = d.config.indentClasses;
                        if (o)for (var g = i.data.dir == "ltr" ? ["_rtl", ""] : ["", "_rtl"], m = 0; m < o.length; m++)if (e.hasClass(o[m] + g[0])) {
                            e.removeClass(o[m] + g[0]);
                            e.addClass(o[m] + g[1])
                        }
                        o = e.getStyle("margin-right");
                        g = e.getStyle("margin-left");
                        o ? e.setStyle("margin-left", o) : e.removeStyle("margin-left");
                        g ? e.setStyle("margin-right", g) : e.removeStyle("margin-right")
                    }
                }))
            }})
    })();
    (function () {
        function m(a, d, b) {
            b = a.config.forceEnterMode || b;
            if ("wysiwyg" != a.mode)return!1;
            d || (d = a.config.enterMode);
            a.elementPath().isContextFor("p") || (d = CKEDITOR.ENTER_BR, b = 1);
            a.fire("saveSnapshot");
            d == CKEDITOR.ENTER_BR ? n(a, d, null, b) : o(a, d, null, b);
            a.fire("saveSnapshot");
            return!0
        }

        function p(a) {
            for (var a = a.getSelection().getRanges(!0), d = a.length - 1; 0 < d; d--)a[d].deleteContents();
            return a[0]
        }

        CKEDITOR.plugins.add("enterkey", {requires: "indent", init: function (a) {
            a.addCommand("enter", {modes: {wysiwyg: 1}, editorFocus: !1,
                exec: function (a) {
                    m(a)
                }});
            a.addCommand("shiftEnter", {modes: {wysiwyg: 1}, editorFocus: !1, exec: function (a) {
                "wysiwyg" == a.mode && m(a, a.config.shiftEnterMode, 1)
            }});
            a.setKeystroke([
                [13, "enter"],
                [CKEDITOR.SHIFT + 13, "shiftEnter"]
            ])
        }});
        var s = CKEDITOR.dom.walker.whitespaces(), t = CKEDITOR.dom.walker.bookmark();
        CKEDITOR.plugins.enterkey = {enterBlock: function (a, d, b, i) {
            if (b = b || p(a)) {
                var f = b.document, j = b.checkStartOfBlock(), h = b.checkEndOfBlock(), c = a.elementPath(b.startContainer).block;
                if (j && h) {
                    if (c && (c.is("li") || c.getParent().is("li"))) {
                        a.execCommand("outdent");
                        return
                    }
                    if (c && c.getParent().is("blockquote")) {
                        c.breakParent(c.getParent());
                        c.getPrevious().getFirst(CKEDITOR.dom.walker.invisible(1)) || c.getPrevious().remove();
                        c.getNext().getFirst(CKEDITOR.dom.walker.invisible(1)) || c.getNext().remove();
                        b.moveToElementEditStart(c);
                        b.select();
                        return
                    }
                } else if (c && c.is("pre") && !h) {
                    n(a, d, b, i);
                    return
                }
                var c = d == CKEDITOR.ENTER_DIV ? "div" : "p", l = b.splitBlock(c);
                if (l) {
                    var d = l.previousBlock, a = l.nextBlock, j = l.wasStartOfBlock, h = l.wasEndOfBlock, g;
                    if (a)g = a.getParent(), g.is("li") && (a.breakParent(g),
                        a.move(a.getNext(), 1)); else if (d && (g = d.getParent()) && g.is("li"))d.breakParent(g), g = d.getNext(), b.moveToElementEditStart(g), d.move(d.getPrevious());
                    if (!j && !h) {
                        if (a.is("li")) {
                            var e = b.clone();
                            e.selectNodeContents(a);
                            e = new CKEDITOR.dom.walker(e);
                            e.evaluator = function (a) {
                                return!(t(a) || s(a) || a.type == CKEDITOR.NODE_ELEMENT && a.getName()in CKEDITOR.dtd.$inline && !(a.getName()in CKEDITOR.dtd.$empty))
                            };
                            (g = e.next()) && (g.type == CKEDITOR.NODE_ELEMENT && g.is("ul", "ol")) && (CKEDITOR.env.ie ? f.createText(" ") : f.createElement("br")).insertBefore(g)
                        }
                        a &&
                        b.moveToElementEditStart(a)
                    } else {
                        var k;
                        if (d) {
                            if (d.is("li") || !q.test(d.getName()) && !d.is("pre"))e = d.clone()
                        } else a && (e = a.clone());
                        e ? i && !e.is("li") && e.renameNode(c) : g && g.is("li") ? e = g : (e = f.createElement(c), d && (k = d.getDirection()) && e.setAttribute("dir", k));
                        if (f = l.elementPath) {
                            i = 0;
                            for (g = f.elements.length; i < g; i++) {
                                k = f.elements[i];
                                if (k.equals(f.block) || k.equals(f.blockLimit))break;
                                CKEDITOR.dtd.$removeEmpty[k.getName()] && (k = k.clone(), e.moveChildren(k), e.append(k))
                            }
                        }
                        CKEDITOR.env.ie || e.appendBogus();
                        e.getParent() ||
                        b.insertNode(e);
                        e.is("li") && e.removeAttribute("value");
                        if (CKEDITOR.env.ie && j && (!h || !d.getChildCount()))b.moveToElementEditStart(h ? d : e), b.select();
                        b.moveToElementEditStart(j && !h ? a : e)
                    }
                    b.select();
                    b.scrollIntoView()
                }
            }
        }, enterBr: function (a, d, b, i) {
            if (b = b || p(a)) {
                var f = b.document, j = b.checkEndOfBlock(), h = new CKEDITOR.dom.elementPath(a.getSelection().getStartElement()), c = h.block, h = c && h.block.getName();
                !i && "li" == h ? o(a, d, b, i) : (!i && j && q.test(h) ? (j = c.getDirection()) ? (f = f.createElement("div"), f.setAttribute("dir",
                    j), f.insertAfter(c), b.setStart(f, 0)) : (f.createElement("br").insertAfter(c), CKEDITOR.env.gecko && f.createText("").insertAfter(c), b.setStartAt(c.getNext(), CKEDITOR.env.ie ? CKEDITOR.POSITION_BEFORE_START : CKEDITOR.POSITION_AFTER_START)) : (c = "pre" == h && CKEDITOR.env.ie && 8 > CKEDITOR.env.version ? f.createText("\r") : f.createElement("br"), b.deleteContents(), b.insertNode(c), CKEDITOR.env.ie ? b.setStartAt(c, CKEDITOR.POSITION_AFTER_END) : (f.createText("﻿").insertAfter(c), j && c.getParent().appendBogus(), c.getNext().$.nodeValue =
                    "", b.setStartAt(c.getNext(), CKEDITOR.POSITION_AFTER_START))), b.collapse(!0), b.select(), b.scrollIntoView())
            }
        }};
        var r = CKEDITOR.plugins.enterkey, n = r.enterBr, o = r.enterBlock, q = /^h[1-6]$/
    })();
    (function () {
        function j(a, b) {
            var d = {}, e = [], f = {nbsp: " ", shy: "­", gt: ">", lt: "<", amp: "&", apos: "'", quot: '"'}, a = a.replace(/\b(nbsp|shy|gt|lt|amp|apos|quot)(?:,|$)/g, function (a, h) {
                var c = b ? "&" + h + ";" : f[h];
                d[c] = b ? f[h] : "&" + h + ";";
                e.push(c);
                return""
            });
            if (!b && a) {
                var a = a.split(","), c = document.createElement("div"), g;
                c.innerHTML = "&" + a.join(";&") + ";";
                g = c.innerHTML;
                c = null;
                for (c = 0; c < g.length; c++) {
                    var i = g.charAt(c);
                    d[i] = "&" + a[c] + ";";
                    e.push(i)
                }
            }
            d.regex = e.join(b ? "|" : "");
            return d
        }

        CKEDITOR.plugins.add("entities", {afterInit: function (a) {
            var b =
                a.config;
            if (a = (a = a.dataProcessor) && a.htmlFilter) {
                var d = [];
                !1 !== b.basicEntities && d.push("nbsp,gt,lt,amp");
                b.entities && (d.length && d.push("quot,iexcl,cent,pound,curren,yen,brvbar,sect,uml,copy,ordf,laquo,not,shy,reg,macr,deg,plusmn,sup2,sup3,acute,micro,para,middot,cedil,sup1,ordm,raquo,frac14,frac12,frac34,iquest,times,divide,fnof,bull,hellip,prime,Prime,oline,frasl,weierp,image,real,trade,alefsym,larr,uarr,rarr,darr,harr,crarr,lArr,uArr,rArr,dArr,hArr,forall,part,exist,empty,nabla,isin,notin,ni,prod,sum,minus,lowast,radic,prop,infin,ang,and,or,cap,cup,int,there4,sim,cong,asymp,ne,equiv,le,ge,sub,sup,nsub,sube,supe,oplus,otimes,perp,sdot,lceil,rceil,lfloor,rfloor,lang,rang,loz,spades,clubs,hearts,diams,circ,tilde,ensp,emsp,thinsp,zwnj,zwj,lrm,rlm,ndash,mdash,lsquo,rsquo,sbquo,ldquo,rdquo,bdquo,dagger,Dagger,permil,lsaquo,rsaquo,euro"),
                    b.entities_latin && d.push("Agrave,Aacute,Acirc,Atilde,Auml,Aring,AElig,Ccedil,Egrave,Eacute,Ecirc,Euml,Igrave,Iacute,Icirc,Iuml,ETH,Ntilde,Ograve,Oacute,Ocirc,Otilde,Ouml,Oslash,Ugrave,Uacute,Ucirc,Uuml,Yacute,THORN,szlig,agrave,aacute,acirc,atilde,auml,aring,aelig,ccedil,egrave,eacute,ecirc,euml,igrave,iacute,icirc,iuml,eth,ntilde,ograve,oacute,ocirc,otilde,ouml,oslash,ugrave,uacute,ucirc,uuml,yacute,thorn,yuml,OElig,oelig,Scaron,scaron,Yuml"), b.entities_greek && d.push("Alpha,Beta,Gamma,Delta,Epsilon,Zeta,Eta,Theta,Iota,Kappa,Lambda,Mu,Nu,Xi,Omicron,Pi,Rho,Sigma,Tau,Upsilon,Phi,Chi,Psi,Omega,alpha,beta,gamma,delta,epsilon,zeta,eta,theta,iota,kappa,lambda,mu,nu,xi,omicron,pi,rho,sigmaf,sigma,tau,upsilon,phi,chi,psi,omega,thetasym,upsih,piv"),
                    b.entities_additional && d.push(b.entities_additional));
                var e = j(d.join(",")), f = e.regex ? "[" + e.regex + "]" : "a^";
                delete e.regex;
                b.entities && b.entities_processNumerical && (f = "[^ -~]|" + f);
                var f = RegExp(f, "g"), c = function (a) {
                    return b.entities_processNumerical == "force" || !e[a] ? "&#" + a.charCodeAt(0) + ";" : e[a]
                }, g = j("nbsp,gt,lt,amp,shy", !0), i = RegExp(g.regex, "g"), k = function (a) {
                    return g[a]
                };
                a.addRules({text: function (a) {
                    return a.replace(i, k).replace(f, c)
                }})
            }
        }})
    })();
    CKEDITOR.config.basicEntities = !0;
    CKEDITOR.config.entities = !0;
    CKEDITOR.config.entities_latin = !0;
    CKEDITOR.config.entities_greek = !0;
    CKEDITOR.config.entities_additional = "#39";
    CKEDITOR.plugins.add("popup");
    CKEDITOR.tools.extend(CKEDITOR.editor.prototype, {popup: function (e, a, b, d) {
        a = a || "80%";
        b = b || "70%";
        "string" == typeof a && (1 < a.length && "%" == a.substr(a.length - 1, 1)) && (a = parseInt(window.screen.width * parseInt(a, 10) / 100, 10));
        "string" == typeof b && (1 < b.length && "%" == b.substr(b.length - 1, 1)) && (b = parseInt(window.screen.height * parseInt(b, 10) / 100, 10));
        640 > a && (a = 640);
        420 > b && (b = 420);
        var f = parseInt((window.screen.height - b) / 2, 10), g = parseInt((window.screen.width - a) / 2, 10), d = (d || "location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes") + ",width=" +
            a + ",height=" + b + ",top=" + f + ",left=" + g, c = window.open("", null, d, !0);
        if (!c)return!1;
        try {
            -1 == navigator.userAgent.toLowerCase().indexOf(" chrome/") && (c.moveTo(g, f), c.resizeTo(a, b)), c.focus(), c.location.href = e
        } catch (h) {
            window.open(e, null, d, !0)
        }
        return!0
    }});
    (function () {
        function g(a, c) {
            var d = [];
            if (c)for (var b in c)d.push(b + "=" + encodeURIComponent(c[b])); else return a;
            return a + (-1 != a.indexOf("?") ? "&" : "?") + d.join("&")
        }

        function i(a) {
            a += "";
            return a.charAt(0).toUpperCase() + a.substr(1)
        }

        function k() {
            var a = this.getDialog(), c = a.getParentEditor();
            c._.filebrowserSe = this;
            var d = c.config["filebrowser" + i(a.getName()) + "WindowWidth"] || c.config.filebrowserWindowWidth || "80%", a = c.config["filebrowser" + i(a.getName()) + "WindowHeight"] || c.config.filebrowserWindowHeight || "70%",
                b = this.filebrowser.params || {};
            b.CKEditor = c.name;
            b.CKEditorFuncNum = c._.filebrowserFn;
            b.langCode || (b.langCode = c.langCode);
            b = g(this.filebrowser.url, b);
            c.popup(b, d, a, c.config.filebrowserWindowFeatures || c.config.fileBrowserWindowFeatures)
        }

        function l() {
            var a = this.getDialog();
            a.getParentEditor()._.filebrowserSe = this;
            return!a.getContentElement(this["for"][0], this["for"][1]).getInputElement().$.value || !a.getContentElement(this["for"][0], this["for"][1]).getAction() ? !1 : !0
        }

        function m(a, c, d) {
            var b = d.params || {};
            b.CKEditor = a.name;
            b.CKEditorFuncNum = a._.filebrowserFn;
            b.langCode || (b.langCode = a.langCode);
            c.action = g(d.url, b);
            c.filebrowser = d
        }

        function j(a, c, d, b) {
            var e, g;
            for (g in b)if (e = b[g], ("hbox" == e.type || "vbox" == e.type || "fieldset" == e.type) && j(a, c, d, e.children), e.filebrowser)if ("string" == typeof e.filebrowser && (e.filebrowser = {action: "fileButton" == e.type ? "QuickUpload" : "Browse", target: e.filebrowser}), "Browse" == e.filebrowser.action) {
                var f = e.filebrowser.url;
                void 0 === f && (f = a.config["filebrowser" + i(c) + "BrowseUrl"], void 0 ===
                    f && (f = a.config.filebrowserBrowseUrl));
                f && (e.onClick = k, e.filebrowser.url = f, e.hidden = !1)
            } else if ("QuickUpload" == e.filebrowser.action && e["for"] && (f = e.filebrowser.url, void 0 === f && (f = a.config["filebrowser" + i(c) + "UploadUrl"], void 0 === f && (f = a.config.filebrowserUploadUrl)), f)) {
                var h = e.onClick;
                e.onClick = function (a) {
                    var b = a.sender;
                    return h && h.call(b, a) === false ? false : l.call(b, a)
                };
                e.filebrowser.url = f;
                e.hidden = !1;
                m(a, d.getContents(e["for"][0]).get(e["for"][1]), e.filebrowser)
            }
        }

        function h(a, c, d) {
            if (-1 !== d.indexOf(";")) {
                for (var d =
                    d.split(";"), b = 0; b < d.length; b++)if (h(a, c, d[b]))return!0;
                return!1
            }
            return(a = a.getContents(c).get(d).filebrowser) && a.url
        }

        function n(a, c) {
            var d = this._.filebrowserSe.getDialog(), b = this._.filebrowserSe["for"], e = this._.filebrowserSe.filebrowser.onSelect;
            b && d.getContentElement(b[0], b[1]).reset();
            if (!("function" == typeof c && !1 === c.call(this._.filebrowserSe)) && !(e && !1 === e.call(this._.filebrowserSe, a, c)) && ("string" == typeof c && c && alert(c), a && (b = this._.filebrowserSe, d = b.getDialog(), b = b.filebrowser.target || null)))if (b =
                b.split(":"), e = d.getContentElement(b[0], b[1]))e.setValue(a), d.selectPage(b[0])
        }

        CKEDITOR.plugins.add("filebrowser", {requires: "popup", init: function (a) {
            a._.filebrowserFn = CKEDITOR.tools.addFunction(n, a);
            a.on("destroy", function () {
                CKEDITOR.tools.removeFunction(this._.filebrowserFn)
            })
        }});
        CKEDITOR.on("dialogDefinition", function (a) {
            var c = a.data.definition, d, b;
            for (b in c.contents)if (d = c.contents[b])j(a.editor, a.data.name, c, d.elements), d.hidden && d.filebrowser && (d.hidden = !h(c, d.id, d.filebrowser))
        })
    })();
    (function () {
        function t(a) {
            var e = "left" == a ? "pageXOffset" : "pageYOffset";
            return e in g.$ ? g.$[e] : CKEDITOR.document.$.documentElement["left" == a ? "scrollLeft" : "scrollTop"]
        }

        function p(a) {
            var e, f = a.config, p = f.floatSpaceDockedOffsetX || 0, o = f.floatSpaceDockedOffsetY || 0, u = f.floatSpacePinnedOffsetX || 0, q = f.floatSpacePinnedOffsetY || 0, i = function (c) {
                function f(a, c, b) {
                    d.setStyle(c, s(b));
                    d.setStyle("position", a)
                }

                function j(a) {
                    var c = n.getDocumentPosition();
                    switch (a) {
                        case "top":
                            f("absolute", "top", c.y - l - o);
                            break;
                        case "pin":
                            f("fixed",
                                "top", q);
                            break;
                        case "bottom":
                            f("absolute", "top", c.y + (b.height || b.bottom - b.top) + o)
                    }
                    e = a
                }

                "focus" == c.name && d.show();
                d.removeStyle("left");
                d.removeStyle("right");
                var n = a.editable(), k = d.getClientRect(), b = n.getClientRect(), l = k.height, r = t("left");
                if (e) {
                    "top" == e && k.top < q ? j("pin") : "pin" == e ? b.top > o + l ? j("top") : b.bottom - k.bottom < l && j("bottom") : "bottom" == e && (b.top > o + l ? j("top") : b.bottom > 2 * l + q && j("pin"));
                    var c = g.getViewPaneSize(), h = c.width / 2, h = 0 < b.left && b.right < c.width && b.width > k.width ? "rtl" == a.config.contentsLangDirection ?
                        "right" : "left" : h - b.left > b.right - h ? "left" : "right", m;
                    k.width > c.width ? (h = "left", m = 0) : (m = "left" == h ? 0 < b.left ? b.left : 0 : b.right < c.width ? c.width - b.right : 0, m + k.width > c.width && (h = "left" == h ? "right" : "left", m = 0));
                    d.setStyle(h, s(("pin" == e ? u : p) + m + ("pin" == e ? 0 : r)))
                } else e = "pin", j("pin"), i(c)
            }, f = CKEDITOR.document.getBody(), r = {id: a.id, name: a.name, langDir: a.lang.dir, langCode: a.langCode}, n = a.fire("uiSpace", {space: "top", html: ""}).html;
            if (n) {
                var d = f.append(CKEDITOR.dom.element.createFromHtml(v.output(CKEDITOR.tools.extend({topId: a.ui.spaceId("top"),
                    content: n, style: "display:none;z-index:" + (a.config.baseFloatZIndex - 1)}, r))));
                d.unselectable();
                d.on("mousedown", function (a) {
                    a = a.data;
                    a.getTarget().hasAscendant("a", 1) || a.preventDefault()
                });
                a.on("focus", function (a) {
                    i(a);
                    g.on("scroll", i);
                    g.on("resize", i)
                });
                a.on("blur", function () {
                    d.hide();
                    g.removeListener("scroll", i);
                    g.removeListener("resize", i)
                });
                a.on("destroy", function () {
                    g.removeListener("scroll", i);
                    g.removeListener("resize", i);
                    d.clearCustomData();
                    d.remove()
                });
                a.focusManager.hasFocus && d.show();
                a.focusManager.add(d,
                    1)
            }
        }

        var v = CKEDITOR.addTemplate("floatcontainer", '<div id="cke_{name}" class="cke {id} cke_reset_all cke_chrome cke_editor_{name} cke_float cke_{langDir} ' + CKEDITOR.env.cssClass + '" dir="{langDir}" title="' + (CKEDITOR.env.gecko ? " " : "") + '" lang="{langCode}" role="application" style="{style}"><div class="cke_inner"><div id="{topId}" class="cke_top" role="presentation">{content}</div></div></div>');
        CKEDITOR.plugins.add("floatingspace", {init: function (a) {
            a.on("contentDom", function () {
                p(a)
            })
        }});
        var g = CKEDITOR.document.getWindow(),
            s = CKEDITOR.tools.cssLength
    })();
    CKEDITOR.plugins.add("listblock", {requires: "panel", onLoad: function () {
        var e = CKEDITOR.addTemplate("panel-list", '<ul role="presentation" class="cke_panel_list">{items}</ul>'), f = CKEDITOR.addTemplate("panel-list-item", '<li id="{id}" class="cke_panel_listItem" role=presentation><a id="{id}_option" _cke_focus=1 hidefocus=true title="{title}" href="javascript:void(\'{val}\')"  {onclick}="CKEDITOR.tools.callFunction({clickFn},\'{val}\'); return false;" role="option">{text}</a></li>'), g = CKEDITOR.addTemplate("panel-list-group",
            '<h1 id="{id}" class="cke_panel_grouptitle" role="presentation" >{label}</h1>');
        CKEDITOR.ui.panel.prototype.addListBlock = function (a, b) {
            return this.addBlock(a, new CKEDITOR.ui.listBlock(this.getHolderElement(), b))
        };
        CKEDITOR.ui.listBlock = CKEDITOR.tools.createClass({base: CKEDITOR.ui.panel.block, $: function (a, b) {
            var b = b || {}, c = b.attributes || (b.attributes = {});
            (this.multiSelect = !!b.multiSelect) && (c["aria-multiselectable"] = !0);
            !c.role && (c.role = "listbox");
            this.base.apply(this, arguments);
            c = this.keys;
            c[40] = "next";
            c[9] = "next";
            c[38] = "prev";
            c[CKEDITOR.SHIFT + 9] = "prev";
            c[32] = CKEDITOR.env.ie ? "mouseup" : "click";
            CKEDITOR.env.ie && (c[13] = "mouseup");
            this._.pendingHtml = [];
            this._.pendingList = [];
            this._.items = {};
            this._.groups = {}
        }, _: {close: function () {
            if (this._.started) {
                var a = e.output({items: this._.pendingList.join("")});
                this._.pendingList = [];
                this._.pendingHtml.push(a);
                delete this._.started
            }
        }, getClick: function () {
            this._.click || (this._.click = CKEDITOR.tools.addFunction(function (a) {
                var b = this.toggle(a);
                if (this.onClick)this.onClick(a,
                    b)
            }, this));
            return this._.click
        }}, proto: {add: function (a, b, c) {
            var d = CKEDITOR.tools.getNextId();
            this._.started || (this._.started = 1, this._.size = this._.size || 0);
            this._.items[a] = d;
            a = {id: d, val: a, onclick: CKEDITOR.env.ie ? 'onclick="return false;" onmouseup' : "onclick", clickFn: this._.getClick(), title: c || a, text: b || a};
            this._.pendingList.push(f.output(a))
        }, startGroup: function (a) {
            this._.close();
            var b = CKEDITOR.tools.getNextId();
            this._.groups[a] = b;
            this._.pendingHtml.push(g.output({id: b, label: a}))
        }, commit: function () {
            this._.close();
            this.element.appendHtml(this._.pendingHtml.join(""));
            delete this._.size;
            this._.pendingHtml = []
        }, toggle: function (a) {
            var b = this.isMarked(a);
            b ? this.unmark(a) : this.mark(a);
            return!b
        }, hideGroup: function (a) {
            var b = (a = this.element.getDocument().getById(this._.groups[a])) && a.getNext();
            a && (a.setStyle("display", "none"), b && "ul" == b.getName() && b.setStyle("display", "none"))
        }, hideItem: function (a) {
            this.element.getDocument().getById(this._.items[a]).setStyle("display", "none")
        }, showAll: function () {
            var a = this._.items, b =
                this._.groups, c = this.element.getDocument(), d;
            for (d in a)c.getById(a[d]).setStyle("display", "");
            for (var e in b)a = c.getById(b[e]), d = a.getNext(), a.setStyle("display", ""), d && "ul" == d.getName() && d.setStyle("display", "")
        }, mark: function (a) {
            this.multiSelect || this.unmarkAll();
            var a = this._.items[a], b = this.element.getDocument().getById(a);
            b.addClass("cke_selected");
            this.element.getDocument().getById(a + "_option").setAttribute("aria-selected", !0);
            this.onMark && this.onMark(b)
        }, unmark: function (a) {
            var b = this.element.getDocument(),
                a = this._.items[a], c = b.getById(a);
            c.removeClass("cke_selected");
            b.getById(a + "_option").removeAttribute("aria-selected");
            this.onUnmark && this.onUnmark(c)
        }, unmarkAll: function () {
            var a = this._.items, b = this.element.getDocument(), c;
            for (c in a) {
                var d = a[c];
                b.getById(d).removeClass("cke_selected");
                b.getById(d + "_option").removeAttribute("aria-selected")
            }
            this.onUnmark && this.onUnmark()
        }, isMarked: function (a) {
            return this.element.getDocument().getById(this._.items[a]).hasClass("cke_selected")
        }, focus: function (a) {
            this._.focusIndex = -1;
            if (a) {
                for (var b = this.element.getDocument().getById(this._.items[a]).getFirst(), a = this.element.getElementsByTag("a"), c, d = -1; c = a.getItem(++d);)if (c.equals(b)) {
                    this._.focusIndex = d;
                    break
                }
                setTimeout(function () {
                    b.focus()
                }, 0)
            }
        }}})
    }});
    CKEDITOR.plugins.add("richcombo", {requires: "floatpanel,listblock,button", beforeInit: function (c) {
        c.ui.addHandler(CKEDITOR.UI_RICHCOMBO, CKEDITOR.ui.richCombo.handler)
    }});
    (function () {
        var c = '<span id="{id}" class="cke_combo cke_combo__{name} {cls}" role="presentation"><span id="{id}_label" class="cke_combo_label">{label}</span><a class="cke_combo_button" hidefocus=true title="{title}" tabindex="-1"' + (CKEDITOR.env.gecko && 10900 <= CKEDITOR.env.version && !CKEDITOR.env.hc ? "" : '" href="javascript:void(\'{titleJs}\')"') + ' hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="true"';
        if (CKEDITOR.env.opera || CKEDITOR.env.gecko && CKEDITOR.env.mac)c += ' onkeypress="return false;"';
        CKEDITOR.env.gecko && (c += ' onblur="this.style.cssText = this.style.cssText;"');
        var c = c + (' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event,this);" onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);"  onfocus="return CKEDITOR.tools.callFunction({focusFn},event);" ' + (CKEDITOR.env.ie ? 'onclick="return false;" onmouseup' : "onclick") + '="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span id="{id}_text" class="cke_combo_text cke_combo_inlinelabel">{label}</span><span class="cke_combo_open"><span class="cke_combo_arrow">' +
            (CKEDITOR.env.hc ? "&#9660;" : CKEDITOR.env.air ? "&nbsp;" : "") + "</span></span></a></span>"), h = CKEDITOR.addTemplate("combo", c);
        CKEDITOR.UI_RICHCOMBO = "richcombo";
        CKEDITOR.ui.richCombo = CKEDITOR.tools.createClass({$: function (a) {
            CKEDITOR.tools.extend(this, a, {canGroup: !1, title: a.label, modes: {wysiwyg: 1}, editorFocus: 1});
            a = this.panel || {};
            delete this.panel;
            this.id = CKEDITOR.tools.getNextNumber();
            this.document = a.parent && a.parent.getDocument() || CKEDITOR.document;
            a.className = "cke_combopanel";
            a.block = {multiSelect: a.multiSelect,
                attributes: a.attributes};
            a.toolbarRelated = !0;
            this._ = {panelDefinition: a, items: {}}
        }, proto: {renderHtml: function (a) {
            var b = [];
            this.render(a, b);
            return b.join("")
        }, render: function (a, b) {
            function j() {
                var d = this.modes[a.mode] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED;
                this.setState(a.readOnly && !this.readOnly ? CKEDITOR.TRISTATE_DISABLED : d);
                this.setValue("")
            }

            var c = CKEDITOR.env, g = "cke_" + this.id, e = CKEDITOR.tools.addFunction(function (b) {
                i && (a.unlockSelection(1), i = 0);
                d.execute(b)
            }, this), f = this, d = {id: g, combo: this,
                focus: function () {
                    CKEDITOR.document.getById(g).getChild(1).focus()
                }, execute: function (d) {
                    var b = f._;
                    if (b.state != CKEDITOR.TRISTATE_DISABLED)if (f.createPanel(a), b.on)b.panel.hide(); else {
                        f.commit();
                        var c = f.getValue();
                        c ? b.list.mark(c) : b.list.unmarkAll();
                        b.panel.showBlock(f.id, new CKEDITOR.dom.element(d), 4)
                    }
                }, clickFn: e};
            a.on("mode", j, this);
            !this.readOnly && a.on("readOnly", j, this);
            var k = CKEDITOR.tools.addFunction(function (a, b) {
                var a = new CKEDITOR.dom.event(a), c = a.getKeystroke();
                switch (c) {
                    case 13:
                    case 32:
                    case 40:
                        CKEDITOR.tools.callFunction(e,
                            b);
                        break;
                    default:
                        d.onkey(d, c)
                }
                a.preventDefault()
            }), l = CKEDITOR.tools.addFunction(function () {
                d.onfocus && d.onfocus()
            }), i = 0, m = CKEDITOR.tools.addFunction(function () {
                if (CKEDITOR.env.opera) {
                    var b = a.editable();
                    b.isInline() && b.hasFocus && (a.lockSelection(), i = 1)
                }
            });
            d.keyDownFn = k;
            c = {id: g, name: this.name || this.command, label: this.label, title: this.title, cls: this.className || "", titleJs: c.gecko && 10900 <= c.version && !c.hc ? "" : (this.title || "").replace("'", ""), keydownFn: k, mousedownFn: m, focusFn: l, clickFn: e};
            h.output(c, b);
            if (this.onRender)this.onRender();
            return d
        }, createPanel: function (a) {
            if (!this._.panel) {
                var b = this._.panelDefinition, c = this._.panelDefinition.block, h = b.parent || CKEDITOR.document.getBody(), g = "cke_combopanel__" + this.name, e = new CKEDITOR.ui.floatPanel(a, h, b), f = e.addListBlock(this.id, c), d = this;
                e.onShow = function () {
                    this.element.addClass(g);
                    d.setState(CKEDITOR.TRISTATE_ON);
                    f.focus(!f.multiSelect && d.getValue());
                    d._.on = 1;
                    d.editorFocus && a.focus();
                    if (d.onOpen)d.onOpen()
                };
                e.onHide = function (b) {
                    this.element.removeClass(g);
                    d.setState(d.modes && d.modes[a.mode] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED);
                    d._.on = 0;
                    if (!b && d.onClose)d.onClose()
                };
                e.onEscape = function () {
                    e.hide(1)
                };
                f.onClick = function (a, b) {
                    d.onClick && d.onClick.call(d, a, b);
                    e.hide()
                };
                this._.panel = e;
                this._.list = f;
                e.getBlock(this.id).onHide = function () {
                    d._.on = 0;
                    d.setState(CKEDITOR.TRISTATE_OFF)
                };
                this.init && this.init()
            }
        }, setValue: function (a, b) {
            this._.value = a;
            var c = this.document.getById("cke_" + this.id + "_text");
            c && (!a && !b ? (b = this.label, c.addClass("cke_combo_inlinelabel")) :
                c.removeClass("cke_combo_inlinelabel"), c.setText("undefined" != typeof b ? b : a))
        }, getValue: function () {
            return this._.value || ""
        }, unmarkAll: function () {
            this._.list.unmarkAll()
        }, mark: function (a) {
            this._.list.mark(a)
        }, hideItem: function (a) {
            this._.list.hideItem(a)
        }, hideGroup: function (a) {
            this._.list.hideGroup(a)
        }, showAll: function () {
            this._.list.showAll()
        }, add: function (a, b, c) {
            this._.items[a] = c || a;
            this._.list.add(a, b, c)
        }, startGroup: function (a) {
            this._.list.startGroup(a)
        }, commit: function () {
            this._.committed || (this._.list.commit(),
                this._.committed = 1, CKEDITOR.ui.fire("ready", this));
            this._.committed = 1
        }, setState: function (a) {
            if (this._.state != a) {
                var b = this.document.getById("cke_" + this.id);
                b.setState(a, "cke_combo");
                a == CKEDITOR.TRISTATE_DISABLED ? b.setAttribute("aria-disabled", !0) : b.removeAttribute("aria-disabled");
                this._.state = a
            }
        }, enable: function () {
            this._.state == CKEDITOR.TRISTATE_DISABLED && this.setState(this._.lastState)
        }, disable: function () {
            this._.state != CKEDITOR.TRISTATE_DISABLED && (this._.lastState = this._.state, this.setState(CKEDITOR.TRISTATE_DISABLED))
        }},
            statics: {handler: {create: function (a) {
                return new CKEDITOR.ui.richCombo(a)
            }}}});
        CKEDITOR.ui.prototype.addRichCombo = function (a, b) {
            this.add(a, CKEDITOR.UI_RICHCOMBO, b)
        }
    })();
    CKEDITOR.plugins.add("format", {requires: "richcombo", init: function (a) {
        if (!a.blockless) {
            for (var g = a.config, c = a.lang.format, j = g.format_tags.split(";"), d = {}, h = 0; h < j.length; h++) {
                var i = j[h];
                d[i] = new CKEDITOR.style(g["format_" + i]);
                d[i]._.enterMode = a.config.enterMode
            }
            a.ui.addRichCombo("Format", {label: c.label, title: c.panelTitle, toolbar: "styles,20", panel: {css: [CKEDITOR.skin.getPath("editor")].concat(g.contentsCss), multiSelect: !1, attributes: {"aria-label": c.panelTitle}}, init: function () {
                this.startGroup(c.panelTitle);
                for (var a in d) {
                    var e = c["tag_" + a];
                    this.add(a, d[a].buildPreview(e), e)
                }
            }, onClick: function (b) {
                a.focus();
                a.fire("saveSnapshot");
                var b = d[b], e = a.elementPath();
                a[b.checkActive(e) ? "removeStyle" : "applyStyle"](b);
                setTimeout(function () {
                    a.fire("saveSnapshot")
                }, 0)
            }, onRender: function () {
                a.on("selectionChange", function (b) {
                        var e = this.getValue(), b = b.data.path, c = !a.readOnly && b.isContextFor("p");
                        this[c ? "enable" : "disable"]();
                        if (c) {
                            for (var f in d)if (d[f].checkActive(b)) {
                                f != e && this.setValue(f, a.lang.format["tag_" + f]);
                                return
                            }
                            this.setValue("")
                        }
                    },
                    this)
            }})
        }
    }});
    CKEDITOR.config.format_tags = "p;h1;h2;h3;h4;h5;h6;pre;address;div";
    CKEDITOR.config.format_p = {element: "p"};
    CKEDITOR.config.format_div = {element: "div"};
    CKEDITOR.config.format_pre = {element: "pre"};
    CKEDITOR.config.format_address = {element: "address"};
    CKEDITOR.config.format_h1 = {element: "h1"};
    CKEDITOR.config.format_h2 = {element: "h2"};
    CKEDITOR.config.format_h3 = {element: "h3"};
    CKEDITOR.config.format_h4 = {element: "h4"};
    CKEDITOR.config.format_h5 = {element: "h5"};
    CKEDITOR.config.format_h6 = {element: "h6"};
    CKEDITOR.plugins.add("htmlwriter", {init: function (b) {
        var a = new CKEDITOR.htmlWriter;
        a.forceSimpleAmpersand = b.config.forceSimpleAmpersand;
        a.indentationChars = b.config.dataIndentationChars || "\t";
        b.dataProcessor.writer = a
    }});
    CKEDITOR.htmlWriter = CKEDITOR.tools.createClass({base: CKEDITOR.htmlParser.basicWriter, $: function () {
        this.base();
        this.indentationChars = "\t";
        this.selfClosingEnd = " />";
        this.lineBreakChars = "\n";
        this.sortAttributes = 1;
        this._.indent = 0;
        this._.indentation = "";
        this._.inPre = 0;
        this._.rules = {};
        var b = CKEDITOR.dtd, a;
        for (a in CKEDITOR.tools.extend({}, b.$nonBodyContent, b.$block, b.$listItem, b.$tableContent))this.setRules(a, {indent: !b[a]["#"], breakBeforeOpen: 1, breakBeforeClose: !b[a]["#"], breakAfterClose: 1, needsSpace: a in
            b.$block && !(a in{li: 1, dt: 1, dd: 1})});
        this.setRules("br", {breakAfterOpen: 1});
        this.setRules("title", {indent: 0, breakAfterOpen: 0});
        this.setRules("style", {indent: 0, breakBeforeClose: 1});
        this.setRules("pre", {breakAfterOpen: 1, indent: 0})
    }, proto: {openTag: function (b) {
        var a = this._.rules[b];
        this._.afterCloser && (a && a.needsSpace && this._.needsSpace) && this._.output.push("\n");
        this._.indent ? this.indentation() : a && a.breakBeforeOpen && (this.lineBreak(), this.indentation());
        this._.output.push("<", b);
        this._.afterCloser = 0
    },
        openTagClose: function (b, a) {
            var c = this._.rules[b];
            a ? (this._.output.push(this.selfClosingEnd), c && c.breakAfterClose && (this._.needsSpace = c.needsSpace)) : (this._.output.push(">"), c && c.indent && (this._.indentation += this.indentationChars));
            c && c.breakAfterOpen && this.lineBreak();
            "pre" == b && (this._.inPre = 1)
        }, attribute: function (b, a) {
            "string" == typeof a && (this.forceSimpleAmpersand && (a = a.replace(/&amp;/g, "&")), a = CKEDITOR.tools.htmlEncodeAttr(a));
            this._.output.push(" ", b, '="', a, '"')
        }, closeTag: function (b) {
            var a = this._.rules[b];
            a && a.indent && (this._.indentation = this._.indentation.substr(this.indentationChars.length));
            this._.indent ? this.indentation() : a && a.breakBeforeClose && (this.lineBreak(), this.indentation());
            this._.output.push("</", b, ">");
            "pre" == b && (this._.inPre = 0);
            a && a.breakAfterClose && (this.lineBreak(), this._.needsSpace = a.needsSpace);
            this._.afterCloser = 1
        }, text: function (b) {
            this._.indent && (this.indentation(), !this._.inPre && (b = CKEDITOR.tools.ltrim(b)));
            this._.output.push(b)
        }, comment: function (b) {
            this._.indent && this.indentation();
            this._.output.push("<\!--", b, "--\>")
        }, lineBreak: function () {
            !this._.inPre && 0 < this._.output.length && this._.output.push(this.lineBreakChars);
            this._.indent = 1
        }, indentation: function () {
            !this._.inPre && this._.indentation && this._.output.push(this._.indentation);
            this._.indent = 0
        }, reset: function () {
            this._.output = [];
            this._.indent = 0;
            this._.indentation = "";
            this._.afterCloser = 0;
            this._.inPre = 0
        }, setRules: function (b, a) {
            var c = this._.rules[b];
            c ? CKEDITOR.tools.extend(c, a, !0) : this._.rules[b] = a
        }}});
    (function () {
        var b = {canUndo: !1, exec: function (a) {
            var b = a.document.createElement("hr");
            a.insertElement(b)
        }};
        CKEDITOR.plugins.add("horizontalrule", {init: function (a) {
            a.blockless || (a.addCommand("horizontalrule", b), a.ui.addButton && a.ui.addButton("HorizontalRule", {label: a.lang.horizontalrule.toolbar, command: "horizontalrule", toolbar: "insert,40"}))
        }})
    })();
    (function () {
        function n(a) {
            var c = this.editor, d = a.document, b = d.body;
            (a = d.getElementById("cke_actscrpt")) && a.parentNode.removeChild(a);
            (a = d.getElementById("cke_shimscrpt")) && a.parentNode.removeChild(a);
            CKEDITOR.env.gecko && (b.contentEditable = !1, 2E4 > CKEDITOR.env.version && (b.innerHTML = b.innerHTML.replace(/^.*<\!-- cke-content-start --\>/, ""), setTimeout(function () {
                var a = new CKEDITOR.dom.range(new CKEDITOR.dom.document(d));
                a.setStart(new CKEDITOR.dom.node(b), 0);
                c.getSelection().selectRanges([a])
            }, 0)));
            b.contentEditable = !0;
            CKEDITOR.env.ie && (b.hideFocus = !0, b.disabled = !0, b.removeAttribute("disabled"));
            delete this._.isLoadingData;
            this.$ = b;
            d = new CKEDITOR.dom.document(d);
            this.setup();
            CKEDITOR.env.ie && (d.getDocumentElement().addClass(d.$.compatMode), c.config.enterMode != CKEDITOR.ENTER_P && d.on("selectionchange", function () {
                var a = d.getBody(), b = c.getSelection(), e = b && b.getRanges()[0];
                e && (a.getHtml().match(/^<p>&nbsp;<\/p>$/i) && e.startContainer.equals(a)) && setTimeout(function () {
                    e = c.getSelection().getRanges()[0];
                    if (!e.startContainer.equals("body")) {
                        a.getFirst().remove(1);
                        e.moveToElementEditEnd(a);
                        e.select()
                    }
                }, 0)
            }));
            CKEDITOR.env.gecko && CKEDITOR.tools.setTimeout(o, 0, this, c);
            try {
                c.document.$.execCommand("2D-position", !1, !0)
            } catch (e) {
            }
            try {
                c.document.$.execCommand("enableInlineTableEditing", !1, !c.config.disableNativeTableHandles)
            } catch (f) {
            }
            if (c.config.disableObjectResizing)try {
                this.getDocument().$.execCommand("enableObjectResizing", !1, !1)
            } catch (g) {
                this.attachListener(this, CKEDITOR.env.ie ? "resizestart" : "resize", function (a) {
                    a.data.preventDefault()
                })
            }
            (CKEDITOR.env.gecko ||
                CKEDITOR.env.ie && "CSS1Compat" == c.document.$.compatMode) && this.attachListener(this, "keydown", function (a) {
                var b = a.data.getKeystroke();
                if (b == 33 || b == 34)if (CKEDITOR.env.ie)setTimeout(function () {
                    c.getSelection().scrollIntoView()
                }, 0); else if (c.window.$.innerHeight > this.$.offsetHeight) {
                    var d = c.createRange();
                    d[b == 33 ? "moveToElementEditStart" : "moveToElementEditEnd"](this);
                    d.select();
                    a.data.preventDefault()
                }
            });
            CKEDITOR.env.ie && this.attachListener(d, "blur", function () {
                try {
                    d.$.selection.empty()
                } catch (a) {
                }
            });
            c.document.getElementsByTag("title").getItem(0).data("cke-title",
                c.document.$.title);
            CKEDITOR.env.ie && (c.document.$.title = this._.docTitle);
            CKEDITOR.tools.setTimeout(function () {
                c.fire("contentDom");
                if (this._.isPendingFocus) {
                    c.focus();
                    this._.isPendingFocus = false
                }
                setTimeout(function () {
                    c.fire("dataReady")
                }, 0);
                CKEDITOR.env.ie && setTimeout(function () {
                    if (c.document) {
                        var a = c.document.$.body;
                        a.runtimeStyle.marginBottom = "0px";
                        a.runtimeStyle.marginBottom = ""
                    }
                }, 1E3)
            }, 0, this)
        }

        function p(a) {
            a.checkDirty() || setTimeout(function () {
                a.resetDirty()
            }, 0)
        }

        function o(a) {
            if (!a.readOnly) {
                var c =
                    a.window, d = a.document, b = d.getBody(), e = b.getFirst(), f = b.getChildren().count();
                if (!f || 1 == f && e.type == CKEDITOR.NODE_ELEMENT && e.hasAttribute("_moz_editor_bogus_node")) {
                    p(a);
                    var e = CKEDITOR.document, g = e.getDocumentElement(), h = g.$.scrollTop, i = g.$.scrollLeft, j = d.$.createEvent("KeyEvents");
                    j.initKeyEvent("keypress", !0, !0, c.$, !1, !1, !1, !1, 0, 32);
                    d.$.dispatchEvent(j);
                    (h != g.$.scrollTop || i != g.$.scrollLeft) && e.getWindow().$.scrollTo(i, h);
                    f && b.getFirst().remove();
                    d.getBody().appendBogus();
                    a = a.createRange();
                    a.setStartAt(b,
                        CKEDITOR.POSITION_AFTER_START);
                    a.select()
                }
            }
        }

        function q() {
            var a = [];
            if (8 <= CKEDITOR.document.$.documentMode) {
                a.push("html.CSS1Compat [contenteditable=false]{min-height:0 !important}");
                var c = [], d;
                for (d in CKEDITOR.dtd.$removeEmpty)c.push("html.CSS1Compat " + d + "[contenteditable=false]");
                a.push(c.join(",") + "{display:inline-block}")
            } else CKEDITOR.env.gecko && (a.push("html{height:100% !important}"), a.push("img:-moz-broken{-moz-force-broken-image-icon:1;min-width:24px;min-height:24px}"));
            a.push("html{cursor:text;*cursor:auto}");
            a.push("img,input,textarea{cursor:default}");
            return a.join("\n")
        }

        CKEDITOR.plugins.add("wysiwygarea", {init: function (a) {
            a.addMode("wysiwyg", function (c) {
                function d(d) {
                    d && d.removeListener();
                    a.editable(new k(a, b.$.contentWindow.document.body));
                    a.setData(a.getData(1), c)
                }

                var b = CKEDITOR.document.createElement("iframe");
                b.setStyles({width: "100%", height: "100%"});
                b.addClass("cke_wysiwyg_frame cke_reset");
                var e = a.ui.space("contents");
                e.append(b);
                var f = "document.open();" + (l ? 'document.domain="' + document.domain +
                    '";' : "") + "document.close();", f = CKEDITOR.env.air ? "javascript:void(0)" : CKEDITOR.env.ie ? "javascript:void(function(){" + encodeURIComponent(f) + "}())" : "", g = CKEDITOR.env.ie || CKEDITOR.env.gecko;
                if (g)b.on("load", d);
                var h = [a.lang.editor, a.name].join(), i = a.lang.common.editorHelp;
                CKEDITOR.env.ie && (h += ", " + i);
                var j = CKEDITOR.tools.getNextId(), m = CKEDITOR.dom.element.createFromHtml('<span id="' + j + '" class="cke_voice_label">' + i + "</span>");
                e.append(m, 1);
                a.on("beforeModeUnload", function (a) {
                    a.removeListener();
                    m.remove()
                });
                b.setAttributes({frameBorder: 0, "aria-describedby": j, title: h, src: f, tabIndex: a.tabIndex, allowTransparency: "true"});
                !g && d();
                CKEDITOR.env.webkit && (f = function () {
                    e.setStyle("width", "100%");
                    b.hide();
                    b.setSize("width", e.getSize("width"));
                    e.removeStyle("width");
                    b.show()
                }, b.setCustomData("onResize", f), CKEDITOR.document.getWindow().on("resize", f));
                a.fire("ariaWidget", b)
            })
        }});
        var l = CKEDITOR.env.isCustomDomain(), k = CKEDITOR.tools.createClass({$: function (a) {
            this.base.apply(this, arguments);
            this._.frameLoadedHandler =
                CKEDITOR.tools.addFunction(function (a) {
                    CKEDITOR.tools.setTimeout(n, 0, this, a)
                }, this);
            this._.docTitle = this.getWindow().getFrame().getAttribute("title")
        }, base: CKEDITOR.editable, proto: {setData: function (a, c) {
            var d = this.editor;
            if (c)this.setHtml(a); else {
                this._.isLoadingData = !0;
                d._.dataStore = {id: 1};
                var b = d.config, e = b.fullPage, f = b.docType, g = CKEDITOR.tools.buildStyleHtml(q()).replace(/<style>/, '<style data-cke-temp="1">');
                e || (g += CKEDITOR.tools.buildStyleHtml(d.config.contentsCss));
                var h = b.baseHref ? '<base href="' +
                    b.baseHref + '" data-cke-temp="1" />' : "";
                e && (a = a.replace(/<!DOCTYPE[^>]*>/i,function (a) {
                    d.docType = f = a;
                    return""
                }).replace(/<\?xml\s[^\?]*\?>/i, function (a) {
                    d.xmlDeclaration = a;
                    return""
                }));
                d.dataProcessor && (a = d.dataProcessor.toHtml(a));
                e ? (/<body[\s|>]/.test(a) || (a = "<body>" + a), /<html[\s|>]/.test(a) || (a = "<html>" + a + "</html>"), /<head[\s|>]/.test(a) ? /<title[\s|>]/.test(a) || (a = a.replace(/<head[^>]*>/, "$&<title></title>")) : a = a.replace(/<html[^>]*>/, "$&<head><title></title></head>"), h && (a = a.replace(/<head>/, "$&" +
                    h)), a = a.replace(/<\/head\s*>/, g + "$&"), a = f + a) : a = b.docType + '<html dir="' + b.contentsLangDirection + '" lang="' + (b.contentsLanguage || d.langCode) + '"><head><title>' + this._.docTitle + "</title>" + h + g + "</head><body" + (b.bodyId ? ' id="' + b.bodyId + '"' : "") + (b.bodyClass ? ' class="' + b.bodyClass + '"' : "") + ">" + a + "</body></html>";
                CKEDITOR.env.gecko && (a = a.replace(/<body/, '<body contenteditable="true" '), 2E4 > CKEDITOR.env.version && (a = a.replace(/<body[^>]*>/, "$&<\!-- cke-content-start --\>")));
                b = '<script id="cke_actscrpt" type="text/javascript"' +
                    (CKEDITOR.env.ie ? ' defer="defer" ' : "") + ">" + (l ? 'document.domain="' + document.domain + '";' : "") + "var wasLoaded=0;function onload(){if(!wasLoaded)window.parent.CKEDITOR.tools.callFunction(" + this._.frameLoadedHandler + ",window);wasLoaded=1;}" + (CKEDITOR.env.ie ? "onload();" : 'document.addEventListener("DOMContentLoaded", onload, false );') + "<\/script>";
                CKEDITOR.env.ie && 9 > CKEDITOR.env.version && (b += '<script id="cke_shimscrpt">(function(){var e="abbr,article,aside,audio,bdi,canvas,data,datalist,details,figcaption,figure,footer,header,hgroup,mark,meter,nav,output,progress,section,summary,time,video".split(","),i=e.length;while(i--){document.createElement(e[i])}})()<\/script>');
                a = a.replace(/(?=\s*<\/(:?head)>)/, b);
                this.clearCustomData();
                this.clearListeners();
                d.fire("contentDomUnload");
                var i = this.getDocument();
                try {
                    i.write(a)
                } catch (j) {
                    setTimeout(function () {
                        i.write(a)
                    }, 0)
                }
            }
        }, getData: function (a) {
            if (a)return this.getHtml();
            var a = this.editor, c = a.config.fullPage, d = c && a.docType, b = c && a.xmlDeclaration, e = this.getDocument(), c = c ? e.getDocumentElement().getOuterHtml() : e.getBody().getHtml();
            CKEDITOR.env.gecko && (c = c.replace(/<br>(?=\s*(:?$|<\/body>))/, ""));
            a.dataProcessor && (c = a.dataProcessor.toDataFormat(c));
            b && (c = b + "\n" + c);
            d && (c = d + "\n" + c);
            return c
        }, focus: function () {
            this._.isLoadingData ? this._.isPendingFocus = !0 : k.baseProto.focus.call(this)
        }, detach: function () {
            var a = this.editor, c = a.document, d = a.window.getFrame();
            k.baseProto.detach.call(this);
            this.clearCustomData();
            c.getDocumentElement().clearCustomData();
            d.clearCustomData();
            CKEDITOR.tools.removeFunction(this._.frameLoadedHandler);
            (c = d.removeCustomData("onResize")) && c.removeListener();
            a.fire("contentDomUnload");
            d.remove()
        }}});
        CKEDITOR.env.gecko && function () {
            var a =
                document.body;
            if (a) {
                var c = a.getAttribute("onpageshow");
                a.setAttribute("onpageshow", (c ? c + ";" : "") + 'event.persisted&&(function(){var x=CKEDITOR.instances,d,i;for(i in x){d=x[i].document;if(d){d.$.designMode="off";d.$.designMode="on";}}})();')
            } else window.addEventListener("load", arguments.callee, !1)
        }()
    })();
    CKEDITOR.config.disableObjectResizing = !1;
    CKEDITOR.config.disableNativeTableHandles = !0;
    CKEDITOR.config.disableNativeSpellChecker = !0;
    CKEDITOR.config.contentsCss = CKEDITOR.basePath + "contents.css";
    (function () {
        function e(b, a) {
            a || (a = b.getSelection().getSelectedElement());
            if (a && a.is("img") && !a.data("cke-realelement") && !a.isReadOnly())return a
        }

        function f(b) {
            var a = b.getStyle("float");
            if ("inherit" == a || "none" == a)a = 0;
            a || (a = b.getAttribute("align"));
            return a
        }

        CKEDITOR.plugins.add("image", {requires: "dialog", init: function (b) {
            CKEDITOR.dialog.add("image", this.path + "dialogs/image.js");
            b.addCommand("image", new CKEDITOR.dialogCommand("image"));
            b.ui.addButton && b.ui.addButton("Image", {label: b.lang.common.image,
                command: "image", toolbar: "insert,10"});
            b.on("doubleclick", function (a) {
                var b = a.data.element;
                b.is("img") && (!b.data("cke-realelement") && !b.isReadOnly()) && (a.data.dialog = "image")
            });
            b.addMenuItems && b.addMenuItems({image: {label: b.lang.image.menu, command: "image", group: "image"}});
            b.contextMenu && b.contextMenu.addListener(function (a) {
                if (e(b, a))return{image: CKEDITOR.TRISTATE_OFF}
            })
        }, afterInit: function (b) {
            function a(a) {
                var d = b.getCommand("justify" + a);
                if (d) {
                    if ("left" == a || "right" == a)d.on("exec", function (d) {
                        var c =
                            e(b), g;
                        c && (g = f(c), g == a ? (c.removeStyle("float"), a == f(c) && c.removeAttribute("align")) : c.setStyle("float", a), d.cancel())
                    });
                    d.on("refresh", function (d) {
                        var c = e(b);
                        c && (c = f(c), this.setState(c == a ? CKEDITOR.TRISTATE_ON : "right" == a || "left" == a ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED), d.cancel())
                    })
                }
            }

            a("left");
            a("right");
            a("center");
            a("block")
        }})
    })();
    CKEDITOR.config.image_removeLinkByEmptyURL = !0;
    (function () {
        function g(a, b) {
            var c = j.exec(a), d = j.exec(b);
            if (c) {
                if (!c[2] && "px" == d[2])return d[1];
                if ("px" == c[2] && !d[2])return d[1] + "px"
            }
            return b
        }

        var i = CKEDITOR.htmlParser.cssStyle, h = CKEDITOR.tools.cssLength, j = /^((?:\d*(?:\.\d+))|(?:\d+))(.*)?$/i, l = {elements: {$: function (a) {
            var b = a.attributes;
            if ((b = (b = (b = b && b["data-cke-realelement"]) && new CKEDITOR.htmlParser.fragment.fromHtml(decodeURIComponent(b))) && b.children[0]) && a.attributes["data-cke-resizable"]) {
                var c = (new i(a)).rules, a = b.attributes, d = c.width, c =
                    c.height;
                d && (a.width = g(a.width, d));
                c && (a.height = g(a.height, c))
            }
            return b
        }}}, k = CKEDITOR.plugins.add("fakeobjects", {afterInit: function (a) {
            (a = (a = a.dataProcessor) && a.htmlFilter) && a.addRules(l)
        }});
        CKEDITOR.editor.prototype.createFakeElement = function (a, b, c, d) {
            var e = this.lang.fakeobjects, e = e[c] || e.unknown, b = {"class": b, "data-cke-realelement": encodeURIComponent(a.getOuterHtml()), "data-cke-real-node-type": a.type, alt: e, title: e, align: a.getAttribute("align") || ""};
            CKEDITOR.env.hc || (b.src = CKEDITOR.getUrl(k.path +
                "images/spacer.gif"));
            c && (b["data-cke-real-element-type"] = c);
            d && (b["data-cke-resizable"] = d, c = new i, d = a.getAttribute("width"), a = a.getAttribute("height"), d && (c.rules.width = h(d)), a && (c.rules.height = h(a)), c.populate(b));
            return this.document.createElement("img", {attributes: b})
        };
        CKEDITOR.editor.prototype.createFakeParserElement = function (a, b, c, d) {
            var e = this.lang.fakeobjects, e = e[c] || e.unknown, f;
            f = new CKEDITOR.htmlParser.basicWriter;
            a.writeHtml(f);
            f = f.getHtml();
            b = {"class": b, "data-cke-realelement": encodeURIComponent(f),
                "data-cke-real-node-type": a.type, alt: e, title: e, align: a.attributes.align || ""};
            CKEDITOR.env.hc || (b.src = CKEDITOR.getUrl(k.path + "images/spacer.gif"));
            c && (b["data-cke-real-element-type"] = c);
            d && (b["data-cke-resizable"] = d, d = a.attributes, a = new i, c = d.width, d = d.height, void 0 != c && (a.rules.width = h(c)), void 0 != d && (a.rules.height = h(d)), a.populate(b));
            return new CKEDITOR.htmlParser.element("img", b)
        };
        CKEDITOR.editor.prototype.restoreRealElement = function (a) {
            if (a.data("cke-real-node-type") != CKEDITOR.NODE_ELEMENT)return null;
            var b = CKEDITOR.dom.element.createFromHtml(decodeURIComponent(a.data("cke-realelement")), this.document);
            if (a.data("cke-resizable")) {
                var c = a.getStyle("width"), a = a.getStyle("height");
                c && b.setAttribute("width", g(b.getAttribute("width"), c));
                a && b.setAttribute("height", g(b.getAttribute("height"), a))
            }
            return b
        }
    })();
    CKEDITOR.plugins.add("link", {requires: "dialog,fakeobjects", onLoad: function () {
        function b(b) {
            return c.replace(/%1/g, "rtl" == b ? "right" : "left").replace(/%2/g, "cke_contents_" + b)
        }

        var a = "background:url(" + CKEDITOR.getUrl(this.path + "images/anchor.png") + ") no-repeat %1 center;border:1px dotted #00f;", c = ".%2 a.cke_anchor,.%2 a.cke_anchor_empty,.cke_editable.%2 a[name],.cke_editable.%2 a[data-cke-saved-name]{" + a + "padding-%1:18px;cursor:auto;}" + (CKEDITOR.env.ie ? "a.cke_anchor_empty{display:inline-block;}" : "") + ".%2 img.cke_anchor{" +
            a + "width:16px;min-height:15px;height:1.15em;vertical-align:" + (CKEDITOR.env.opera ? "middle" : "text-bottom") + ";}";
        CKEDITOR.addCss(b("ltr") + b("rtl"))
    }, init: function (b) {
        b.addCommand("link", new CKEDITOR.dialogCommand("link"));
        b.addCommand("anchor", new CKEDITOR.dialogCommand("anchor"));
        b.addCommand("unlink", new CKEDITOR.unlinkCommand);
        b.addCommand("removeAnchor", new CKEDITOR.removeAnchorCommand);
        b.setKeystroke(CKEDITOR.CTRL + 76, "link");
        b.ui.addButton && (b.ui.addButton("Link", {label: b.lang.link.toolbar, command: "link",
            toolbar: "links,10"}), b.ui.addButton("Unlink", {label: b.lang.link.unlink, command: "unlink", toolbar: "links,20"}), b.ui.addButton("Anchor", {label: b.lang.link.anchor.toolbar, command: "anchor", toolbar: "links,30"}));
        CKEDITOR.dialog.add("link", this.path + "dialogs/link.js");
        CKEDITOR.dialog.add("anchor", this.path + "dialogs/anchor.js");
        b.on("doubleclick", function (a) {
            var c = CKEDITOR.plugins.link.getSelectedLink(b) || a.data.element;
            if (!c.isReadOnly())if (c.is("a")) {
                a.data.dialog = c.getAttribute("name") && (!c.getAttribute("href") || !c.getChildCount()) ? "anchor" : "link";
                b.getSelection().selectElement(c)
            } else if (CKEDITOR.plugins.link.tryRestoreFakeAnchor(b, c))a.data.dialog = "anchor"
        });
        b.addMenuItems && b.addMenuItems({anchor: {label: b.lang.link.anchor.menu, command: "anchor", group: "anchor", order: 1}, removeAnchor: {label: b.lang.link.anchor.remove, command: "removeAnchor", group: "anchor", order: 5}, link: {label: b.lang.link.menu, command: "link", group: "link", order: 1}, unlink: {label: b.lang.link.unlink, command: "unlink", group: "link", order: 5}});
        b.contextMenu &&
        b.contextMenu.addListener(function (a) {
            if (!a || a.isReadOnly())return null;
            a = CKEDITOR.plugins.link.tryRestoreFakeAnchor(b, a);
            if (!a && !(a = CKEDITOR.plugins.link.getSelectedLink(b)))return null;
            var c = {};
            a.getAttribute("href") && a.getChildCount() && (c = {link: CKEDITOR.TRISTATE_OFF, unlink: CKEDITOR.TRISTATE_OFF});
            if (a && a.hasAttribute("name"))c.anchor = c.removeAnchor = CKEDITOR.TRISTATE_OFF;
            return c
        })
    }, afterInit: function (b) {
        var a = b.dataProcessor, c = a && a.dataFilter, a = a && a.htmlFilter, d = b._.elementsPath && b._.elementsPath.filters;
        c && c.addRules({elements: {a: function (a) {
            var c = a.attributes;
            if (!c.name)return null;
            var d = !a.children.length;
            if (CKEDITOR.plugins.link.synAnchorSelector) {
                var a = d ? "cke_anchor_empty" : "cke_anchor", e = c["class"];
                if (c.name && (!e || 0 > e.indexOf(a)))c["class"] = (e || "") + " " + a;
                d && CKEDITOR.plugins.link.emptyAnchorFix && (c.contenteditable = "false", c["data-cke-editable"] = 1)
            } else if (CKEDITOR.plugins.link.fakeAnchor && d)return b.createFakeParserElement(a, "cke_anchor", "anchor");
            return null
        }}});
        CKEDITOR.plugins.link.emptyAnchorFix &&
            a && a.addRules({elements: {a: function (a) {
            delete a.attributes.contenteditable
        }}});
        d && d.push(function (a, c) {
            if ("a" == c && (CKEDITOR.plugins.link.tryRestoreFakeAnchor(b, a) || a.getAttribute("name") && (!a.getAttribute("href") || !a.getChildCount())))return"anchor"
        })
    }});
    CKEDITOR.plugins.link = {getSelectedLink: function (b) {
        var a = b.getSelection(), c = a.getSelectedElement();
        return c && c.is("a") ? c : (a = a.getRanges(!0)[0]) ? (a.shrink(CKEDITOR.SHRINK_TEXT), b.elementPath(a.getCommonAncestor()).contains("a", 1)) : null
    }, fakeAnchor: CKEDITOR.env.opera || CKEDITOR.env.webkit, synAnchorSelector: CKEDITOR.env.ie, emptyAnchorFix: CKEDITOR.env.ie && 8 > CKEDITOR.env.version, tryRestoreFakeAnchor: function (b, a) {
        if (a && a.data("cke-real-element-type") && "anchor" == a.data("cke-real-element-type")) {
            var c = b.restoreRealElement(a);
            if (c.data("cke-saved-name"))return c
        }
    }};
    CKEDITOR.unlinkCommand = function () {
    };
    CKEDITOR.unlinkCommand.prototype = {exec: function (b) {
        var a = new CKEDITOR.style({element: "a", type: CKEDITOR.STYLE_INLINE, alwaysRemoveElement: 1});
        b.removeStyle(a)
    }, refresh: function (b, a) {
        var c = a.lastElement && a.lastElement.getAscendant("a", !0);
        c && "a" == c.getName() && c.getAttribute("href") && c.getChildCount() ? this.setState(CKEDITOR.TRISTATE_OFF) : this.setState(CKEDITOR.TRISTATE_DISABLED)
    }, contextSensitive: 1, startDisabled: 1};
    CKEDITOR.removeAnchorCommand = function () {
    };
    CKEDITOR.removeAnchorCommand.prototype = {exec: function (b) {
        var a = b.getSelection(), c = a.createBookmarks(), d;
        if (a && (d = a.getSelectedElement()) && (CKEDITOR.plugins.link.fakeAnchor && !d.getChildCount() ? CKEDITOR.plugins.link.tryRestoreFakeAnchor(b, d) : d.is("a")))d.remove(1); else if (d = CKEDITOR.plugins.link.getSelectedLink(b))d.hasAttribute("href") ? (d.removeAttributes({name: 1, "data-cke-saved-name": 1}), d.removeClass("cke_anchor")) : d.remove(1);
        a.selectBookmarks(c)
    }};
    CKEDITOR.tools.extend(CKEDITOR.config, {linkShowAdvancedTab: !0, linkShowTargetTab: !0});
    (function () {
        function N(a, b, d) {
            return l(b) && l(d) && d.equals(b.getNext(function (a) {
                return!(y(a) || z(a) || o(a))
            }))
        }

        function t(a) {
            this.upper = a[0];
            this.lower = a[1];
            this.set.apply(this, a.slice(2))
        }

        function H(a) {
            var b = a.element, d;
            return b && l(b) ? (d = b.getAscendant(a.triggers, !0)) && !d.contains(a.editable) && !d.equals(a.editable) ? d : null : null
        }

        function ba(a, b, d) {
            m(a, b);
            m(a, d);
            a = b.size.bottom;
            d = d.size.top;
            return a && d ? 0 | (a + d) / 2 : a || d
        }

        function q(a, b, d) {
            return b = b[d ? "getPrevious" : "getNext"](function (e) {
                return e && e.type ==
                    CKEDITOR.NODE_TEXT && !y(e) || l(e) && !o(e) && !u(a, e)
            })
        }

        function ca(a) {
            var b = a.doc, d = A('<span contenteditable="false" style="' + I + "position:absolute;border-top:1px dashed " + a.boxColor + '"></span>', b);
            p(d, {attach: function () {
                this.wrap.getParent() || this.wrap.appendTo(a.editable, !0);
                return this
            }, lineChildren: [p(A('<span title="' + a.editor.lang.magicline.title + '" contenteditable="false">&#8629;</span>', b), {base: I + "height:17px;width:17px;" + (a.rtl ? "left" : "right") + ":17px;background:url(" + this.path + "images/icon.png) center no-repeat " +
                a.boxColor + ";cursor:pointer;" + (n.hc ? "font-size: 15px;line-height:14px;border:1px solid #fff;text-align:center;" : ""), looks: ["top:-8px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "2px", 1), "top:-17px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "2px 2px 0px 0px", 1), "top:-1px;" + CKEDITOR.tools.cssVendorPrefix("border-radius", "0px 0px 2px 2px", 1)]}), p(A(O, b), {base: P + "left:0px;border-left-color:" + a.boxColor + ";", looks: ["border-width:8px 0 8px 8px;top:-8px", "border-width:8px 0 0 8px;top:-8px", "border-width:0 0 8px 8px;top:0px"]}),
                p(A(O, b), {base: P + "right:0px;border-right-color:" + a.boxColor + ";", looks: ["border-width:8px 8px 8px 0;top:-8px", "border-width:8px 8px 0 0;top:-8px", "border-width:0 8px 8px 0;top:0px"]})], detach: function () {
                this.wrap.getParent() && this.wrap.remove();
                return this
            }, mouseNear: function () {
                m(a, this);
                var e = a.holdDistance, b = this.size;
                return b && a.mouse.y > b.top - e && a.mouse.y < b.bottom + e && a.mouse.x > b.left - e && a.mouse.x < b.right + e ? !0 : !1
            }, place: function () {
                var e = a.view, b = a.editable, c = a.trigger, d = c.upper, i = c.lower, h = d || i,
                    k = h.getParent(), g = {};
                this.trigger = c;
                d && m(a, d, !0);
                i && m(a, i, !0);
                m(a, k, !0);
                a.inInlineMode && B(a, !0);
                k.equals(b) ? (g.left = e.scroll.x, g.right = -e.scroll.x, g.width = "") : (g.left = h.size.left - h.size.margin.left + e.scroll.x - (a.inInlineMode ? e.editable.left + e.editable.border.left : 0), g.width = h.size.outerWidth + h.size.margin.left + h.size.margin.right + e.scroll.x, g.right = "");
                d && i ? g.top = d.size.margin.bottom === i.size.margin.top ? 0 | d.size.bottom + d.size.margin.bottom / 2 : d.size.margin.bottom < i.size.margin.top ? d.size.bottom + d.size.margin.bottom :
                    d.size.bottom + d.size.margin.bottom - i.size.margin.top : d ? i || (g.top = d.size.bottom + d.size.margin.bottom) : g.top = i.size.top - i.size.margin.top;
                c.is(w) || g.top > e.scroll.y - 15 && g.top < e.scroll.y + 5 ? (g.top = a.inInlineMode ? 0 : e.scroll.y, this.look(w)) : c.is(x) || g.top > e.pane.bottom - 5 && g.top < e.pane.bottom + 15 ? (g.top = a.inInlineMode ? e.editable.height + e.editable.padding.top + e.editable.padding.bottom : e.pane.bottom - 1, this.look(x)) : (a.inInlineMode && (g.top -= e.editable.top + e.editable.border.top), this.look(r));
                a.inInlineMode &&
                (g.top--, g.top += e.editable.scroll.top, g.left += e.editable.scroll.left);
                for (var Q in g)g[Q] = CKEDITOR.tools.cssLength(g[Q]);
                this.setStyles(g)
            }, look: function (a) {
                if (this.oldLook != a) {
                    for (var d = this.lineChildren.length, c; d--;)(c = this.lineChildren[d]).setAttribute("style", c.base + c.looks[0 | a / 2]);
                    this.oldLook = a
                }
            }, wrap: new J("span", a.doc)});
            for (b = d.lineChildren.length; b--;)d.lineChildren[b].appendTo(d);
            d.look(r);
            d.appendTo(d.wrap);
            d.unselectable();
            d.lineChildren[0].on("mouseup", function (b) {
                d.detach();
                K(a, function (d) {
                    var c =
                        a.line.trigger;
                    d[c.is(C) ? "insertBefore" : "insertAfter"](c.is(C) ? c.lower : c.upper)
                }, !0);
                a.editor.focus();
                !n.ie && a.enterMode != CKEDITOR.ENTER_BR && a.hotNode.scrollIntoView();
                b.data.preventDefault(!0)
            });
            d.on("mousedown", function (a) {
                a.data.preventDefault(!0)
            });
            a.line = d
        }

        function K(a, b, d) {
            var e = new CKEDITOR.dom.range(a.doc), f = a.editor, c;
            n.ie && a.enterMode == CKEDITOR.ENTER_BR ? c = a.doc.createText(D) : (c = new J(a.enterBehavior, a.doc), a.enterMode != CKEDITOR.ENTER_BR && a.doc.createText(D).appendTo(c));
            d && f.fire("saveSnapshot");
            b(c);
            e.moveToPosition(c, CKEDITOR.POSITION_AFTER_START);
            f.getSelection().selectRanges([e]);
            a.hotNode = c;
            d && f.fire("saveSnapshot")
        }

        function R(a, b) {
            return{canUndo: !0, modes: {wysiwyg: 1}, exec: function () {
                function d(d) {
                    var f = n.ie && 9 > n.version ? " " : D, c = a.hotNode && a.hotNode.getText() == f && a.element.equals(a.hotNode) && a.lastCmdDirection === !!b;
                    K(a, function (f) {
                        c && a.hotNode && a.hotNode.remove();
                        f[b ? "insertAfter" : "insertBefore"](d);
                        f.setAttributes({"data-cke-magicline-hot": 1, "data-cke-magicline-dir": !!b});
                        a.lastCmdDirection = !!b
                    });
                    !n.ie && a.enterMode != CKEDITOR.ENTER_BR && a.hotNode.scrollIntoView();
                    a.line.detach()
                }

                return function (e) {
                    e = e.getSelection().getStartElement();
                    if ((e = e.getAscendant(S, 1)) && !e.equals(a.editable) && !e.contains(a.editable)) {
                        a.element = e;
                        var f = q(a, e, !b), c;
                        l(f) && f.is(a.triggers) && f.is(da) && (!q(a, f, !b) || (c = q(a, f, !b)) && l(c) && c.is(a.triggers)) ? d(f) : (c = H(a, e), l(c) && (q(a, c, !b) ? (e = q(a, c, !b)) && (l(e) && e.is(a.triggers)) && d(c) : d(c)))
                    }
                }
            }()}
        }

        function u(a, b) {
            if (!b || !(b.type == CKEDITOR.NODE_ELEMENT && b.$))return!1;
            var d =
                a.line;
            return d.wrap.equals(b) || d.wrap.contains(b)
        }

        function l(a) {
            return a && a.type == CKEDITOR.NODE_ELEMENT && a.$
        }

        function o(a) {
            if (!l(a))return!1;
            var b;
            if (!(b = T(a)))l(a) ? (b = {left: 1, right: 1, center: 1}, b = !(!b[a.getComputedStyle("float")] && !b[a.getAttribute("align")])) : b = !1;
            return b
        }

        function T(a) {
            return!!{absolute: 1, fixed: 1, relative: 1}[a.getComputedStyle("position")]
        }

        function E(a, b) {
            return l(b) ? b.is(a.triggers) : null
        }

        function ea(a, b, d) {
            b = b[d ? "getLast" : "getFirst"](function (d) {
                return a.isRelevant(d) && !d.is(fa)
            });
            if (!b)return!1;
            m(a, b);
            return d ? b.size.top > a.mouse.y : b.size.bottom < a.mouse.y
        }

        function U(a) {
            var b = a.editable, d = a.mouse, e = a.view, f = a.triggerOffset;
            B(a);
            var c = d.y > (a.inInlineMode ? e.editable.top + e.editable.height / 2 : Math.min(e.editable.height, e.pane.height) / 2), b = b[c ? "getLast" : "getFirst"](function (a) {
                return!(y(a) || z(a))
            });
            if (!b)return null;
            u(a, b) && (b = a.line.wrap[c ? "getPrevious" : "getNext"](function (a) {
                return!(y(a) || z(a))
            }));
            if (!l(b) || o(b) || !E(a, b))return null;
            m(a, b);
            return!c && 0 <= b.size.top && 0 < d.y && d.y < b.size.top +
                f ? (a = a.inInlineMode || 0 === e.scroll.y ? w : r, new t([null, b, C, F, a])) : c && b.size.bottom <= e.pane.height && d.y > b.size.bottom - f && d.y < e.pane.height ? (a = a.inInlineMode || b.size.bottom > e.pane.height - f && b.size.bottom < e.pane.height ? x : r, new t([b, null, V, F, a])) : null
        }

        function W(a) {
            var b = a.mouse, d = a.view, e = a.triggerOffset, f = H(a);
            if (!f)return null;
            m(a, f);
            var e = Math.min(e, 0 | f.size.outerHeight / 2), c = [], j, i;
            if (b.y > f.size.top - 1 && b.y < f.size.top + e)i = !1; else if (b.y > f.size.bottom - e && b.y < f.size.bottom + 1)i = !0; else return null;
            if (o(f) ||
                ea(a, f, i) || f.getParent().is(X))return null;
            var h = q(a, f, !i);
            if (h) {
                if (h && h.type == CKEDITOR.NODE_TEXT)return null;
                if (l(h)) {
                    if (o(h) || !E(a, h) || h.getParent().is(X))return null;
                    c = [h, f][i ? "reverse" : "concat"]().concat([L, F])
                }
            } else f.equals(a.editable[i ? "getLast" : "getFirst"](a.isRelevant)) ? (B(a), i && b.y > f.size.bottom - e && b.y < d.pane.height && f.size.bottom > d.pane.height - e && f.size.bottom < d.pane.height ? j = x : 0 < b.y && b.y < f.size.top + e && (j = w)) : j = r, c = [null, f][i ? "reverse" : "concat"]().concat([i ? V : C, F, j, f.equals(a.editable[i ?
                "getLast" : "getFirst"](a.isRelevant)) ? i ? x : w : r]);
            return 0 in c ? new t(c) : null
        }

        function M(a, b, d, e) {
            for (var f = function () {
                var d = n.ie ? b.$.currentStyle : a.win.$.getComputedStyle(b.$, "");
                return n.ie ? function (a) {
                    return d[CKEDITOR.tools.cssStyleToDomStyle(a)]
                } : function (a) {
                    return d.getPropertyValue(a)
                }
            }(), c = b.getDocumentPosition(), j = {}, i = {}, h = {}, k = {}, g = s.length; g--;)j[s[g]] = parseInt(f("border-" + s[g] + "-width"), 10) || 0, h[s[g]] = parseInt(f("padding-" + s[g]), 10) || 0, i[s[g]] = parseInt(f("margin-" + s[g]), 10) || 0;
            (!d || e) &&
            G(a, e);
            k.top = c.y - (d ? 0 : a.view.scroll.y);
            k.left = c.x - (d ? 0 : a.view.scroll.x);
            k.outerWidth = b.$.offsetWidth;
            k.outerHeight = b.$.offsetHeight;
            k.height = k.outerHeight - (h.top + h.bottom + j.top + j.bottom);
            k.width = k.outerWidth - (h.left + h.right + j.left + j.right);
            k.bottom = k.top + k.outerHeight;
            k.right = k.left + k.outerWidth;
            a.inInlineMode && (k.scroll = {top: b.$.scrollTop, left: b.$.scrollLeft});
            return p({border: j, padding: h, margin: i, ignoreScroll: d}, k, !0)
        }

        function m(a, b, d) {
            if (!l(b))return b.size = null;
            if (b.size) {
                if (b.size.ignoreScroll ==
                    d && b.size.date > new Date - Y)return null
            } else b.size = {};
            return p(b.size, M(a, b, d), {date: +new Date}, !0)
        }

        function B(a, b) {
            a.view.editable = M(a, a.editable, b, !0)
        }

        function G(a, b) {
            a.view || (a.view = {});
            var d = a.view;
            if (b || !(d && d.date > new Date - Y)) {
                var e = a.win, d = e.getScrollPosition(), e = e.getViewPaneSize();
                p(a.view, {scroll: {x: d.x, y: d.y, width: a.doc.$.documentElement.scrollWidth - e.width, height: a.doc.$.documentElement.scrollHeight - e.height}, pane: {width: e.width, height: e.height, bottom: e.height + d.y}, date: +new Date}, !0)
            }
        }

        function ga(a, b, d, e) {
            for (var f = e, c = e, j = 0, i = !1, h = !1, k = a.view.pane.height, g = a.mouse; g.y + j < k && 0 < g.y - j;) {
                i || (i = b(f, e));
                h || (h = b(c, e));
                !i && 0 < g.y - j && (f = d(a, {x: g.x, y: g.y - j}));
                !h && g.y + j < k && (c = d(a, {x: g.x, y: g.y + j}));
                if (i && h)break;
                j += 2
            }
            return new t([f, c, null, null])
        }

        CKEDITOR.plugins.add("magicline", {init: function (a) {
            var b = {};
            b[CKEDITOR.ENTER_BR] = "br";
            b[CKEDITOR.ENTER_P] = "p";
            b[CKEDITOR.ENTER_DIV] = "div";
            var d = a.config, e = d.magicline_triggerOffset || 30, f = d.enterMode, c = {editor: a, enterBehavior: b[f], enterMode: f, triggerOffset: e,
                holdDistance: 0 | e * (d.magicline_holdDistance || 0.5), boxColor: d.magicline_color || "#ff0000", rtl: "rtl" == d.contentsLangDirection, triggers: d.magicline_everywhere ? S : {table: 1, hr: 1, div: 1, ul: 1, ol: 1, dl: 1, form: 1, blockquote: 1}}, j, i, h;
            c.isRelevant = function (a) {
                return l(a) && !u(c, a) && !o(a)
            };
            a.on("contentDom", function () {
                var b = a.editable(), e = a.document, f = a.window;
                p(c, {editable: b, inInlineMode: b.isInline(), doc: e, win: f}, !0);
                c.boundary = c.inInlineMode ? c.editable : c.doc.getDocumentElement();
                b.is(v.$inline) || (c.inInlineMode && !T(b) && b.setStyles({position: "relative", top: null, left: null}), ca.call(this, c), G(c), b.attachListener(a, "beforeUndoImage", function () {
                    c.line.detach()
                }), b.attachListener(a, "beforeGetData", function () {
                    c.line.wrap.getParent() && (c.line.detach(), a.once("getData", function () {
                        c.line.attach()
                    }, null, null, 1E3))
                }, null, null, 0), b.attachListener(c.inInlineMode ? e : e.getWindow().getFrame(), "mouseout", function (b) {
                    if ("wysiwyg" == a.mode)if (c.inInlineMode) {
                        var d = b.data.$.clientX, b = b.data.$.clientY;
                        G(c);
                        B(c, !0);
                        var e = c.view.editable,
                            f = c.view.scroll;
                        if (!(d > e.left - f.x && d < e.right - f.x) || !(b > e.top - f.y && b < e.bottom - f.y))clearTimeout(h), h = null, c.line.detach()
                    } else clearTimeout(h), h = null, c.line.detach()
                }), b.attachListener(b, "keyup", function () {
                    c.hiddenMode = 0
                }), b.attachListener(b, "keydown", function (b) {
                    if ("wysiwyg" == a.mode)switch (b = b.data.getKeystroke(), a.getSelection().getStartElement(), b) {
                        case 2228240:
                        case 16:
                            c.hiddenMode = 1, c.line.detach()
                    }
                }), b.attachListener(c.inInlineMode ? b : e, "mousemove", function (b) {
                    i = !0;
                    if (!("wysiwyg" != a.mode || h)) {
                        var d =
                        {x: b.data.$.clientX, y: b.data.$.clientY};
                        h = setTimeout(function () {
                            c.mouse = d;
                            h = c.trigger = null;
                            G(c);
                            if (i && !c.hiddenMode && a.focusManager.hasFocus && !c.line.mouseNear() && (c.element = Z(c, !0)))(c.trigger = U(c) || W(c) || $(c)) ? c.line.attach().place() : (c.trigger = null, c.line.detach()), i = !1
                        }, 30)
                    }
                }), b.attachListener(f, "scroll", function () {
                    "wysiwyg" == a.mode && (c.line.detach(), n.webkit && (c.hiddenMode = 1, clearTimeout(j), j = setTimeout(function () {
                        c.hiddenMode = 0
                    }, 50)))
                }), b.attachListener(f, "mousedown", function () {
                    "wysiwyg" == a.mode &&
                    (c.line.detach(), c.hiddenMode = 1)
                }), b.attachListener(f, "mouseup", function () {
                    c.hiddenMode = 0
                }), a.addCommand("accessPreviousSpace", R(c)), a.addCommand("accessNextSpace", R(c, !0)), a.setKeystroke([
                    [d.magicline_keystrokePrevious, "accessPreviousSpace"],
                    [d.magicline_keystrokeNext, "accessNextSpace"]
                ]), a.on("loadSnapshot", function () {
                    for (var a = e.getElementsByTag(c.enterBehavior), b, d = a.count(); d--;)if ((b = a.getItem(d)).hasAttribute("data-cke-magicline-hot")) {
                        c.hotNode = b;
                        c.lastCmdDirection = "true" === b.getAttribute("data-cke-magicline-dir") ?
                            !0 : !1;
                        break
                    }
                }), this.backdoor = {accessFocusSpace: K, boxTrigger: t, isLine: u, getAscendantTrigger: H, getNonEmptyNeighbour: q, getSize: M, that: c, triggerEdge: W, triggerEditable: U, triggerExpand: $})
            }, this)
        }});
        var p = CKEDITOR.tools.extend, J = CKEDITOR.dom.element, A = J.createFromHtml, n = CKEDITOR.env, v = CKEDITOR.dtd, C = 128, V = 64, L = 32, F = 16, aa = 8, w = 4, x = 2, r = 1, D = " ", X = v.$listItem, fa = v.$tableContent, da = p({}, v.$nonEditable, v.$empty), S = v.$block, Y = 100, I = "width:0px;height:0px;padding:0px;margin:0px;display:block;z-index:9999;color:#fff;position:absolute;font-size: 0px;line-height:0px;",
            P = I + "border-color:transparent;display:block;border-style:solid;", O = "<span>" + D + "</span>";
        t.prototype = {set: function (a, b, d) {
            this.properties = a + b + (d || r);
            return this
        }, is: function (a) {
            return(this.properties & a) == a
        }};
        var Z = function () {
            return function (a, b, d) {
                if (!a.mouse)return null;
                var e = a.doc, f = a.line.wrap, d = d || a.mouse, c = new CKEDITOR.dom.element(e.$.elementFromPoint(d.x, d.y));
                b && u(a, c) && (f.hide(), c = new CKEDITOR.dom.element(e.$.elementFromPoint(d.x, d.y)), f.show());
                return!c || !(c.type == CKEDITOR.NODE_ELEMENT && c.$) ||
                    n.ie && 9 > n.version && !a.boundary.equals(c) && !a.boundary.contains(c) ? null : c
            }
        }(), y = CKEDITOR.dom.walker.whitespaces(), z = CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_COMMENT), $ = function () {
            function a(a) {
                var e = a.element, f, c, j;
                if (!l(e) || e.contains(a.editable))return null;
                j = ga(a, function (a, b) {
                    return!b.equals(a)
                }, function (a, b) {
                    return Z(a, !0, b)
                }, e);
                f = j.upper;
                c = j.lower;
                if (N(a, f, c))return j.set(L, aa);
                if (f && e.contains(f))for (; !f.getParent().equals(e);)f = f.getParent(); else f = e.getFirst(function (c) {
                    return b(a, c)
                });
                if (c && e.contains(c))for (; !c.getParent().equals(e);)c = c.getParent(); else c = e.getLast(function (c) {
                    return b(a, c)
                });
                if (!f || !c)return null;
                m(a, f);
                m(a, c);
                if (!(a.mouse.y > f.size.top && a.mouse.y < c.size.bottom))return null;
                for (var e = Number.MAX_VALUE, i, h, k, g; c && !c.equals(f) && (h = f.getNext(a.isRelevant));)i = Math.abs(ba(a, f, h) - a.mouse.y), i < e && (e = i, k = f, g = h), f = h, m(a, f);
                if (!k || !g || !(a.mouse.y > k.size.top && a.mouse.y < g.size.bottom))return null;
                j.upper = k;
                j.lower = g;
                return j.set(L, aa)
            }

            function b(a, b) {
                return!(b && b.type ==
                    CKEDITOR.NODE_TEXT || z(b) || o(b) || u(a, b) || b.type == CKEDITOR.NODE_ELEMENT && b.$ && b.is("br"))
            }

            return function (b) {
                var e = a(b), f;
                if (f = e) {
                    f = e.upper;
                    var c = e.lower;
                    f = !f || !c || o(c) || o(f) || c.equals(f) || f.equals(c) || c.contains(f) || f.contains(c) ? !1 : E(b, f) && E(b, c) && N(b, f, c) ? !0 : !1
                }
                return f ? e : null
            }
        }(), s = ["top", "left", "right", "bottom"]
    })();
    CKEDITOR.config.magicline_keystrokePrevious = CKEDITOR.CTRL + CKEDITOR.ALT + 219;
    CKEDITOR.config.magicline_keystrokeNext = CKEDITOR.CTRL + CKEDITOR.ALT + 221;
    (function () {
        function l(a) {
            if (!a || a.type != CKEDITOR.NODE_ELEMENT || "form" != a.getName())return[];
            for (var e = [], f = ["style", "className"], b = 0; b < f.length; b++) {
                var d = a.$.elements.namedItem(f[b]);
                d && (d = new CKEDITOR.dom.element(d), e.push([d, d.nextSibling]), d.remove())
            }
            return e
        }

        function o(a, e) {
            if (a && !(a.type != CKEDITOR.NODE_ELEMENT || "form" != a.getName()) && 0 < e.length)for (var f = e.length - 1; 0 <= f; f--) {
                var b = e[f][0], d = e[f][1];
                d ? b.insertBefore(d) : b.appendTo(a)
            }
        }

        function n(a, e) {
            var f = l(a), b = {}, d = a.$;
            e || (b["class"] = d.className ||
                "", d.className = "");
            b.inline = d.style.cssText || "";
            e || (d.style.cssText = "position: static; overflow: visible");
            o(f);
            return b
        }

        function p(a, e) {
            var f = l(a), b = a.$;
            "class"in e && (b.className = e["class"]);
            "inline"in e && (b.style.cssText = e.inline);
            o(f)
        }

        function q(a) {
            var e = CKEDITOR.instances, f;
            for (f in e) {
                var b = e[f];
                "wysiwyg" == b.mode && !b.readOnly && (b = b.document.getBody(), b.setAttribute("contentEditable", !1), b.setAttribute("contentEditable", !0))
            }
            a.editable().hasFocus && (a.toolbox.focus(), a.focus())
        }

        CKEDITOR.plugins.add("maximize",
            {init: function (a) {
                function e() {
                    var b = d.getViewPaneSize();
                    a.resize(b.width, b.height, null, !0)
                }

                if (a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                    var f = a.lang, b = CKEDITOR.document, d = b.getWindow(), j, k, m, l = CKEDITOR.TRISTATE_OFF;
                    a.addCommand("maximize", {modes: {wysiwyg: !CKEDITOR.env.iOS, source: !CKEDITOR.env.iOS}, readOnly: 1, editorFocus: !1, exec: function () {
                        var h = a.container.getChild(1), g = a.ui.space("contents");
                        if ("wysiwyg" == a.mode) {
                            var c = a.getSelection();
                            j = c && c.getRanges();
                            k = d.getScrollPosition()
                        } else {
                            var i = a.editable().$;
                            j = !CKEDITOR.env.ie && [i.selectionStart, i.selectionEnd];
                            k = [i.scrollLeft, i.scrollTop]
                        }
                        if (this.state == CKEDITOR.TRISTATE_OFF) {
                            d.on("resize", e);
                            m = d.getScrollPosition();
                            for (c = a.container; c = c.getParent();)c.setCustomData("maximize_saved_styles", n(c)), c.setStyle("z-index", a.config.baseFloatZIndex - 5);
                            g.setCustomData("maximize_saved_styles", n(g, !0));
                            h.setCustomData("maximize_saved_styles", n(h, !0));
                            g = {overflow: CKEDITOR.env.webkit ? "" : "hidden", width: 0, height: 0};
                            b.getDocumentElement().setStyles(g);
                            !CKEDITOR.env.gecko &&
                            b.getDocumentElement().setStyle("position", "fixed");
                            (!CKEDITOR.env.gecko || !CKEDITOR.env.quirks) && b.getBody().setStyles(g);
                            CKEDITOR.env.ie ? setTimeout(function () {
                                d.$.scrollTo(0, 0)
                            }, 0) : d.$.scrollTo(0, 0);
                            h.setStyle("position", CKEDITOR.env.gecko && CKEDITOR.env.quirks ? "fixed" : "absolute");
                            h.$.offsetLeft;
                            h.setStyles({"z-index": a.config.baseFloatZIndex - 5, left: "0px", top: "0px"});
                            h.addClass("cke_maximized");
                            e();
                            g = h.getDocumentPosition();
                            h.setStyles({left: -1 * g.x + "px", top: -1 * g.y + "px"});
                            CKEDITOR.env.gecko && q(a)
                        } else if (this.state ==
                            CKEDITOR.TRISTATE_ON) {
                            d.removeListener("resize", e);
                            g = [g, h];
                            for (c = 0; c < g.length; c++)p(g[c], g[c].getCustomData("maximize_saved_styles")), g[c].removeCustomData("maximize_saved_styles");
                            for (c = a.container; c = c.getParent();)p(c, c.getCustomData("maximize_saved_styles")), c.removeCustomData("maximize_saved_styles");
                            CKEDITOR.env.ie ? setTimeout(function () {
                                d.$.scrollTo(m.x, m.y)
                            }, 0) : d.$.scrollTo(m.x, m.y);
                            h.removeClass("cke_maximized");
                            CKEDITOR.env.webkit && (h.setStyle("display", "inline"), setTimeout(function () {
                                h.setStyle("display",
                                    "block")
                            }, 0));
                            a.fire("resize")
                        }
                        this.toggleState();
                        if (c = this.uiItems[0])g = this.state == CKEDITOR.TRISTATE_OFF ? f.maximize.maximize : f.maximize.minimize, c = CKEDITOR.document.getById(c._.id), c.getChild(1).setHtml(g), c.setAttribute("title", g), c.setAttribute("href", 'javascript:void("' + g + '");');
                        "wysiwyg" == a.mode ? j ? (CKEDITOR.env.gecko && q(a), a.getSelection().selectRanges(j), (i = a.getSelection().getStartElement()) && i.scrollIntoView(!0)) : d.$.scrollTo(k.x, k.y) : (j && (i.selectionStart = j[0], i.selectionEnd = j[1]), i.scrollLeft =
                            k[0], i.scrollTop = k[1]);
                        j = k = null;
                        l = this.state;
                        a.fire("maximize", this.state)
                    }, canUndo: !1});
                    a.ui.addButton && a.ui.addButton("Maximize", {label: f.maximize.maximize, command: "maximize", toolbar: "tools,10"});
                    a.on("mode", function () {
                        var b = a.getCommand("maximize");
                        b.setState(b.state == CKEDITOR.TRISTATE_DISABLED ? CKEDITOR.TRISTATE_DISABLED : l)
                    }, null, null, 100)
                }
            }})
    })();
    (function () {
        var c = {canUndo: !1, async: !0, exec: function (a) {
            a.getClipboardData({title: a.lang.pastetext.title}, function (b) {
                b && a.fire("paste", {type: "text", dataValue: b.dataValue});
                a.fire("afterCommandExec", {name: "pastetext", command: c, returnValue: !!b})
            })
        }};
        CKEDITOR.plugins.add("pastetext", {requires: "clipboard", init: function (a) {
            a.addCommand("pastetext", c);
            a.ui.addButton && a.ui.addButton("PasteText", {label: a.lang.pastetext.button, command: "pastetext", toolbar: "clipboard,40"});
            if (a.config.forcePasteAsPlainText)a.on("beforePaste",
                function (a) {
                    "html" != a.data.type && (a.data.type = "text")
                });
            a.on("pasteState", function (b) {
                a.getCommand("pastetext").setState(b.data)
            })
        }})
    })();
    (function () {
        function h(a, d, f) {
            var b = CKEDITOR.cleanWord;
            b ? f() : (a = CKEDITOR.getUrl(a.config.pasteFromWordCleanupFile || d + "filter/default.js"), CKEDITOR.scriptLoader.load(a, f, null, !0));
            return!b
        }

        function i(a) {
            a.data.type = "html"
        }

        CKEDITOR.plugins.add("pastefromword", {requires: "clipboard", init: function (a) {
            var d = 0, f = this.path;
            a.addCommand("pastefromword", {canUndo: !1, async: !0, exec: function (a) {
                var e = this;
                d = 1;
                a.once("beforePaste", i);
                a.getClipboardData({title: a.lang.pastefromword.title}, function (c) {
                    c && a.fire("paste",
                        {type: "html", dataValue: c.dataValue});
                    a.fire("afterCommandExec", {name: "pastefromword", command: e, returnValue: !!c})
                })
            }});
            a.ui.addButton && a.ui.addButton("PasteFromWord", {label: a.lang.pastefromword.toolbar, command: "pastefromword", toolbar: "clipboard,50"});
            a.on("pasteState", function (b) {
                a.getCommand("pastefromword").setState(b.data)
            });
            a.on("paste", function (b) {
                var e = b.data, c = e.dataValue;
                if (c && (d || /(class=\"?Mso|style=\"[^\"]*\bmso\-|w:WordDocument)/.test(c))) {
                    var g = h(a, f, function () {
                        if (g)a.fire("paste", e);
                        else if (!a.config.pasteFromWordPromptCleanup || d || confirm(a.lang.pastefromword.confirmCleanup))e.dataValue = CKEDITOR.cleanWord(c, a)
                    });
                    g && b.cancel()
                }
            }, null, null, 3)
        }})
    })();
    CKEDITOR.plugins.add("removeformat", {init: function (a) {
        a.addCommand("removeFormat", CKEDITOR.plugins.removeformat.commands.removeformat);
        a.ui.addButton && a.ui.addButton("RemoveFormat", {label: a.lang.removeformat.toolbar, command: "removeFormat", toolbar: "cleanup,10"})
    }});
    CKEDITOR.plugins.removeformat = {commands: {removeformat: {exec: function (a) {
        for (var h = a._.removeFormatRegex || (a._.removeFormatRegex = RegExp("^(?:" + a.config.removeFormatTags.replace(/,/g, "|") + ")$", "i")), e = a._.removeAttributes || (a._.removeAttributes = a.config.removeFormatAttributes.split(",")), f = CKEDITOR.plugins.removeformat.filter, k = a.getSelection().getRanges(1), l = k.createIterator(), c; c = l.getNextRange();) {
            c.collapsed || c.enlarge(CKEDITOR.ENLARGE_ELEMENT);
            var i = c.createBookmark(), b = i.startNode, j = i.endNode,
                d = function (b) {
                    for (var c = a.elementPath(b), e = c.elements, d = 1, g; (g = e[d]) && !g.equals(c.block) && !g.equals(c.blockLimit); d++)h.test(g.getName()) && f(a, g) && b.breakParent(g)
                };
            d(b);
            if (j) {
                d(j);
                for (b = b.getNextSourceNode(!0, CKEDITOR.NODE_ELEMENT); b && !b.equals(j);)d = b.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT), !("img" == b.getName() && b.data("cke-realelement")) && f(a, b) && (h.test(b.getName()) ? b.remove(1) : (b.removeAttributes(e), a.fire("removeFormatCleanup", b))), b = d
            }
            c.moveToBookmark(i)
        }
        a.forceNextSelectionCheck();
        a.getSelection().selectRanges(k)
    }}},
        filter: function (a, h) {
            for (var e = a._.removeFormatFilters || [], f = 0; f < e.length; f++)if (!1 === e[f](h))return!1;
            return!0
        }};
    CKEDITOR.editor.prototype.addRemoveFormatFilter = function (a) {
        this._.removeFormatFilters || (this._.removeFormatFilters = []);
        this._.removeFormatFilters.push(a)
    };
    CKEDITOR.config.removeFormatTags = "b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var";
    CKEDITOR.config.removeFormatAttributes = "class,style,lang,width,height,align,hspace,valign";
    (function () {
        CKEDITOR.plugins.add("sourcearea", {init: function (a) {
            function d() {
                this.hide();
                this.setStyle("height", this.getParent().$.clientHeight + "px");
                this.setStyle("width", this.getParent().$.clientWidth + "px");
                this.show()
            }

            if (a.elementMode != CKEDITOR.ELEMENT_MODE_INLINE) {
                var e = CKEDITOR.plugins.sourcearea;
                a.addMode("source", function (e) {
                    var b = a.ui.space("contents").getDocument().createElement("textarea");
                    b.setStyles(CKEDITOR.tools.extend({width: CKEDITOR.env.ie7Compat ? "99%" : "100%", height: "100%", resize: "none",
                        outline: "none", "text-align": "left"}, CKEDITOR.tools.cssVendorPrefix("tab-size", a.config.sourceAreaTabSize || 4)));
                    b.addClass("cke_source cke_reset cke_enable_context_menu");
                    a.ui.space("contents").append(b);
                    b = a.editable(new c(a, b));
                    b.setData(a.getData(1));
                    CKEDITOR.env.ie && (b.attachListener(a, "resize", d, b), b.attachListener(CKEDITOR.document.getWindow(), "resize", d, b), CKEDITOR.tools.setTimeout(d, 0, b));
                    a.fire("ariaWidget", this);
                    e()
                });
                a.addCommand("source", e.commands.source);
                a.ui.addButton && a.ui.addButton("Source",
                    {label: a.lang.sourcearea.toolbar, command: "source", toolbar: "mode,10"});
                a.on("mode", function () {
                    a.getCommand("source").setState("source" == a.mode ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF)
                })
            }
        }});
        var c = CKEDITOR.tools.createClass({base: CKEDITOR.editable, proto: {setData: function (a) {
            this.setValue(a);
            this.editor.fire("dataReady")
        }, getData: function () {
            return this.getValue()
        }, insertHtml: function () {
        }, insertElement: function () {
        }, insertText: function () {
        }, setReadOnly: function (a) {
            this[(a ? "set" : "remove") + "Attribute"]("readOnly",
                "readonly")
        }, detach: function () {
            c.baseProto.detach.call(this);
            this.clearCustomData();
            this.remove()
        }}})
    })();
    CKEDITOR.plugins.sourcearea = {commands: {source: {modes: {wysiwyg: 1, source: 1}, editorFocus: !1, readOnly: 1, exec: function (c) {
        "wysiwyg" == c.mode && c.fire("saveSnapshot");
        c.getCommand("source").setState(CKEDITOR.TRISTATE_DISABLED);
        c.setMode("source" == c.mode ? "wysiwyg" : "source")
    }, canUndo: !1}}};
    CKEDITOR.plugins.add("specialchar", {availableLangs: {ca: 1, cs: 1, cy: 1, de: 1, en: 1, eo: 1, et: 1, fa: 1, fi: 1, fr: 1, he: 1, hr: 1, it: 1, ku: 1, lv: 1, nb: 1, nl: 1, no: 1, "pt-br": 1, sk: 1, sv: 1, tr: 1, ug: 1, "zh-cn": 1}, requires: "dialog", init: function (a) {
        var c = this;
        CKEDITOR.dialog.add("specialchar", this.path + "dialogs/specialchar.js");
        a.addCommand("specialchar", {exec: function () {
            var b = a.langCode, b = c.availableLangs[b] ? b : c.availableLangs[b.replace(/-.*/, "")] ? b.replace(/-.*/, "") : "en";
            CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(c.path + "dialogs/lang/" +
                b + ".js"), function () {
                CKEDITOR.tools.extend(a.lang.specialchar, c.langEntries[b]);
                a.openDialog("specialchar")
            })
        }, modes: {wysiwyg: 1}, canUndo: !1});
        a.ui.addButton && a.ui.addButton("SpecialChar", {label: a.lang.specialchar.toolbar, command: "specialchar", toolbar: "insert,50"})
    }});
    CKEDITOR.config.specialChars = "! &quot; # $ % &amp; ' ( ) * + - . / 0 1 2 3 4 5 6 7 8 9 : ; &lt; = &gt; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ &euro; &lsquo; &rsquo; &ldquo; &rdquo; &ndash; &mdash; &iexcl; &cent; &pound; &curren; &yen; &brvbar; &sect; &uml; &copy; &ordf; &laquo; &not; &reg; &macr; &deg; &sup2; &sup3; &acute; &micro; &para; &middot; &cedil; &sup1; &ordm; &raquo; &frac14; &frac12; &frac34; &iquest; &Agrave; &Aacute; &Acirc; &Atilde; &Auml; &Aring; &AElig; &Ccedil; &Egrave; &Eacute; &Ecirc; &Euml; &Igrave; &Iacute; &Icirc; &Iuml; &ETH; &Ntilde; &Ograve; &Oacute; &Ocirc; &Otilde; &Ouml; &times; &Oslash; &Ugrave; &Uacute; &Ucirc; &Uuml; &Yacute; &THORN; &szlig; &agrave; &aacute; &acirc; &atilde; &auml; &aring; &aelig; &ccedil; &egrave; &eacute; &ecirc; &euml; &igrave; &iacute; &icirc; &iuml; &eth; &ntilde; &ograve; &oacute; &ocirc; &otilde; &ouml; &divide; &oslash; &ugrave; &uacute; &ucirc; &uuml; &yacute; &thorn; &yuml; &OElig; &oelig; &#372; &#374 &#373 &#375; &sbquo; &#8219; &bdquo; &hellip; &trade; &#9658; &bull; &rarr; &rArr; &hArr; &diams; &asymp;".split(" ");
    CKEDITOR.plugins.add("menubutton", {requires: "button,menu", onLoad: function () {
        var d = function (a) {
            var b = this._;
            if (b.state !== CKEDITOR.TRISTATE_DISABLED) {
                b.previousState = b.state;
                var c = b.menu;
                c || (c = b.menu = new CKEDITOR.menu(a, {panel: {className: "cke_menu_panel", attributes: {"aria-label": a.lang.common.options}}}), c.onHide = CKEDITOR.tools.bind(function () {
                    this.setState(this.modes && this.modes[a.mode] ? b.previousState : CKEDITOR.TRISTATE_DISABLED)
                }, this), this.onMenu && c.addListener(this.onMenu));
                b.on ? c.hide() : (this.setState(CKEDITOR.TRISTATE_ON),
                    setTimeout(function () {
                        c.show(CKEDITOR.document.getById(b.id), 4)
                    }, 0))
            }
        };
        CKEDITOR.ui.menuButton = CKEDITOR.tools.createClass({base: CKEDITOR.ui.button, $: function (a) {
            delete a.panel;
            this.base(a);
            this.hasArrow = !0;
            this.click = d
        }, statics: {handler: {create: function (a) {
            return new CKEDITOR.ui.menuButton(a)
        }}}})
    }, beforeInit: function (d) {
        d.ui.addHandler(CKEDITOR.UI_MENUBUTTON, CKEDITOR.ui.menuButton.handler)
    }});
    CKEDITOR.UI_MENUBUTTON = "menubutton";
    (function () {
        function k(a, c) {
            var b = 0, d;
            for (d in c)if (c[d] == a) {
                b = 1;
                break
            }
            return b
        }

        var i = "", r = function () {
            function a() {
                b.once("focus", f);
                b.once("blur", c)
            }

            function c(b) {
                var b = b.editor, c = d.getScayt(b), f = b.elementMode == CKEDITOR.ELEMENT_MODE_INLINE;
                c && (d.setPaused(b, !c.disabled), d.setControlId(b, c.id), c.destroy(!0), delete d.instances[b.name], f && a())
            }

            var b = this, f = function () {
                if (!("undefined" != typeof d.instances[b.name] || null != d.instances[b.name])) {
                    var a = b.config, c = {};
                    c.srcNodeRef = "BODY" == b.editable().$.nodeName ?
                        b.document.getWindow().$.frameElement : b.editable().$;
                    c.assocApp = "CKEDITOR." + CKEDITOR.version + "@" + CKEDITOR.revision;
                    c.customerid = a.scayt_customerid || "1:WvF0D4-UtPqN1-43nkD4-NKvUm2-daQqk3-LmNiI-z7Ysb4-mwry24-T8YrS3-Q2tpq2";
                    c.customDictionaryIds = a.scayt_customDictionaryIds || "";
                    c.userDictionaryName = a.scayt_userDictionaryName || "";
                    c.sLang = a.scayt_sLang || "en_US";
                    c.onLoad = function () {
                        CKEDITOR.env.ie && 8 > CKEDITOR.env.version || this.addStyle(this.selectorCss(), "padding-bottom: 2px !important;");
                        b.editable().hasFocus && !d.isControlRestored(b) && this.focus()
                    };
                    c.onBeforeChange = function () {
                        d.getScayt(b) && !b.checkDirty() && setTimeout(function () {
                            b.resetDirty()
                        }, 0)
                    };
                    a = window.scayt_custom_params;
                    if ("object" == typeof a)for (var f in a)c[f] = a[f];
                    d.getControlId(b) && (c.id = d.getControlId(b));
                    var o = new window.scayt(c);
                    o.afterMarkupRemove.push(function (a) {
                        (new CKEDITOR.dom.element(a, o.document)).mergeSiblings()
                    });
                    if (c = d.instances[b.name])o.sLang = c.sLang, o.option(c.option()), o.paused = c.paused;
                    d.instances[b.name] = o;
                    try {
                        o.setDisabled(!1 ===
                            d.isPaused(b))
                    } catch (e) {
                    }
                    b.fire("showScaytState")
                }
            };
            b.elementMode == CKEDITOR.ELEMENT_MODE_INLINE ? a() : b.on("contentDom", f);
            b.on("contentDomUnload", function () {
                for (var a = CKEDITOR.document.getElementsByTag("script"), b = /^dojoIoScript(\d+)$/i, c = /^https?:\/\/svc\.webspellchecker\.net\/spellcheck\/script\/ssrv\.cgi/i, d = 0; d < a.count(); d++) {
                    var f = a.getItem(d), e = f.getId(), h = f.getAttribute("src");
                    e && (h && e.match(b) && h.match(c)) && f.remove()
                }
            });
            b.on("beforeCommandExec", function (a) {
                "source" == a.data.name && "source" ==
                    b.mode && d.markControlRestore(b)
            });
            b.on("afterCommandExec", function (a) {
                d.isScaytEnabled(b) && "wysiwyg" == b.mode && ("undo" == a.data.name || "redo" == a.data.name) && window.setTimeout(function () {
                    d.getScayt(b).refresh()
                }, 10)
            });
            b.on("destroy", c);
            b.on("setData", c);
            b.on("insertElement", function () {
                var a = d.getScayt(b);
                d.isScaytEnabled(b) && (CKEDITOR.env.ie && b.getSelection().unlock(!0), window.setTimeout(function () {
                    a.focus();
                    a.refresh()
                }, 10))
            }, this, null, 50);
            b.on("insertHtml", function () {
                var a = d.getScayt(b);
                d.isScaytEnabled(b) &&
                (CKEDITOR.env.ie && b.getSelection().unlock(!0), window.setTimeout(function () {
                    a.focus();
                    a.refresh()
                }, 10))
            }, this, null, 50);
            b.on("scaytDialog", function (a) {
                a.data.djConfig = window.djConfig;
                a.data.scayt_control = d.getScayt(b);
                a.data.tab = i;
                a.data.scayt = window.scayt
            });
            var e = b.dataProcessor;
            (e = e && e.htmlFilter) && e.addRules({elements: {span: function (a) {
                if (a.attributes["data-scayt_word"] && a.attributes["data-scaytid"])return delete a.name, a
            }}});
            e = CKEDITOR.plugins.undo.Image.prototype;
            e.equals = CKEDITOR.tools.override(e.equals,
                function (a) {
                    return function (b) {
                        var c = this.contents, f = b.contents, e = d.getScayt(this.editor);
                        e && d.isScaytReady(this.editor) && (this.contents = e.reset(c) || "", b.contents = e.reset(f) || "");
                        e = a.apply(this, arguments);
                        this.contents = c;
                        b.contents = f;
                        return e
                    }
                });
            b.document && (b.elementMode != CKEDITOR.ELEMENT_MODE_INLINE || b.focusManager.hasFocus) && f()
        };
        CKEDITOR.plugins.scayt = {engineLoaded: !1, instances: {}, controlInfo: {}, setControlInfo: function (a, c) {
            a && (a.name && "object" != typeof this.controlInfo[a.name]) && (this.controlInfo[a.name] =
            {});
            for (var b in c)this.controlInfo[a.name][b] = c[b]
        }, isControlRestored: function (a) {
            return a && a.name && this.controlInfo[a.name] ? this.controlInfo[a.name].restored : !1
        }, markControlRestore: function (a) {
            this.setControlInfo(a, {restored: !0})
        }, setControlId: function (a, c) {
            this.setControlInfo(a, {id: c})
        }, getControlId: function (a) {
            return a && a.name && this.controlInfo[a.name] && this.controlInfo[a.name].id ? this.controlInfo[a.name].id : null
        }, setPaused: function (a, c) {
            this.setControlInfo(a, {paused: c})
        }, isPaused: function (a) {
            if (a &&
                a.name && this.controlInfo[a.name])return this.controlInfo[a.name].paused
        }, getScayt: function (a) {
            return this.instances[a.name]
        }, isScaytReady: function (a) {
            return!0 === this.engineLoaded && "undefined" !== typeof window.scayt && this.getScayt(a)
        }, isScaytEnabled: function (a) {
            return(a = this.getScayt(a)) ? !1 === a.disabled : !1
        }, getUiTabs: function (a) {
            var c = [], b = a.config.scayt_uiTabs || "1,1,1", b = b.split(",");
            b[3] = "1";
            for (var d = 0; 4 > d; d++)c[d] = "undefined" != typeof window.scayt && "undefined" != typeof window.scayt.uiTags ? parseInt(b[d],
                10) && window.scayt.uiTags[d] : parseInt(b[d], 10);
            "object" == typeof a.plugins.wsc ? c.push(1) : c.push(0);
            return c
        }, loadEngine: function (a) {
            if (CKEDITOR.env.gecko && 10900 > CKEDITOR.env.version || CKEDITOR.env.opera || CKEDITOR.env.air)return a.fire("showScaytState");
            if (!0 === this.engineLoaded)return r.apply(a);
            if (-1 == this.engineLoaded)return CKEDITOR.on("scaytReady", function () {
                r.apply(a)
            });
            CKEDITOR.on("scaytReady", r, a);
            CKEDITOR.on("scaytReady", function () {
                this.engineLoaded = !0
            }, this, null, 0);
            this.engineLoaded = -1;
            var c =
                document.location.protocol, c = -1 != c.search(/https?:/) ? c : "http:", c = a.config.scayt_srcUrl || c + "//svc.webspellchecker.net/scayt26/loader__base.js", b = d.parseUrl(c).path + "/";
            void 0 == window.scayt ? (CKEDITOR._djScaytConfig = {baseUrl: b, addOnLoad: [function () {
                CKEDITOR.fireOnce("scaytReady")
            }], isDebug: !1}, CKEDITOR.document.getHead().append(CKEDITOR.document.createElement("script", {attributes: {type: "text/javascript", async: "true", src: c}}))) : CKEDITOR.fireOnce("scaytReady");
            return null
        }, parseUrl: function (a) {
            var c;
            return a.match &&
                (c = a.match(/(.*)[\/\\](.*?\.\w+)$/)) ? {path: c[1], file: c[2]} : a
        }};
        var d = CKEDITOR.plugins.scayt, s = function (a, c, b, d, e, k, g) {
            a.addCommand(d, e);
            a.addMenuItem(d, {label: b, command: d, group: k, order: g})
        }, v = {preserveState: !0, editorFocus: !1, canUndo: !1, exec: function (a) {
            if (d.isScaytReady(a)) {
                var c = d.isScaytEnabled(a);
                this.setState(c ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_ON);
                a = d.getScayt(a);
                a.focus();
                a.setDisabled(c)
            } else!a.config.scayt_autoStartup && 0 <= d.engineLoaded && (a.focus(), this.setState(CKEDITOR.TRISTATE_DISABLED),
                d.loadEngine(a))
        }};
        CKEDITOR.plugins.add("scayt", {requires: "menubutton,dialog", beforeInit: function (a) {
            var c = a.config.scayt_contextMenuItemsOrder || "suggest|moresuggest|control", b = "";
            if ((c = c.split("|")) && c.length)for (var d = 0; d < c.length; d++)b += "scayt_" + c[d] + (c.length != parseInt(d, 10) + 1 ? "," : "");
            a.config.menu_groups = b + "," + a.config.menu_groups
        }, init: function (a) {
            var c = a.dataProcessor && a.dataProcessor.dataFilter, b = {elements: {span: function (a) {
                var b = a.attributes;
                b && b["data-scaytid"] && delete a.name
            }}};
            c && c.addRules(b);
            var f = {}, e = {}, p = a.addCommand("scaytcheck", v);
            CKEDITOR.dialog.add("scaytcheck", CKEDITOR.getUrl(this.path + "dialogs/options.js"));
            c = d.getUiTabs(a);
            a.addMenuGroup("scaytButton");
            a.addMenuGroup("scayt_suggest", -10);
            a.addMenuGroup("scayt_moresuggest", -9);
            a.addMenuGroup("scayt_control", -8);
            var b = {}, g = a.lang.scayt;
            b.scaytToggle = {label: g.enable, command: "scaytcheck", group: "scaytButton"};
            1 == c[0] && (b.scaytOptions = {label: g.options, group: "scaytButton", onClick: function () {
                i = "options";
                a.openDialog("scaytcheck")
            }});
            1 == c[1] && (b.scaytLangs = {label: g.langs, group: "scaytButton", onClick: function () {
                i = "langs";
                a.openDialog("scaytcheck")
            }});
            1 == c[2] && (b.scaytDict = {label: g.dictionariesTab, group: "scaytButton", onClick: function () {
                i = "dictionaries";
                a.openDialog("scaytcheck")
            }});
            b.scaytAbout = {label: a.lang.scayt.about, group: "scaytButton", onClick: function () {
                i = "about";
                a.openDialog("scaytcheck")
            }};
            1 == c[4] && (b.scaytWSC = {label: a.lang.wsc.toolbar, group: "scaytButton", command: "checkspell"});
            a.addMenuItems(b);
            a.ui.add("Scayt", CKEDITOR.UI_MENUBUTTON,
                {label: g.title, title: CKEDITOR.env.opera ? g.opera_title : g.title, modes: {wysiwyg: 1}, toolbar: "spellchecker,20", onRender: function () {
                    p.on("state", function () {
                        this.setState(p.state)
                    }, this)
                }, onMenu: function () {
                    var b = d.isScaytEnabled(a);
                    a.getMenuItem("scaytToggle").label = g[b ? "disable" : "enable"];
                    var c = d.getUiTabs(a);
                    return{scaytToggle: CKEDITOR.TRISTATE_OFF, scaytOptions: b && c[0] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, scaytLangs: b && c[1] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, scaytDict: b && c[2] ?
                        CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, scaytAbout: b && c[3] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, scaytWSC: c[4] ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED}
                }});
            a.contextMenu && a.addMenuItems && a.contextMenu.addListener(function (b, c) {
                if (!d.isScaytEnabled(a) || c.getRanges()[0].checkReadOnly())return null;
                var l = d.getScayt(a), q = l.getScaytNode();
                if (!q)return null;
                var h = l.getWord(q);
                if (!h)return null;
                var i = l.getLang(), m = a.config.scayt_contextCommands || "all", h = window.scayt.getSuggestion(h,
                    i), m = m.split("|"), n;
                for (n in f) {
                    delete a._.menuItems[n];
                    delete a.commands[n]
                }
                for (n in e) {
                    delete a._.menuItems[n];
                    delete a.commands[n]
                }
                if (!h || !h.length) {
                    s(a, "no_sugg", g.noSuggestions, "scayt_no_sugg", {exec: function () {
                    }}, "scayt_control", 1, true);
                    e.scayt_no_sugg = CKEDITOR.TRISTATE_OFF
                } else {
                    f = {};
                    e = {};
                    n = a.config.scayt_moreSuggestions || "on";
                    var i = false, u = a.config.scayt_maxSuggestions;
                    typeof u != "number" && (u = 5);
                    !u && (u = h.length);
                    for (var j = 0, p = h.length; j < p; j = j + 1) {
                        var t = "scayt_suggestion_" + h[j].replace(" ", "_"),
                            r = function (a, b) {
                                return{exec: function () {
                                    l.replace(a, b)
                                }}
                            }(q, h[j]);
                        if (j < u) {
                            s(a, "button_" + t, h[j], t, r, "scayt_suggest", j + 1);
                            e[t] = CKEDITOR.TRISTATE_OFF
                        } else if (n == "on") {
                            s(a, "button_" + t, h[j], t, r, "scayt_moresuggest", j + 1);
                            f[t] = CKEDITOR.TRISTATE_OFF;
                            i = true
                        }
                    }
                    if (i) {
                        a.addMenuItem("scayt_moresuggest", {label: g.moreSuggestions, group: "scayt_moresuggest", order: 10, getItems: function () {
                            return f
                        }});
                        e.scayt_moresuggest = CKEDITOR.TRISTATE_OFF
                    }
                }
                if (k("all", m) || k("ignore", m)) {
                    s(a, "ignore", g.ignore, "scayt_ignore", {exec: function () {
                            l.ignore(q)
                        }},
                        "scayt_control", 2);
                    e.scayt_ignore = CKEDITOR.TRISTATE_OFF
                }
                if (k("all", m) || k("ignoreall", m)) {
                    s(a, "ignore_all", g.ignoreAll, "scayt_ignore_all", {exec: function () {
                        l.ignoreAll(q)
                    }}, "scayt_control", 3);
                    e.scayt_ignore_all = CKEDITOR.TRISTATE_OFF
                }
                if (k("all", m) || k("add", m)) {
                    s(a, "add_word", g.addWord, "scayt_add_word", {exec: function () {
                        window.scayt.addWordToUserDictionary(q)
                    }}, "scayt_control", 4);
                    e.scayt_add_word = CKEDITOR.TRISTATE_OFF
                }
                l.fireOnContextMenu && l.fireOnContextMenu(a);
                return e
            });
            c = function (b) {
                b.removeListener();
                CKEDITOR.env.opera || CKEDITOR.env.air ? p.setState(CKEDITOR.TRISTATE_DISABLED) : p.setState(d.isScaytEnabled(a) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF)
            };
            a.on("showScaytState", c);
            a.on("instanceReady", c);
            if (a.config.scayt_autoStartup)a.on("instanceReady", function () {
                d.loadEngine(a)
            })
        }, afterInit: function (a) {
            var c, b = function (a) {
                if (a.hasAttribute("data-scaytid"))return!1
            };
            a._.elementsPath && (c = a._.elementsPath.filters) && c.push(b);
            a.addRemoveFormatFilter && a.addRemoveFormatFilter(b)
        }})
    })();
    (function () {
        function m(b, j) {
            var k = b.type, f = j.type;
            return k == f ? 0 : k == CKEDITOR.STYLE_OBJECT ? -1 : f == CKEDITOR.STYLE_OBJECT ? 1 : f == CKEDITOR.STYLE_BLOCK ? 1 : -1
        }

        CKEDITOR.plugins.add("stylescombo", {requires: "richcombo", init: function (b) {
            function j(a) {
                b.getStylesSet(function (g) {
                    if (!i.length) {
                        for (var c, l, e = 0, f = g.length; e < f; e++)c = g[e], b.blockless && c.element in CKEDITOR.dtd.$block || (l = c.name, c = h[l] = new CKEDITOR.style(c), c._name = l, c._.enterMode = k.enterMode, i.push(c));
                        i.sort(m)
                    }
                    a && a()
                })
            }

            var k = b.config, f = b.lang.stylescombo,
                h = {}, i = [], d;
            b.ui.addRichCombo("Styles", {label: f.label, title: f.panelTitle, toolbar: "styles,10", panel: {css: [CKEDITOR.skin.getPath("editor")].concat(k.contentsCss), multiSelect: !0, attributes: {"aria-label": f.panelTitle}}, init: function () {
                d = this;
                j(function () {
                    var a, g, c, b, e, h;
                    e = 0;
                    for (h = i.length; e < h; e++)a = i[e], g = a._name, b = a.type, b != c && (d.startGroup(f["panelTitle" + b]), c = b), d.add(g, a.type == CKEDITOR.STYLE_OBJECT ? g : a.buildPreview(), g);
                    d.commit()
                })
            }, onClick: function (a) {
                b.focus();
                b.fire("saveSnapshot");
                var a = h[a],
                    g = b.elementPath();
                b[a.checkActive(g) ? "removeStyle" : "applyStyle"](a);
                b.fire("saveSnapshot")
            }, onRender: function () {
                b.on("selectionChange", function (a) {
                    for (var b = this.getValue(), a = a.data.path.elements, c = 0, f = a.length, e; c < f; c++) {
                        e = a[c];
                        for (var d in h)if (h[d].checkElementRemovable(e, !0)) {
                            d != b && this.setValue(d);
                            return
                        }
                    }
                    this.setValue("")
                }, this)
            }, onOpen: function () {
                var a = b.getSelection().getSelectedElement(), a = b.elementPath(a), g = [0, 0, 0, 0];
                this.showAll();
                this.unmarkAll();
                for (var c in h) {
                    var d = h[c], e = d.type;
                    e ==
                        CKEDITOR.STYLE_BLOCK && !a.isContextFor(d.element) ? this.hideItem(c) : (d.checkActive(a) ? this.mark(c) : e == CKEDITOR.STYLE_OBJECT && !d.checkApplicable(a) && (this.hideItem(c), g[e]--), g[e]++)
                }
                g[CKEDITOR.STYLE_BLOCK] || this.hideGroup(f["panelTitle" + CKEDITOR.STYLE_BLOCK]);
                g[CKEDITOR.STYLE_INLINE] || this.hideGroup(f["panelTitle" + CKEDITOR.STYLE_INLINE]);
                g[CKEDITOR.STYLE_OBJECT] || this.hideGroup(f["panelTitle" + CKEDITOR.STYLE_OBJECT])
            }, reset: function () {
                d && (delete d._.panel, delete d._.list, d._.committed = 0, d._.items = {},
                    d._.state = CKEDITOR.TRISTATE_OFF);
                h = {};
                i = [];
                j()
            }});
            b.on("instanceReady", function () {
                j()
            })
        }})
    })();
    (function () {
        function i(c) {
            return{editorFocus: !1, canUndo: !1, modes: {wysiwyg: 1}, exec: function (d) {
                if (d.editable().hasFocus) {
                    var e = d.getSelection(), b;
                    if (b = (new CKEDITOR.dom.elementPath(e.getCommonAncestor(), e.root)).contains({td: 1, th: 1}, 1)) {
                        var e = d.createRange(), a = CKEDITOR.tools.tryThese(function () {
                            var a = b.getParent().$.cells[b.$.cellIndex + (c ? -1 : 1)];
                            a.parentNode.parentNode;
                            return a
                        }, function () {
                            var a = b.getParent(), a = a.getAscendant("table").$.rows[a.$.rowIndex + (c ? -1 : 1)];
                            return a.cells[c ? a.cells.length - 1 :
                                0]
                        });
                        if (!a && !c) {
                            for (var f = b.getAscendant("table").$, a = b.getParent().$.cells, f = new CKEDITOR.dom.element(f.insertRow(-1), d.document), g = 0, h = a.length; g < h; g++) {
                                var i = f.append((new CKEDITOR.dom.element(a[g], d.document)).clone(!1, !1));
                                !CKEDITOR.env.ie && i.appendBogus()
                            }
                            e.moveToElementEditStart(f)
                        } else if (a)a = new CKEDITOR.dom.element(a), e.moveToElementEditStart(a), (!e.checkStartOfBlock() || !e.checkEndOfBlock()) && e.selectNodeContents(a); else return!0;
                        e.select(!0);
                        return!0
                    }
                }
                return!1
            }}
        }

        var h = {editorFocus: !1, modes: {wysiwyg: 1,
            source: 1}}, g = {exec: function (c) {
            c.container.focusNext(!0, c.tabIndex)
        }}, f = {exec: function (c) {
            c.container.focusPrevious(!0, c.tabIndex)
        }};
        CKEDITOR.plugins.add("tab", {init: function (c) {
            for (var d = !1 !== c.config.enableTabKeyTools, e = c.config.tabSpaces || 0, b = ""; e--;)b += " ";
            if (b)c.on("key", function (a) {
                9 == a.data.keyCode && (c.insertHtml(b), a.cancel())
            });
            if (d)c.on("key", function (a) {
                (9 == a.data.keyCode && c.execCommand("selectNextCell") || a.data.keyCode == CKEDITOR.SHIFT + 9 && c.execCommand("selectPreviousCell")) && a.cancel()
            });
            c.addCommand("blur", CKEDITOR.tools.extend(g, h));
            c.addCommand("blurBack", CKEDITOR.tools.extend(f, h));
            c.addCommand("selectNextCell", i());
            c.addCommand("selectPreviousCell", i(!0))
        }})
    })();
    CKEDITOR.dom.element.prototype.focusNext = function (i, h) {
        var g = void 0 === h ? this.getTabIndex() : h, f, c, d, e, b, a;
        if (0 >= g)for (b = this.getNextSourceNode(i, CKEDITOR.NODE_ELEMENT); b;) {
            if (b.isVisible() && 0 === b.getTabIndex()) {
                d = b;
                break
            }
            b = b.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT)
        } else for (b = this.getDocument().getBody().getFirst(); b = b.getNextSourceNode(!1, CKEDITOR.NODE_ELEMENT);) {
            if (!f)if (!c && b.equals(this)) {
                if (c = !0, i) {
                    if (!(b = b.getNextSourceNode(!0, CKEDITOR.NODE_ELEMENT)))break;
                    f = 1
                }
            } else c && !this.contains(b) &&
            (f = 1);
            if (b.isVisible() && !(0 > (a = b.getTabIndex()))) {
                if (f && a == g) {
                    d = b;
                    break
                }
                a > g && (!d || !e || a < e) ? (d = b, e = a) : !d && 0 === a && (d = b, e = a)
            }
        }
        d && d.focus()
    };
    CKEDITOR.dom.element.prototype.focusPrevious = function (i, h) {
        for (var g = void 0 === h ? this.getTabIndex() : h, f, c, d, e = 0, b, a = this.getDocument().getBody().getLast(); a = a.getPreviousSourceNode(!1, CKEDITOR.NODE_ELEMENT);) {
            if (!f)if (!c && a.equals(this)) {
                if (c = !0, i) {
                    if (!(a = a.getPreviousSourceNode(!0, CKEDITOR.NODE_ELEMENT)))break;
                    f = 1
                }
            } else c && !this.contains(a) && (f = 1);
            if (a.isVisible() && !(0 > (b = a.getTabIndex())))if (0 >= g) {
                if (f && 0 === b) {
                    d = a;
                    break
                }
                b > e && (d = a, e = b)
            } else {
                if (f && b == g) {
                    d = a;
                    break
                }
                if (b < g && (!d || b > e))d = a, e = b
            }
        }
        d && d.focus()
    };
    CKEDITOR.plugins.add("table", {requires: "dialog", init: function (a) {
        function d(a) {
            return CKEDITOR.tools.extend(a || {}, {contextSensitive: 1, refresh: function (a, e) {
                this.setState(e.contains("table", 1) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED)
            }})
        }

        if (!a.blockless) {
            var b = a.lang.table;
            a.addCommand("table", new CKEDITOR.dialogCommand("table", {context: "table"}));
            a.addCommand("tableProperties", new CKEDITOR.dialogCommand("tableProperties", d()));
            a.addCommand("tableDelete", d({exec: function (a) {
                var c = a.elementPath().contains("table",
                    1);
                if (c) {
                    var b = c.getParent();
                    1 == b.getChildCount() && !b.is("body", "td", "th") && (c = b);
                    a = a.createRange();
                    a.moveToPosition(c, CKEDITOR.POSITION_BEFORE_START);
                    c.remove();
                    a.select()
                }
            }}));
            a.ui.addButton && a.ui.addButton("Table", {label: b.toolbar, command: "table", toolbar: "insert,30"});
            CKEDITOR.dialog.add("table", this.path + "dialogs/table.js");
            CKEDITOR.dialog.add("tableProperties", this.path + "dialogs/table.js");
            a.addMenuItems && a.addMenuItems({table: {label: b.menu, command: "tableProperties", group: "table", order: 5}, tabledelete: {label: b.deleteTable,
                command: "tableDelete", group: "table", order: 1}});
            a.on("doubleclick", function (a) {
                a.data.element.is("table") && (a.data.dialog = "tableProperties")
            });
            a.contextMenu && a.contextMenu.addListener(function () {
                return{tabledelete: CKEDITOR.TRISTATE_OFF, table: CKEDITOR.TRISTATE_OFF}
            })
        }
    }});
    (function () {
        function o(c) {
            function d(c) {
                !(0 < b.length) && (c.type == CKEDITOR.NODE_ELEMENT && z.test(c.getName()) && !c.getCustomData("selected_cell")) && (CKEDITOR.dom.element.setMarker(a, c, "selected_cell", !0), b.push(c))
            }

            for (var c = c.getRanges(), b = [], a = {}, e = 0; e < c.length; e++) {
                var f = c[e];
                if (f.collapsed)f = f.getCommonAncestor(), (f = f.getAscendant("td", !0) || f.getAscendant("th", !0)) && b.push(f); else {
                    var f = new CKEDITOR.dom.walker(f), g;
                    for (f.guard = d; g = f.next();)if (g.type != CKEDITOR.NODE_ELEMENT || !g.is(CKEDITOR.dtd.table))if ((g =
                        g.getAscendant("td", !0) || g.getAscendant("th", !0)) && !g.getCustomData("selected_cell"))CKEDITOR.dom.element.setMarker(a, g, "selected_cell", !0), b.push(g)
                }
            }
            CKEDITOR.dom.element.clearAllMarkers(a);
            return b
        }

        function m(c, d) {
            for (var b = o(c), a = b[0], e = a.getAscendant("table"), a = a.getDocument(), f = b[0].getParent(), g = f.$.rowIndex, b = b[b.length - 1], h = b.getParent().$.rowIndex + b.$.rowSpan - 1, b = new CKEDITOR.dom.element(e.$.rows[h]), g = d ? g : h, f = d ? f : b, b = CKEDITOR.tools.buildTableMap(e), e = b[g], g = d ? b[g - 1] : b[g + 1], b = b[0].length,
                     a = a.createElement("tr"), h = 0; e[h] && h < b; h++) {
                var i;
                1 < e[h].rowSpan && g && e[h] == g[h] ? (i = e[h], i.rowSpan += 1) : (i = (new CKEDITOR.dom.element(e[h])).clone(), i.removeAttribute("rowSpan"), !CKEDITOR.env.ie && i.appendBogus(), a.append(i), i = i.$);
                h += i.colSpan - 1
            }
            d ? a.insertBefore(f) : a.insertAfter(f)
        }

        function p(c) {
            if (c instanceof CKEDITOR.dom.selection) {
                for (var d = o(c), b = d[0].getAscendant("table"), a = CKEDITOR.tools.buildTableMap(b), c = d[0].getParent().$.rowIndex, d = d[d.length - 1], e = d.getParent().$.rowIndex + d.$.rowSpan - 1, d = [],
                         f = c; f <= e; f++) {
                    for (var g = a[f], h = new CKEDITOR.dom.element(b.$.rows[f]), i = 0; i < g.length; i++) {
                        var j = new CKEDITOR.dom.element(g[i]), k = j.getParent().$.rowIndex;
                        1 == j.$.rowSpan ? j.remove() : (j.$.rowSpan -= 1, k == f && (k = a[f + 1], k[i - 1] ? j.insertAfter(new CKEDITOR.dom.element(k[i - 1])) : (new CKEDITOR.dom.element(b.$.rows[f + 1])).append(j, 1)));
                        i += j.$.colSpan - 1
                    }
                    d.push(h)
                }
                a = b.$.rows;
                b = new CKEDITOR.dom.element(a[e + 1] || (0 < c ? a[c - 1] : null) || b.$.parentNode);
                for (f = d.length; 0 <= f; f--)p(d[f]);
                return b
            }
            c instanceof CKEDITOR.dom.element &&
            (b = c.getAscendant("table"), 1 == b.$.rows.length ? b.remove() : c.remove());
            return null
        }

        function q(c, d) {
            for (var b = d ? Infinity : 0, a = 0; a < c.length; a++) {
                var e;
                e = c[a];
                for (var f = d, g = e.getParent().$.cells, h = 0, i = 0; i < g.length; i++) {
                    var j = g[i], h = h + (f ? 1 : j.colSpan);
                    if (j == e.$)break
                }
                e = h - 1;
                if (d ? e < b : e > b)b = e
            }
            return b
        }

        function n(c, d) {
            for (var b = o(c), a = b[0].getAscendant("table"), e = q(b, 1), b = q(b), e = d ? e : b, f = CKEDITOR.tools.buildTableMap(a), a = [], b = [], g = f.length, h = 0; h < g; h++)a.push(f[h][e]), b.push(d ? f[h][e - 1] : f[h][e + 1]);
            for (h = 0; h < g; h++)a[h] &&
            (1 < a[h].colSpan && b[h] == a[h] ? (e = a[h], e.colSpan += 1) : (e = (new CKEDITOR.dom.element(a[h])).clone(), e.removeAttribute("colSpan"), !CKEDITOR.env.ie && e.appendBogus(), e[d ? "insertBefore" : "insertAfter"].call(e, new CKEDITOR.dom.element(a[h])), e = e.$), h += e.rowSpan - 1)
        }

        function t(c, d) {
            var b = c.getStartElement();
            if (b = b.getAscendant("td", 1) || b.getAscendant("th", 1)) {
                var a = b.clone();
                CKEDITOR.env.ie || a.appendBogus();
                d ? a.insertBefore(b) : a.insertAfter(b)
            }
        }

        function s(c) {
            if (c instanceof CKEDITOR.dom.selection) {
                var c = o(c), d =
                    c[0] && c[0].getAscendant("table"), b;
                a:{
                    var a = 0;
                    b = c.length - 1;
                    for (var e = {}, f, g; f = c[a++];)CKEDITOR.dom.element.setMarker(e, f, "delete_cell", !0);
                    for (a = 0; f = c[a++];)if ((g = f.getPrevious()) && !g.getCustomData("delete_cell") || (g = f.getNext()) && !g.getCustomData("delete_cell")) {
                        CKEDITOR.dom.element.clearAllMarkers(e);
                        b = g;
                        break a
                    }
                    CKEDITOR.dom.element.clearAllMarkers(e);
                    g = c[0].getParent();
                    (g = g.getPrevious()) ? b = g.getLast() : (g = c[b].getParent(), b = (g = g.getNext()) ? g.getChild(0) : null)
                }
                for (g = c.length - 1; 0 <= g; g--)s(c[g]);
                b ? u(b, !0) : d && d.remove()
            } else c instanceof CKEDITOR.dom.element && (d = c.getParent(), 1 == d.getChildCount() ? d.remove() : c.remove())
        }

        function u(c, d) {
            var b = new CKEDITOR.dom.range(c.getDocument());
            if (!b["moveToElementEdit" + (d ? "End" : "Start")](c))b.selectNodeContents(c), b.collapse(d ? !1 : !0);
            b.select(!0)
        }

        function v(c, d, b) {
            c = c[d];
            if ("undefined" == typeof b)return c;
            for (d = 0; c && d < c.length; d++) {
                if (b.is && c[d] == b.$)return d;
                if (d == b)return new CKEDITOR.dom.element(c[d])
            }
            return b.is ? -1 : null
        }

        function r(c, d, b) {
            var a = o(c),
                e;
            if ((d ? 1 != a.length : 2 > a.length) || (e = c.getCommonAncestor()) && e.type == CKEDITOR.NODE_ELEMENT && e.is("table"))return!1;
            var f, c = a[0];
            e = c.getAscendant("table");
            var g = CKEDITOR.tools.buildTableMap(e), h = g.length, i = g[0].length, j = c.getParent().$.rowIndex, k = v(g, j, c);
            if (d) {
                var w;
                try {
                    var l = parseInt(c.getAttribute("rowspan"), 10) || 1;
                    f = parseInt(c.getAttribute("colspan"), 10) || 1;
                    w = g["up" == d ? j - l : "down" == d ? j + l : j]["left" == d ? k - f : "right" == d ? k + f : k]
                } catch (u) {
                    return!1
                }
                if (!w || c.$ == w)return!1;
                a["up" == d || "left" == d ? "unshift" : "push"](new CKEDITOR.dom.element(w))
            }
            for (var d =
                c.getDocument(), m = j, l = w = 0, p = !b && new CKEDITOR.dom.documentFragment(d), r = 0, d = 0; d < a.length; d++) {
                f = a[d];
                var n = f.getParent(), s = f.getFirst(), q = f.$.colSpan, t = f.$.rowSpan, n = n.$.rowIndex, x = v(g, n, f), r = r + q * t, l = Math.max(l, x - k + q);
                w = Math.max(w, n - j + t);
                if (!b) {
                    q = f;
                    (t = q.getBogus()) && t.remove();
                    q.trim();
                    if (f.getChildren().count()) {
                        if (n != m && s && (!s.isBlockBoundary || !s.isBlockBoundary({br: 1})))(m = p.getLast(CKEDITOR.dom.walker.whitespaces(!0))) && (!m.is || !m.is("br")) && p.append("br");
                        f.moveChildren(p)
                    }
                    d ? f.remove() : f.setHtml("")
                }
                m =
                    n
            }
            if (b)return w * l == r;
            p.moveChildren(c);
            CKEDITOR.env.ie || c.appendBogus();
            l >= i ? c.removeAttribute("rowSpan") : c.$.rowSpan = w;
            w >= h ? c.removeAttribute("colSpan") : c.$.colSpan = l;
            b = new CKEDITOR.dom.nodeList(e.$.rows);
            a = b.count();
            for (d = a - 1; 0 <= d; d--)e = b.getItem(d), e.$.cells.length || (e.remove(), a++);
            return c
        }

        function x(c, d) {
            var b = o(c);
            if (1 < b.length)return!1;
            if (d)return!0;
            var b = b[0], a = b.getParent(), e = a.getAscendant("table"), f = CKEDITOR.tools.buildTableMap(e), g = a.$.rowIndex, h = v(f, g, b), i = b.$.rowSpan, j;
            if (1 < i) {
                j = Math.ceil(i /
                    2);
                for (var i = Math.floor(i / 2), a = g + j, e = new CKEDITOR.dom.element(e.$.rows[a]), f = v(f, a), k, a = b.clone(), g = 0; g < f.length; g++)if (k = f[g], k.parentNode == e.$ && g > h) {
                    a.insertBefore(new CKEDITOR.dom.element(k));
                    break
                } else k = null;
                k || e.append(a, !0)
            } else {
                i = j = 1;
                e = a.clone();
                e.insertAfter(a);
                e.append(a = b.clone());
                k = v(f, g);
                for (h = 0; h < k.length; h++)k[h].rowSpan++
            }
            CKEDITOR.env.ie || a.appendBogus();
            b.$.rowSpan = j;
            a.$.rowSpan = i;
            1 == j && b.removeAttribute("rowSpan");
            1 == i && a.removeAttribute("rowSpan");
            return a
        }

        function y(c, d) {
            var b =
                o(c);
            if (1 < b.length)return!1;
            if (d)return!0;
            var b = b[0], a = b.getParent(), e = a.getAscendant("table"), e = CKEDITOR.tools.buildTableMap(e), f = v(e, a.$.rowIndex, b), g = b.$.colSpan;
            if (1 < g)a = Math.ceil(g / 2), g = Math.floor(g / 2); else {
                for (var g = a = 1, h = [], i = 0; i < e.length; i++) {
                    var j = e[i];
                    h.push(j[f]);
                    1 < j[f].rowSpan && (i += j[f].rowSpan - 1)
                }
                for (e = 0; e < h.length; e++)h[e].colSpan++
            }
            e = b.clone();
            e.insertAfter(b);
            CKEDITOR.env.ie || e.appendBogus();
            b.$.colSpan = a;
            e.$.colSpan = g;
            1 == a && b.removeAttribute("colSpan");
            1 == g && e.removeAttribute("colSpan");
            return e
        }

        var z = /^(?:td|th)$/;
        CKEDITOR.plugins.tabletools = {requires: "table,dialog,contextmenu", init: function (c) {
            function d(a) {
                return CKEDITOR.tools.extend(a || {}, {contextSensitive: 1, refresh: function (a, b) {
                    this.setState(b.contains({td: 1, th: 1}, 1) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED)
                }})
            }

            var b = c.lang.table;
            c.addCommand("cellProperties", new CKEDITOR.dialogCommand("cellProperties", d()));
            CKEDITOR.dialog.add("cellProperties", this.path + "dialogs/tableCell.js");
            c.addCommand("rowDelete", d({exec: function (a) {
                a =
                    a.getSelection();
                u(p(a))
            }}));
            c.addCommand("rowInsertBefore", d({exec: function (a) {
                a = a.getSelection();
                m(a, !0)
            }}));
            c.addCommand("rowInsertAfter", d({exec: function (a) {
                a = a.getSelection();
                m(a)
            }}));
            c.addCommand("columnDelete", d({exec: function (a) {
                for (var a = a.getSelection(), a = o(a), b = a[0], c = a[a.length - 1], a = b.getAscendant("table"), d = CKEDITOR.tools.buildTableMap(a), h, i, j = [], k = 0, m = d.length; k < m; k++)for (var l = 0, n = d[k].length; l < n; l++)d[k][l] == b.$ && (h = l), d[k][l] == c.$ && (i = l);
                for (k = h; k <= i; k++)for (l = 0; l < d.length; l++)c =
                    d[l], b = new CKEDITOR.dom.element(a.$.rows[l]), c = new CKEDITOR.dom.element(c[k]), c.$ && (1 == c.$.colSpan ? c.remove() : c.$.colSpan -= 1, l += c.$.rowSpan - 1, b.$.cells.length || j.push(b));
                i = a.$.rows[0] && a.$.rows[0].cells;
                h = new CKEDITOR.dom.element(i[h] || (h ? i[h - 1] : a.$.parentNode));
                j.length == m && a.remove();
                h && u(h, !0)
            }}));
            c.addCommand("columnInsertBefore", d({exec: function (a) {
                a = a.getSelection();
                n(a, !0)
            }}));
            c.addCommand("columnInsertAfter", d({exec: function (a) {
                a = a.getSelection();
                n(a)
            }}));
            c.addCommand("cellDelete", d({exec: function (a) {
                a =
                    a.getSelection();
                s(a)
            }}));
            c.addCommand("cellMerge", d({exec: function (a) {
                u(r(a.getSelection()), !0)
            }}));
            c.addCommand("cellMergeRight", d({exec: function (a) {
                u(r(a.getSelection(), "right"), !0)
            }}));
            c.addCommand("cellMergeDown", d({exec: function (a) {
                u(r(a.getSelection(), "down"), !0)
            }}));
            c.addCommand("cellVerticalSplit", d({exec: function (a) {
                u(x(a.getSelection()))
            }}));
            c.addCommand("cellHorizontalSplit", d({exec: function (a) {
                u(y(a.getSelection()))
            }}));
            c.addCommand("cellInsertBefore", d({exec: function (a) {
                a = a.getSelection();
                t(a, !0)
            }}));
            c.addCommand("cellInsertAfter", d({exec: function (a) {
                a = a.getSelection();
                t(a)
            }}));
            c.addMenuItems && c.addMenuItems({tablecell: {label: b.cell.menu, group: "tablecell", order: 1, getItems: function () {
                var a = c.getSelection(), b = o(a);
                return{tablecell_insertBefore: CKEDITOR.TRISTATE_OFF, tablecell_insertAfter: CKEDITOR.TRISTATE_OFF, tablecell_delete: CKEDITOR.TRISTATE_OFF, tablecell_merge: r(a, null, !0) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, tablecell_merge_right: r(a, "right", !0) ? CKEDITOR.TRISTATE_OFF :
                    CKEDITOR.TRISTATE_DISABLED, tablecell_merge_down: r(a, "down", !0) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, tablecell_split_vertical: x(a, !0) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, tablecell_split_horizontal: y(a, !0) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED, tablecell_properties: 0 < b.length ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED}
            }}, tablecell_insertBefore: {label: b.cell.insertBefore, group: "tablecell", command: "cellInsertBefore", order: 5}, tablecell_insertAfter: {label: b.cell.insertAfter,
                group: "tablecell", command: "cellInsertAfter", order: 10}, tablecell_delete: {label: b.cell.deleteCell, group: "tablecell", command: "cellDelete", order: 15}, tablecell_merge: {label: b.cell.merge, group: "tablecell", command: "cellMerge", order: 16}, tablecell_merge_right: {label: b.cell.mergeRight, group: "tablecell", command: "cellMergeRight", order: 17}, tablecell_merge_down: {label: b.cell.mergeDown, group: "tablecell", command: "cellMergeDown", order: 18}, tablecell_split_horizontal: {label: b.cell.splitHorizontal, group: "tablecell",
                command: "cellHorizontalSplit", order: 19}, tablecell_split_vertical: {label: b.cell.splitVertical, group: "tablecell", command: "cellVerticalSplit", order: 20}, tablecell_properties: {label: b.cell.title, group: "tablecellproperties", command: "cellProperties", order: 21}, tablerow: {label: b.row.menu, group: "tablerow", order: 1, getItems: function () {
                return{tablerow_insertBefore: CKEDITOR.TRISTATE_OFF, tablerow_insertAfter: CKEDITOR.TRISTATE_OFF, tablerow_delete: CKEDITOR.TRISTATE_OFF}
            }}, tablerow_insertBefore: {label: b.row.insertBefore,
                group: "tablerow", command: "rowInsertBefore", order: 5}, tablerow_insertAfter: {label: b.row.insertAfter, group: "tablerow", command: "rowInsertAfter", order: 10}, tablerow_delete: {label: b.row.deleteRow, group: "tablerow", command: "rowDelete", order: 15}, tablecolumn: {label: b.column.menu, group: "tablecolumn", order: 1, getItems: function () {
                return{tablecolumn_insertBefore: CKEDITOR.TRISTATE_OFF, tablecolumn_insertAfter: CKEDITOR.TRISTATE_OFF, tablecolumn_delete: CKEDITOR.TRISTATE_OFF}
            }}, tablecolumn_insertBefore: {label: b.column.insertBefore,
                group: "tablecolumn", command: "columnInsertBefore", order: 5}, tablecolumn_insertAfter: {label: b.column.insertAfter, group: "tablecolumn", command: "columnInsertAfter", order: 10}, tablecolumn_delete: {label: b.column.deleteColumn, group: "tablecolumn", command: "columnDelete", order: 15}});
            c.contextMenu && c.contextMenu.addListener(function (a, b, c) {
                return(a = c.contains({td: 1, th: 1}, 1)) && !a.isReadOnly() ? {tablecell: CKEDITOR.TRISTATE_OFF, tablerow: CKEDITOR.TRISTATE_OFF, tablecolumn: CKEDITOR.TRISTATE_OFF} : null
            })
        }, getSelectedCells: o};
        CKEDITOR.plugins.add("tabletools", CKEDITOR.plugins.tabletools)
    })();
    CKEDITOR.tools.buildTableMap = function (o) {
        for (var o = o.$.rows, m = -1, p = [], q = 0; q < o.length; q++) {
            m++;
            !p[m] && (p[m] = []);
            for (var n = -1, t = 0; t < o[q].cells.length; t++) {
                var s = o[q].cells[t];
                for (n++; p[m][n];)n++;
                for (var u = isNaN(s.colSpan) ? 1 : s.colSpan, s = isNaN(s.rowSpan) ? 1 : s.rowSpan, v = 0; v < s; v++) {
                    p[m + v] || (p[m + v] = []);
                    for (var r = 0; r < u; r++)p[m + v][n + r] = o[q].cells[t]
                }
                n += u - 1
            }
        }
        return p
    };
    (function () {
        function h(a) {
            this.editor = a;
            this.reset()
        }

        CKEDITOR.plugins.add("undo", {init: function (a) {
            function c(a) {
                b.enabled && !1 !== a.data.command.canUndo && b.save()
            }

            var b = new h(a), d = a.addCommand("undo", {exec: function () {
                b.undo() && (a.selectionChange(), this.fire("afterUndo"))
            }, state: CKEDITOR.TRISTATE_DISABLED, canUndo: !1}), e = a.addCommand("redo", {exec: function () {
                b.redo() && (a.selectionChange(), this.fire("afterRedo"))
            }, state: CKEDITOR.TRISTATE_DISABLED, canUndo: !1});
            a.setKeystroke([
                [CKEDITOR.CTRL + 90, "undo"],
                [CKEDITOR.CTRL + 89, "redo"],
                [CKEDITOR.CTRL + CKEDITOR.SHIFT + 90, "redo"]
            ]);
            b.onChange = function () {
                d.setState(b.undoable() ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED);
                e.setState(b.redoable() ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED)
            };
            a.on("beforeCommandExec", c);
            a.on("afterCommandExec", c);
            a.on("saveSnapshot", function (a) {
                b.save(a.data && a.data.contentOnly)
            });
            a.on("contentDom", function () {
                a.editable().on("keydown", function (a) {
                    !a.data.$.ctrlKey && !a.data.$.metaKey && b.type(a)
                })
            });
            a.on("beforeModeUnload",
                function () {
                    "wysiwyg" == a.mode && b.save(!0)
                });
            a.on("mode", function () {
                b.enabled = a.readOnly ? !1 : "wysiwyg" == a.mode;
                b.onChange()
            });
            a.ui.addButton && (a.ui.addButton("Undo", {label: a.lang.undo.undo, command: "undo", toolbar: "undo,10"}), a.ui.addButton("Redo", {label: a.lang.undo.redo, command: "redo", toolbar: "undo,20"}));
            a.resetUndo = function () {
                b.reset();
                a.fire("saveSnapshot")
            };
            a.on("updateSnapshot", function () {
                b.currentImage && b.update()
            });
            a.on("lockSnapshot", b.lock, b);
            a.on("unlockSnapshot", b.unlock, b)
        }});
        CKEDITOR.plugins.undo =
        {};
        var i = CKEDITOR.plugins.undo.Image = function (a) {
            this.editor = a;
            a.fire("beforeUndoImage");
            var c = a.getSnapshot(), b = c && a.getSelection();
            CKEDITOR.env.ie && c && (c = c.replace(/\s+data-cke-expando=".*?"/g, ""));
            this.contents = c;
            this.bookmarks = b && b.createBookmarks2(!0);
            a.fire("afterUndoImage")
        }, j = /\b(?:href|src|name)="[^"]*?"/gi;
        i.prototype = {equals: function (a, c) {
            var b = this.contents, d = a.contents;
            if (CKEDITOR.env.ie && (CKEDITOR.env.ie7Compat || CKEDITOR.env.ie6Compat))b = b.replace(j, ""), d = d.replace(j, "");
            if (b != d)return!1;
            if (c)return!0;
            b = this.bookmarks;
            d = a.bookmarks;
            if (b || d) {
                if (!b || !d || b.length != d.length)return!1;
                for (var e = 0; e < b.length; e++) {
                    var g = b[e], f = d[e];
                    if (g.startOffset != f.startOffset || g.endOffset != f.endOffset || !CKEDITOR.tools.arrayCompare(g.start, f.start) || !CKEDITOR.tools.arrayCompare(g.end, f.end))return!1
                }
            }
            return!0
        }};
        var k = {8: 1, 46: 1}, m = {16: 1, 17: 1, 18: 1}, l = {37: 1, 38: 1, 39: 1, 40: 1};
        h.prototype = {type: function (a) {
            var a = a && a.data.getKey(), c = a in k, b = this.lastKeystroke in k, d = c && a == this.lastKeystroke, e = a in l, g = this.lastKeystroke in
                l;
            if (!(a in m || this.typing) || !c && !e && (b || g) || c && !d) {
                var f = new i(this.editor), h = this.snapshots.length;
                CKEDITOR.tools.setTimeout(function () {
                    var a = this.editor.getSnapshot();
                    CKEDITOR.env.ie && (a = a.replace(/\s+data-cke-expando=".*?"/g, ""));
                    f.contents != a && h == this.snapshots.length && (this.typing = !0, this.save(!1, f, !1) || this.snapshots.splice(this.index + 1, this.snapshots.length - this.index - 1), this.hasUndo = !0, this.hasRedo = !1, this.modifiersCount = this.typesCount = 1, this.onChange())
                }, 0, this)
            }
            this.lastKeystroke = a;
            c ?
                (this.typesCount = 0, this.modifiersCount++, 25 < this.modifiersCount && (this.save(!1, null, !1), this.modifiersCount = 1)) : e || (this.modifiersCount = 0, this.typesCount++, 25 < this.typesCount && (this.save(!1, null, !1), this.typesCount = 1))
        }, reset: function () {
            this.lastKeystroke = 0;
            this.snapshots = [];
            this.index = -1;
            this.limit = this.editor.config.undoStackSize || 20;
            this.currentImage = null;
            this.hasRedo = this.hasUndo = !1;
            this.locked = null;
            this.resetType()
        }, resetType: function () {
            this.typing = !1;
            delete this.lastKeystroke;
            this.modifiersCount =
                this.typesCount = 0
        }, fireChange: function () {
            this.hasUndo = !!this.getNextImage(!0);
            this.hasRedo = !!this.getNextImage(!1);
            this.resetType();
            this.onChange()
        }, save: function (a, c, b) {
            if (this.locked)return!1;
            var d = this.snapshots;
            c || (c = new i(this.editor));
            if (!1 === c.contents || this.currentImage && c.equals(this.currentImage, a))return!1;
            d.splice(this.index + 1, d.length - this.index - 1);
            d.length == this.limit && d.shift();
            this.index = d.push(c) - 1;
            this.currentImage = c;
            !1 !== b && this.fireChange();
            return!0
        }, restoreImage: function (a) {
            var c =
                this.editor, b;
            a.bookmarks && (c.focus(), b = c.getSelection());
            this.locked = 1;
            this.editor.loadSnapshot(a.contents);
            a.bookmarks ? b.selectBookmarks(a.bookmarks) : CKEDITOR.env.ie && (c = this.editor.document.getBody().$.createTextRange(), c.collapse(!0), c.select());
            this.locked = 0;
            this.index = a.index;
            this.update();
            this.fireChange()
        }, getNextImage: function (a) {
            var c = this.snapshots, b = this.currentImage, d;
            if (b)if (a)for (d = this.index - 1; 0 <= d; d--) {
                if (a = c[d], !b.equals(a, !0))return a.index = d, a
            } else for (d = this.index + 1; d < c.length; d++)if (a =
                c[d], !b.equals(a, !0))return a.index = d, a;
            return null
        }, redoable: function () {
            return this.enabled && this.hasRedo
        }, undoable: function () {
            return this.enabled && this.hasUndo
        }, undo: function () {
            if (this.undoable()) {
                this.save(!0);
                var a = this.getNextImage(!0);
                if (a)return this.restoreImage(a), !0
            }
            return!1
        }, redo: function () {
            if (this.redoable() && (this.save(!0), this.redoable())) {
                var a = this.getNextImage(!1);
                if (a)return this.restoreImage(a), !0
            }
            return!1
        }, update: function () {
            this.locked || this.snapshots.splice(this.index, 1, this.currentImage =
                new i(this.editor))
        }, lock: function () {
            if (!this.locked) {
                var a = this.editor.getSnapshot();
                this.locked = {update: this.currentImage && a == this.currentImage.contents ? a : null}
            }
        }, unlock: function () {
            if (this.locked) {
                var a = this.locked.update, c = this.editor.getSnapshot();
                this.locked = null;
                "string" == typeof a && c != a && this.update()
            }
        }}
    })();
    CKEDITOR.plugins.add("wsc", {requires: "dialog", init: function (a) {
        a.addCommand("checkspell", new CKEDITOR.dialogCommand("checkspell")).modes = {wysiwyg: !CKEDITOR.env.opera && !CKEDITOR.env.air && document.domain == window.location.hostname};
        "undefined" == typeof a.plugins.scayt && a.ui.addButton && a.ui.addButton("SpellChecker", {label: a.lang.wsc.toolbar, command: "checkspell", toolbar: "spellchecker,10"});
        CKEDITOR.dialog.add("checkspell", this.path + "dialogs/wsc.js")
    }});
    CKEDITOR.config.wsc_customerId = CKEDITOR.config.wsc_customerId || "1:ua3xw1-2XyGJ3-GWruD3-6OFNT1-oXcuB1-nR6Bp4-hgQHc-EcYng3-sdRXG3-NOfFk";
    CKEDITOR.config.wsc_customLoaderScript = CKEDITOR.config.wsc_customLoaderScript || null;
    CKEDITOR.config.plugins = 'dialogui,dialog,about,a11yhelp,basicstyles,blockquote,clipboard,panel,floatpanel,menu,contextmenu,resize,button,toolbar,elementspath,list,indent,enterkey,entities,popup,filebrowser,floatingspace,listblock,richcombo,format,htmlwriter,horizontalrule,wysiwygarea,image,fakeobjects,link,magicline,maximize,pastetext,pastefromword,removeformat,sourcearea,specialchar,menubutton,scayt,stylescombo,tab,table,tabletools,undo,wsc';
    CKEDITOR.config.skin = 'moono';
    (function () {
        var icons = ( 'about,0,bold,32,italic,64,strike,96,subscript,128,superscript,160,underline,192,blockquote,224,copy-rtl,256,copy,288,cut-rtl,320,cut,352,paste-rtl,384,paste,416,bulletedlist-rtl,448,bulletedlist,480,numberedlist-rtl,512,numberedlist,544,indent-rtl,576,indent,608,outdent-rtl,640,outdent,672,horizontalrule,704,image,736,anchor-rtl,768,anchor,800,link,832,unlink,864,maximize,896,pastetext-rtl,928,pastetext,960,pastefromword-rtl,992,pastefromword,1024,removeformat,1056,source-rtl,1088,source,1120,specialchar,1152,scayt,1184,table,1216,redo-rtl,1248,redo,1280,undo-rtl,1312,undo,1344,spellchecker,1376' ), path = CKEDITOR.getUrl('plugins/icons.png'), icons = icons.split(',');
        for (var i = 0; i < icons.length; i++)CKEDITOR.skin.icons[ icons[ i ] ] = { path: path, offset: -icons[ ++i ] };
    })();
    CKEDITOR.lang.languages = {"af": 1, "ar": 1, "eu": 1, "bn": 1, "bs": 1, "bg": 1, "ca": 1, "zh-cn": 1, "zh": 1, "hr": 1, "cs": 1, "da": 1, "nl": 1, "en": 1, "en-au": 1, "en-ca": 1, "en-gb": 1, "eo": 1, "et": 1, "fo": 1, "fi": 1, "fr": 1, "fr-ca": 1, "gl": 1, "ka": 1, "de": 1, "el": 1, "gu": 1, "he": 1, "hi": 1, "hu": 1, "is": 1, "it": 1, "ja": 1, "km": 1, "ko": 1, "ku": 1, "lv": 1, "lt": 1, "mk": 1, "ms": 1, "mn": 1, "no": 1, "nb": 1, "fa": 1, "pl": 1, "pt-br": 1, "pt": 1, "ro": 1, "ru": 1, "sr": 1, "sr-latn": 1, "sk": 1, "sl": 1, "es": 1, "sv": 1, "th": 1, "tr": 1, "ug": 1, "uk": 1, "vi": 1, "cy": 1};
}());
/* ===================================================
 * bootstrap-markdown.js v2.1.0
 * http://github.com/toopay/bootstrap-markdown
 * ===================================================
 * Copyright 2013 Taufan Aditya
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

!function ($) {

    "use strict"; // jshint ;_;


    /* MARKDOWN CLASS DEFINITION
     * ========================== */

    var Markdown = function (element, options) {
        // Class Properties
        this.$ns = 'bootstrap-markdown'
        this.$element = $(element)
        this.$editable = {el: null, type: null, attrKeys: [], attrValues: [], content: null}
        this.$options = $.extend(true, {}, $.fn.markdown.defaults, options)
        this.$oldContent = null
        this.$isPreview = false
        this.$editor = null
        this.$textarea = null
        this.$handler = []
        this.$callback = []
        this.$nextTab = []

        this.showEditor()
    }

    Markdown.prototype = {

        constructor: Markdown, __alterButtons: function (name, alter) {
            var handler = this.$handler, isAll = (name == 'all'), that = this

            $.each(handler, function (k, v) {
                var halt = true
                if (isAll) {
                    halt = false
                } else {
                    halt = v.indexOf(name) < 0
                }

                if (halt == false) {
                    alter(that.$editor.find('button[data-handler="' + v + '"]'))
                }
            })
        }, __buildButtons: function (buttonsArray, container) {
            var i,
                ns = this.$ns,
                handler = this.$handler,
                callback = this.$callback

            for (i = 0; i < buttonsArray.length; i++) {
                // Build each group container
                var y, btnGroups = buttonsArray[i]
                for (y = 0; y < btnGroups.length; y++) {
                    // Build each button group
                    var z,
                        buttons = btnGroups[y].data,
                        btnGroupContainer = $('<div/>', {
                            'class': 'btn-group'
                        })

                    for (z = 0; z < buttons.length; z++) {
                        var button = buttons[z],
                            buttonToggle = '',
                            buttonHandler = ns + '-' + button.name,
                            btnText = button.btnText ? button.btnText : '',
                            btnClass = button.btnClass ? button.btnClass : 'btn',
                            tabIndex = button.tabIndex ? button.tabIndex : '-1'

                        if (button.toggle == true) {
                            buttonToggle = ' data-toggle="button"'
                        }

                        // Attach the button object
                        btnGroupContainer.append('<button class="'
                            + btnClass
                            + ' btn-default btn-sm" title="'
                            + button.title
                            + '" tabindex="'
                            + tabIndex
                            + '" data-provider="'
                            + ns
                            + '" data-handler="'
                            + buttonHandler
                            + '"'
                            + buttonToggle
                            + '><span class="'
                            + button.icon
                            + '"></span> '
                            + btnText
                            + '</button>')

                        // Register handler and callback
                        handler.push(buttonHandler)
                        callback.push(button.callback)
                    }

                    // Attach the button group into container dom
                    container.append(btnGroupContainer)
                }
            }

            return container
        }, __setListener: function () {
            // Set size and resizable Properties
            var hasRows = typeof this.$textarea.attr('rows') != 'undefined',
                maxRows = this.$textarea.val().split("\n").length > 5 ? this.$textarea.val().split("\n").length : '5',
                rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows

            this.$textarea.attr('rows', rowsVal)
            this.$textarea.css('resize', 'none')

            this.$textarea
                .on('focus', $.proxy(this.focus, this))
                .on('keypress', $.proxy(this.keypress, this))
                .on('keyup', $.proxy(this.keyup, this))

            if (this.eventSupported('keydown')) {
                this.$textarea.on('keydown', $.proxy(this.keydown, this))
            }

            // Re-attach markdown data
            this.$textarea.data('markdown', this)
        }, __handle: function (e) {
            var target = $(e.currentTarget),
                handler = this.$handler,
                callback = this.$callback,
                handlerName = target.attr('data-handler'),
                callbackIndex = handler.indexOf(handlerName),
                callbackHandler = callback[callbackIndex]

            // Trigger the focusin
            $(e.currentTarget).focus()

            callbackHandler(this)

            // Unless it was the save handler,
            // focusin the textarea
            if (handlerName.indexOf('cmdSave') < 0) {
                this.$textarea.focus()
            }

            e.preventDefault()
        }, showEditor: function () {
            var instance = this,
                textarea,
                ns = this.$ns,
                container = this.$element,
                originalHeigth = container.css('height'),
                originalWidth = container.css('width'),
                editable = this.$editable,
                handler = this.$handler,
                callback = this.$callback,
                options = this.$options,
                editor = $('<div/>', {
                    'class': 'md-editor',
                    click: function () {
                        instance.focus()
                    }
                })

            // Prepare the editor
            if (this.$editor == null) {
                // Create the panel
                var editorHeader = $('<div/>', {
                    'class': 'md-header btn-toolbar'
                })

                // Build the main buttons
                if (options.buttons.length > 0) {
                    editorHeader = this.__buildButtons(options.buttons, editorHeader)
                }

                // Build the additional buttons
                if (options.additionalButtons.length > 0) {
                    editorHeader = this.__buildButtons(options.additionalButtons, editorHeader)
                }

                editor.append(editorHeader)

                // Wrap the textarea
                if (container.is('textarea')) {
                    container.before(editor)
                    textarea = container
                    textarea.addClass('md-input')
                    editor.append(textarea)
                } else {
                    var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),
                        currentContent = $.trim(rawContent)

                    // This is some arbitrary content that could be edited
                    textarea = $('<textarea/>', {
                        'class': 'md-input',
                        'val': currentContent
                    })

                    editor.append(textarea)

                    // Save the editable
                    editable.el = container
                    editable.type = container.prop('tagName').toLowerCase()
                    editable.content = container.html()

                    $(container[0].attributes).each(function () {
                        editable.attrKeys.push(this.nodeName)
                        editable.attrValues.push(this.nodeValue)
                    })

                    // Set editor to blocked the original container
                    container.replaceWith(editor)
                }

                // Create the footer if savable
                if (options.savable) {
                    var editorFooter = $('<div/>', {
                            'class': 'md-footer'
                        }),
                        saveHandler = 'cmdSave'

                    // Register handler and callback
                    handler.push(saveHandler)
                    callback.push(options.onSave)

                    editorFooter.append('<button class="btn btn-success" data-provider="'
                        + ns
                        + '" data-handler="'
                        + saveHandler
                        + '"><i class="icon icon-white icon-ok"></i> Save</button>')

                    editor.append(editorFooter)
                }

                // Set width/height
                $.each(['height', 'width'], function (k, attr) {
                    if (options[attr] != 'inherit') {
                        if (jQuery.isNumeric(options[attr])) {
                            editor.css(attr, options[attr] + 'px')
                        } else {
                            editor.addClass(options[attr])
                        }
                    }
                })

                // Reference
                this.$editor = editor
                this.$textarea = textarea
                this.$editable = editable
                this.$oldContent = this.getContent()

                this.__setListener()

                // Set editor attributes, data short-hand API and listener
                this.$editor.attr('id', (new Date).getTime())
                this.$editor.on('click', '[data-provider="bootstrap-markdown"]', $.proxy(this.__handle, this))

            } else {
                this.$editor.show()
            }

            if (options.autofocus) {
                this.$textarea.focus()
                this.$editor.addClass('active')
            }

            // Trigger the onShow hook
            options.onShow(this)

            return this
        }, showPreview: function () {
            var options = this.$options,
                callbackContent = options.onPreview(this), // Try to get the content from callback
                container = this.$textarea,
                afterContainer = container.next(),
                replacementContainer = $('<div/>', {'class': 'md-preview', 'data-provider': 'markdown-preview'}),
                content

            // Give flag that tell the editor enter preview mode
            this.$isPreview = true
            // Disable all buttons
            this.disableButtons('all').enableButtons('cmdPreview')

            if (typeof callbackContent == 'string') {
                // Set the content based by callback content
                content = callbackContent
            } else {
                // Set the content
                content = (typeof markdown == 'object') ? markdown.toHTML(container.val()) : container.val()
            }

            // Build preview element
            replacementContainer.html(content)

            if (afterContainer && afterContainer.attr('class') == 'md-footer') {
                // If there is footer element, insert the preview container before it
                replacementContainer.insertBefore(afterContainer)
            } else {
                // Otherwise, just append it after textarea
                container.parent().append(replacementContainer)
            }

            // Hide the last-active textarea
            container.hide()

            // Attach the editor instances
            replacementContainer.data('markdown', this)

            return this
        }, hidePreview: function () {
            // Give flag that tell the editor quit preview mode
            this.$isPreview = false

            // Obtain the preview container
            var container = this.$editor.find('div[data-provider="markdown-preview"]')

            // Remove the preview container
            container.remove()

            // Enable all buttons
            this.enableButtons('all')

            // Back to the editor
            this.$textarea.show()
            this.__setListener()

            return this
        }, isDirty: function () {
            return this.$oldContent != this.getContent()
        }, getContent: function () {
            return this.$textarea.val()
        }, setContent: function (content) {
            this.$textarea.val(content)

            return this
        }, findSelection: function (chunk) {
            var content = this.getContent(), startChunkPosition

            if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {
                var oldSelection = this.getSelection(), selection

                this.setSelection(startChunkPosition, startChunkPosition + chunk.length)
                selection = this.getSelection()

                this.setSelection(oldSelection.start, oldSelection.end)

                return selection
            } else {
                return null
            }
        }, getSelection: function () {

            var e = this.$textarea[0]

            return (

                ('selectionStart' in e && function () {
                    var l = e.selectionEnd - e.selectionStart
                    return { start: e.selectionStart, end: e.selectionEnd, length: l, text: e.value.substr(e.selectionStart, l) }
                }) ||

                    /* browser not supported */
                    function () {
                        return null
                    }

                )()

        }, setSelection: function (start, end) {

            var e = this.$textarea[0]

            return (

                ('selectionStart' in e && function () {
                    e.selectionStart = start
                    e.selectionEnd = end
                    return
                }) ||

                    /* browser not supported */
                    function () {
                        return null
                    }

                )()

        }, replaceSelection: function (text) {

            var e = this.$textarea[0]

            return (

                ('selectionStart' in e && function () {
                    e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length)
                    // Set cursor to the last replacement end
                    e.selectionStart = e.value.length
                    return this
                }) ||

                    /* browser not supported */
                    function () {
                        e.value += text
                        return jQuery(e)
                    }

                )()

        }, getNextTab: function () {
            // Shift the nextTab
            if (this.$nextTab.length == 0) {
                return null
            } else {
                var nextTab, tab = this.$nextTab.shift()

                if (typeof tab == 'function') {
                    nextTab = tab()
                } else if (typeof tab == 'object' && tab.length > 0) {
                    nextTab = tab
                }

                return nextTab
            }
        }, setNextTab: function (start, end) {
            // Push new selection into nextTab collections
            if (typeof start == 'string') {
                var that = this
                this.$nextTab.push(function () {
                    return that.findSelection(start)
                })
            } else if (typeof start == 'numeric' && typeof end == 'numeric') {
                var oldSelection = this.getSelection()

                this.setSelection(start, end)
                this.$nextTab.push(this.getSelection())

                this.setSelection(oldSelection.start, oldSelection.end)
            }

            return
        }, enableButtons: function (name) {
            var alter = function (el) {
                el.removeAttr('disabled')
            }

            this.__alterButtons(name, alter)

            return this
        }, disableButtons: function (name) {
            var alter = function (el) {
                el.attr('disabled', 'disabled')
            }

            this.__alterButtons(name, alter)

            return this
        }, eventSupported: function (eventName) {
            var isSupported = eventName in this.$element
            if (!isSupported) {
                this.$element.setAttribute(eventName, 'return;')
                isSupported = typeof this.$element[eventName] === 'function'
            }
            return isSupported
        }, keydown: function (e) {
            this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40, 38, 9, 13, 27])
            this.keyup(e)
        }, keypress: function (e) {
            if (this.suppressKeyPressRepeat) return
            this.keyup(e)
        }, keyup: function (e) {
            var blocked = false
            switch (e.keyCode) {
                case 40: // down arrow
                case 38: // up arrow
                case 16: // shift
                case 17: // ctrl
                case 18: // alt
                    break

                case 9: // tab
                    var nextTab
                    if (nextTab = this.getNextTab(), nextTab != null) {
                        // Get the nextTab if exists
                        var that = this
                        setTimeout(function () {
                            that.setSelection(nextTab.start, nextTab.end)
                        }, 500)

                        blocked = true
                    } else {
                        // The next tab memory contains nothing...
                        // check the cursor position to determine tab action
                        var cursor = this.getSelection()

                        if (cursor.start == cursor.end && cursor.end == this.getContent().length) {
                            // The cursor already reach the end of the content
                            blocked = false

                        } else {
                            // Put the cursor to the end
                            this.setSelection(this.getContent().length, this.getContent().length)

                            blocked = true
                        }
                    }

                    break

                case 13: // enter
                case 27: // escape
                    blocked = false
                    break

                default:
                    blocked = false
            }

            if (blocked) {
                e.stopPropagation()
                e.preventDefault()
            }
        }, focus: function (e) {
            var options = this.$options,
                isHideable = options.hideable,
                editor = this.$editor

            editor.addClass('active')

            // Blur other markdown(s)
            $(document).find('.md-editor').each(function () {
                if ($(this).attr('id') != editor.attr('id')) {
                    var attachedMarkdown

                    if (attachedMarkdown = $(this).find('textarea').data('markdown'),
                        attachedMarkdown == null) {
                        attachedMarkdown = $(this).find('div[data-provider="markdown-preview"]').data('markdown')
                    }

                    if (attachedMarkdown) {
                        attachedMarkdown.blur()
                    }
                }
            })

            return this
        }, blur: function (e) {
            var options = this.$options,
                isHideable = options.hideable,
                editor = this.$editor,
                editable = this.$editable

            if (editor.hasClass('active') || this.$element.parent().length == 0) {
                editor.removeClass('active')

                if (isHideable) {

                    // Check for editable elements
                    if (editable.el != null) {
                        // Build the original element
                        var oldElement = $('<' + editable.type + '/>'),
                            content = this.getContent(),
                            currentContent = (typeof markdown == 'object') ? markdown.toHTML(content) : content

                        $(editable.attrKeys).each(function (k, v) {
                            oldElement.attr(editable.attrKeys[k], editable.attrValues[k])
                        })

                        // Get the editor content
                        oldElement.html(currentContent)

                        editor.replaceWith(oldElement)
                    } else {
                        editor.hide()

                    }
                }

                // Trigger the onBlur hook
                options.onBlur(this)
            }

            return this
        }

    }

    /* MARKDOWN PLUGIN DEFINITION
     * ========================== */

    var old = $.fn.markdown

    $.fn.markdown = function (option) {
        return this.each(function () {
            var $this = $(this)
                , data = $this.data('markdown')
                , options = typeof option == 'object' && option
            if (!data) $this.data('markdown', (data = new Markdown(this, options)))
        })
    }

    $.fn.markdown.defaults = {
        /* Editor Properties */
        autofocus: false,
        hideable: false,
        savable: false,
        width: 'inherit',
        height: 'inherit',

        /* Buttons Properties */
        buttons: [
            [
                {
                    name: 'groupFont',
                    data: [
                        {
                            name: 'cmdBold',
                            title: 'Bold',
                            icon: 'glyphicon glyphicon-bold',
                            callback: function (e) {
                                // Give/remove ** surround the selection
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent()

                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'strong text'
                                } else {
                                    chunk = selected.text
                                }

                                // transform selection and set the cursor into chunked text
                                if (content.substr(selected.start - 2, 2) == '**'
                                    && content.substr(selected.end, 2) == '**') {
                                    e.setSelection(selected.start - 2, selected.end + 2)
                                    e.replaceSelection(chunk)
                                    cursor = selected.start - 2
                                } else {
                                    e.replaceSelection('**' + chunk + '**')
                                    cursor = selected.start + 2
                                }

                                // Set the cursor
                                e.setSelection(cursor, cursor + chunk.length)
                            }
                        },
                        {
                            name: 'cmdItalic',
                            title: 'Italic',
                            icon: 'glyphicon glyphicon-italic',
                            callback: function (e) {
                                // Give/remove * surround the selection
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent()

                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'emphasized text'
                                } else {
                                    chunk = selected.text
                                }

                                // transform selection and set the cursor into chunked text
                                if (content.substr(selected.start - 1, 1) == '*'
                                    && content.substr(selected.end, 1) == '*') {
                                    e.setSelection(selected.start - 1, selected.end + 1)
                                    e.replaceSelection(chunk)
                                    cursor = selected.start - 1
                                } else {
                                    e.replaceSelection('*' + chunk + '*')
                                    cursor = selected.start + 1
                                }

                                // Set the cursor
                                e.setSelection(cursor, cursor + chunk.length)
                            }
                        },
                        {
                            name: 'cmdHeading',
                            title: 'Heading',
                            icon: 'glyphicon glyphicon-font',
                            callback: function (e) {
                                // Append/remove ### surround the selection
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent(), pointer, prevChar

                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'heading text'
                                } else {
                                    chunk = selected.text
                                }

                                // transform selection and set the cursor into chunked text
                                if ((pointer = 4, content.substr(selected.start - pointer, pointer) == '### ')
                                    || (pointer = 3, content.substr(selected.start - pointer, pointer) == '###')) {
                                    e.setSelection(selected.start - pointer, selected.end)
                                    e.replaceSelection(chunk)
                                    cursor = selected.start - pointer
                                } else if (prevChar = content.substr(selected.start - 1, 1), !!prevChar && prevChar != '\n') {
                                    e.replaceSelection('\n\n### ' + chunk + '\n')
                                    cursor = selected.start + 6
                                } else {
                                    // Empty string before element
                                    e.replaceSelection('### ' + chunk + '\n')
                                    cursor = selected.start + 4
                                }

                                // Set the cursor
                                e.setSelection(cursor, cursor + chunk.length)
                            }
                        }
                    ]
                },
                {
                    name: 'groupLink',
                    data: [
                        {
                            name: 'cmdUrl',
                            title: 'URL/Link',
                            icon: 'glyphicon glyphicon-globe',
                            callback: function (e) {
                                // Give [] surround the selection and prepend the link
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link

                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'enter link description here'
                                } else {
                                    chunk = selected.text
                                }

                                link = prompt('Insert Hyperlink', 'http://')

                                if (link != null) {
                                    // transform selection and set the cursor into chunked text
                                    e.replaceSelection('[' + chunk + '](' + link + ')')
                                    cursor = selected.start + 1

                                    // Set the cursor
                                    e.setSelection(cursor, cursor + chunk.length)
                                }
                            }
                        },
                        {
                            name: 'cmdImage',
                            title: 'Image',
                            icon: 'glyphicon glyphicon-picture',
                            callback: function (e) {
                                // Give ![] surround the selection and prepend the image link
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link

                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'enter image description here'
                                } else {
                                    chunk = selected.text
                                }

                                link = prompt('Insert Image Hyperlink', 'http://')

                                if (link != null) {
                                    // transform selection and set the cursor into chunked text
                                    e.replaceSelection('![' + chunk + '](' + link + ' "enter image title here")')
                                    cursor = selected.start + 2

                                    // Set the next tab
                                    e.setNextTab('enter image title here')

                                    // Set the cursor
                                    e.setSelection(cursor, cursor + chunk.length)
                                }
                            }
                        }
                    ]
                },
                {
                    name: 'groupMisc',
                    data: [
                        {
                            name: 'cmdList',
                            title: 'List',
                            icon: 'glyphicon glyphicon-list',
                            callback: function (e) {
                                // Prepend/Give - surround the selection
                                var chunk, cursor, selected = e.getSelection(), content = e.getContent()

                                // transform selection and set the cursor into chunked text
                                if (selected.length == 0) {
                                    // Give extra word
                                    chunk = 'list text here'

                                    e.replaceSelection('- ' + chunk)

                                    // Set the cursor
                                    cursor = selected.start + 2
                                } else {
                                    if (selected.text.indexOf('\n') < 0) {
                                        chunk = selected.text

                                        e.replaceSelection('- ' + chunk)

                                        // Set the cursor
                                        cursor = selected.start + 2
                                    } else {
                                        var list = []

                                        list = selected.text.split('\n')
                                        chunk = list[0]

                                        $.each(list, function (k, v) {
                                            list[k] = '- ' + v
                                        })

                                        e.replaceSelection('\n\n' + list.join('\n'))

                                        // Set the cursor
                                        cursor = selected.start + 4
                                    }
                                }


                                // Set the cursor
                                e.setSelection(cursor, cursor + chunk.length)
                            }
                        }
                    ]
                },
                {
                    name: 'groupUtil',
                    data: [
                        {
                            name: 'cmdPreview',
                            toggle: true,
                            title: 'Preview',
                            btnText: 'Preview',
                            btnClass: 'btn btn-primary btn-sm',
                            icon: 'glyphicon glyphicon-search',
                            callback: function (e) {
                                // Check the preview mode and toggle based on this flag
                                var isPreview = e.$isPreview, content

                                if (isPreview == false) {
                                    // Give flag that tell the editor enter preview mode
                                    e.showPreview()
                                } else {
                                    e.hidePreview()
                                }
                            }
                        }
                    ]
                }
            ]
        ],
        additionalButtons: [], // Place to hook more buttons by code

        /* Events hook */
        onShow: function (e) {
        },
        onPreview: function (e) {
        },
        onSave: function (e) {
        },
        onBlur: function (e) {
        }
    }

    $.fn.markdown.Constructor = Markdown


    /* MARKDOWN NO CONFLICT
     * ==================== */

    $.fn.markdown.noConflict = function () {
        $.fn.markdown = old
        return this
    }

    /* MARKDOWN GLOBAL FUNCTION & DATA-API
     * ==================================== */
    var initMarkdown = function (el) {
        var $this = el

        if ($this.data('markdown')) {
            $this.data('markdown').showEditor()
            return
        }
        $this.markdown($this.data())
    }

    var analyzeMarkdown = function (e) {
        var blurred = false,
            el,
            $docEditor = $(e.currentTarget)

        // Check whether it was editor childs or not
        if ((e.type == 'focusin' || e.type == 'click') && $docEditor.length == 1 && typeof $docEditor[0] == 'object') {
            el = $docEditor[0].activeElement
            if (!$(el).data('markdown')) {
                if (typeof $(el).parent().parent().parent().attr('class') == "undefined"
                    || $(el).parent().parent().parent().attr('class').indexOf('md-editor') < 0) {
                    if (typeof $(el).parent().parent().attr('class') == "undefined"
                        || $(el).parent().parent().attr('class').indexOf('md-editor') < 0) {

                        blurred = true
                    }
                } else {
                    blurred = false
                }
            }


            if (blurred) {
                // Blur event
                $(document).find('.md-editor').each(function () {
                    var parentMd = $(el).parent()

                    if ($(this).attr('id') != parentMd.attr('id')) {
                        var attachedMarkdown

                        if (attachedMarkdown = $(this).find('textarea').data('markdown'),
                            attachedMarkdown == null) {
                            attachedMarkdown = $(this).find('div[data-provider="markdown-preview"]').data('markdown')
                        }

                        if (attachedMarkdown) {
                            attachedMarkdown.blur()
                        }
                    }
                })
            }

            e.stopPropagation()
        }
    }

    $(document)
        .on('click.markdown.data-api', '[data-provide="markdown-editable"]', function (e) {
            initMarkdown($(this))
            e.preventDefault()
        })
        .on('click', function (e) {
            analyzeMarkdown(e)
        })
        .on('focusin', function (e) {
            analyzeMarkdown(e)
        })
        .ready(function () {
            $('textarea[data-provide="markdown"]').each(function () {
                initMarkdown($(this))
            })
        })

}(window.jQuery);

// Released under MIT license
// Copyright (c) 2009-2010 Dominic Baggott
// Copyright (c) 2009-2010 Ash Berlin
// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)

(function (expose) {

    /**
     *  class Markdown
     *
     *  Markdown processing in Javascript done right. We have very particular views
     *  on what constitutes 'right' which include:
     *
     *  - produces well-formed HTML (this means that em and strong nesting is
     *    important)
     *
     *  - has an intermediate representation to allow processing of parsed data (We
     *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).
     *
     *  - is easily extensible to add new dialects without having to rewrite the
     *    entire parsing mechanics
     *
     *  - has a good test suite
     *
     *  This implementation fulfills all of these (except that the test suite could
     *  do with expanding to automatically run all the fixtures from other Markdown
     *  implementations.)
     *
     *  ##### Intermediate Representation
     *
     *  *TODO* Talk about this :) Its JsonML, but document the node names we use.
     *
     *  [JsonML]: http://jsonml.org/ "JSON Markup Language"
     **/
    var Markdown = expose.Markdown = function Markdown(dialect) {
        switch (typeof dialect) {
            case "undefined":
                this.dialect = Markdown.dialects.Gruber;
                break;
            case "object":
                this.dialect = dialect;
                break;
            default:
                if (dialect in Markdown.dialects) {
                    this.dialect = Markdown.dialects[dialect];
                }
                else {
                    throw new Error("Unknown Markdown dialect '" + String(dialect) + "'");
                }
                break;
        }
        this.em_state = [];
        this.strong_state = [];
        this.debug_indent = "";
    };

    /**
     *  parse( markdown, [dialect] ) -> JsonML
     *  - markdown (String): markdown string to parse
     *  - dialect (String | Dialect): the dialect to use, defaults to gruber
     *
     *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.
     **/
    expose.parse = function (source, dialect) {
        // dialect will default if undefined
        var md = new Markdown(dialect);
        return md.toTree(source);
    };

    /**
     *  toHTML( markdown, [dialect]  ) -> String
     *  toHTML( md_tree ) -> String
     *  - markdown (String): markdown string to parse
     *  - md_tree (Markdown.JsonML): parsed markdown tree
     *
     *  Take markdown (either as a string or as a JsonML tree) and run it through
     *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.
     **/
    expose.toHTML = function toHTML(source, dialect, options) {
        var input = expose.toHTMLTree(source, dialect, options);

        return expose.renderJsonML(input);
    };

    /**
     *  toHTMLTree( markdown, [dialect] ) -> JsonML
     *  toHTMLTree( md_tree ) -> JsonML
     *  - markdown (String): markdown string to parse
     *  - dialect (String | Dialect): the dialect to use, defaults to gruber
     *  - md_tree (Markdown.JsonML): parsed markdown tree
     *
     *  Turn markdown into HTML, represented as a JsonML tree. If a string is given
     *  to this function, it is first parsed into a markdown tree by calling
     *  [[parse]].
     **/
    expose.toHTMLTree = function toHTMLTree(input, dialect, options) {
        // convert string input to an MD tree
        if (typeof input === "string") input = this.parse(input, dialect);

        // Now convert the MD tree to an HTML tree

        // remove references from the tree
        var attrs = extract_attr(input),
            refs = {};

        if (attrs && attrs.references) {
            refs = attrs.references;
        }

        var html = convert_tree_to_html(input, refs, options);
        merge_text_nodes(html);
        return html;
    };

// For Spidermonkey based engines
    function mk_block_toSource() {
        return "Markdown.mk_block( " +
            uneval(this.toString()) +
            ", " +
            uneval(this.trailing) +
            ", " +
            uneval(this.lineNumber) +
            " )";
    }

// node
    function mk_block_inspect() {
        var util = require('util');
        return "Markdown.mk_block( " +
            util.inspect(this.toString()) +
            ", " +
            util.inspect(this.trailing) +
            ", " +
            util.inspect(this.lineNumber) +
            " )";

    }

    var mk_block = Markdown.mk_block = function (block, trail, line) {
        // Be helpful for default case in tests.
        if (arguments.length == 1) trail = "\n\n";

        var s = new String(block);
        s.trailing = trail;
        // To make it clear its not just a string
        s.inspect = mk_block_inspect;
        s.toSource = mk_block_toSource;

        if (line != undefined)
            s.lineNumber = line;

        return s;
    };

    function count_lines(str) {
        var n = 0, i = -1;
        while (( i = str.indexOf('\n', i + 1) ) !== -1) n++;
        return n;
    }

// Internal - split source into rough blocks
    Markdown.prototype.split_blocks = function splitBlocks(input, startLine) {
        // [\s\S] matches _anything_ (newline or space)
        var re = /([\s\S]+?)($|\n(?:\s*\n|$)+)/g,
            blocks = [],
            m;

        var line_no = 1;

        if (( m = /^(\s*\n)/.exec(input) ) != null) {
            // skip (but count) leading blank lines
            line_no += count_lines(m[0]);
            re.lastIndex = m[0].length;
        }

        while (( m = re.exec(input) ) !== null) {
            blocks.push(mk_block(m[1], m[2], line_no));
            line_no += count_lines(m[0]);
        }

        return blocks;
    };

    /**
     *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]
     *  - block (String): the block to process
     *  - next (Array): the following blocks
     *
     * Process `block` and return an array of JsonML nodes representing `block`.
     *
     * It does this by asking each block level function in the dialect to process
     * the block until one can. Succesful handling is indicated by returning an
     * array (with zero or more JsonML nodes), failure by a false value.
     *
     * Blocks handlers are responsible for calling [[Markdown#processInline]]
     * themselves as appropriate.
     *
     * If the blocks were split incorrectly or adjacent blocks need collapsing you
     * can adjust `next` in place using shift/splice etc.
     *
     * If any of this default behaviour is not right for the dialect, you can
     * define a `__call__` method on the dialect that will get invoked to handle
     * the block processing.
     */
    Markdown.prototype.processBlock = function processBlock(block, next) {
        var cbs = this.dialect.block,
            ord = cbs.__order__;

        if ("__call__" in cbs) {
            return cbs.__call__.call(this, block, next);
        }

        for (var i = 0; i < ord.length; i++) {
            //D:this.debug( "Testing", ord[i] );
            var res = cbs[ ord[i] ].call(this, block, next);
            if (res) {
                //D:this.debug("  matched");
                if (!isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ))
                    this.debug(ord[i], "didn't return a proper array");
                //D:this.debug( "" );
                return res;
            }
        }

        // Uhoh! no match! Should we throw an error?
        return [];
    };

    Markdown.prototype.processInline = function processInline(block) {
        return this.dialect.inline.__call__.call(this, String(block));
    };

    /**
     *  Markdown#toTree( source ) -> JsonML
     *  - source (String): markdown source to parse
     *
     *  Parse `source` into a JsonML tree representing the markdown document.
     **/
// custom_tree means set this.tree to `custom_tree` and restore old value on return
    Markdown.prototype.toTree = function toTree(source, custom_root) {
        var blocks = source instanceof Array ? source : this.split_blocks(source);

        // Make tree a member variable so its easier to mess with in extensions
        var old_tree = this.tree;
        try {
            this.tree = custom_root || this.tree || [ "markdown" ];

            blocks:
                while (blocks.length) {
                    var b = this.processBlock(blocks.shift(), blocks);

                    // Reference blocks and the like won't return any content
                    if (!b.length) continue blocks;

                    this.tree.push.apply(this.tree, b);
                }
            return this.tree;
        }
        finally {
            if (custom_root) {
                this.tree = old_tree;
            }
        }
    };

// Noop by default
    Markdown.prototype.debug = function () {
        var args = Array.prototype.slice.call(arguments);
        args.unshift(this.debug_indent);
        if (typeof print !== "undefined")
            print.apply(print, args);
        if (typeof console !== "undefined" && typeof console.log !== "undefined")
            console.log.apply(null, args);
    }

    Markdown.prototype.loop_re_over_block = function (re, block, cb) {
        // Dont use /g regexps with this
        var m,
            b = block.valueOf();

        while (b.length && (m = re.exec(b) ) != null) {
            b = b.substr(m[0].length);
            cb.call(this, m);
        }
        return b;
    };

    /**
     * Markdown.dialects
     *
     * Namespace of built-in dialects.
     **/
    Markdown.dialects = {};

    /**
     * Markdown.dialects.Gruber
     *
     * The default dialect that follows the rules set out by John Gruber's
     * markdown.pl as closely as possible. Well actually we follow the behaviour of
     * that script which in some places is not exactly what the syntax web page
     * says.
     **/
    Markdown.dialects.Gruber = {
        block: {
            atxHeader: function atxHeader(block, next) {
                var m = block.match(/^(#{1,6})\s*(.*?)\s*#*\s*(?:\n|$)/);

                if (!m) return undefined;

                var header = [ "header", { level: m[ 1 ].length } ];
                Array.prototype.push.apply(header, this.processInline(m[ 2 ]));

                if (m[0].length < block.length)
                    next.unshift(mk_block(block.substr(m[0].length), block.trailing, block.lineNumber + 2));

                return [ header ];
            },

            setextHeader: function setextHeader(block, next) {
                var m = block.match(/^(.*)\n([-=])\2\2+(?:\n|$)/);

                if (!m) return undefined;

                var level = ( m[ 2 ] === "=" ) ? 1 : 2;
                var header = [ "header", { level: level }, m[ 1 ] ];

                if (m[0].length < block.length)
                    next.unshift(mk_block(block.substr(m[0].length), block.trailing, block.lineNumber + 2));

                return [ header ];
            },

            code: function code(block, next) {
                // |    Foo
                // |bar
                // should be a code block followed by a paragraph. Fun
                //
                // There might also be adjacent code block to merge.

                var ret = [],
                    re = /^(?: {0,3}\t| {4})(.*)\n?/,
                    lines;

                // 4 spaces + content
                if (!block.match(re)) return undefined;

                block_search:
                    do {
                        // Now pull out the rest of the lines
                        var b = this.loop_re_over_block(
                            re, block.valueOf(), function (m) {
                                ret.push(m[1]);
                            });

                        if (b.length) {
                            // Case alluded to in first comment. push it back on as a new block
                            next.unshift(mk_block(b, block.trailing));
                            break block_search;
                        }
                        else if (next.length) {
                            // Check the next block - it might be code too
                            if (!next[0].match(re)) break block_search;

                            // Pull how how many blanks lines follow - minus two to account for .join
                            ret.push(block.trailing.replace(/[^\n]/g, '').substring(2));

                            block = next.shift();
                        }
                        else {
                            break block_search;
                        }
                    } while (true);

                return [
                    [ "code_block", ret.join("\n") ]
                ];
            },

            horizRule: function horizRule(block, next) {
                // this needs to find any hr in the block to handle abutting blocks
                var m = block.match(/^(?:([\s\S]*?)\n)?[ \t]*([-_*])(?:[ \t]*\2){2,}[ \t]*(?:\n([\s\S]*))?$/);

                if (!m) {
                    return undefined;
                }

                var jsonml = [
                    [ "hr" ]
                ];

                // if there's a leading abutting block, process it
                if (m[ 1 ]) {
                    jsonml.unshift.apply(jsonml, this.processBlock(m[ 1 ], []));
                }

                // if there's a trailing abutting block, stick it into next
                if (m[ 3 ]) {
                    next.unshift(mk_block(m[ 3 ]));
                }

                return jsonml;
            },

            // There are two types of lists. Tight and loose. Tight lists have no whitespace
            // between the items (and result in text just in the <li>) and loose lists,
            // which have an empty line between list items, resulting in (one or more)
            // paragraphs inside the <li>.
            //
            // There are all sorts weird edge cases about the original markdown.pl's
            // handling of lists:
            //
            // * Nested lists are supposed to be indented by four chars per level. But
            //   if they aren't, you can get a nested list by indenting by less than
            //   four so long as the indent doesn't match an indent of an existing list
            //   item in the 'nest stack'.
            //
            // * The type of the list (bullet or number) is controlled just by the
            //    first item at the indent. Subsequent changes are ignored unless they
            //    are for nested lists
            //
            lists: (function () {
                // Use a closure to hide a few variables.
                var any_list = "[*+-]|\\d+\\.",
                    bullet_list = /[*+-]/,
                    number_list = /\d+\./,
                // Capture leading indent as it matters for determining nested lists.
                    is_list_re = new RegExp("^( {0,3})(" + any_list + ")[ \t]+"),
                    indent_re = "(?: {0,3}\\t| {4})";

                // TODO: Cache this regexp for certain depths.
                // Create a regexp suitable for matching an li for a given stack depth
                function regex_for_depth(depth) {

                    return new RegExp(
                        // m[1] = indent, m[2] = list_type
                        "(?:^(" + indent_re + "{0," + depth + "} {0,3})(" + any_list + ")\\s+)|" +
                            // m[3] = cont
                            "(^" + indent_re + "{0," + (depth - 1) + "}[ ]{0,4})"
                    );
                }

                function expand_tab(input) {
                    return input.replace(/ {0,3}\t/g, "    ");
                }

                // Add inline content `inline` to `li`. inline comes from processInline
                // so is an array of content
                function add(li, loose, inline, nl) {
                    if (loose) {
                        li.push([ "para" ].concat(inline));
                        return;
                    }
                    // Hmmm, should this be any block level element or just paras?
                    var add_to = li[li.length - 1] instanceof Array && li[li.length - 1][0] == "para"
                        ? li[li.length - 1]
                        : li;

                    // If there is already some content in this list, add the new line in
                    if (nl && li.length > 1) inline.unshift(nl);

                    for (var i = 0; i < inline.length; i++) {
                        var what = inline[i],
                            is_str = typeof what == "string";
                        if (is_str && add_to.length > 1 && typeof add_to[add_to.length - 1] == "string") {
                            add_to[ add_to.length - 1 ] += what;
                        }
                        else {
                            add_to.push(what);
                        }
                    }
                }

                // contained means have an indent greater than the current one. On
                // *every* line in the block
                function get_contained_blocks(depth, blocks) {

                    var re = new RegExp("^(" + indent_re + "{" + depth + "}.*?\\n?)*$"),
                        replace = new RegExp("^" + indent_re + "{" + depth + "}", "gm"),
                        ret = [];

                    while (blocks.length > 0) {
                        if (re.exec(blocks[0])) {
                            var b = blocks.shift(),
                            // Now remove that indent
                                x = b.replace(replace, "");

                            ret.push(mk_block(x, b.trailing, b.lineNumber));
                        }
                        break;
                    }
                    return ret;
                }

                // passed to stack.forEach to turn list items up the stack into paras
                function paragraphify(s, i, stack) {
                    var list = s.list;
                    var last_li = list[list.length - 1];

                    if (last_li[1] instanceof Array && last_li[1][0] == "para") {
                        return;
                    }
                    if (i + 1 == stack.length) {
                        // Last stack frame
                        // Keep the same array, but replace the contents
                        last_li.push(["para"].concat(last_li.splice(1)));
                    }
                    else {
                        var sublist = last_li.pop();
                        last_li.push(["para"].concat(last_li.splice(1)), sublist);
                    }
                }

                // The matcher function
                return function (block, next) {
                    var m = block.match(is_list_re);
                    if (!m) return undefined;

                    function make_list(m) {
                        var list = bullet_list.exec(m[2])
                            ? ["bulletlist"]
                            : ["numberlist"];

                        stack.push({ list: list, indent: m[1] });
                        return list;
                    }


                    var stack = [], // Stack of lists for nesting.
                        list = make_list(m),
                        last_li,
                        loose = false,
                        ret = [ stack[0].list ],
                        i;

                    // Loop to search over block looking for inner block elements and loose lists
                    loose_search:
                        while (true) {
                            // Split into lines preserving new lines at end of line
                            var lines = block.split(/(?=\n)/);

                            // We have to grab all lines for a li and call processInline on them
                            // once as there are some inline things that can span lines.
                            var li_accumulate = "";

                            // Loop over the lines in this block looking for tight lists.
                            tight_search:
                                for (var line_no = 0; line_no < lines.length; line_no++) {
                                    var nl = "",
                                        l = lines[line_no].replace(/^\n/, function (n) {
                                            nl = n;
                                            return "";
                                        });

                                    // TODO: really should cache this
                                    var line_re = regex_for_depth(stack.length);

                                    m = l.match(line_re);
                                    //print( "line:", uneval(l), "\nline match:", uneval(m) );

                                    // We have a list item
                                    if (m[1] !== undefined) {
                                        // Process the previous list item, if any
                                        if (li_accumulate.length) {
                                            add(last_li, loose, this.processInline(li_accumulate), nl);
                                            // Loose mode will have been dealt with. Reset it
                                            loose = false;
                                            li_accumulate = "";
                                        }

                                        m[1] = expand_tab(m[1]);
                                        var wanted_depth = Math.floor(m[1].length / 4) + 1;
                                        //print( "want:", wanted_depth, "stack:", stack.length);
                                        if (wanted_depth > stack.length) {
                                            // Deep enough for a nested list outright
                                            //print ( "new nested list" );
                                            list = make_list(m);
                                            last_li.push(list);
                                            last_li = list[1] = [ "listitem" ];
                                        }
                                        else {
                                            // We aren't deep enough to be strictly a new level. This is
                                            // where Md.pl goes nuts. If the indent matches a level in the
                                            // stack, put it there, else put it one deeper then the
                                            // wanted_depth deserves.
                                            var found = false;
                                            for (i = 0; i < stack.length; i++) {
                                                if (stack[ i ].indent != m[1]) continue;
                                                list = stack[ i ].list;
                                                stack.splice(i + 1);
                                                found = true;
                                                break;
                                            }

                                            if (!found) {
                                                //print("not found. l:", uneval(l));
                                                wanted_depth++;
                                                if (wanted_depth <= stack.length) {
                                                    stack.splice(wanted_depth);
                                                    //print("Desired depth now", wanted_depth, "stack:", stack.length);
                                                    list = stack[wanted_depth - 1].list;
                                                    //print("list:", uneval(list) );
                                                }
                                                else {
                                                    //print ("made new stack for messy indent");
                                                    list = make_list(m);
                                                    last_li.push(list);
                                                }
                                            }

                                            //print( uneval(list), "last", list === stack[stack.length-1].list );
                                            last_li = [ "listitem" ];
                                            list.push(last_li);
                                        } // end depth of shenegains
                                        nl = "";
                                    }

                                    // Add content
                                    if (l.length > m[0].length) {
                                        li_accumulate += nl + l.substr(m[0].length);
                                    }
                                } // tight_search

                            if (li_accumulate.length) {
                                add(last_li, loose, this.processInline(li_accumulate), nl);
                                // Loose mode will have been dealt with. Reset it
                                loose = false;
                                li_accumulate = "";
                            }

                            // Look at the next block - we might have a loose list. Or an extra
                            // paragraph for the current li
                            var contained = get_contained_blocks(stack.length, next);

                            // Deal with code blocks or properly nested lists
                            if (contained.length > 0) {
                                // Make sure all listitems up the stack are paragraphs
                                forEach(stack, paragraphify, this);

                                last_li.push.apply(last_li, this.toTree(contained, []));
                            }

                            var next_block = next[0] && next[0].valueOf() || "";

                            if (next_block.match(is_list_re) || next_block.match(/^ /)) {
                                block = next.shift();

                                // Check for an HR following a list: features/lists/hr_abutting
                                var hr = this.dialect.block.horizRule(block, next);

                                if (hr) {
                                    ret.push.apply(ret, hr);
                                    break;
                                }

                                // Make sure all listitems up the stack are paragraphs
                                forEach(stack, paragraphify, this);

                                loose = true;
                                continue loose_search;
                            }
                            break;
                        } // loose_search

                    return ret;
                };
            })(),

            blockquote: function blockquote(block, next) {
                if (!block.match(/^>/m))
                    return undefined;

                var jsonml = [];

                // separate out the leading abutting block, if any
                if (block[ 0 ] != ">") {
                    var lines = block.split(/\n/),
                        prev = [];

                    // keep shifting lines until you find a crotchet
                    while (lines.length && lines[ 0 ][ 0 ] != ">") {
                        prev.push(lines.shift());
                    }

                    // reassemble!
                    block = lines.join("\n");
                    jsonml.push.apply(jsonml, this.processBlock(prev.join("\n"), []));
                }

                // if the next block is also a blockquote merge it in
                while (next.length && next[ 0 ][ 0 ] == ">") {
                    var b = next.shift();
                    block = new String(block + block.trailing + b);
                    block.trailing = b.trailing;
                }

                // Strip off the leading "> " and re-process as a block.
                var input = block.replace(/^> ?/gm, ''),
                    old_tree = this.tree;
                jsonml.push(this.toTree(input, [ "blockquote" ]));

                return jsonml;
            },

            referenceDefn: function referenceDefn(block, next) {
                var re = /^\s*\[(.*?)\]:\s*(\S+)(?:\s+(?:(['"])(.*?)\3|\((.*?)\)))?\n?/;
                // interesting matches are [ , ref_id, url, , title, title ]

                if (!block.match(re))
                    return undefined;

                // make an attribute node if it doesn't exist
                if (!extract_attr(this.tree)) {
                    this.tree.splice(1, 0, {});
                }

                var attrs = extract_attr(this.tree);

                // make a references hash if it doesn't exist
                if (attrs.references === undefined) {
                    attrs.references = {};
                }

                var b = this.loop_re_over_block(re, block, function (m) {

                    if (m[2] && m[2][0] == '<' && m[2][m[2].length - 1] == '>')
                        m[2] = m[2].substring(1, m[2].length - 1);

                    var ref = attrs.references[ m[1].toLowerCase() ] = {
                        href: m[2]
                    };

                    if (m[4] !== undefined)
                        ref.title = m[4];
                    else if (m[5] !== undefined)
                        ref.title = m[5];

                });

                if (b.length)
                    next.unshift(mk_block(b, block.trailing));

                return [];
            },

            para: function para(block, next) {
                // everything's a para!
                return [ ["para"].concat(this.processInline(block)) ];
            }
        }
    };

    Markdown.dialects.Gruber.inline = {

        __oneElement__: function oneElement(text, patterns_or_re, previous_nodes) {
            var m,
                res,
                lastIndex = 0;

            patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;
            var re = new RegExp("([\\s\\S]*?)(" + (patterns_or_re.source || patterns_or_re) + ")");

            m = re.exec(text);
            if (!m) {
                // Just boring text
                return [ text.length, text ];
            }
            else if (m[1]) {
                // Some un-interesting text matched. Return that first
                return [ m[1].length, m[1] ];
            }

            var res;
            if (m[2] in this.dialect.inline) {
                res = this.dialect.inline[ m[2] ].call(
                    this,
                    text.substr(m.index), m, previous_nodes || []);
            }
            // Default for now to make dev easier. just slurp special and output it.
            res = res || [ m[2].length, m[2] ];
            return res;
        },

        __call__: function inline(text, patterns) {

            var out = [],
                res;

            function add(x) {
                //D:self.debug("  adding output", uneval(x));
                if (typeof x == "string" && typeof out[out.length - 1] == "string")
                    out[ out.length - 1 ] += x;
                else
                    out.push(x);
            }

            while (text.length > 0) {
                res = this.dialect.inline.__oneElement__.call(this, text, patterns, out);
                text = text.substr(res.shift());
                forEach(res, add)
            }

            return out;
        },

        // These characters are intersting elsewhere, so have rules for them so that
        // chunks of plain text blocks don't include them
        "]": function () {
        },
        "}": function () {
        },

        "\\": function escaped(text) {
            // [ length of input processed, node/children to add... ]
            // Only esacape: \ ` * _ { } [ ] ( ) # * + - . !
            if (text.match(/^\\[\\`\*_{}\[\]()#\+.!\-]/))
                return [ 2, text[1] ];
            else
            // Not an esacpe
                return [ 1, "\\" ];
        },

        "![": function image(text) {

            // Unlike images, alt text is plain text only. no other elements are
            // allowed in there

            // ![Alt text](/path/to/img.jpg "Optional title")
            //      1          2            3       4         <--- captures
            var m = text.match(/^!\[(.*?)\][ \t]*\([ \t]*(\S*)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);

            if (m) {
                if (m[2] && m[2][0] == '<' && m[2][m[2].length - 1] == '>')
                    m[2] = m[2].substring(1, m[2].length - 1);

                m[2] = this.dialect.inline.__call__.call(this, m[2], /\\/)[0];

                var attrs = { alt: m[1], href: m[2] || "" };
                if (m[4] !== undefined)
                    attrs.title = m[4];

                return [ m[0].length, [ "img", attrs ] ];
            }

            // ![Alt text][id]
            m = text.match(/^!\[(.*?)\][ \t]*\[(.*?)\]/);

            if (m) {
                // We can't check if the reference is known here as it likely wont be
                // found till after. Check it in md tree->hmtl tree conversion
                return [ m[0].length, [ "img_ref", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];
            }

            // Just consume the '!['
            return [ 2, "![" ];
        },

        "[": function link(text) {

            var orig = String(text);
            // Inline content is possible inside `link text`
            var res = Markdown.DialectHelpers.inline_until_char.call(this, text.substr(1), ']');

            // No closing ']' found. Just consume the [
            if (!res) return [ 1, '[' ];

            var consumed = 1 + res[ 0 ],
                children = res[ 1 ],
                link,
                attrs;

            // At this point the first [...] has been parsed. See what follows to find
            // out which kind of link we are (reference or direct url)
            text = text.substr(consumed);

            // [link text](/path/to/img.jpg "Optional title")
            //                 1            2       3         <--- captures
            // This will capture up to the last paren in the block. We then pull
            // back based on if there a matching ones in the url
            //    ([here](/url/(test))
            // The parens have to be balanced
            var m = text.match(/^\s*\([ \t]*(\S+)(?:[ \t]+(["'])(.*?)\2)?[ \t]*\)/);
            if (m) {
                var url = m[1];
                consumed += m[0].length;

                if (url && url[0] == '<' && url[url.length - 1] == '>')
                    url = url.substring(1, url.length - 1);

                // If there is a title we don't have to worry about parens in the url
                if (!m[3]) {
                    var open_parens = 1; // One open that isn't in the capture
                    for (var len = 0; len < url.length; len++) {
                        switch (url[len]) {
                            case '(':
                                open_parens++;
                                break;
                            case ')':
                                if (--open_parens == 0) {
                                    consumed -= url.length - len;
                                    url = url.substring(0, len);
                                }
                                break;
                        }
                    }
                }

                // Process escapes only
                url = this.dialect.inline.__call__.call(this, url, /\\/)[0];

                attrs = { href: url || "" };
                if (m[3] !== undefined)
                    attrs.title = m[3];

                link = [ "link", attrs ].concat(children);
                return [ consumed, link ];
            }

            // [Alt text][id]
            // [Alt text] [id]
            m = text.match(/^\s*\[(.*?)\]/);

            if (m) {

                consumed += m[ 0 ].length;

                // [links][] uses links as its reference
                attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(), original: orig.substr(0, consumed) };

                link = [ "link_ref", attrs ].concat(children);

                // We can't check if the reference is known here as it likely wont be
                // found till after. Check it in md tree->hmtl tree conversion.
                // Store the original so that conversion can revert if the ref isn't found.
                return [ consumed, link ];
            }

            // [id]
            // Only if id is plain (no formatting.)
            if (children.length == 1 && typeof children[0] == "string") {

                attrs = { ref: children[0].toLowerCase(), original: orig.substr(0, consumed) };
                link = [ "link_ref", attrs, children[0] ];
                return [ consumed, link ];
            }

            // Just consume the '['
            return [ 1, "[" ];
        },


        "<": function autoLink(text) {
            var m;

            if (( m = text.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\.[a-zA-Z]+))>/) ) != null) {
                if (m[3]) {
                    return [ m[0].length, [ "link", { href: "mailto:" + m[3] }, m[3] ] ];

                }
                else if (m[2] == "mailto") {
                    return [ m[0].length, [ "link", { href: m[1] }, m[1].substr("mailto:".length) ] ];
                }
                else
                    return [ m[0].length, [ "link", { href: m[1] }, m[1] ] ];
            }

            return [ 1, "<" ];
        },

        "`": function inlineCode(text) {
            // Inline code block. as many backticks as you like to start it
            // Always skip over the opening ticks.
            var m = text.match(/(`+)(([\s\S]*?)\1)/);

            if (m && m[2])
                return [ m[1].length + m[2].length, [ "inlinecode", m[3] ] ];
            else {
                // TODO: No matching end code found - warn!
                return [ 1, "`" ];
            }
        },

        "  \n": function lineBreak(text) {
            return [ 3, [ "linebreak" ] ];
        }

    };

// Meta Helper/generator method for em and strong handling
    function strong_em(tag, md) {

        var state_slot = tag + "_state",
            other_slot = tag == "strong" ? "em_state" : "strong_state";

        function CloseTag(len) {
            this.len_after = len;
            this.name = "close_" + md;
        }

        return function (text, orig_match) {

            if (this[state_slot][0] == md) {
                // Most recent em is of this type
                //D:this.debug("closing", md);
                this[state_slot].shift();

                // "Consume" everything to go back to the recrusion in the else-block below
                return[ text.length, new CloseTag(text.length - md.length) ];
            }
            else {
                // Store a clone of the em/strong states
                var other = this[other_slot].slice(),
                    state = this[state_slot].slice();

                this[state_slot].unshift(md);

                //D:this.debug_indent += "  ";

                // Recurse
                var res = this.processInline(text.substr(md.length));
                //D:this.debug_indent = this.debug_indent.substr(2);

                var last = res[res.length - 1];

                //D:this.debug("processInline from", tag + ": ", uneval( res ) );

                var check = this[state_slot].shift();
                if (last instanceof CloseTag) {
                    res.pop();
                    // We matched! Huzzah.
                    var consumed = text.length - last.len_after;
                    return [ consumed, [ tag ].concat(res) ];
                }
                else {
                    // Restore the state of the other kind. We might have mistakenly closed it.
                    this[other_slot] = other;
                    this[state_slot] = state;

                    // We can't reuse the processed result as it could have wrong parsing contexts in it.
                    return [ md.length, md ];
                }
            }
        }; // End returned function
    }

    Markdown.dialects.Gruber.inline["**"] = strong_em("strong", "**");
    Markdown.dialects.Gruber.inline["__"] = strong_em("strong", "__");
    Markdown.dialects.Gruber.inline["*"] = strong_em("em", "*");
    Markdown.dialects.Gruber.inline["_"] = strong_em("em", "_");


// Build default order from insertion order.
    Markdown.buildBlockOrder = function (d) {
        var ord = [];
        for (var i in d) {
            if (i == "__order__" || i == "__call__") continue;
            ord.push(i);
        }
        d.__order__ = ord;
    };

// Build patterns for inline matcher
    Markdown.buildInlinePatterns = function (d) {
        var patterns = [];

        for (var i in d) {
            // __foo__ is reserved and not a pattern
            if (i.match(/^__.*__$/)) continue;
            var l = i.replace(/([\\.*+?|()\[\]{}])/g, "\\$1")
                .replace(/\n/, "\\n");
            patterns.push(i.length == 1 ? l : "(?:" + l + ")");
        }

        patterns = patterns.join("|");
        d.__patterns__ = patterns;
        //print("patterns:", uneval( patterns ) );

        var fn = d.__call__;
        d.__call__ = function (text, pattern) {
            if (pattern != undefined) {
                return fn.call(this, text, pattern);
            }
            else {
                return fn.call(this, text, patterns);
            }
        };
    };

    Markdown.DialectHelpers = {};
    Markdown.DialectHelpers.inline_until_char = function (text, want) {
        var consumed = 0,
            nodes = [];

        while (true) {
            if (text[ consumed ] == want) {
                // Found the character we were looking for
                consumed++;
                return [ consumed, nodes ];
            }

            if (consumed >= text.length) {
                // No closing char found. Abort.
                return null;
            }

            var res = this.dialect.inline.__oneElement__.call(this, text.substr(consumed));
            consumed += res[ 0 ];
            // Add any returned nodes.
            nodes.push.apply(nodes, res.slice(1));
        }
    }

// Helper function to make sub-classing a dialect easier
    Markdown.subclassDialect = function (d) {
        function Block() {
        }

        Block.prototype = d.block;
        function Inline() {
        }

        Inline.prototype = d.inline;

        return { block: new Block(), inline: new Inline() };
    };

    Markdown.buildBlockOrder(Markdown.dialects.Gruber.block);
    Markdown.buildInlinePatterns(Markdown.dialects.Gruber.inline);

    Markdown.dialects.Maruku = Markdown.subclassDialect(Markdown.dialects.Gruber);

    Markdown.dialects.Maruku.processMetaHash = function processMetaHash(meta_string) {
        var meta = split_meta_hash(meta_string),
            attr = {};

        for (var i = 0; i < meta.length; ++i) {
            // id: #foo
            if (/^#/.test(meta[ i ])) {
                attr.id = meta[ i ].substring(1);
            }
            // class: .foo
            else if (/^\./.test(meta[ i ])) {
                // if class already exists, append the new one
                if (attr['class']) {
                    attr['class'] = attr['class'] + meta[ i ].replace(/./, " ");
                }
                else {
                    attr['class'] = meta[ i ].substring(1);
                }
            }
            // attribute: foo=bar
            else if (/\=/.test(meta[ i ])) {
                var s = meta[ i ].split(/\=/);
                attr[ s[ 0 ] ] = s[ 1 ];
            }
        }

        return attr;
    }

    function split_meta_hash(meta_string) {
        var meta = meta_string.split(""),
            parts = [ "" ],
            in_quotes = false;

        while (meta.length) {
            var letter = meta.shift();
            switch (letter) {
                case " " :
                    // if we're in a quoted section, keep it
                    if (in_quotes) {
                        parts[ parts.length - 1 ] += letter;
                    }
                    // otherwise make a new part
                    else {
                        parts.push("");
                    }
                    break;
                case "'" :
                case '"' :
                    // reverse the quotes and move straight on
                    in_quotes = !in_quotes;
                    break;
                case "\\" :
                    // shift off the next letter to be used straight away.
                    // it was escaped so we'll keep it whatever it is
                    letter = meta.shift();
                default :
                    parts[ parts.length - 1 ] += letter;
                    break;
            }
        }

        return parts;
    }

    Markdown.dialects.Maruku.block.document_meta = function document_meta(block, next) {
        // we're only interested in the first block
        if (block.lineNumber > 1) return undefined;

        // document_meta blocks consist of one or more lines of `Key: Value\n`
        if (!block.match(/^(?:\w+:.*\n)*\w+:.*$/)) return undefined;

        // make an attribute node if it doesn't exist
        if (!extract_attr(this.tree)) {
            this.tree.splice(1, 0, {});
        }

        var pairs = block.split(/\n/);
        for (p in pairs) {
            var m = pairs[ p ].match(/(\w+):\s*(.*)$/),
                key = m[ 1 ].toLowerCase(),
                value = m[ 2 ];

            this.tree[ 1 ][ key ] = value;
        }

        // document_meta produces no content!
        return [];
    };

    Markdown.dialects.Maruku.block.block_meta = function block_meta(block, next) {
        // check if the last line of the block is an meta hash
        var m = block.match(/(^|\n) {0,3}\{:\s*((?:\\\}|[^\}])*)\s*\}$/);
        if (!m) return undefined;

        // process the meta hash
        var attr = this.dialect.processMetaHash(m[ 2 ]);

        var hash;

        // if we matched ^ then we need to apply meta to the previous block
        if (m[ 1 ] === "") {
            var node = this.tree[ this.tree.length - 1 ];
            hash = extract_attr(node);

            // if the node is a string (rather than JsonML), bail
            if (typeof node === "string") return undefined;

            // create the attribute hash if it doesn't exist
            if (!hash) {
                hash = {};
                node.splice(1, 0, hash);
            }

            // add the attributes in
            for (a in attr) {
                hash[ a ] = attr[ a ];
            }

            // return nothing so the meta hash is removed
            return [];
        }

        // pull the meta hash off the block and process what's left
        var b = block.replace(/\n.*$/, ""),
            result = this.processBlock(b, []);

        // get or make the attributes hash
        hash = extract_attr(result[ 0 ]);
        if (!hash) {
            hash = {};
            result[ 0 ].splice(1, 0, hash);
        }

        // attach the attributes to the block
        for (a in attr) {
            hash[ a ] = attr[ a ];
        }

        return result;
    };

    Markdown.dialects.Maruku.block.definition_list = function definition_list(block, next) {
        // one or more terms followed by one or more definitions, in a single block
        var tight = /^((?:[^\s:].*\n)+):\s+([\s\S]+)$/,
            list = [ "dl" ],
            i;

        // see if we're dealing with a tight or loose block
        if (( m = block.match(tight) )) {
            // pull subsequent tight DL blocks out of `next`
            var blocks = [ block ];
            while (next.length && tight.exec(next[ 0 ])) {
                blocks.push(next.shift());
            }

            for (var b = 0; b < blocks.length; ++b) {
                var m = blocks[ b ].match(tight),
                    terms = m[ 1 ].replace(/\n$/, "").split(/\n/),
                    defns = m[ 2 ].split(/\n:\s+/);

                // print( uneval( m ) );

                for (i = 0; i < terms.length; ++i) {
                    list.push([ "dt", terms[ i ] ]);
                }

                for (i = 0; i < defns.length; ++i) {
                    // run inline processing over the definition
                    list.push([ "dd" ].concat(this.processInline(defns[ i ].replace(/(\n)\s+/, "$1"))));
                }
            }
        }
        else {
            return undefined;
        }

        return [ list ];
    };

    Markdown.dialects.Maruku.inline[ "{:" ] = function inline_meta(text, matches, out) {
        if (!out.length) {
            return [ 2, "{:" ];
        }

        // get the preceeding element
        var before = out[ out.length - 1 ];

        if (typeof before === "string") {
            return [ 2, "{:" ];
        }

        // match a meta hash
        var m = text.match(/^\{:\s*((?:\\\}|[^\}])*)\s*\}/);

        // no match, false alarm
        if (!m) {
            return [ 2, "{:" ];
        }

        // attach the attributes to the preceeding element
        var meta = this.dialect.processMetaHash(m[ 1 ]),
            attr = extract_attr(before);

        if (!attr) {
            attr = {};
            before.splice(1, 0, attr);
        }

        for (var k in meta) {
            attr[ k ] = meta[ k ];
        }

        // cut out the string and replace it with nothing
        return [ m[ 0 ].length, "" ];
    };

    Markdown.buildBlockOrder(Markdown.dialects.Maruku.block);
    Markdown.buildInlinePatterns(Markdown.dialects.Maruku.inline);

    var isArray = Array.isArray || function (obj) {
        return Object.prototype.toString.call(obj) == '[object Array]';
    };

    var forEach;
// Don't mess with Array.prototype. Its not friendly
    if (Array.prototype.forEach) {
        forEach = function (arr, cb, thisp) {
            return arr.forEach(cb, thisp);
        };
    }
    else {
        forEach = function (arr, cb, thisp) {
            for (var i = 0; i < arr.length; i++) {
                cb.call(thisp || arr, arr[i], i, arr);
            }
        }
    }

    function extract_attr(jsonml) {
        return isArray(jsonml)
            && jsonml.length > 1
            && typeof jsonml[ 1 ] === "object"
            && !( isArray(jsonml[ 1 ]) )
            ? jsonml[ 1 ]
            : undefined;
    }


    /**
     *  renderJsonML( jsonml[, options] ) -> String
     *  - jsonml (Array): JsonML array to render to XML
     *  - options (Object): options
     *
     *  Converts the given JsonML into well-formed XML.
     *
     *  The options currently understood are:
     *
     *  - root (Boolean): wether or not the root node should be included in the
     *    output, or just its children. The default `false` is to not include the
     *    root itself.
     */
    expose.renderJsonML = function (jsonml, options) {
        options = options || {};
        // include the root element in the rendered output?
        options.root = options.root || false;

        var content = [];

        if (options.root) {
            content.push(render_tree(jsonml));
        }
        else {
            jsonml.shift(); // get rid of the tag
            if (jsonml.length && typeof jsonml[ 0 ] === "object" && !( jsonml[ 0 ] instanceof Array )) {
                jsonml.shift(); // get rid of the attributes
            }

            while (jsonml.length) {
                content.push(render_tree(jsonml.shift()));
            }
        }

        return content.join("\n\n");
    };

    function escapeHTML(text) {
        return text.replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#39;");
    }

    function render_tree(jsonml) {
        // basic case
        if (typeof jsonml === "string") {
            return escapeHTML(jsonml);
        }

        var tag = jsonml.shift(),
            attributes = {},
            content = [];

        if (jsonml.length && typeof jsonml[ 0 ] === "object" && !( jsonml[ 0 ] instanceof Array )) {
            attributes = jsonml.shift();
        }

        while (jsonml.length) {
            content.push(arguments.callee(jsonml.shift()));
        }

        var tag_attrs = "";
        for (var a in attributes) {
            tag_attrs += " " + a + '="' + escapeHTML(attributes[ a ]) + '"';
        }

        // be careful about adding whitespace here for inline elements
        if (tag == "img" || tag == "br" || tag == "hr") {
            return "<" + tag + tag_attrs + "/>";
        }
        else {
            return "<" + tag + tag_attrs + ">" + content.join("") + "</" + tag + ">";
        }
    }

    function convert_tree_to_html(tree, references, options) {
        var i;
        options = options || {};

        // shallow clone
        var jsonml = tree.slice(0);

        if (typeof options.preprocessTreeNode === "function") {
            jsonml = options.preprocessTreeNode(jsonml, references);
        }

        // Clone attributes if they exist
        var attrs = extract_attr(jsonml);
        if (attrs) {
            jsonml[ 1 ] = {};
            for (i in attrs) {
                jsonml[ 1 ][ i ] = attrs[ i ];
            }
            attrs = jsonml[ 1 ];
        }

        // basic case
        if (typeof jsonml === "string") {
            return jsonml;
        }

        // convert this node
        switch (jsonml[ 0 ]) {
            case "header":
                jsonml[ 0 ] = "h" + jsonml[ 1 ].level;
                delete jsonml[ 1 ].level;
                break;
            case "bulletlist":
                jsonml[ 0 ] = "ul";
                break;
            case "numberlist":
                jsonml[ 0 ] = "ol";
                break;
            case "listitem":
                jsonml[ 0 ] = "li";
                break;
            case "para":
                jsonml[ 0 ] = "p";
                break;
            case "markdown":
                jsonml[ 0 ] = "html";
                if (attrs) delete attrs.references;
                break;
            case "code_block":
                jsonml[ 0 ] = "pre";
                i = attrs ? 2 : 1;
                var code = [ "code" ];
                code.push.apply(code, jsonml.splice(i));
                jsonml[ i ] = code;
                break;
            case "inlinecode":
                jsonml[ 0 ] = "code";
                break;
            case "img":
                jsonml[ 1 ].src = jsonml[ 1 ].href;
                delete jsonml[ 1 ].href;
                break;
            case "linebreak":
                jsonml[ 0 ] = "br";
                break;
            case "link":
                jsonml[ 0 ] = "a";
                break;
            case "link_ref":
                jsonml[ 0 ] = "a";

                // grab this ref and clean up the attribute node
                var ref = references[ attrs.ref ];

                // if the reference exists, make the link
                if (ref) {
                    delete attrs.ref;

                    // add in the href and title, if present
                    attrs.href = ref.href;
                    if (ref.title) {
                        attrs.title = ref.title;
                    }

                    // get rid of the unneeded original text
                    delete attrs.original;
                }
                // the reference doesn't exist, so revert to plain text
                else {
                    return attrs.original;
                }
                break;
            case "img_ref":
                jsonml[ 0 ] = "img";

                // grab this ref and clean up the attribute node
                var ref = references[ attrs.ref ];

                // if the reference exists, make the link
                if (ref) {
                    delete attrs.ref;

                    // add in the href and title, if present
                    attrs.src = ref.href;
                    if (ref.title) {
                        attrs.title = ref.title;
                    }

                    // get rid of the unneeded original text
                    delete attrs.original;
                }
                // the reference doesn't exist, so revert to plain text
                else {
                    return attrs.original;
                }
                break;
        }

        // convert all the children
        i = 1;

        // deal with the attribute node, if it exists
        if (attrs) {
            // if there are keys, skip over it
            for (var key in jsonml[ 1 ]) {
                i = 2;
            }
            // if there aren't, remove it
            if (i === 1) {
                jsonml.splice(i, 1);
            }
        }

        for (; i < jsonml.length; ++i) {
            jsonml[ i ] = arguments.callee(jsonml[ i ], references, options);
        }

        return jsonml;
    }


// merges adjacent text nodes into a single node
    function merge_text_nodes(jsonml) {
        // skip the tag name and attribute hash
        var i = extract_attr(jsonml) ? 2 : 1;

        while (i < jsonml.length) {
            // if it's a string check the next item too
            if (typeof jsonml[ i ] === "string") {
                if (i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === "string") {
                    // merge the second string into the first and remove it
                    jsonml[ i ] += jsonml.splice(i + 1, 1)[ 0 ];
                }
                else {
                    ++i;
                }
            }
            // if it's not a string recurse
            else {
                arguments.callee(jsonml[ i ]);
                ++i;
            }
        }
    }

})((function () {
        if (typeof exports === "undefined") {
            window.markdown = {};
            return window.markdown;
        }
        else {
            return exports;
        }
    })());
/**
 * @summary     DataTables
 * @description Paginate, search and sort HTML tables
 * @version     1.9.4
 * @file        jquery.dataTables.js
 * @author      Allan Jardine (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 *
 * @copyright Copyright 2008-2012 Allan Jardine, all rights reserved.
 *
 * This source file is free software, under either the GPL v2 license or a
 * BSD style license, available at:
 *   http://datatables.net/license_gpl2
 *   http://datatables.net/license_bsd
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $, jQuery,define,_fnExternApiFunc,_fnInitialise,_fnInitComplete,_fnLanguageCompat,_fnAddColumn,_fnColumnOptions,_fnAddData,_fnCreateTr,_fnGatherData,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnServerParams,_fnAddOptionsHtml,_fnFeatureHtmlTable,_fnScrollDraw,_fnAdjustColumnSizing,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnBuildSearchArray,_fnBuildSearchRow,_fnFilterCreateSearch,_fnDataToSearch,_fnSort,_fnSortAttachListener,_fnSortingClasses,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnFeatureHtmlLength,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnNodeToDataIndex,_fnVisbleColumns,_fnCalculateEnd,_fnConvertToWidth,_fnCalculateColumnWidths,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnDetectType,_fnSettingsFromNode,_fnGetDataMaster,_fnGetTrNodes,_fnGetTdNodes,_fnEscapeRegex,_fnDeleteIndex,_fnReOrderIndex,_fnColumnOrdering,_fnLog,_fnClearTable,_fnSaveState,_fnLoadState,_fnCreateCookie,_fnReadCookie,_fnDetectHeader,_fnGetUniqueThs,_fnScrollBarWidth,_fnApplyToChildren,_fnMap,_fnGetRowData,_fnGetCellData,_fnSetCellData,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnApplyColumnDefs,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnJsonString,_fnRender,_fnNodeToColumnIndex,_fnInfoMacros,_fnBrowserDetect,_fnGetColumns*/

(/** @lends <global> */function (window, document, undefined) {

    (function (factory) {
        "use strict";

        // Define as an AMD module if possible
        if (typeof define === 'function' && define.amd) {
            define(['jquery'], factory);
        }
        /* Define using browser globals otherwise
         * Prevent multiple instantiations if the script is loaded twice
         */
        else if (jQuery && !jQuery.fn.dataTable) {
            factory(jQuery);
        }
    }
    (/** @lends <global> */function ($) {
        "use strict";
        /**
         * DataTables is a plug-in for the jQuery Javascript library. It is a
         * highly flexible tool, based upon the foundations of progressive
         * enhancement, which will add advanced interaction controls to any
         * HTML table. For a full list of features please refer to
         * <a href="http://datatables.net">DataTables.net</a>.
         *
         * Note that the <i>DataTable</i> object is not a global variable but is
         * aliased to <i>jQuery.fn.DataTable</i> and <i>jQuery.fn.dataTable</i> through which
         * it may be  accessed.
         *
         *  @class
         *  @param {object} [oInit={}] Configuration object for DataTables. Options
         *    are defined by {@link DataTable.defaults}
         *  @requires jQuery 1.3+
         *
         *  @example
         *    // Basic initialisation
         *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
         *
         *  @example
         *    // Initialisation with configuration options - in this case, disable
         *    // pagination and sorting.
         *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "bPaginate": false,
	 *        "bSort": false 
	 *      } );
	 *    } );
         */
        var DataTable = function (oInit) {


            /**
             * Add a column to the list used for the table with default values
             *  @param {object} oSettings dataTables settings object
             *  @param {node} nTh The th element for this column
             *  @memberof DataTable#oApi
             */
            function _fnAddColumn(oSettings, nTh) {
                var oDefaults = DataTable.defaults.columns;
                var iCol = oSettings.aoColumns.length;
                var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {
                    "sSortingClass": oSettings.oClasses.sSortable,
                    "sSortingClassJUI": oSettings.oClasses.sSortJUI,
                    "nTh": nTh ? nTh : document.createElement('th'),
                    "sTitle": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',
                    "aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
                    "mData": oDefaults.mData ? oDefaults.oDefaults : iCol
                });
                oSettings.aoColumns.push(oCol);

                /* Add a column specific filter */
                if (oSettings.aoPreSearchCols[ iCol ] === undefined || oSettings.aoPreSearchCols[ iCol ] === null) {
                    oSettings.aoPreSearchCols[ iCol ] = $.extend({}, DataTable.models.oSearch);
                }
                else {
                    var oPre = oSettings.aoPreSearchCols[ iCol ];

                    /* Don't require that the user must specify bRegex, bSmart or bCaseInsensitive */
                    if (oPre.bRegex === undefined) {
                        oPre.bRegex = true;
                    }

                    if (oPre.bSmart === undefined) {
                        oPre.bSmart = true;
                    }

                    if (oPre.bCaseInsensitive === undefined) {
                        oPre.bCaseInsensitive = true;
                    }
                }

                /* Use the column options function to initialise classes etc */
                _fnColumnOptions(oSettings, iCol, null);
            }


            /**
             * Apply options for a column
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iCol column index to consider
             *  @param {object} oOptions object with sType, bVisible and bSearchable etc
             *  @memberof DataTable#oApi
             */
            function _fnColumnOptions(oSettings, iCol, oOptions) {
                var oCol = oSettings.aoColumns[ iCol ];

                /* User specified column options */
                if (oOptions !== undefined && oOptions !== null) {
                    /* Backwards compatibility for mDataProp */
                    if (oOptions.mDataProp && !oOptions.mData) {
                        oOptions.mData = oOptions.mDataProp;
                    }

                    if (oOptions.sType !== undefined) {
                        oCol.sType = oOptions.sType;
                        oCol._bAutoType = false;
                    }

                    $.extend(oCol, oOptions);
                    _fnMap(oCol, oOptions, "sWidth", "sWidthOrig");

                    /* iDataSort to be applied (backwards compatibility), but aDataSort will take
                     * priority if defined
                     */
                    if (oOptions.iDataSort !== undefined) {
                        oCol.aDataSort = [ oOptions.iDataSort ];
                    }
                    _fnMap(oCol, oOptions, "aDataSort");
                }

                /* Cache the data get and set functions for speed */
                var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;
                var mData = _fnGetObjectDataFn(oCol.mData);

                oCol.fnGetData = function (oData, sSpecific) {
                    var innerData = mData(oData, sSpecific);

                    if (oCol.mRender && (sSpecific && sSpecific !== '')) {
                        return mRender(innerData, sSpecific, oData);
                    }
                    return innerData;
                };
                oCol.fnSetData = _fnSetObjectDataFn(oCol.mData);

                /* Feature sorting overrides column specific when off */
                if (!oSettings.oFeatures.bSort) {
                    oCol.bSortable = false;
                }

                /* Check that the class assignment is correct for sorting */
                if (!oCol.bSortable ||
                    ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1)) {
                    oCol.sSortingClass = oSettings.oClasses.sSortableNone;
                    oCol.sSortingClassJUI = "";
                }
                else if ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1) {
                    oCol.sSortingClass = oSettings.oClasses.sSortable;
                    oCol.sSortingClassJUI = oSettings.oClasses.sSortJUI;
                }
                else if ($.inArray('asc', oCol.asSorting) != -1 && $.inArray('desc', oCol.asSorting) == -1) {
                    oCol.sSortingClass = oSettings.oClasses.sSortableAsc;
                    oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIAscAllowed;
                }
                else if ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) != -1) {
                    oCol.sSortingClass = oSettings.oClasses.sSortableDesc;
                    oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIDescAllowed;
                }
            }


            /**
             * Adjust the table column widths for new data. Note: you would probably want to
             * do a redraw after calling this function!
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnAdjustColumnSizing(oSettings) {
                /* Not interested in doing column width calculation if auto-width is disabled */
                if (oSettings.oFeatures.bAutoWidth === false) {
                    return false;
                }

                _fnCalculateColumnWidths(oSettings);
                for (var i = 0 , iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    oSettings.aoColumns[i].nTh.style.width = oSettings.aoColumns[i].sWidth;
                }
            }


            /**
             * Covert the index of a visible column to the index in the data array (take account
             * of hidden columns)
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iMatch Visible column index to lookup
             *  @returns {int} i the data index
             *  @memberof DataTable#oApi
             */
            function _fnVisibleToColumnIndex(oSettings, iMatch) {
                var aiVis = _fnGetColumns(oSettings, 'bVisible');

                return typeof aiVis[iMatch] === 'number' ?
                    aiVis[iMatch] :
                    null;
            }


            /**
             * Covert the index of an index in the data array and convert it to the visible
             *   column index (take account of hidden columns)
             *  @param {int} iMatch Column index to lookup
             *  @param {object} oSettings dataTables settings object
             *  @returns {int} i the data index
             *  @memberof DataTable#oApi
             */
            function _fnColumnIndexToVisible(oSettings, iMatch) {
                var aiVis = _fnGetColumns(oSettings, 'bVisible');
                var iPos = $.inArray(iMatch, aiVis);

                return iPos !== -1 ? iPos : null;
            }


            /**
             * Get the number of visible columns
             *  @param {object} oSettings dataTables settings object
             *  @returns {int} i the number of visible columns
             *  @memberof DataTable#oApi
             */
            function _fnVisbleColumns(oSettings) {
                return _fnGetColumns(oSettings, 'bVisible').length;
            }


            /**
             * Get an array of column indexes that match a given property
             *  @param {object} oSettings dataTables settings object
             *  @param {string} sParam Parameter in aoColumns to look for - typically
             *    bVisible or bSearchable
             *  @returns {array} Array of indexes with matched properties
             *  @memberof DataTable#oApi
             */
            function _fnGetColumns(oSettings, sParam) {
                var a = [];

                $.map(oSettings.aoColumns, function (val, i) {
                    if (val[sParam]) {
                        a.push(i);
                    }
                });

                return a;
            }


            /**
             * Get the sort type based on an input string
             *  @param {string} sData data we wish to know the type of
             *  @returns {string} type (defaults to 'string' if no type can be detected)
             *  @memberof DataTable#oApi
             */
            function _fnDetectType(sData) {
                var aTypes = DataTable.ext.aTypes;
                var iLen = aTypes.length;

                for (var i = 0; i < iLen; i++) {
                    var sType = aTypes[i](sData);
                    if (sType !== null) {
                        return sType;
                    }
                }

                return 'string';
            }


            /**
             * Figure out how to reorder a display list
             *  @param {object} oSettings dataTables settings object
             *  @returns array {int} aiReturn index list for reordering
             *  @memberof DataTable#oApi
             */
            function _fnReOrderIndex(oSettings, sColumns) {
                var aColumns = sColumns.split(',');
                var aiReturn = [];

                for (var i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    for (var j = 0; j < iLen; j++) {
                        if (oSettings.aoColumns[i].sName == aColumns[j]) {
                            aiReturn.push(j);
                            break;
                        }
                    }
                }

                return aiReturn;
            }


            /**
             * Get the column ordering that DataTables expects
             *  @param {object} oSettings dataTables settings object
             *  @returns {string} comma separated list of names
             *  @memberof DataTable#oApi
             */
            function _fnColumnOrdering(oSettings) {
                var sNames = '';
                for (var i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    sNames += oSettings.aoColumns[i].sName + ',';
                }
                if (sNames.length == iLen) {
                    return "";
                }
                return sNames.slice(0, -1);
            }


            /**
             * Take the column definitions and static columns arrays and calculate how
             * they relate to column indexes. The callback function will then apply the
             * definition found for a column to a suitable configuration object.
             *  @param {object} oSettings dataTables settings object
             *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
             *  @param {array} aoCols The aoColumns array that defines columns individually
             *  @param {function} fn Callback function - takes two parameters, the calculated
             *    column index and the definition for that column.
             *  @memberof DataTable#oApi
             */
            function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {
                var i, iLen, j, jLen, k, kLen;

                // Column definitions with aTargets
                if (aoColDefs) {
                    /* Loop over the definitions array - loop in reverse so first instance has priority */
                    for (i = aoColDefs.length - 1; i >= 0; i--) {
                        /* Each definition can target multiple columns, as it is an array */
                        var aTargets = aoColDefs[i].aTargets;
                        if (!$.isArray(aTargets)) {
                            _fnLog(oSettings, 1, 'aTargets must be an array of targets, not a ' + (typeof aTargets));
                        }

                        for (j = 0, jLen = aTargets.length; j < jLen; j++) {
                            if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {
                                /* Add columns that we don't yet know about */
                                while (oSettings.aoColumns.length <= aTargets[j]) {
                                    _fnAddColumn(oSettings);
                                }

                                /* Integer, basic index */
                                fn(aTargets[j], aoColDefs[i]);
                            }
                            else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {
                                /* Negative integer, right to left column counting */
                                fn(oSettings.aoColumns.length + aTargets[j], aoColDefs[i]);
                            }
                            else if (typeof aTargets[j] === 'string') {
                                /* Class name matching on TH element */
                                for (k = 0, kLen = oSettings.aoColumns.length; k < kLen; k++) {
                                    if (aTargets[j] == "_all" ||
                                        $(oSettings.aoColumns[k].nTh).hasClass(aTargets[j])) {
                                        fn(k, aoColDefs[i]);
                                    }
                                }
                            }
                        }
                    }
                }

                // Statically defined columns array
                if (aoCols) {
                    for (i = 0, iLen = aoCols.length; i < iLen; i++) {
                        fn(i, aoCols[i]);
                    }
                }
            }

            /**
             * Add a data array to the table, creating DOM node etc. This is the parallel to
             * _fnGatherData, but for adding rows from a Javascript source, rather than a
             * DOM source.
             *  @param {object} oSettings dataTables settings object
             *  @param {array} aData data array to be added
             *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
             *  @memberof DataTable#oApi
             */
            function _fnAddData(oSettings, aDataSupplied) {
                var oCol;

                /* Take an independent copy of the data source so we can bash it about as we wish */
                var aDataIn = ($.isArray(aDataSupplied)) ?
                    aDataSupplied.slice() :
                    $.extend(true, {}, aDataSupplied);

                /* Create the object for storing information about this new row */
                var iRow = oSettings.aoData.length;
                var oData = $.extend(true, {}, DataTable.models.oRow);
                oData._aData = aDataIn;
                oSettings.aoData.push(oData);

                /* Create the cells */
                var nTd, sThisType;
                for (var i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    oCol = oSettings.aoColumns[i];

                    /* Use rendered data for filtering / sorting */
                    if (typeof oCol.fnRender === 'function' && oCol.bUseRendered && oCol.mData !== null) {
                        _fnSetCellData(oSettings, iRow, i, _fnRender(oSettings, iRow, i));
                    }
                    else {
                        _fnSetCellData(oSettings, iRow, i, _fnGetCellData(oSettings, iRow, i));
                    }

                    /* See if we should auto-detect the column type */
                    if (oCol._bAutoType && oCol.sType != 'string') {
                        /* Attempt to auto detect the type - same as _fnGatherData() */
                        var sVarType = _fnGetCellData(oSettings, iRow, i, 'type');
                        if (sVarType !== null && sVarType !== '') {
                            sThisType = _fnDetectType(sVarType);
                            if (oCol.sType === null) {
                                oCol.sType = sThisType;
                            }
                            else if (oCol.sType != sThisType && oCol.sType != "html") {
                                /* String is always the 'fallback' option */
                                oCol.sType = 'string';
                            }
                        }
                    }
                }

                /* Add to the display array */
                oSettings.aiDisplayMaster.push(iRow);

                /* Create the DOM information */
                if (!oSettings.oFeatures.bDeferRender) {
                    _fnCreateTr(oSettings, iRow);
                }

                return iRow;
            }


            /**
             * Read in the data from the target table from the DOM
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnGatherData(oSettings) {
                var iLoop, i, iLen, j, jLen, jInner,
                    nTds, nTrs, nTd, nTr, aLocalData, iThisIndex,
                    iRow, iRows, iColumn, iColumns, sNodeName,
                    oCol, oData;

                /*
                 * Process by row first
                 * Add the data object for the whole table - storing the tr node. Note - no point in getting
                 * DOM based data if we are going to go and replace it with Ajax source data.
                 */
                if (oSettings.bDeferLoading || oSettings.sAjaxSource === null) {
                    nTr = oSettings.nTBody.firstChild;
                    while (nTr) {
                        if (nTr.nodeName.toUpperCase() == "TR") {
                            iThisIndex = oSettings.aoData.length;
                            nTr._DT_RowIndex = iThisIndex;
                            oSettings.aoData.push($.extend(true, {}, DataTable.models.oRow, {
                                "nTr": nTr
                            }));

                            oSettings.aiDisplayMaster.push(iThisIndex);
                            nTd = nTr.firstChild;
                            jInner = 0;
                            while (nTd) {
                                sNodeName = nTd.nodeName.toUpperCase();
                                if (sNodeName == "TD" || sNodeName == "TH") {
                                    _fnSetCellData(oSettings, iThisIndex, jInner, $.trim(nTd.innerHTML));
                                    jInner++;
                                }
                                nTd = nTd.nextSibling;
                            }
                        }
                        nTr = nTr.nextSibling;
                    }
                }

                /* Gather in the TD elements of the Table - note that this is basically the same as
                 * fnGetTdNodes, but that function takes account of hidden columns, which we haven't yet
                 * setup!
                 */
                nTrs = _fnGetTrNodes(oSettings);
                nTds = [];
                for (i = 0, iLen = nTrs.length; i < iLen; i++) {
                    nTd = nTrs[i].firstChild;
                    while (nTd) {
                        sNodeName = nTd.nodeName.toUpperCase();
                        if (sNodeName == "TD" || sNodeName == "TH") {
                            nTds.push(nTd);
                        }
                        nTd = nTd.nextSibling;
                    }
                }

                /* Now process by column */
                for (iColumn = 0, iColumns = oSettings.aoColumns.length; iColumn < iColumns; iColumn++) {
                    oCol = oSettings.aoColumns[iColumn];

                    /* Get the title of the column - unless there is a user set one */
                    if (oCol.sTitle === null) {
                        oCol.sTitle = oCol.nTh.innerHTML;
                    }

                    var
                        bAutoType = oCol._bAutoType,
                        bRender = typeof oCol.fnRender === 'function',
                        bClass = oCol.sClass !== null,
                        bVisible = oCol.bVisible,
                        nCell, sThisType, sRendered, sValType;

                    /* A single loop to rule them all (and be more efficient) */
                    if (bAutoType || bRender || bClass || !bVisible) {
                        for (iRow = 0, iRows = oSettings.aoData.length; iRow < iRows; iRow++) {
                            oData = oSettings.aoData[iRow];
                            nCell = nTds[ (iRow * iColumns) + iColumn ];

                            /* Type detection */
                            if (bAutoType && oCol.sType != 'string') {
                                sValType = _fnGetCellData(oSettings, iRow, iColumn, 'type');
                                if (sValType !== '') {
                                    sThisType = _fnDetectType(sValType);
                                    if (oCol.sType === null) {
                                        oCol.sType = sThisType;
                                    }
                                    else if (oCol.sType != sThisType &&
                                        oCol.sType != "html") {
                                        /* String is always the 'fallback' option */
                                        oCol.sType = 'string';
                                    }
                                }
                            }

                            if (oCol.mRender) {
                                // mRender has been defined, so we need to get the value and set it
                                nCell.innerHTML = _fnGetCellData(oSettings, iRow, iColumn, 'display');
                            }
                            else if (oCol.mData !== iColumn) {
                                // If mData is not the same as the column number, then we need to
                                // get the dev set value. If it is the column, no point in wasting
                                // time setting the value that is already there!
                                nCell.innerHTML = _fnGetCellData(oSettings, iRow, iColumn, 'display');
                            }

                            /* Rendering */
                            if (bRender) {
                                sRendered = _fnRender(oSettings, iRow, iColumn);
                                nCell.innerHTML = sRendered;
                                if (oCol.bUseRendered) {
                                    /* Use the rendered data for filtering / sorting */
                                    _fnSetCellData(oSettings, iRow, iColumn, sRendered);
                                }
                            }

                            /* Classes */
                            if (bClass) {
                                nCell.className += ' ' + oCol.sClass;
                            }

                            /* Column visibility */
                            if (!bVisible) {
                                oData._anHidden[iColumn] = nCell;
                                nCell.parentNode.removeChild(nCell);
                            }
                            else {
                                oData._anHidden[iColumn] = null;
                            }

                            if (oCol.fnCreatedCell) {
                                oCol.fnCreatedCell.call(oSettings.oInstance,
                                    nCell, _fnGetCellData(oSettings, iRow, iColumn, 'display'), oData._aData, iRow, iColumn
                                );
                            }
                        }
                    }
                }

                /* Row created callbacks */
                if (oSettings.aoRowCreatedCallback.length !== 0) {
                    for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
                        oData = oSettings.aoData[i];
                        _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, i]);
                    }
                }
            }


            /**
             * Take a TR element and convert it to an index in aoData
             *  @param {object} oSettings dataTables settings object
             *  @param {node} n the TR element to find
             *  @returns {int} index if the node is found, null if not
             *  @memberof DataTable#oApi
             */
            function _fnNodeToDataIndex(oSettings, n) {
                return (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;
            }


            /**
             * Take a TD element and convert it into a column data index (not the visible index)
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow The row number the TD/TH can be found in
             *  @param {node} n The TD/TH element to find
             *  @returns {int} index if the node is found, -1 if not
             *  @memberof DataTable#oApi
             */
            function _fnNodeToColumnIndex(oSettings, iRow, n) {
                var anCells = _fnGetTdNodes(oSettings, iRow);

                for (var i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    if (anCells[i] === n) {
                        return i;
                    }
                }
                return -1;
            }


            /**
             * Get an array of data for a given row from the internal data cache
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow aoData row id
             *  @param {string} sSpecific data get type ('type' 'filter' 'sort')
             *  @param {array} aiColumns Array of column indexes to get data from
             *  @returns {array} Data array
             *  @memberof DataTable#oApi
             */
            function _fnGetRowData(oSettings, iRow, sSpecific, aiColumns) {
                var out = [];
                for (var i = 0, iLen = aiColumns.length; i < iLen; i++) {
                    out.push(_fnGetCellData(oSettings, iRow, aiColumns[i], sSpecific));
                }
                return out;
            }


            /**
             * Get the data for a given cell from the internal cache, taking into account data mapping
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow aoData row id
             *  @param {int} iCol Column index
             *  @param {string} sSpecific data get type ('display', 'type' 'filter' 'sort')
             *  @returns {*} Cell data
             *  @memberof DataTable#oApi
             */
            function _fnGetCellData(oSettings, iRow, iCol, sSpecific) {
                var sData;
                var oCol = oSettings.aoColumns[iCol];
                var oData = oSettings.aoData[iRow]._aData;

                if ((sData = oCol.fnGetData(oData, sSpecific)) === undefined) {
                    if (oSettings.iDrawError != oSettings.iDraw && oCol.sDefaultContent === null) {
                        _fnLog(oSettings, 0, "Requested unknown parameter " +
                            (typeof oCol.mData == 'function' ? '{mData function}' : "'" + oCol.mData + "'") +
                            " from the data source for row " + iRow);
                        oSettings.iDrawError = oSettings.iDraw;
                    }
                    return oCol.sDefaultContent;
                }

                /* When the data source is null, we can use default column data */
                if (sData === null && oCol.sDefaultContent !== null) {
                    sData = oCol.sDefaultContent;
                }
                else if (typeof sData === 'function') {
                    /* If the data source is a function, then we run it and use the return */
                    return sData();
                }

                if (sSpecific == 'display' && sData === null) {
                    return '';
                }
                return sData;
            }


            /**
             * Set the value for a specific cell, into the internal data cache
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow aoData row id
             *  @param {int} iCol Column index
             *  @param {*} val Value to set
             *  @memberof DataTable#oApi
             */
            function _fnSetCellData(oSettings, iRow, iCol, val) {
                var oCol = oSettings.aoColumns[iCol];
                var oData = oSettings.aoData[iRow]._aData;

                oCol.fnSetData(oData, val);
            }


            // Private variable that is used to match array syntax in the data property object
            var __reArray = /\[.*?\]$/;

            /**
             * Return a function that can be used to get data from a source object, taking
             * into account the ability to use nested objects as a source
             *  @param {string|int|function} mSource The data source for the object
             *  @returns {function} Data get function
             *  @memberof DataTable#oApi
             */
            function _fnGetObjectDataFn(mSource) {
                if (mSource === null) {
                    /* Give an empty string for rendering / sorting etc */
                    return function (data, type) {
                        return null;
                    };
                }
                else if (typeof mSource === 'function') {
                    return function (data, type, extra) {
                        return mSource(data, type, extra);
                    };
                }
                else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1)) {
                    /* If there is a . in the source string then the data source is in a 
                     * nested object so we loop over the data for each level to get the next
                     * level down. On each loop we test for undefined, and if found immediately
                     * return. This allows entire objects to be missing and sDefaultContent to
                     * be used if defined, rather than throwing an error
                     */
                    var fetchData = function (data, type, src) {
                        var a = src.split('.');
                        var arrayNotation, out, innerSrc;

                        if (src !== "") {
                            for (var i = 0, iLen = a.length; i < iLen; i++) {
                                // Check if we are dealing with an array notation request
                                arrayNotation = a[i].match(__reArray);

                                if (arrayNotation) {
                                    a[i] = a[i].replace(__reArray, '');

                                    // Condition allows simply [] to be passed in
                                    if (a[i] !== "") {
                                        data = data[ a[i] ];
                                    }
                                    out = [];

                                    // Get the remainder of the nested object to get
                                    a.splice(0, i + 1);
                                    innerSrc = a.join('.');

                                    // Traverse each entry in the array getting the properties requested
                                    for (var j = 0, jLen = data.length; j < jLen; j++) {
                                        out.push(fetchData(data[j], type, innerSrc));
                                    }

                                    // If a string is given in between the array notation indicators, that
                                    // is used to join the strings together, otherwise an array is returned
                                    var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);
                                    data = (join === "") ? out : out.join(join);

                                    // The inner call to fetchData has already traversed through the remainder
                                    // of the source requested, so we exit from the loop
                                    break;
                                }

                                if (data === null || data[ a[i] ] === undefined) {
                                    return undefined;
                                }
                                data = data[ a[i] ];
                            }
                        }

                        return data;
                    };

                    return function (data, type) {
                        return fetchData(data, type, mSource);
                    };
                }
                else {
                    /* Array or flat object mapping */
                    return function (data, type) {
                        return data[mSource];
                    };
                }
            }


            /**
             * Return a function that can be used to set data from a source object, taking
             * into account the ability to use nested objects as a source
             *  @param {string|int|function} mSource The data source for the object
             *  @returns {function} Data set function
             *  @memberof DataTable#oApi
             */
            function _fnSetObjectDataFn(mSource) {
                if (mSource === null) {
                    /* Nothing to do when the data source is null */
                    return function (data, val) {
                    };
                }
                else if (typeof mSource === 'function') {
                    return function (data, val) {
                        mSource(data, 'set', val);
                    };
                }
                else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1)) {
                    /* Like the get, we need to get data from a nested object */
                    var setData = function (data, val, src) {
                        var a = src.split('.'), b;
                        var arrayNotation, o, innerSrc;

                        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {
                            // Check if we are dealing with an array notation request
                            arrayNotation = a[i].match(__reArray);

                            if (arrayNotation) {
                                a[i] = a[i].replace(__reArray, '');
                                data[ a[i] ] = [];

                                // Get the remainder of the nested object to set so we can recurse
                                b = a.slice();
                                b.splice(0, i + 1);
                                innerSrc = b.join('.');

                                // Traverse each entry in the array setting the properties requested
                                for (var j = 0, jLen = val.length; j < jLen; j++) {
                                    o = {};
                                    setData(o, val[j], innerSrc);
                                    data[ a[i] ].push(o);
                                }

                                // The inner call to setData has already traversed through the remainder
                                // of the source and has set the data, thus we can exit here
                                return;
                            }

                            // If the nested object doesn't currently exist - since we are
                            // trying to set the value - create it
                            if (data[ a[i] ] === null || data[ a[i] ] === undefined) {
                                data[ a[i] ] = {};
                            }
                            data = data[ a[i] ];
                        }

                        // If array notation is used, we just want to strip it and use the property name
                        // and assign the value. If it isn't used, then we get the result we want anyway
                        data[ a[a.length - 1].replace(__reArray, '') ] = val;
                    };

                    return function (data, val) {
                        return setData(data, val, mSource);
                    };
                }
                else {
                    /* Array or flat object mapping */
                    return function (data, val) {
                        data[mSource] = val;
                    };
                }
            }


            /**
             * Return an array with the full table data
             *  @param {object} oSettings dataTables settings object
             *  @returns array {array} aData Master data array
             *  @memberof DataTable#oApi
             */
            function _fnGetDataMaster(oSettings) {
                var aData = [];
                var iLen = oSettings.aoData.length;
                for (var i = 0; i < iLen; i++) {
                    aData.push(oSettings.aoData[i]._aData);
                }
                return aData;
            }


            /**
             * Nuke the table
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnClearTable(oSettings) {
                oSettings.aoData.splice(0, oSettings.aoData.length);
                oSettings.aiDisplayMaster.splice(0, oSettings.aiDisplayMaster.length);
                oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);
                _fnCalculateEnd(oSettings);
            }


            /**
             * Take an array of integers (index array) and remove a target integer (value - not
             * the key!)
             *  @param {array} a Index array to target
             *  @param {int} iTarget value to find
             *  @memberof DataTable#oApi
             */
            function _fnDeleteIndex(a, iTarget) {
                var iTargetIndex = -1;

                for (var i = 0, iLen = a.length; i < iLen; i++) {
                    if (a[i] == iTarget) {
                        iTargetIndex = i;
                    }
                    else if (a[i] > iTarget) {
                        a[i]--;
                    }
                }

                if (iTargetIndex != -1) {
                    a.splice(iTargetIndex, 1);
                }
            }


            /**
             * Call the developer defined fnRender function for a given cell (row/column) with
             * the required parameters and return the result.
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow aoData index for the row
             *  @param {int} iCol aoColumns index for the column
             *  @returns {*} Return of the developer's fnRender function
             *  @memberof DataTable#oApi
             */
            function _fnRender(oSettings, iRow, iCol) {
                var oCol = oSettings.aoColumns[iCol];

                return oCol.fnRender({
                    "iDataRow": iRow,
                    "iDataColumn": iCol,
                    "oSettings": oSettings,
                    "aData": oSettings.aoData[iRow]._aData,
                    "mDataProp": oCol.mData
                }, _fnGetCellData(oSettings, iRow, iCol, 'display'));
            }

            /**
             * Create a new TR element (and it's TD children) for a row
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iRow Row to consider
             *  @memberof DataTable#oApi
             */
            function _fnCreateTr(oSettings, iRow) {
                var oData = oSettings.aoData[iRow];
                var nTd;

                if (oData.nTr === null) {
                    oData.nTr = document.createElement('tr');

                    /* Use a private property on the node to allow reserve mapping from the node
                     * to the aoData array for fast look up
                     */
                    oData.nTr._DT_RowIndex = iRow;

                    /* Special parameters can be given by the data source to be used on the row */
                    if (oData._aData.DT_RowId) {
                        oData.nTr.id = oData._aData.DT_RowId;
                    }

                    if (oData._aData.DT_RowClass) {
                        oData.nTr.className = oData._aData.DT_RowClass;
                    }

                    /* Process each column */
                    for (var i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        var oCol = oSettings.aoColumns[i];
                        nTd = document.createElement(oCol.sCellType);

                        /* Render if needed - if bUseRendered is true then we already have the rendered
                         * value in the data source - so can just use that
                         */
                        nTd.innerHTML = (typeof oCol.fnRender === 'function' && (!oCol.bUseRendered || oCol.mData === null)) ?
                            _fnRender(oSettings, iRow, i) :
                            _fnGetCellData(oSettings, iRow, i, 'display');

                        /* Add user defined class */
                        if (oCol.sClass !== null) {
                            nTd.className = oCol.sClass;
                        }

                        if (oCol.bVisible) {
                            oData.nTr.appendChild(nTd);
                            oData._anHidden[i] = null;
                        }
                        else {
                            oData._anHidden[i] = nTd;
                        }

                        if (oCol.fnCreatedCell) {
                            oCol.fnCreatedCell.call(oSettings.oInstance,
                                nTd, _fnGetCellData(oSettings, iRow, i, 'display'), oData._aData, iRow, i
                            );
                        }
                    }

                    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, iRow]);
                }
            }


            /**
             * Create the HTML header for the table
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnBuildHead(oSettings) {
                var i, nTh, iLen, j, jLen;
                var iThs = $('th, td', oSettings.nTHead).length;
                var iCorrector = 0;
                var jqChildren;

                /* If there is a header in place - then use it - otherwise it's going to get nuked... */
                if (iThs !== 0) {
                    /* We've got a thead from the DOM, so remove hidden columns and apply width to vis cols */
                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        nTh = oSettings.aoColumns[i].nTh;
                        nTh.setAttribute('role', 'columnheader');
                        if (oSettings.aoColumns[i].bSortable) {
                            nTh.setAttribute('tabindex', oSettings.iTabIndex);
                            nTh.setAttribute('aria-controls', oSettings.sTableId);
                        }

                        if (oSettings.aoColumns[i].sClass !== null) {
                            $(nTh).addClass(oSettings.aoColumns[i].sClass);
                        }

                        /* Set the title of the column if it is user defined (not what was auto detected) */
                        if (oSettings.aoColumns[i].sTitle != nTh.innerHTML) {
                            nTh.innerHTML = oSettings.aoColumns[i].sTitle;
                        }
                    }
                }
                else {
                    /* We don't have a header in the DOM - so we are going to have to create one */
                    var nTr = document.createElement("tr");

                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        nTh = oSettings.aoColumns[i].nTh;
                        nTh.innerHTML = oSettings.aoColumns[i].sTitle;
                        nTh.setAttribute('tabindex', '0');

                        if (oSettings.aoColumns[i].sClass !== null) {
                            $(nTh).addClass(oSettings.aoColumns[i].sClass);
                        }

                        nTr.appendChild(nTh);
                    }
                    $(oSettings.nTHead).html('')[0].appendChild(nTr);
                    _fnDetectHeader(oSettings.aoHeader, oSettings.nTHead);
                }

                /* ARIA role for the rows */
                $(oSettings.nTHead).children('tr').attr('role', 'row');

                /* Add the extra markup needed by jQuery UI's themes */
                if (oSettings.bJUI) {
                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        nTh = oSettings.aoColumns[i].nTh;

                        var nDiv = document.createElement('div');
                        nDiv.className = oSettings.oClasses.sSortJUIWrapper;
                        $(nTh).contents().appendTo(nDiv);

                        var nSpan = document.createElement('span');
                        nSpan.className = oSettings.oClasses.sSortIcon;
                        nDiv.appendChild(nSpan);
                        nTh.appendChild(nDiv);
                    }
                }

                if (oSettings.oFeatures.bSort) {
                    for (i = 0; i < oSettings.aoColumns.length; i++) {
                        if (oSettings.aoColumns[i].bSortable !== false) {
                            _fnSortAttachListener(oSettings, oSettings.aoColumns[i].nTh, i);
                        }
                        else {
                            $(oSettings.aoColumns[i].nTh).addClass(oSettings.oClasses.sSortableNone);
                        }
                    }
                }

                /* Deal with the footer - add classes if required */
                if (oSettings.oClasses.sFooterTH !== "") {
                    $(oSettings.nTFoot).children('tr').children('th').addClass(oSettings.oClasses.sFooterTH);
                }

                /* Cache the footer elements */
                if (oSettings.nTFoot !== null) {
                    var anCells = _fnGetUniqueThs(oSettings, null, oSettings.aoFooter);
                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        if (anCells[i]) {
                            oSettings.aoColumns[i].nTf = anCells[i];
                            if (oSettings.aoColumns[i].sClass) {
                                $(anCells[i]).addClass(oSettings.aoColumns[i].sClass);
                            }
                        }
                    }
                }
            }


            /**
             * Draw the header (or footer) element based on the column visibility states. The
             * methodology here is to use the layout array from _fnDetectHeader, modified for
             * the instantaneous column visibility, to construct the new layout. The grid is
             * traversed over cell at a time in a rows x columns grid fashion, although each
             * cell insert can cover multiple elements in the grid - which is tracks using the
             * aApplied array. Cell inserts in the grid will only occur where there isn't
             * already a cell in that position.
             *  @param {object} oSettings dataTables settings object
             *  @param array {objects} aoSource Layout array from _fnDetectHeader
             *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
             *  @memberof DataTable#oApi
             */
            function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {
                var i, iLen, j, jLen, k, kLen, n, nLocalTr;
                var aoLocal = [];
                var aApplied = [];
                var iColumns = oSettings.aoColumns.length;
                var iRowspan, iColspan;

                if (bIncludeHidden === undefined) {
                    bIncludeHidden = false;
                }

                /* Make a copy of the master layout array, but without the visible columns in it */
                for (i = 0, iLen = aoSource.length; i < iLen; i++) {
                    aoLocal[i] = aoSource[i].slice();
                    aoLocal[i].nTr = aoSource[i].nTr;

                    /* Remove any columns which are currently hidden */
                    for (j = iColumns - 1; j >= 0; j--) {
                        if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {
                            aoLocal[i].splice(j, 1);
                        }
                    }

                    /* Prep the applied array - it needs an element for each row */
                    aApplied.push([]);
                }

                for (i = 0, iLen = aoLocal.length; i < iLen; i++) {
                    nLocalTr = aoLocal[i].nTr;

                    /* All cells are going to be replaced, so empty out the row */
                    if (nLocalTr) {
                        while ((n = nLocalTr.firstChild)) {
                            nLocalTr.removeChild(n);
                        }
                    }

                    for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {
                        iRowspan = 1;
                        iColspan = 1;

                        /* Check to see if there is already a cell (row/colspan) covering our target
                         * insert point. If there is, then there is nothing to do.
                         */
                        if (aApplied[i][j] === undefined) {
                            nLocalTr.appendChild(aoLocal[i][j].cell);
                            aApplied[i][j] = 1;

                            /* Expand the cell to cover as many rows as needed */
                            while (aoLocal[i + iRowspan] !== undefined &&
                                aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {
                                aApplied[i + iRowspan][j] = 1;
                                iRowspan++;
                            }

                            /* Expand the cell to cover as many columns as needed */
                            while (aoLocal[i][j + iColspan] !== undefined &&
                                aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {
                                /* Must update the applied array over the rows for the columns */
                                for (k = 0; k < iRowspan; k++) {
                                    aApplied[i + k][j + iColspan] = 1;
                                }
                                iColspan++;
                            }

                            /* Do the actual expansion in the DOM */
                            aoLocal[i][j].cell.rowSpan = iRowspan;
                            aoLocal[i][j].cell.colSpan = iColspan;
                        }
                    }
                }
            }


            /**
             * Insert the required TR nodes into the table for display
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnDraw(oSettings) {
                /* Provide a pre-callback function which can be used to cancel the draw is false is returned */
                var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);
                if ($.inArray(false, aPreDraw) !== -1) {
                    _fnProcessingDisplay(oSettings, false);
                    return;
                }

                var i, iLen, n;
                var anRows = [];
                var iRowCount = 0;
                var iStripes = oSettings.asStripeClasses.length;
                var iOpenRows = oSettings.aoOpenRows.length;

                oSettings.bDrawing = true;

                /* Check and see if we have an initial draw position from state saving */
                if (oSettings.iInitDisplayStart !== undefined && oSettings.iInitDisplayStart != -1) {
                    if (oSettings.oFeatures.bServerSide) {
                        oSettings._iDisplayStart = oSettings.iInitDisplayStart;
                    }
                    else {
                        oSettings._iDisplayStart = (oSettings.iInitDisplayStart >= oSettings.fnRecordsDisplay()) ?
                            0 : oSettings.iInitDisplayStart;
                    }
                    oSettings.iInitDisplayStart = -1;
                    _fnCalculateEnd(oSettings);
                }

                /* Server-side processing draw intercept */
                if (oSettings.bDeferLoading) {
                    oSettings.bDeferLoading = false;
                    oSettings.iDraw++;
                }
                else if (!oSettings.oFeatures.bServerSide) {
                    oSettings.iDraw++;
                }
                else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {
                    return;
                }

                if (oSettings.aiDisplay.length !== 0) {
                    var iStart = oSettings._iDisplayStart;
                    var iEnd = oSettings._iDisplayEnd;

                    if (oSettings.oFeatures.bServerSide) {
                        iStart = 0;
                        iEnd = oSettings.aoData.length;
                    }

                    for (var j = iStart; j < iEnd; j++) {
                        var aoData = oSettings.aoData[ oSettings.aiDisplay[j] ];
                        if (aoData.nTr === null) {
                            _fnCreateTr(oSettings, oSettings.aiDisplay[j]);
                        }

                        var nRow = aoData.nTr;

                        /* Remove the old striping classes and then add the new one */
                        if (iStripes !== 0) {
                            var sStripe = oSettings.asStripeClasses[ iRowCount % iStripes ];
                            if (aoData._sRowStripe != sStripe) {
                                $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);
                                aoData._sRowStripe = sStripe;
                            }
                        }

                        /* Row callback functions - might want to manipulate the row */
                        _fnCallbackFire(oSettings, 'aoRowCallback', null,
                            [nRow, oSettings.aoData[ oSettings.aiDisplay[j] ]._aData, iRowCount, j]);

                        anRows.push(nRow);
                        iRowCount++;

                        /* If there is an open row - and it is attached to this parent - attach it on redraw */
                        if (iOpenRows !== 0) {
                            for (var k = 0; k < iOpenRows; k++) {
                                if (nRow == oSettings.aoOpenRows[k].nParent) {
                                    anRows.push(oSettings.aoOpenRows[k].nTr);
                                    break;
                                }
                            }
                        }
                    }
                }
                else {
                    /* Table is empty - create a row with an empty message in it */
                    anRows[ 0 ] = document.createElement('tr');

                    if (oSettings.asStripeClasses[0]) {
                        anRows[ 0 ].className = oSettings.asStripeClasses[0];
                    }

                    var oLang = oSettings.oLanguage;
                    var sZero = oLang.sZeroRecords;
                    if (oSettings.iDraw == 1 && oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide) {
                        sZero = oLang.sLoadingRecords;
                    }
                    else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {
                        sZero = oLang.sEmptyTable;
                    }

                    var nTd = document.createElement('td');
                    nTd.setAttribute('valign', "top");
                    nTd.colSpan = _fnVisbleColumns(oSettings);
                    nTd.className = oSettings.oClasses.sRowEmpty;
                    nTd.innerHTML = _fnInfoMacros(oSettings, sZero);

                    anRows[ iRowCount ].appendChild(nTd);
                }

                /* Header and footer callbacks */
                _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
                    _fnGetDataMaster(oSettings), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ]);

                _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
                    _fnGetDataMaster(oSettings), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ]);

                /* 
                 * Need to remove any old row from the display - note we can't just empty the tbody using
                 * $().html('') since this will unbind the jQuery event handlers (even although the node 
                 * still exists!) - equally we can't use innerHTML, since IE throws an exception.
                 */
                var
                    nAddFrag = document.createDocumentFragment(),
                    nRemoveFrag = document.createDocumentFragment(),
                    nBodyPar, nTrs;

                if (oSettings.nTBody) {
                    nBodyPar = oSettings.nTBody.parentNode;
                    nRemoveFrag.appendChild(oSettings.nTBody);

                    /* When doing infinite scrolling, only remove child rows when sorting, filtering or start
                     * up. When not infinite scroll, always do it.
                     */
                    if (!oSettings.oScroll.bInfinite || !oSettings._bInitComplete ||
                        oSettings.bSorted || oSettings.bFiltered) {
                        while ((n = oSettings.nTBody.firstChild)) {
                            oSettings.nTBody.removeChild(n);
                        }
                    }

                    /* Put the draw table into the dom */
                    for (i = 0, iLen = anRows.length; i < iLen; i++) {
                        nAddFrag.appendChild(anRows[i]);
                    }

                    oSettings.nTBody.appendChild(nAddFrag);
                    if (nBodyPar !== null) {
                        nBodyPar.appendChild(oSettings.nTBody);
                    }
                }

                /* Call all required callback functions for the end of a draw */
                _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);

                /* Draw is complete, sorting and filtering must be as well */
                oSettings.bSorted = false;
                oSettings.bFiltered = false;
                oSettings.bDrawing = false;

                if (oSettings.oFeatures.bServerSide) {
                    _fnProcessingDisplay(oSettings, false);
                    if (!oSettings._bInitComplete) {
                        _fnInitComplete(oSettings);
                    }
                }
            }


            /**
             * Redraw the table - taking account of the various features which are enabled
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnReDraw(oSettings) {
                if (oSettings.oFeatures.bSort) {
                    /* Sorting will refilter and draw for us */
                    _fnSort(oSettings, oSettings.oPreviousSearch);
                }
                else if (oSettings.oFeatures.bFilter) {
                    /* Filtering will redraw for us */
                    _fnFilterComplete(oSettings, oSettings.oPreviousSearch);
                }
                else {
                    _fnCalculateEnd(oSettings);
                    _fnDraw(oSettings);
                }
            }


            /**
             * Add the options to the page HTML for the table
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnAddOptionsHtml(oSettings) {
                /*
                 * Create a temporary, empty, div which we can later on replace with what we have generated
                 * we do it this way to rendering the 'options' html offline - speed :-)
                 */
                var nHolding = $('<div></div>')[0];
                oSettings.nTable.parentNode.insertBefore(nHolding, oSettings.nTable);

                /* 
                 * All DataTables are wrapped in a div
                 */
                oSettings.nTableWrapper = $('<div id="' + oSettings.sTableId + '_wrapper" class="' + oSettings.oClasses.sWrapper + '" role="grid"></div>')[0];
                oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;

                /* Track where we want to insert the option */
                var nInsertNode = oSettings.nTableWrapper;

                /* Loop over the user set positioning and place the elements as needed */
                var aDom = oSettings.sDom.split('');
                var nTmp, iPushFeature, cOption, nNewNode, cNext, sAttr, j;
                for (var i = 0; i < aDom.length; i++) {
                    iPushFeature = 0;
                    cOption = aDom[i];

                    if (cOption == '<') {
                        /* New container div */
                        nNewNode = $('<div></div>')[0];

                        /* Check to see if we should append an id and/or a class name to the container */
                        cNext = aDom[i + 1];
                        if (cNext == "'" || cNext == '"') {
                            sAttr = "";
                            j = 2;
                            while (aDom[i + j] != cNext) {
                                sAttr += aDom[i + j];
                                j++;
                            }

                            /* Replace jQuery UI constants */
                            if (sAttr == "H") {
                                sAttr = oSettings.oClasses.sJUIHeader;
                            }
                            else if (sAttr == "F") {
                                sAttr = oSettings.oClasses.sJUIFooter;
                            }

                            /* The attribute can be in the format of "#id.class", "#id" or "class" This logic
                             * breaks the string into parts and applies them as needed
                             */
                            if (sAttr.indexOf('.') != -1) {
                                var aSplit = sAttr.split('.');
                                nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);
                                nNewNode.className = aSplit[1];
                            }
                            else if (sAttr.charAt(0) == "#") {
                                nNewNode.id = sAttr.substr(1, sAttr.length - 1);
                            }
                            else {
                                nNewNode.className = sAttr;
                            }

                            i += j;
                            /* Move along the position array */
                        }

                        nInsertNode.appendChild(nNewNode);
                        nInsertNode = nNewNode;
                    }
                    else if (cOption == '>') {
                        /* End container div */
                        nInsertNode = nInsertNode.parentNode;
                    }
                    else if (cOption == 'l' && oSettings.oFeatures.bPaginate && oSettings.oFeatures.bLengthChange) {
                        /* Length */
                        nTmp = _fnFeatureHtmlLength(oSettings);
                        iPushFeature = 1;
                    }
                    else if (cOption == 'f' && oSettings.oFeatures.bFilter) {
                        /* Filter */
                        nTmp = _fnFeatureHtmlFilter(oSettings);
                        iPushFeature = 1;
                    }
                    else if (cOption == 'r' && oSettings.oFeatures.bProcessing) {
                        /* pRocessing */
                        nTmp = _fnFeatureHtmlProcessing(oSettings);
                        iPushFeature = 1;
                    }
                    else if (cOption == 't') {
                        /* Table */
                        nTmp = _fnFeatureHtmlTable(oSettings);
                        iPushFeature = 1;
                    }
                    else if (cOption == 'i' && oSettings.oFeatures.bInfo) {
                        /* Info */
                        nTmp = _fnFeatureHtmlInfo(oSettings);
                        iPushFeature = 1;
                    }
                    else if (cOption == 'p' && oSettings.oFeatures.bPaginate) {
                        /* Pagination */
                        nTmp = _fnFeatureHtmlPaginate(oSettings);
                        iPushFeature = 1;
                    }
                    else if (DataTable.ext.aoFeatures.length !== 0) {
                        /* Plug-in features */
                        var aoFeatures = DataTable.ext.aoFeatures;
                        for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {
                            if (cOption == aoFeatures[k].cFeature) {
                                nTmp = aoFeatures[k].fnInit(oSettings);
                                if (nTmp) {
                                    iPushFeature = 1;
                                }
                                break;
                            }
                        }
                    }

                    /* Add to the 2D features array */
                    if (iPushFeature == 1 && nTmp !== null) {
                        if (typeof oSettings.aanFeatures[cOption] !== 'object') {
                            oSettings.aanFeatures[cOption] = [];
                        }
                        oSettings.aanFeatures[cOption].push(nTmp);
                        nInsertNode.appendChild(nTmp);
                    }
                }

                /* Built our DOM structure - replace the holding div with what we want */
                nHolding.parentNode.replaceChild(oSettings.nTableWrapper, nHolding);
            }


            /**
             * Use the DOM source to create up an array of header cells. The idea here is to
             * create a layout grid (array) of rows x columns, which contains a reference
             * to the cell that that point in the grid (regardless of col/rowspan), such that
             * any column / row could be removed and the new grid constructed
             *  @param array {object} aLayout Array to store the calculated layout in
             *  @param {node} nThead The header/footer element for the table
             *  @memberof DataTable#oApi
             */
            function _fnDetectHeader(aLayout, nThead) {
                var nTrs = $(nThead).children('tr');
                var nTr, nCell;
                var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
                var bUnique;
                var fnShiftCol = function (a, i, j) {
                    var k = a[i];
                    while (k[j]) {
                        j++;
                    }
                    return j;
                };

                aLayout.splice(0, aLayout.length);

                /* We know how many rows there are in the layout - so prep it */
                for (i = 0, iLen = nTrs.length; i < iLen; i++) {
                    aLayout.push([]);
                }

                /* Calculate a layout array */
                for (i = 0, iLen = nTrs.length; i < iLen; i++) {
                    nTr = nTrs[i];
                    iColumn = 0;

                    /* For every cell in the row... */
                    nCell = nTr.firstChild;
                    while (nCell) {
                        if (nCell.nodeName.toUpperCase() == "TD" ||
                            nCell.nodeName.toUpperCase() == "TH") {
                            /* Get the col and rowspan attributes from the DOM and sanitise them */
                            iColspan = nCell.getAttribute('colspan') * 1;
                            iRowspan = nCell.getAttribute('rowspan') * 1;
                            iColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;
                            iRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;

                            /* There might be colspan cells already in this row, so shift our target 
                             * accordingly
                             */
                            iColShifted = fnShiftCol(aLayout, i, iColumn);

                            /* Cache calculation for unique columns */
                            bUnique = iColspan === 1 ? true : false;

                            /* If there is col / rowspan, copy the information into the layout grid */
                            for (l = 0; l < iColspan; l++) {
                                for (k = 0; k < iRowspan; k++) {
                                    aLayout[i + k][iColShifted + l] = {
                                        "cell": nCell,
                                        "unique": bUnique
                                    };
                                    aLayout[i + k].nTr = nTr;
                                }
                            }
                        }
                        nCell = nCell.nextSibling;
                    }
                }
            }


            /**
             * Get an array of unique th elements, one for each column
             *  @param {object} oSettings dataTables settings object
             *  @param {node} nHeader automatically detect the layout from this node - optional
             *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
             *  @returns array {node} aReturn list of unique th's
             *  @memberof DataTable#oApi
             */
            function _fnGetUniqueThs(oSettings, nHeader, aLayout) {
                var aReturn = [];
                if (!aLayout) {
                    aLayout = oSettings.aoHeader;
                    if (nHeader) {
                        aLayout = [];
                        _fnDetectHeader(aLayout, nHeader);
                    }
                }

                for (var i = 0, iLen = aLayout.length; i < iLen; i++) {
                    for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {
                        if (aLayout[i][j].unique &&
                            (!aReturn[j] || !oSettings.bSortCellsTop)) {
                            aReturn[j] = aLayout[i][j].cell;
                        }
                    }
                }

                return aReturn;
            }


            /**
             * Update the table using an Ajax call
             *  @param {object} oSettings dataTables settings object
             *  @returns {boolean} Block the table drawing or not
             *  @memberof DataTable#oApi
             */
            function _fnAjaxUpdate(oSettings) {
                if (oSettings.bAjaxDataGet) {
                    oSettings.iDraw++;
                    _fnProcessingDisplay(oSettings, true);
                    var iColumns = oSettings.aoColumns.length;
                    var aoData = _fnAjaxParameters(oSettings);
                    _fnServerParams(oSettings, aoData);

                    oSettings.fnServerData.call(oSettings.oInstance, oSettings.sAjaxSource, aoData,
                        function (json) {
                            _fnAjaxUpdateDraw(oSettings, json);
                        }, oSettings);
                    return false;
                }
                else {
                    return true;
                }
            }


            /**
             * Build up the parameters in an object needed for a server-side processing request
             *  @param {object} oSettings dataTables settings object
             *  @returns {bool} block the table drawing or not
             *  @memberof DataTable#oApi
             */
            function _fnAjaxParameters(oSettings) {
                var iColumns = oSettings.aoColumns.length;
                var aoData = [], mDataProp, aaSort, aDataSort;
                var i, j;

                aoData.push({ "name": "sEcho", "value": oSettings.iDraw });
                aoData.push({ "name": "iColumns", "value": iColumns });
                aoData.push({ "name": "sColumns", "value": _fnColumnOrdering(oSettings) });
                aoData.push({ "name": "iDisplayStart", "value": oSettings._iDisplayStart });
                aoData.push({ "name": "iDisplayLength", "value": oSettings.oFeatures.bPaginate !== false ?
                    oSettings._iDisplayLength : -1 });

                for (i = 0; i < iColumns; i++) {
                    mDataProp = oSettings.aoColumns[i].mData;
                    aoData.push({ "name": "mDataProp_" + i, "value": typeof(mDataProp) === "function" ? 'function' : mDataProp });
                }

                /* Filtering */
                if (oSettings.oFeatures.bFilter !== false) {
                    aoData.push({ "name": "sSearch", "value": oSettings.oPreviousSearch.sSearch });
                    aoData.push({ "name": "bRegex", "value": oSettings.oPreviousSearch.bRegex });
                    for (i = 0; i < iColumns; i++) {
                        aoData.push({ "name": "sSearch_" + i, "value": oSettings.aoPreSearchCols[i].sSearch });
                        aoData.push({ "name": "bRegex_" + i, "value": oSettings.aoPreSearchCols[i].bRegex });
                        aoData.push({ "name": "bSearchable_" + i, "value": oSettings.aoColumns[i].bSearchable });
                    }
                }

                /* Sorting */
                if (oSettings.oFeatures.bSort !== false) {
                    var iCounter = 0;

                    aaSort = ( oSettings.aaSortingFixed !== null ) ?
                        oSettings.aaSortingFixed.concat(oSettings.aaSorting) :
                        oSettings.aaSorting.slice();

                    for (i = 0; i < aaSort.length; i++) {
                        aDataSort = oSettings.aoColumns[ aaSort[i][0] ].aDataSort;

                        for (j = 0; j < aDataSort.length; j++) {
                            aoData.push({ "name": "iSortCol_" + iCounter, "value": aDataSort[j] });
                            aoData.push({ "name": "sSortDir_" + iCounter, "value": aaSort[i][1] });
                            iCounter++;
                        }
                    }
                    aoData.push({ "name": "iSortingCols", "value": iCounter });

                    for (i = 0; i < iColumns; i++) {
                        aoData.push({ "name": "bSortable_" + i, "value": oSettings.aoColumns[i].bSortable });
                    }
                }

                return aoData;
            }


            /**
             * Add Ajax parameters from plug-ins
             *  @param {object} oSettings dataTables settings object
             *  @param array {objects} aoData name/value pairs to send to the server
             *  @memberof DataTable#oApi
             */
            function _fnServerParams(oSettings, aoData) {
                _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [aoData]);
            }


            /**
             * Data the data from the server (nuking the old) and redraw the table
             *  @param {object} oSettings dataTables settings object
             *  @param {object} json json data return from the server.
             *  @param {string} json.sEcho Tracking flag for DataTables to match requests
             *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
             *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
             *  @param {array} json.aaData The data to display on this page
             *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
             *  @memberof DataTable#oApi
             */
            function _fnAjaxUpdateDraw(oSettings, json) {
                if (json.sEcho !== undefined) {
                    /* Protect against old returns over-writing a new one. Possible when you get
                     * very fast interaction, and later queries are completed much faster
                     */
                    if (json.sEcho * 1 < oSettings.iDraw) {
                        return;
                    }
                    else {
                        oSettings.iDraw = json.sEcho * 1;
                    }
                }

                if (!oSettings.oScroll.bInfinite ||
                    (oSettings.oScroll.bInfinite && (oSettings.bSorted || oSettings.bFiltered))) {
                    _fnClearTable(oSettings);
                }
                oSettings._iRecordsTotal = parseInt(json.iTotalRecords, 10);
                oSettings._iRecordsDisplay = parseInt(json.iTotalDisplayRecords, 10);

                /* Determine if reordering is required */
                var sOrdering = _fnColumnOrdering(oSettings);
                var bReOrder = (json.sColumns !== undefined && sOrdering !== "" && json.sColumns != sOrdering );
                var aiIndex;
                if (bReOrder) {
                    aiIndex = _fnReOrderIndex(oSettings, json.sColumns);
                }

                var aData = _fnGetObjectDataFn(oSettings.sAjaxDataProp)(json);
                for (var i = 0, iLen = aData.length; i < iLen; i++) {
                    if (bReOrder) {
                        /* If we need to re-order, then create a new array with the correct order and add it */
                        var aDataSorted = [];
                        for (var j = 0, jLen = oSettings.aoColumns.length; j < jLen; j++) {
                            aDataSorted.push(aData[i][ aiIndex[j] ]);
                        }
                        _fnAddData(oSettings, aDataSorted);
                    }
                    else {
                        /* No re-order required, sever got it "right" - just straight add */
                        _fnAddData(oSettings, aData[i]);
                    }
                }
                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

                oSettings.bAjaxDataGet = false;
                _fnDraw(oSettings);
                oSettings.bAjaxDataGet = true;
                _fnProcessingDisplay(oSettings, false);
            }


            /**
             * Generate the node required for filtering text
             *  @returns {node} Filter control element
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlFilter(oSettings) {
                var oPreviousSearch = oSettings.oPreviousSearch;

                var sSearchStr = oSettings.oLanguage.sSearch;
                sSearchStr = (sSearchStr.indexOf('_INPUT_') !== -1) ?
                    sSearchStr.replace('_INPUT_', '<input type="text" />') :
                    sSearchStr === "" ? '<input type="text" />' : sSearchStr + ' <input type="text" />';

                var nFilter = document.createElement('div');
                nFilter.className = oSettings.oClasses.sFilter;
                nFilter.innerHTML = '<label>' + sSearchStr + '</label>';
                if (!oSettings.aanFeatures.f) {
                    nFilter.id = oSettings.sTableId + '_filter';
                }

                var jqFilter = $('input[type="text"]', nFilter);

                // Store a reference to the input element, so other input elements could be
                // added to the filter wrapper if needed (submit button for example)
                nFilter._DT_Input = jqFilter[0];

                jqFilter.val(oPreviousSearch.sSearch.replace('"', '&quot;'));
                jqFilter.bind('keyup.DT', function (e) {
                    /* Update all other filter input elements for the new display */
                    var n = oSettings.aanFeatures.f;
                    var val = this.value === "" ? "" : this.value; // mental IE8 fix :-(

                    for (var i = 0, iLen = n.length; i < iLen; i++) {
                        if (n[i] != $(this).parents('div.dataTables_filter')[0]) {
                            $(n[i]._DT_Input).val(val);
                        }
                    }

                    /* Now do the filter */
                    if (val != oPreviousSearch.sSearch) {
                        _fnFilterComplete(oSettings, {
                            "sSearch": val,
                            "bRegex": oPreviousSearch.bRegex,
                            "bSmart": oPreviousSearch.bSmart,
                            "bCaseInsensitive": oPreviousSearch.bCaseInsensitive
                        });
                    }
                });

                jqFilter
                    .attr('aria-controls', oSettings.sTableId)
                    .bind('keypress.DT', function (e) {
                        /* Prevent form submission */
                        if (e.keyCode == 13) {
                            return false;
                        }
                    }
                );

                return nFilter;
            }


            /**
             * Filter the table using both the global filter and column based filtering
             *  @param {object} oSettings dataTables settings object
             *  @param {object} oSearch search information
             *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
             *  @memberof DataTable#oApi
             */
            function _fnFilterComplete(oSettings, oInput, iForce) {
                var oPrevSearch = oSettings.oPreviousSearch;
                var aoPrevSearch = oSettings.aoPreSearchCols;
                var fnSaveFilter = function (oFilter) {
                    /* Save the filtering values */
                    oPrevSearch.sSearch = oFilter.sSearch;
                    oPrevSearch.bRegex = oFilter.bRegex;
                    oPrevSearch.bSmart = oFilter.bSmart;
                    oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
                };

                /* In server-side processing all filtering is done by the server, so no point hanging around here */
                if (!oSettings.oFeatures.bServerSide) {
                    /* Global filter */
                    _fnFilter(oSettings, oInput.sSearch, iForce, oInput.bRegex, oInput.bSmart, oInput.bCaseInsensitive);
                    fnSaveFilter(oInput);

                    /* Now do the individual column filter */
                    for (var i = 0; i < oSettings.aoPreSearchCols.length; i++) {
                        _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, aoPrevSearch[i].bRegex,
                            aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);
                    }

                    /* Custom filtering */
                    _fnFilterCustom(oSettings);
                }
                else {
                    fnSaveFilter(oInput);
                }

                /* Tell the draw function we have been filtering */
                oSettings.bFiltered = true;
                $(oSettings.oInstance).trigger('filter', oSettings);

                /* Redraw the table */
                oSettings._iDisplayStart = 0;
                _fnCalculateEnd(oSettings);
                _fnDraw(oSettings);

                /* Rebuild search array 'offline' */
                _fnBuildSearchArray(oSettings, 0);
            }


            /**
             * Apply custom filtering functions
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnFilterCustom(oSettings) {
                var afnFilters = DataTable.ext.afnFiltering;
                var aiFilterColumns = _fnGetColumns(oSettings, 'bSearchable');

                for (var i = 0, iLen = afnFilters.length; i < iLen; i++) {
                    var iCorrector = 0;
                    for (var j = 0, jLen = oSettings.aiDisplay.length; j < jLen; j++) {
                        var iDisIndex = oSettings.aiDisplay[j - iCorrector];
                        var bTest = afnFilters[i](
                            oSettings,
                            _fnGetRowData(oSettings, iDisIndex, 'filter', aiFilterColumns),
                            iDisIndex
                        );

                        /* Check if we should use this row based on the filtering function */
                        if (!bTest) {
                            oSettings.aiDisplay.splice(j - iCorrector, 1);
                            iCorrector++;
                        }
                    }
                }
            }


            /**
             * Filter the table on a per-column basis
             *  @param {object} oSettings dataTables settings object
             *  @param {string} sInput string to filter on
             *  @param {int} iColumn column to filter
             *  @param {bool} bRegex treat search string as a regular expression or not
             *  @param {bool} bSmart use smart filtering or not
             *  @param {bool} bCaseInsensitive Do case insenstive matching or not
             *  @memberof DataTable#oApi
             */
            function _fnFilterColumn(oSettings, sInput, iColumn, bRegex, bSmart, bCaseInsensitive) {
                if (sInput === "") {
                    return;
                }

                var iIndexCorrector = 0;
                var rpSearch = _fnFilterCreateSearch(sInput, bRegex, bSmart, bCaseInsensitive);

                for (var i = oSettings.aiDisplay.length - 1; i >= 0; i--) {
                    var sData = _fnDataToSearch(_fnGetCellData(oSettings, oSettings.aiDisplay[i], iColumn, 'filter'),
                        oSettings.aoColumns[iColumn].sType);
                    if (!rpSearch.test(sData)) {
                        oSettings.aiDisplay.splice(i, 1);
                        iIndexCorrector++;
                    }
                }
            }


            /**
             * Filter the data table based on user input and draw the table
             *  @param {object} oSettings dataTables settings object
             *  @param {string} sInput string to filter on
             *  @param {int} iForce optional - force a research of the master array (1) or not (undefined or 0)
             *  @param {bool} bRegex treat as a regular expression or not
             *  @param {bool} bSmart perform smart filtering or not
             *  @param {bool} bCaseInsensitive Do case insenstive matching or not
             *  @memberof DataTable#oApi
             */
            function _fnFilter(oSettings, sInput, iForce, bRegex, bSmart, bCaseInsensitive) {
                var i;
                var rpSearch = _fnFilterCreateSearch(sInput, bRegex, bSmart, bCaseInsensitive);
                var oPrevSearch = oSettings.oPreviousSearch;

                /* Check if we are forcing or not - optional parameter */
                if (!iForce) {
                    iForce = 0;
                }

                /* Need to take account of custom filtering functions - always filter */
                if (DataTable.ext.afnFiltering.length !== 0) {
                    iForce = 1;
                }

                /*
                 * If the input is blank - we want the full data set
                 */
                if (sInput.length <= 0) {
                    oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);
                    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
                }
                else {
                    /*
                     * We are starting a new search or the new search string is smaller 
                     * then the old one (i.e. delete). Search from the master array
                     */
                    if (oSettings.aiDisplay.length == oSettings.aiDisplayMaster.length ||
                        oPrevSearch.sSearch.length > sInput.length || iForce == 1 ||
                        sInput.indexOf(oPrevSearch.sSearch) !== 0) {
                        /* Nuke the old display array - we are going to rebuild it */
                        oSettings.aiDisplay.splice(0, oSettings.aiDisplay.length);

                        /* Force a rebuild of the search array */
                        _fnBuildSearchArray(oSettings, 1);

                        /* Search through all records to populate the search array
                         * The the oSettings.aiDisplayMaster and asDataSearch arrays have 1 to 1 
                         * mapping
                         */
                        for (i = 0; i < oSettings.aiDisplayMaster.length; i++) {
                            if (rpSearch.test(oSettings.asDataSearch[i])) {
                                oSettings.aiDisplay.push(oSettings.aiDisplayMaster[i]);
                            }
                        }
                    }
                    else {
                        /* Using old search array - refine it - do it this way for speed
                         * Don't have to search the whole master array again
                         */
                        var iIndexCorrector = 0;

                        /* Search the current results */
                        for (i = 0; i < oSettings.asDataSearch.length; i++) {
                            if (!rpSearch.test(oSettings.asDataSearch[i])) {
                                oSettings.aiDisplay.splice(i - iIndexCorrector, 1);
                                iIndexCorrector++;
                            }
                        }
                    }
                }
            }


            /**
             * Create an array which can be quickly search through
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iMaster use the master data array - optional
             *  @memberof DataTable#oApi
             */
            function _fnBuildSearchArray(oSettings, iMaster) {
                if (!oSettings.oFeatures.bServerSide) {
                    /* Clear out the old data */
                    oSettings.asDataSearch = [];

                    var aiFilterColumns = _fnGetColumns(oSettings, 'bSearchable');
                    var aiIndex = (iMaster === 1) ?
                        oSettings.aiDisplayMaster :
                        oSettings.aiDisplay;

                    for (var i = 0, iLen = aiIndex.length; i < iLen; i++) {
                        oSettings.asDataSearch[i] = _fnBuildSearchRow(
                            oSettings,
                            _fnGetRowData(oSettings, aiIndex[i], 'filter', aiFilterColumns)
                        );
                    }
                }
            }


            /**
             * Create a searchable string from a single data row
             *  @param {object} oSettings dataTables settings object
             *  @param {array} aData Row data array to use for the data to search
             *  @memberof DataTable#oApi
             */
            function _fnBuildSearchRow(oSettings, aData) {
                var sSearch = aData.join('  ');

                /* If it looks like there is an HTML entity in the string, attempt to decode it */
                if (sSearch.indexOf('&') !== -1) {
                    sSearch = $('<div>').html(sSearch).text();
                }

                // Strip newline characters
                return sSearch.replace(/[\n\r]/g, " ");
            }

            /**
             * Build a regular expression object suitable for searching a table
             *  @param {string} sSearch string to search for
             *  @param {bool} bRegex treat as a regular expression or not
             *  @param {bool} bSmart perform smart filtering or not
             *  @param {bool} bCaseInsensitive Do case insensitive matching or not
             *  @returns {RegExp} constructed object
             *  @memberof DataTable#oApi
             */
            function _fnFilterCreateSearch(sSearch, bRegex, bSmart, bCaseInsensitive) {
                var asSearch, sRegExpString;

                if (bSmart) {
                    /* Generate the regular expression to use. Something along the lines of:
                     * ^(?=.*?\bone\b)(?=.*?\btwo\b)(?=.*?\bthree\b).*$
                     */
                    asSearch = bRegex ? sSearch.split(' ') : _fnEscapeRegex(sSearch).split(' ');
                    sRegExpString = '^(?=.*?' + asSearch.join(')(?=.*?') + ').*$';
                    return new RegExp(sRegExpString, bCaseInsensitive ? "i" : "");
                }
                else {
                    sSearch = bRegex ? sSearch : _fnEscapeRegex(sSearch);
                    return new RegExp(sSearch, bCaseInsensitive ? "i" : "");
                }
            }


            /**
             * Convert raw data into something that the user can search on
             *  @param {string} sData data to be modified
             *  @param {string} sType data type
             *  @returns {string} search string
             *  @memberof DataTable#oApi
             */
            function _fnDataToSearch(sData, sType) {
                if (typeof DataTable.ext.ofnSearch[sType] === "function") {
                    return DataTable.ext.ofnSearch[sType](sData);
                }
                else if (sData === null) {
                    return '';
                }
                else if (sType == "html") {
                    return sData.replace(/[\r\n]/g, " ").replace(/<.*?>/g, "");
                }
                else if (typeof sData === "string") {
                    return sData.replace(/[\r\n]/g, " ");
                }
                return sData;
            }


            /**
             * scape a string such that it can be used in a regular expression
             *  @param {string} sVal string to escape
             *  @returns {string} escaped string
             *  @memberof DataTable#oApi
             */
            function _fnEscapeRegex(sVal) {
                var acEscape = [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ];
                var reReplace = new RegExp('(\\' + acEscape.join('|\\') + ')', 'g');
                return sVal.replace(reReplace, '\\$1');
            }


            /**
             * Generate the node required for the info display
             *  @param {object} oSettings dataTables settings object
             *  @returns {node} Information element
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlInfo(oSettings) {
                var nInfo = document.createElement('div');
                nInfo.className = oSettings.oClasses.sInfo;

                /* Actions that are to be taken once only for this feature */
                if (!oSettings.aanFeatures.i) {
                    /* Add draw callback */
                    oSettings.aoDrawCallback.push({
                        "fn": _fnUpdateInfo,
                        "sName": "information"
                    });

                    /* Add id */
                    nInfo.id = oSettings.sTableId + '_info';
                }
                oSettings.nTable.setAttribute('aria-describedby', oSettings.sTableId + '_info');

                return nInfo;
            }


            /**
             * Update the information elements in the display
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnUpdateInfo(oSettings) {
                /* Show information about the table */
                if (!oSettings.oFeatures.bInfo || oSettings.aanFeatures.i.length === 0) {
                    return;
                }

                var
                    oLang = oSettings.oLanguage,
                    iStart = oSettings._iDisplayStart + 1,
                    iEnd = oSettings.fnDisplayEnd(),
                    iMax = oSettings.fnRecordsTotal(),
                    iTotal = oSettings.fnRecordsDisplay(),
                    sOut;

                if (iTotal === 0) {
                    /* Empty record set */
                    sOut = oLang.sInfoEmpty;
                }
                else {
                    /* Normal record set */
                    sOut = oLang.sInfo;
                }

                if (iTotal != iMax) {
                    /* Record set after filtering */
                    sOut += ' ' + oLang.sInfoFiltered;
                }

                // Convert the macros
                sOut += oLang.sInfoPostFix;
                sOut = _fnInfoMacros(oSettings, sOut);

                if (oLang.fnInfoCallback !== null) {
                    sOut = oLang.fnInfoCallback.call(oSettings.oInstance,
                        oSettings, iStart, iEnd, iMax, iTotal, sOut);
                }

                var n = oSettings.aanFeatures.i;
                for (var i = 0, iLen = n.length; i < iLen; i++) {
                    $(n[i]).html(sOut);
                }
            }


            function _fnInfoMacros(oSettings, str) {
                var
                    iStart = oSettings._iDisplayStart + 1,
                    sStart = oSettings.fnFormatNumber(iStart),
                    iEnd = oSettings.fnDisplayEnd(),
                    sEnd = oSettings.fnFormatNumber(iEnd),
                    iTotal = oSettings.fnRecordsDisplay(),
                    sTotal = oSettings.fnFormatNumber(iTotal),
                    iMax = oSettings.fnRecordsTotal(),
                    sMax = oSettings.fnFormatNumber(iMax);

                // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
                // internally
                if (oSettings.oScroll.bInfinite) {
                    sStart = oSettings.fnFormatNumber(1);
                }

                return str.
                    replace(/_START_/g, sStart).
                    replace(/_END_/g, sEnd).
                    replace(/_TOTAL_/g, sTotal).
                    replace(/_MAX_/g, sMax);
            }


            /**
             * Draw the table for the first time, adding all required features
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnInitialise(oSettings) {
                var i, iLen, iAjaxStart = oSettings.iInitDisplayStart;

                /* Ensure that the table data is fully initialised */
                if (oSettings.bInitialised === false) {
                    setTimeout(function () {
                        _fnInitialise(oSettings);
                    }, 200);
                    return;
                }

                /* Show the display HTML options */
                _fnAddOptionsHtml(oSettings);

                /* Build and draw the header / footer for the table */
                _fnBuildHead(oSettings);
                _fnDrawHead(oSettings, oSettings.aoHeader);
                if (oSettings.nTFoot) {
                    _fnDrawHead(oSettings, oSettings.aoFooter);
                }

                /* Okay to show that something is going on now */
                _fnProcessingDisplay(oSettings, true);

                /* Calculate sizes for columns */
                if (oSettings.oFeatures.bAutoWidth) {
                    _fnCalculateColumnWidths(oSettings);
                }

                for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    if (oSettings.aoColumns[i].sWidth !== null) {
                        oSettings.aoColumns[i].nTh.style.width = _fnStringToCss(oSettings.aoColumns[i].sWidth);
                    }
                }

                /* If there is default sorting required - let's do it. The sort function will do the
                 * drawing for us. Otherwise we draw the table regardless of the Ajax source - this allows
                 * the table to look initialised for Ajax sourcing data (show 'loading' message possibly)
                 */
                if (oSettings.oFeatures.bSort) {
                    _fnSort(oSettings);
                }
                else if (oSettings.oFeatures.bFilter) {
                    _fnFilterComplete(oSettings, oSettings.oPreviousSearch);
                }
                else {
                    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
                    _fnCalculateEnd(oSettings);
                    _fnDraw(oSettings);
                }

                /* if there is an ajax source load the data */
                if (oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide) {
                    var aoData = [];
                    _fnServerParams(oSettings, aoData);
                    oSettings.fnServerData.call(oSettings.oInstance, oSettings.sAjaxSource, aoData, function (json) {
                        var aData = (oSettings.sAjaxDataProp !== "") ?
                            _fnGetObjectDataFn(oSettings.sAjaxDataProp)(json) : json;

                        /* Got the data - add it to the table */
                        for (i = 0; i < aData.length; i++) {
                            _fnAddData(oSettings, aData[i]);
                        }

                        /* Reset the init display for cookie saving. We've already done a filter, and
                         * therefore cleared it before. So we need to make it appear 'fresh'
                         */
                        oSettings.iInitDisplayStart = iAjaxStart;

                        if (oSettings.oFeatures.bSort) {
                            _fnSort(oSettings);
                        }
                        else {
                            oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
                            _fnCalculateEnd(oSettings);
                            _fnDraw(oSettings);
                        }

                        _fnProcessingDisplay(oSettings, false);
                        _fnInitComplete(oSettings, json);
                    }, oSettings);
                    return;
                }

                /* Server-side processing initialisation complete is done at the end of _fnDraw */
                if (!oSettings.oFeatures.bServerSide) {
                    _fnProcessingDisplay(oSettings, false);
                    _fnInitComplete(oSettings);
                }
            }


            /**
             * Draw the table for the first time, adding all required features
             *  @param {object} oSettings dataTables settings object
             *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
             *    with client-side processing (optional)
             *  @memberof DataTable#oApi
             */
            function _fnInitComplete(oSettings, json) {
                oSettings._bInitComplete = true;
                _fnCallbackFire(oSettings, 'aoInitComplete', 'init', [oSettings, json]);
            }


            /**
             * Language compatibility - when certain options are given, and others aren't, we
             * need to duplicate the values over, in order to provide backwards compatibility
             * with older language files.
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnLanguageCompat(oLanguage) {
                var oDefaults = DataTable.defaults.oLanguage;

                /* Backwards compatibility - if there is no sEmptyTable given, then use the same as
                 * sZeroRecords - assuming that is given.
                 */
                if (!oLanguage.sEmptyTable && oLanguage.sZeroRecords &&
                    oDefaults.sEmptyTable === "No data available in table") {
                    _fnMap(oLanguage, oLanguage, 'sZeroRecords', 'sEmptyTable');
                }

                /* Likewise with loading records */
                if (!oLanguage.sLoadingRecords && oLanguage.sZeroRecords &&
                    oDefaults.sLoadingRecords === "Loading...") {
                    _fnMap(oLanguage, oLanguage, 'sZeroRecords', 'sLoadingRecords');
                }
            }


            /**
             * Generate the node required for user display length changing
             *  @param {object} oSettings dataTables settings object
             *  @returns {node} Display length feature node
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlLength(oSettings) {
                if (oSettings.oScroll.bInfinite) {
                    return null;
                }

                /* This can be overruled by not using the _MENU_ var/macro in the language variable */
                var sName = 'name="' + oSettings.sTableId + '_length"';
                var sStdMenu = '<select size="1" ' + sName + '>';
                var i, iLen;
                var aLengthMenu = oSettings.aLengthMenu;

                if (aLengthMenu.length == 2 && typeof aLengthMenu[0] === 'object' &&
                    typeof aLengthMenu[1] === 'object') {
                    for (i = 0, iLen = aLengthMenu[0].length; i < iLen; i++) {
                        sStdMenu += '<option value="' + aLengthMenu[0][i] + '">' + aLengthMenu[1][i] + '</option>';
                    }
                }
                else {
                    for (i = 0, iLen = aLengthMenu.length; i < iLen; i++) {
                        sStdMenu += '<option value="' + aLengthMenu[i] + '">' + aLengthMenu[i] + '</option>';
                    }
                }
                sStdMenu += '</select>';

                var nLength = document.createElement('div');
                if (!oSettings.aanFeatures.l) {
                    nLength.id = oSettings.sTableId + '_length';
                }
                nLength.className = oSettings.oClasses.sLength;
                nLength.innerHTML = '<label>' + oSettings.oLanguage.sLengthMenu.replace('_MENU_', sStdMenu) + '</label>';

                /*
                 * Set the length to the current display length - thanks to Andrea Pavlovic for this fix,
                 * and Stefan Skopnik for fixing the fix!
                 */
                $('select option[value="' + oSettings._iDisplayLength + '"]', nLength).attr("selected", true);

                $('select', nLength).bind('change.DT', function (e) {
                    var iVal = $(this).val();

                    /* Update all other length options for the new display */
                    var n = oSettings.aanFeatures.l;
                    for (i = 0, iLen = n.length; i < iLen; i++) {
                        if (n[i] != this.parentNode) {
                            $('select', n[i]).val(iVal);
                        }
                    }

                    /* Redraw the table */
                    oSettings._iDisplayLength = parseInt(iVal, 10);
                    _fnCalculateEnd(oSettings);

                    /* If we have space to show extra rows (backing up from the end point - then do so */
                    if (oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay()) {
                        oSettings._iDisplayStart = oSettings.fnDisplayEnd() - oSettings._iDisplayLength;
                        if (oSettings._iDisplayStart < 0) {
                            oSettings._iDisplayStart = 0;
                        }
                    }

                    if (oSettings._iDisplayLength == -1) {
                        oSettings._iDisplayStart = 0;
                    }

                    _fnDraw(oSettings);
                });


                $('select', nLength).attr('aria-controls', oSettings.sTableId);

                return nLength;
            }


            /**
             * Recalculate the end point based on the start point
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnCalculateEnd(oSettings) {
                if (oSettings.oFeatures.bPaginate === false) {
                    oSettings._iDisplayEnd = oSettings.aiDisplay.length;
                }
                else {
                    /* Set the end point of the display - based on how many elements there are
                     * still to display
                     */
                    if (oSettings._iDisplayStart + oSettings._iDisplayLength > oSettings.aiDisplay.length ||
                        oSettings._iDisplayLength == -1) {
                        oSettings._iDisplayEnd = oSettings.aiDisplay.length;
                    }
                    else {
                        oSettings._iDisplayEnd = oSettings._iDisplayStart + oSettings._iDisplayLength;
                    }
                }
            }


            /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
             * Note that most of the paging logic is done in 
             * DataTable.ext.oPagination
             */

            /**
             * Generate the node required for default pagination
             *  @param {object} oSettings dataTables settings object
             *  @returns {node} Pagination feature node
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlPaginate(oSettings) {
                if (oSettings.oScroll.bInfinite) {
                    return null;
                }

                var nPaginate = document.createElement('div');
                nPaginate.className = oSettings.oClasses.sPaging + oSettings.sPaginationType;

                DataTable.ext.oPagination[ oSettings.sPaginationType ].fnInit(oSettings, nPaginate,
                    function (oSettings) {
                        _fnCalculateEnd(oSettings);
                        _fnDraw(oSettings);
                    }
                );

                /* Add a draw callback for the pagination on first instance, to update the paging display */
                if (!oSettings.aanFeatures.p) {
                    oSettings.aoDrawCallback.push({
                        "fn": function (oSettings) {
                            DataTable.ext.oPagination[ oSettings.sPaginationType ].fnUpdate(oSettings, function (oSettings) {
                                _fnCalculateEnd(oSettings);
                                _fnDraw(oSettings);
                            });
                        },
                        "sName": "pagination"
                    });
                }
                return nPaginate;
            }


            /**
             * Alter the display settings to change the page
             *  @param {object} oSettings dataTables settings object
             *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
             *    or page number to jump to (integer)
             *  @returns {bool} true page has changed, false - no change (no effect) eg 'first' on page 1
             *  @memberof DataTable#oApi
             */
            function _fnPageChange(oSettings, mAction) {
                var iOldStart = oSettings._iDisplayStart;

                if (typeof mAction === "number") {
                    oSettings._iDisplayStart = mAction * oSettings._iDisplayLength;
                    if (oSettings._iDisplayStart > oSettings.fnRecordsDisplay()) {
                        oSettings._iDisplayStart = 0;
                    }
                }
                else if (mAction == "first") {
                    oSettings._iDisplayStart = 0;
                }
                else if (mAction == "previous") {
                    oSettings._iDisplayStart = oSettings._iDisplayLength >= 0 ?
                        oSettings._iDisplayStart - oSettings._iDisplayLength :
                        0;

                    /* Correct for under-run */
                    if (oSettings._iDisplayStart < 0) {
                        oSettings._iDisplayStart = 0;
                    }
                }
                else if (mAction == "next") {
                    if (oSettings._iDisplayLength >= 0) {
                        /* Make sure we are not over running the display array */
                        if (oSettings._iDisplayStart + oSettings._iDisplayLength < oSettings.fnRecordsDisplay()) {
                            oSettings._iDisplayStart += oSettings._iDisplayLength;
                        }
                    }
                    else {
                        oSettings._iDisplayStart = 0;
                    }
                }
                else if (mAction == "last") {
                    if (oSettings._iDisplayLength >= 0) {
                        var iPages = parseInt((oSettings.fnRecordsDisplay() - 1) / oSettings._iDisplayLength, 10) + 1;
                        oSettings._iDisplayStart = (iPages - 1) * oSettings._iDisplayLength;
                    }
                    else {
                        oSettings._iDisplayStart = 0;
                    }
                }
                else {
                    _fnLog(oSettings, 0, "Unknown paging action: " + mAction);
                }
                $(oSettings.oInstance).trigger('page', oSettings);

                return iOldStart != oSettings._iDisplayStart;
            }


            /**
             * Generate the node required for the processing node
             *  @param {object} oSettings dataTables settings object
             *  @returns {node} Processing element
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlProcessing(oSettings) {
                var nProcessing = document.createElement('div');

                if (!oSettings.aanFeatures.r) {
                    nProcessing.id = oSettings.sTableId + '_processing';
                }
                nProcessing.innerHTML = oSettings.oLanguage.sProcessing;
                nProcessing.className = oSettings.oClasses.sProcessing;
                oSettings.nTable.parentNode.insertBefore(nProcessing, oSettings.nTable);

                return nProcessing;
            }


            /**
             * Display or hide the processing indicator
             *  @param {object} oSettings dataTables settings object
             *  @param {bool} bShow Show the processing indicator (true) or not (false)
             *  @memberof DataTable#oApi
             */
            function _fnProcessingDisplay(oSettings, bShow) {
                if (oSettings.oFeatures.bProcessing) {
                    var an = oSettings.aanFeatures.r;
                    for (var i = 0, iLen = an.length; i < iLen; i++) {
                        an[i].style.visibility = bShow ? "visible" : "hidden";
                    }
                }

                $(oSettings.oInstance).trigger('processing', [oSettings, bShow]);
            }

            /**
             * Add any control elements for the table - specifically scrolling
             *  @param {object} oSettings dataTables settings object
             *  @returns {node} Node to add to the DOM
             *  @memberof DataTable#oApi
             */
            function _fnFeatureHtmlTable(oSettings) {
                /* Check if scrolling is enabled or not - if not then leave the DOM unaltered */
                if (oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "") {
                    return oSettings.nTable;
                }

                /*
                 * The HTML structure that we want to generate in this function is:
                 *  div - nScroller
                 *    div - nScrollHead
                 *      div - nScrollHeadInner
                 *        table - nScrollHeadTable
                 *          thead - nThead
                 *    div - nScrollBody
                 *      table - oSettings.nTable
                 *        thead - nTheadSize
                 *        tbody - nTbody
                 *    div - nScrollFoot
                 *      div - nScrollFootInner
                 *        table - nScrollFootTable
                 *          tfoot - nTfoot
                 */
                var
                    nScroller = document.createElement('div'),
                    nScrollHead = document.createElement('div'),
                    nScrollHeadInner = document.createElement('div'),
                    nScrollBody = document.createElement('div'),
                    nScrollFoot = document.createElement('div'),
                    nScrollFootInner = document.createElement('div'),
                    nScrollHeadTable = oSettings.nTable.cloneNode(false),
                    nScrollFootTable = oSettings.nTable.cloneNode(false),
                    nThead = oSettings.nTable.getElementsByTagName('thead')[0],
                    nTfoot = oSettings.nTable.getElementsByTagName('tfoot').length === 0 ? null :
                        oSettings.nTable.getElementsByTagName('tfoot')[0],
                    oClasses = oSettings.oClasses;

                nScrollHead.appendChild(nScrollHeadInner);
                nScrollFoot.appendChild(nScrollFootInner);
                nScrollBody.appendChild(oSettings.nTable);
                nScroller.appendChild(nScrollHead);
                nScroller.appendChild(nScrollBody);
                nScrollHeadInner.appendChild(nScrollHeadTable);
                nScrollHeadTable.appendChild(nThead);
                if (nTfoot !== null) {
                    nScroller.appendChild(nScrollFoot);
                    nScrollFootInner.appendChild(nScrollFootTable);
                    nScrollFootTable.appendChild(nTfoot);
                }

                nScroller.className = oClasses.sScrollWrapper;
                nScrollHead.className = oClasses.sScrollHead;
                nScrollHeadInner.className = oClasses.sScrollHeadInner;
                nScrollBody.className = oClasses.sScrollBody;
                nScrollFoot.className = oClasses.sScrollFoot;
                nScrollFootInner.className = oClasses.sScrollFootInner;

                if (oSettings.oScroll.bAutoCss) {
                    nScrollHead.style.overflow = "hidden";
                    nScrollHead.style.position = "relative";
                    nScrollFoot.style.overflow = "hidden";
                    nScrollBody.style.overflow = "auto";
                }

                nScrollHead.style.border = "0";
                nScrollHead.style.width = "100%";
                nScrollFoot.style.border = "0";
                nScrollHeadInner.style.width = oSettings.oScroll.sXInner !== "" ?
                    oSettings.oScroll.sXInner : "100%";
                /* will be overwritten */

                /* Modify attributes to respect the clones */
                nScrollHeadTable.removeAttribute('id');
                nScrollHeadTable.style.marginLeft = "0";
                oSettings.nTable.style.marginLeft = "0";
                if (nTfoot !== null) {
                    nScrollFootTable.removeAttribute('id');
                    nScrollFootTable.style.marginLeft = "0";
                }

                /* Move caption elements from the body to the header, footer or leave where it is
                 * depending on the configuration. Note that the DTD says there can be only one caption */
                var nCaption = $(oSettings.nTable).children('caption');
                if (nCaption.length > 0) {
                    nCaption = nCaption[0];
                    if (nCaption._captionSide === "top") {
                        nScrollHeadTable.appendChild(nCaption);
                    }
                    else if (nCaption._captionSide === "bottom" && nTfoot) {
                        nScrollFootTable.appendChild(nCaption);
                    }
                }

                /*
                 * Sizing
                 */
                /* When x-scrolling add the width and a scroller to move the header with the body */
                if (oSettings.oScroll.sX !== "") {
                    nScrollHead.style.width = _fnStringToCss(oSettings.oScroll.sX);
                    nScrollBody.style.width = _fnStringToCss(oSettings.oScroll.sX);

                    if (nTfoot !== null) {
                        nScrollFoot.style.width = _fnStringToCss(oSettings.oScroll.sX);
                    }

                    /* When the body is scrolled, then we also want to scroll the headers */
                    $(nScrollBody).scroll(function (e) {
                        nScrollHead.scrollLeft = this.scrollLeft;

                        if (nTfoot !== null) {
                            nScrollFoot.scrollLeft = this.scrollLeft;
                        }
                    });
                }

                /* When yscrolling, add the height */
                if (oSettings.oScroll.sY !== "") {
                    nScrollBody.style.height = _fnStringToCss(oSettings.oScroll.sY);
                }

                /* Redraw - align columns across the tables */
                oSettings.aoDrawCallback.push({
                    "fn": _fnScrollDraw,
                    "sName": "scrolling"
                });

                /* Infinite scrolling event handlers */
                if (oSettings.oScroll.bInfinite) {
                    $(nScrollBody).scroll(function () {
                        /* Use a blocker to stop scrolling from loading more data while other data is still loading */
                        if (!oSettings.bDrawing && $(this).scrollTop() !== 0) {
                            /* Check if we should load the next data set */
                            if ($(this).scrollTop() + $(this).height() >
                                $(oSettings.nTable).height() - oSettings.oScroll.iLoadGap) {
                                /* Only do the redraw if we have to - we might be at the end of the data */
                                if (oSettings.fnDisplayEnd() < oSettings.fnRecordsDisplay()) {
                                    _fnPageChange(oSettings, 'next');
                                    _fnCalculateEnd(oSettings);
                                    _fnDraw(oSettings);
                                }
                            }
                        }
                    });
                }

                oSettings.nScrollHead = nScrollHead;
                oSettings.nScrollFoot = nScrollFoot;

                return nScroller;
            }


            /**
             * Update the various tables for resizing. It's a bit of a pig this function, but
             * basically the idea to:
             *   1. Re-create the table inside the scrolling div
             *   2. Take live measurements from the DOM
             *   3. Apply the measurements
             *   4. Clean up
             *  @param {object} o dataTables settings object
             *  @returns {node} Node to add to the DOM
             *  @memberof DataTable#oApi
             */
            function _fnScrollDraw(o) {
                var
                    nScrollHeadInner = o.nScrollHead.getElementsByTagName('div')[0],
                    nScrollHeadTable = nScrollHeadInner.getElementsByTagName('table')[0],
                    nScrollBody = o.nTable.parentNode,
                    i, iLen, j, jLen, anHeadToSize, anHeadSizers, anFootSizers, anFootToSize, oStyle, iVis,
                    nTheadSize, nTfootSize,
                    iWidth, aApplied = [], aAppliedFooter = [], iSanityWidth,
                    nScrollFootInner = (o.nTFoot !== null) ? o.nScrollFoot.getElementsByTagName('div')[0] : null,
                    nScrollFootTable = (o.nTFoot !== null) ? nScrollFootInner.getElementsByTagName('table')[0] : null,
                    ie67 = o.oBrowser.bScrollOversize,
                    zeroOut = function (nSizer) {
                        oStyle = nSizer.style;
                        oStyle.paddingTop = "0";
                        oStyle.paddingBottom = "0";
                        oStyle.borderTopWidth = "0";
                        oStyle.borderBottomWidth = "0";
                        oStyle.height = 0;
                    };

                /*
                 * 1. Re-create the table inside the scrolling div
                 */

                /* Remove the old minimised thead and tfoot elements in the inner table */
                $(o.nTable).children('thead, tfoot').remove();

                /* Clone the current header and footer elements and then place it into the inner table */
                nTheadSize = $(o.nTHead).clone()[0];
                o.nTable.insertBefore(nTheadSize, o.nTable.childNodes[0]);
                anHeadToSize = o.nTHead.getElementsByTagName('tr');
                anHeadSizers = nTheadSize.getElementsByTagName('tr');

                if (o.nTFoot !== null) {
                    nTfootSize = $(o.nTFoot).clone()[0];
                    o.nTable.insertBefore(nTfootSize, o.nTable.childNodes[1]);
                    anFootToSize = o.nTFoot.getElementsByTagName('tr');
                    anFootSizers = nTfootSize.getElementsByTagName('tr');
                }

                /*
                 * 2. Take live measurements from the DOM - do not alter the DOM itself!
                 */

                /* Remove old sizing and apply the calculated column widths
                 * Get the unique column headers in the newly created (cloned) header. We want to apply the
                 * calculated sizes to this header
                 */
                if (o.oScroll.sX === "") {
                    nScrollBody.style.width = '100%';
                    nScrollHeadInner.parentNode.style.width = '100%';
                }

                var nThs = _fnGetUniqueThs(o, nTheadSize);
                for (i = 0, iLen = nThs.length; i < iLen; i++) {
                    iVis = _fnVisibleToColumnIndex(o, i);
                    nThs[i].style.width = o.aoColumns[iVis].sWidth;
                }

                if (o.nTFoot !== null) {
                    _fnApplyToChildren(function (n) {
                        n.style.width = "";
                    }, anFootSizers);
                }

                // If scroll collapse is enabled, when we put the headers back into the body for sizing, we
                // will end up forcing the scrollbar to appear, making our measurements wrong for when we
                // then hide it (end of this function), so add the header height to the body scroller.
                if (o.oScroll.bCollapse && o.oScroll.sY !== "") {
                    nScrollBody.style.height = (nScrollBody.offsetHeight + o.nTHead.offsetHeight) + "px";
                }

                /* Size the table as a whole */
                iSanityWidth = $(o.nTable).outerWidth();
                if (o.oScroll.sX === "") {
                    /* No x scrolling */
                    o.nTable.style.width = "100%";

                    /* I know this is rubbish - but IE7 will make the width of the table when 100% include
                     * the scrollbar - which is shouldn't. When there is a scrollbar we need to take this
                     * into account.
                     */
                    if (ie67 && ($('tbody', nScrollBody).height() > nScrollBody.offsetHeight ||
                        $(nScrollBody).css('overflow-y') == "scroll")) {
                        o.nTable.style.width = _fnStringToCss($(o.nTable).outerWidth() - o.oScroll.iBarWidth);
                    }
                }
                else {
                    if (o.oScroll.sXInner !== "") {
                        /* x scroll inner has been given - use it */
                        o.nTable.style.width = _fnStringToCss(o.oScroll.sXInner);
                    }
                    else if (iSanityWidth == $(nScrollBody).width() &&
                        $(nScrollBody).height() < $(o.nTable).height()) {
                        /* There is y-scrolling - try to take account of the y scroll bar */
                        o.nTable.style.width = _fnStringToCss(iSanityWidth - o.oScroll.iBarWidth);
                        if ($(o.nTable).outerWidth() > iSanityWidth - o.oScroll.iBarWidth) {
                            /* Not possible to take account of it */
                            o.nTable.style.width = _fnStringToCss(iSanityWidth);
                        }
                    }
                    else {
                        /* All else fails */
                        o.nTable.style.width = _fnStringToCss(iSanityWidth);
                    }
                }

                /* Recalculate the sanity width - now that we've applied the required width, before it was
                 * a temporary variable. This is required because the column width calculation is done
                 * before this table DOM is created.
                 */
                iSanityWidth = $(o.nTable).outerWidth();

                /* We want the hidden header to have zero height, so remove padding and borders. Then
                 * set the width based on the real headers
                 */

                // Apply all styles in one pass. Invalidates layout only once because we don't read any 
                // DOM properties.
                _fnApplyToChildren(zeroOut, anHeadSizers);

                // Read all widths in next pass. Forces layout only once because we do not change 
                // any DOM properties.
                _fnApplyToChildren(function (nSizer) {
                    aApplied.push(_fnStringToCss($(nSizer).width()));
                }, anHeadSizers);

                // Apply all widths in final pass. Invalidates layout only once because we do not
                // read any DOM properties.
                _fnApplyToChildren(function (nToSize, i) {
                    nToSize.style.width = aApplied[i];
                }, anHeadToSize);

                $(anHeadSizers).height(0);

                /* Same again with the footer if we have one */
                if (o.nTFoot !== null) {
                    _fnApplyToChildren(zeroOut, anFootSizers);

                    _fnApplyToChildren(function (nSizer) {
                        aAppliedFooter.push(_fnStringToCss($(nSizer).width()));
                    }, anFootSizers);

                    _fnApplyToChildren(function (nToSize, i) {
                        nToSize.style.width = aAppliedFooter[i];
                    }, anFootToSize);

                    $(anFootSizers).height(0);
                }

                /*
                 * 3. Apply the measurements
                 */

                /* "Hide" the header and footer that we used for the sizing. We want to also fix their width
                 * to what they currently are
                 */
                _fnApplyToChildren(function (nSizer, i) {
                    nSizer.innerHTML = "";
                    nSizer.style.width = aApplied[i];
                }, anHeadSizers);

                if (o.nTFoot !== null) {
                    _fnApplyToChildren(function (nSizer, i) {
                        nSizer.innerHTML = "";
                        nSizer.style.width = aAppliedFooter[i];
                    }, anFootSizers);
                }

                /* Sanity check that the table is of a sensible width. If not then we are going to get
                 * misalignment - try to prevent this by not allowing the table to shrink below its min width
                 */
                if ($(o.nTable).outerWidth() < iSanityWidth) {
                    /* The min width depends upon if we have a vertical scrollbar visible or not */
                    var iCorrection = ((nScrollBody.scrollHeight > nScrollBody.offsetHeight ||
                        $(nScrollBody).css('overflow-y') == "scroll")) ?
                        iSanityWidth + o.oScroll.iBarWidth : iSanityWidth;

                    /* IE6/7 are a law unto themselves... */
                    if (ie67 && (nScrollBody.scrollHeight >
                        nScrollBody.offsetHeight || $(nScrollBody).css('overflow-y') == "scroll")) {
                        o.nTable.style.width = _fnStringToCss(iCorrection - o.oScroll.iBarWidth);
                    }

                    /* Apply the calculated minimum width to the table wrappers */
                    nScrollBody.style.width = _fnStringToCss(iCorrection);
                    o.nScrollHead.style.width = _fnStringToCss(iCorrection);

                    if (o.nTFoot !== null) {
                        o.nScrollFoot.style.width = _fnStringToCss(iCorrection);
                    }

                    /* And give the user a warning that we've stopped the table getting too small */
                    if (o.oScroll.sX === "") {
                        _fnLog(o, 1, "The table cannot fit into the current element which will cause column" +
                            " misalignment. The table has been drawn at its minimum possible width.");
                    }
                    else if (o.oScroll.sXInner !== "") {
                        _fnLog(o, 1, "The table cannot fit into the current element which will cause column" +
                            " misalignment. Increase the sScrollXInner value or remove it to allow automatic" +
                            " calculation");
                    }
                }
                else {
                    nScrollBody.style.width = _fnStringToCss('100%');
                    o.nScrollHead.style.width = _fnStringToCss('100%');

                    if (o.nTFoot !== null) {
                        o.nScrollFoot.style.width = _fnStringToCss('100%');
                    }
                }


                /*
                 * 4. Clean up
                 */
                if (o.oScroll.sY === "") {
                    /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
                     * the scrollbar height from the visible display, rather than adding it on. We need to
                     * set the height in order to sort this. Don't want to do it in any other browsers.
                     */
                    if (ie67) {
                        nScrollBody.style.height = _fnStringToCss(o.nTable.offsetHeight + o.oScroll.iBarWidth);
                    }
                }

                if (o.oScroll.sY !== "" && o.oScroll.bCollapse) {
                    nScrollBody.style.height = _fnStringToCss(o.oScroll.sY);

                    var iExtra = (o.oScroll.sX !== "" && o.nTable.offsetWidth > nScrollBody.offsetWidth) ?
                        o.oScroll.iBarWidth : 0;
                    if (o.nTable.offsetHeight < nScrollBody.offsetHeight) {
                        nScrollBody.style.height = _fnStringToCss(o.nTable.offsetHeight + iExtra);
                    }
                }

                /* Finally set the width's of the header and footer tables */
                var iOuterWidth = $(o.nTable).outerWidth();
                nScrollHeadTable.style.width = _fnStringToCss(iOuterWidth);
                nScrollHeadInner.style.width = _fnStringToCss(iOuterWidth);

                // Figure out if there are scrollbar present - if so then we need a the header and footer to
                // provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
                var bScrolling = $(o.nTable).height() > nScrollBody.clientHeight || $(nScrollBody).css('overflow-y') == "scroll";
                nScrollHeadInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth + "px" : "0px";

                if (o.nTFoot !== null) {
                    nScrollFootTable.style.width = _fnStringToCss(iOuterWidth);
                    nScrollFootInner.style.width = _fnStringToCss(iOuterWidth);
                    nScrollFootInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth + "px" : "0px";
                }

                /* Adjust the position of the header in case we loose the y-scrollbar */
                $(nScrollBody).scroll();

                /* If sorting or filtering has occurred, jump the scrolling back to the top */
                if (o.bSorted || o.bFiltered) {
                    nScrollBody.scrollTop = 0;
                }
            }


            /**
             * Apply a given function to the display child nodes of an element array (typically
             * TD children of TR rows
             *  @param {function} fn Method to apply to the objects
             *  @param array {nodes} an1 List of elements to look through for display children
             *  @param array {nodes} an2 Another list (identical structure to the first) - optional
             *  @memberof DataTable#oApi
             */
            function _fnApplyToChildren(fn, an1, an2) {
                var index = 0, i = 0, iLen = an1.length;
                var nNode1, nNode2;

                while (i < iLen) {
                    nNode1 = an1[i].firstChild;
                    nNode2 = an2 ? an2[i].firstChild : null;
                    while (nNode1) {
                        if (nNode1.nodeType === 1) {
                            if (an2) {
                                fn(nNode1, nNode2, index);
                            }
                            else {
                                fn(nNode1, index);
                            }
                            index++;
                        }
                        nNode1 = nNode1.nextSibling;
                        nNode2 = an2 ? nNode2.nextSibling : null;
                    }
                    i++;
                }
            }

            /**
             * Convert a CSS unit width to pixels (e.g. 2em)
             *  @param {string} sWidth width to be converted
             *  @param {node} nParent parent to get the with for (required for relative widths) - optional
             *  @returns {int} iWidth width in pixels
             *  @memberof DataTable#oApi
             */
            function _fnConvertToWidth(sWidth, nParent) {
                if (!sWidth || sWidth === null || sWidth === '') {
                    return 0;
                }

                if (!nParent) {
                    nParent = document.body;
                }

                var iWidth;
                var nTmp = document.createElement("div");
                nTmp.style.width = _fnStringToCss(sWidth);

                nParent.appendChild(nTmp);
                iWidth = nTmp.offsetWidth;
                nParent.removeChild(nTmp);

                return ( iWidth );
            }


            /**
             * Calculate the width of columns for the table
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnCalculateColumnWidths(oSettings) {
                var iTableWidth = oSettings.nTable.offsetWidth;
                var iUserInputs = 0;
                var iTmpWidth;
                var iVisibleColumns = 0;
                var iColums = oSettings.aoColumns.length;
                var i, iIndex, iCorrector, iWidth;
                var oHeaders = $('th', oSettings.nTHead);
                var widthAttr = oSettings.nTable.getAttribute('width');
                var nWrapper = oSettings.nTable.parentNode;

                /* Convert any user input sizes into pixel sizes */
                for (i = 0; i < iColums; i++) {
                    if (oSettings.aoColumns[i].bVisible) {
                        iVisibleColumns++;

                        if (oSettings.aoColumns[i].sWidth !== null) {
                            iTmpWidth = _fnConvertToWidth(oSettings.aoColumns[i].sWidthOrig,
                                nWrapper);
                            if (iTmpWidth !== null) {
                                oSettings.aoColumns[i].sWidth = _fnStringToCss(iTmpWidth);
                            }

                            iUserInputs++;
                        }
                    }
                }

                /* If the number of columns in the DOM equals the number that we have to process in 
                 * DataTables, then we can use the offsets that are created by the web-browser. No custom 
                 * sizes can be set in order for this to happen, nor scrolling used
                 */
                if (iColums == oHeaders.length && iUserInputs === 0 && iVisibleColumns == iColums &&
                    oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "") {
                    for (i = 0; i < oSettings.aoColumns.length; i++) {
                        iTmpWidth = $(oHeaders[i]).width();
                        if (iTmpWidth !== null) {
                            oSettings.aoColumns[i].sWidth = _fnStringToCss(iTmpWidth);
                        }
                    }
                }
                else {
                    /* Otherwise we are going to have to do some calculations to get the width of each column.
                     * Construct a 1 row table with the widest node in the data, and any user defined widths,
                     * then insert it into the DOM and allow the browser to do all the hard work of
                     * calculating table widths.
                     */
                    var
                        nCalcTmp = oSettings.nTable.cloneNode(false),
                        nTheadClone = oSettings.nTHead.cloneNode(true),
                        nBody = document.createElement('tbody'),
                        nTr = document.createElement('tr'),
                        nDivSizing;

                    nCalcTmp.removeAttribute("id");
                    nCalcTmp.appendChild(nTheadClone);
                    if (oSettings.nTFoot !== null) {
                        nCalcTmp.appendChild(oSettings.nTFoot.cloneNode(true));
                        _fnApplyToChildren(function (n) {
                            n.style.width = "";
                        }, nCalcTmp.getElementsByTagName('tr'));
                    }

                    nCalcTmp.appendChild(nBody);
                    nBody.appendChild(nTr);

                    /* Remove any sizing that was previously applied by the styles */
                    var jqColSizing = $('thead th', nCalcTmp);
                    if (jqColSizing.length === 0) {
                        jqColSizing = $('tbody tr:eq(0)>td', nCalcTmp);
                    }

                    /* Apply custom sizing to the cloned header */
                    var nThs = _fnGetUniqueThs(oSettings, nTheadClone);
                    iCorrector = 0;
                    for (i = 0; i < iColums; i++) {
                        var oColumn = oSettings.aoColumns[i];
                        if (oColumn.bVisible && oColumn.sWidthOrig !== null && oColumn.sWidthOrig !== "") {
                            nThs[i - iCorrector].style.width = _fnStringToCss(oColumn.sWidthOrig);
                        }
                        else if (oColumn.bVisible) {
                            nThs[i - iCorrector].style.width = "";
                        }
                        else {
                            iCorrector++;
                        }
                    }

                    /* Find the biggest td for each column and put it into the table */
                    for (i = 0; i < iColums; i++) {
                        if (oSettings.aoColumns[i].bVisible) {
                            var nTd = _fnGetWidestNode(oSettings, i);
                            if (nTd !== null) {
                                nTd = nTd.cloneNode(true);
                                if (oSettings.aoColumns[i].sContentPadding !== "") {
                                    nTd.innerHTML += oSettings.aoColumns[i].sContentPadding;
                                }
                                nTr.appendChild(nTd);
                            }
                        }
                    }

                    /* Build the table and 'display' it */
                    nWrapper.appendChild(nCalcTmp);

                    /* When scrolling (X or Y) we want to set the width of the table as appropriate. However,
                     * when not scrolling leave the table width as it is. This results in slightly different,
                     * but I think correct behaviour
                     */
                    if (oSettings.oScroll.sX !== "" && oSettings.oScroll.sXInner !== "") {
                        nCalcTmp.style.width = _fnStringToCss(oSettings.oScroll.sXInner);
                    }
                    else if (oSettings.oScroll.sX !== "") {
                        nCalcTmp.style.width = "";
                        if ($(nCalcTmp).width() < nWrapper.offsetWidth) {
                            nCalcTmp.style.width = _fnStringToCss(nWrapper.offsetWidth);
                        }
                    }
                    else if (oSettings.oScroll.sY !== "") {
                        nCalcTmp.style.width = _fnStringToCss(nWrapper.offsetWidth);
                    }
                    else if (widthAttr) {
                        nCalcTmp.style.width = _fnStringToCss(widthAttr);
                    }
                    nCalcTmp.style.visibility = "hidden";

                    /* Scrolling considerations */
                    _fnScrollingWidthAdjust(oSettings, nCalcTmp);

                    /* Read the width's calculated by the browser and store them for use by the caller. We
                     * first of all try to use the elements in the body, but it is possible that there are
                     * no elements there, under which circumstances we use the header elements
                     */
                    var oNodes = $("tbody tr:eq(0)", nCalcTmp).children();
                    if (oNodes.length === 0) {
                        oNodes = _fnGetUniqueThs(oSettings, $('thead', nCalcTmp)[0]);
                    }

                    /* Browsers need a bit of a hand when a width is assigned to any columns when 
                     * x-scrolling as they tend to collapse the table to the min-width, even if
                     * we sent the column widths. So we need to keep track of what the table width
                     * should be by summing the user given values, and the automatic values
                     */
                    if (oSettings.oScroll.sX !== "") {
                        var iTotal = 0;
                        iCorrector = 0;
                        for (i = 0; i < oSettings.aoColumns.length; i++) {
                            if (oSettings.aoColumns[i].bVisible) {
                                if (oSettings.aoColumns[i].sWidthOrig === null) {
                                    iTotal += $(oNodes[iCorrector]).outerWidth();
                                }
                                else {
                                    iTotal += parseInt(oSettings.aoColumns[i].sWidth.replace('px', ''), 10) +
                                        ($(oNodes[iCorrector]).outerWidth() - $(oNodes[iCorrector]).width());
                                }
                                iCorrector++;
                            }
                        }

                        nCalcTmp.style.width = _fnStringToCss(iTotal);
                        oSettings.nTable.style.width = _fnStringToCss(iTotal);
                    }

                    iCorrector = 0;
                    for (i = 0; i < oSettings.aoColumns.length; i++) {
                        if (oSettings.aoColumns[i].bVisible) {
                            iWidth = $(oNodes[iCorrector]).width();
                            if (iWidth !== null && iWidth > 0) {
                                oSettings.aoColumns[i].sWidth = _fnStringToCss(iWidth);
                            }
                            iCorrector++;
                        }
                    }

                    var cssWidth = $(nCalcTmp).css('width');
                    oSettings.nTable.style.width = (cssWidth.indexOf('%') !== -1) ?
                        cssWidth : _fnStringToCss($(nCalcTmp).outerWidth());
                    nCalcTmp.parentNode.removeChild(nCalcTmp);
                }

                if (widthAttr) {
                    oSettings.nTable.style.width = _fnStringToCss(widthAttr);
                }
            }


            /**
             * Adjust a table's width to take account of scrolling
             *  @param {object} oSettings dataTables settings object
             *  @param {node} n table node
             *  @memberof DataTable#oApi
             */
            function _fnScrollingWidthAdjust(oSettings, n) {
                if (oSettings.oScroll.sX === "" && oSettings.oScroll.sY !== "") {
                    /* When y-scrolling only, we want to remove the width of the scroll bar so the table
                     * + scroll bar will fit into the area avaialble.
                     */
                    var iOrigWidth = $(n).width();
                    n.style.width = _fnStringToCss($(n).outerWidth() - oSettings.oScroll.iBarWidth);
                }
                else if (oSettings.oScroll.sX !== "") {
                    /* When x-scrolling both ways, fix the table at it's current size, without adjusting */
                    n.style.width = _fnStringToCss($(n).outerWidth());
                }
            }


            /**
             * Get the widest node
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iCol column of interest
             *  @returns {node} widest table node
             *  @memberof DataTable#oApi
             */
            function _fnGetWidestNode(oSettings, iCol) {
                var iMaxIndex = _fnGetMaxLenString(oSettings, iCol);
                if (iMaxIndex < 0) {
                    return null;
                }

                if (oSettings.aoData[iMaxIndex].nTr === null) {
                    var n = document.createElement('td');
                    n.innerHTML = _fnGetCellData(oSettings, iMaxIndex, iCol, '');
                    return n;
                }
                return _fnGetTdNodes(oSettings, iMaxIndex)[iCol];
            }


            /**
             * Get the maximum strlen for each data column
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iCol column of interest
             *  @returns {string} max string length for each column
             *  @memberof DataTable#oApi
             */
            function _fnGetMaxLenString(oSettings, iCol) {
                var iMax = -1;
                var iMaxIndex = -1;

                for (var i = 0; i < oSettings.aoData.length; i++) {
                    var s = _fnGetCellData(oSettings, i, iCol, 'display') + "";
                    s = s.replace(/<.*?>/g, "");
                    if (s.length > iMax) {
                        iMax = s.length;
                        iMaxIndex = i;
                    }
                }

                return iMaxIndex;
            }


            /**
             * Append a CSS unit (only if required) to a string
             *  @param {array} aArray1 first array
             *  @param {array} aArray2 second array
             *  @returns {int} 0 if match, 1 if length is different, 2 if no match
             *  @memberof DataTable#oApi
             */
            function _fnStringToCss(s) {
                if (s === null) {
                    return "0px";
                }

                if (typeof s == 'number') {
                    if (s < 0) {
                        return "0px";
                    }
                    return s + "px";
                }

                /* Check if the last character is not 0-9 */
                var c = s.charCodeAt(s.length - 1);
                if (c < 0x30 || c > 0x39) {
                    return s;
                }
                return s + "px";
            }


            /**
             * Get the width of a scroll bar in this browser being used
             *  @returns {int} width in pixels
             *  @memberof DataTable#oApi
             */
            function _fnScrollBarWidth() {
                var inner = document.createElement('p');
                var style = inner.style;
                style.width = "100%";
                style.height = "200px";
                style.padding = "0px";

                var outer = document.createElement('div');
                style = outer.style;
                style.position = "absolute";
                style.top = "0px";
                style.left = "0px";
                style.visibility = "hidden";
                style.width = "200px";
                style.height = "150px";
                style.padding = "0px";
                style.overflow = "hidden";
                outer.appendChild(inner);

                document.body.appendChild(outer);
                var w1 = inner.offsetWidth;
                outer.style.overflow = 'scroll';
                var w2 = inner.offsetWidth;
                if (w1 == w2) {
                    w2 = outer.clientWidth;
                }

                document.body.removeChild(outer);
                return (w1 - w2);
            }

            /**
             * Change the order of the table
             *  @param {object} oSettings dataTables settings object
             *  @param {bool} bApplyClasses optional - should we apply classes or not
             *  @memberof DataTable#oApi
             */
            function _fnSort(oSettings, bApplyClasses) {
                var
                    i, iLen, j, jLen, k, kLen,
                    sDataType, nTh,
                    aaSort = [],
                    aiOrig = [],
                    oSort = DataTable.ext.oSort,
                    aoData = oSettings.aoData,
                    aoColumns = oSettings.aoColumns,
                    oAria = oSettings.oLanguage.oAria;

                /* No sorting required if server-side or no sorting array */
                if (!oSettings.oFeatures.bServerSide &&
                    (oSettings.aaSorting.length !== 0 || oSettings.aaSortingFixed !== null)) {
                    aaSort = ( oSettings.aaSortingFixed !== null ) ?
                        oSettings.aaSortingFixed.concat(oSettings.aaSorting) :
                        oSettings.aaSorting.slice();

                    /* If there is a sorting data type, and a function belonging to it, then we need to
                     * get the data from the developer's function and apply it for this column
                     */
                    for (i = 0; i < aaSort.length; i++) {
                        var iColumn = aaSort[i][0];
                        var iVisColumn = _fnColumnIndexToVisible(oSettings, iColumn);
                        sDataType = oSettings.aoColumns[ iColumn ].sSortDataType;
                        if (DataTable.ext.afnSortData[sDataType]) {
                            var aData = DataTable.ext.afnSortData[sDataType].call(
                                oSettings.oInstance, oSettings, iColumn, iVisColumn
                            );
                            if (aData.length === aoData.length) {
                                for (j = 0, jLen = aoData.length; j < jLen; j++) {
                                    _fnSetCellData(oSettings, j, iColumn, aData[j]);
                                }
                            }
                            else {
                                _fnLog(oSettings, 0, "Returned data sort array (col " + iColumn + ") is the wrong length");
                            }
                        }
                    }

                    /* Create a value - key array of the current row positions such that we can use their
                     * current position during the sort, if values match, in order to perform stable sorting
                     */
                    for (i = 0, iLen = oSettings.aiDisplayMaster.length; i < iLen; i++) {
                        aiOrig[ oSettings.aiDisplayMaster[i] ] = i;
                    }

                    /* Build an internal data array which is specific to the sort, so we can get and prep
                     * the data to be sorted only once, rather than needing to do it every time the sorting
                     * function runs. This make the sorting function a very simple comparison
                     */
                    var iSortLen = aaSort.length;
                    var fnSortFormat, aDataSort;
                    for (i = 0, iLen = aoData.length; i < iLen; i++) {
                        for (j = 0; j < iSortLen; j++) {
                            aDataSort = aoColumns[ aaSort[j][0] ].aDataSort;

                            for (k = 0, kLen = aDataSort.length; k < kLen; k++) {
                                sDataType = aoColumns[ aDataSort[k] ].sType;
                                fnSortFormat = oSort[ (sDataType ? sDataType : 'string') + "-pre" ];

                                aoData[i]._aSortData[ aDataSort[k] ] = fnSortFormat ?
                                    fnSortFormat(_fnGetCellData(oSettings, i, aDataSort[k], 'sort')) :
                                    _fnGetCellData(oSettings, i, aDataSort[k], 'sort');
                            }
                        }
                    }

                    /* Do the sort - here we want multi-column sorting based on a given data source (column)
                     * and sorting function (from oSort) in a certain direction. It's reasonably complex to
                     * follow on it's own, but this is what we want (example two column sorting):
                     *  fnLocalSorting = function(a,b){
                     *  	var iTest;
                     *  	iTest = oSort['string-asc']('data11', 'data12');
                     *  	if (iTest !== 0)
                     *  		return iTest;
                     *    iTest = oSort['numeric-desc']('data21', 'data22');
                     *    if (iTest !== 0)
                     *  		return iTest;
                     *  	return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
                     *  }
                     * Basically we have a test for each sorting column, if the data in that column is equal,
                     * test the next column. If all columns match, then we use a numeric sort on the row 
                     * positions in the original data array to provide a stable sort.
                     */
                    oSettings.aiDisplayMaster.sort(function (a, b) {
                        var k, l, lLen, iTest, aDataSort, sDataType;
                        for (k = 0; k < iSortLen; k++) {
                            aDataSort = aoColumns[ aaSort[k][0] ].aDataSort;

                            for (l = 0, lLen = aDataSort.length; l < lLen; l++) {
                                sDataType = aoColumns[ aDataSort[l] ].sType;

                                iTest = oSort[ (sDataType ? sDataType : 'string') + "-" + aaSort[k][1] ](
                                    aoData[a]._aSortData[ aDataSort[l] ],
                                    aoData[b]._aSortData[ aDataSort[l] ]
                                );

                                if (iTest !== 0) {
                                    return iTest;
                                }
                            }
                        }

                        return oSort['numeric-asc'](aiOrig[a], aiOrig[b]);
                    });
                }

                /* Alter the sorting classes to take account of the changes */
                if ((bApplyClasses === undefined || bApplyClasses) && !oSettings.oFeatures.bDeferRender) {
                    _fnSortingClasses(oSettings);
                }

                for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    var sTitle = aoColumns[i].sTitle.replace(/<.*?>/g, "");
                    nTh = aoColumns[i].nTh;
                    nTh.removeAttribute('aria-sort');
                    nTh.removeAttribute('aria-label');

                    /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
                    if (aoColumns[i].bSortable) {
                        if (aaSort.length > 0 && aaSort[0][0] == i) {
                            nTh.setAttribute('aria-sort', aaSort[0][1] == "asc" ? "ascending" : "descending");

                            var nextSort = (aoColumns[i].asSorting[ aaSort[0][2] + 1 ]) ?
                                aoColumns[i].asSorting[ aaSort[0][2] + 1 ] : aoColumns[i].asSorting[0];
                            nTh.setAttribute('aria-label', sTitle +
                                (nextSort == "asc" ? oAria.sSortAscending : oAria.sSortDescending));
                        }
                        else {
                            nTh.setAttribute('aria-label', sTitle +
                                (aoColumns[i].asSorting[0] == "asc" ? oAria.sSortAscending : oAria.sSortDescending));
                        }
                    }
                    else {
                        nTh.setAttribute('aria-label', sTitle);
                    }
                }

                /* Tell the draw function that we have sorted the data */
                oSettings.bSorted = true;
                $(oSettings.oInstance).trigger('sort', oSettings);

                /* Copy the master data into the draw array and re-draw */
                if (oSettings.oFeatures.bFilter) {
                    /* _fnFilter() will redraw the table for us */
                    _fnFilterComplete(oSettings, oSettings.oPreviousSearch, 1);
                }
                else {
                    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
                    oSettings._iDisplayStart = 0;
                    /* reset display back to page 0 */
                    _fnCalculateEnd(oSettings);
                    _fnDraw(oSettings);
                }
            }


            /**
             * Attach a sort handler (click) to a node
             *  @param {object} oSettings dataTables settings object
             *  @param {node} nNode node to attach the handler to
             *  @param {int} iDataIndex column sorting index
             *  @param {function} [fnCallback] callback function
             *  @memberof DataTable#oApi
             */
            function _fnSortAttachListener(oSettings, nNode, iDataIndex, fnCallback) {
                _fnBindAction(nNode, {}, function (e) {
                    /* If the column is not sortable - don't to anything */
                    if (oSettings.aoColumns[iDataIndex].bSortable === false) {
                        return;
                    }

                    /*
                     * This is a little bit odd I admit... I declare a temporary function inside the scope of
                     * _fnBuildHead and the click handler in order that the code presented here can be used 
                     * twice - once for when bProcessing is enabled, and another time for when it is 
                     * disabled, as we need to perform slightly different actions.
                     *   Basically the issue here is that the Javascript engine in modern browsers don't 
                     * appear to allow the rendering engine to update the display while it is still executing
                     * it's thread (well - it does but only after long intervals). This means that the 
                     * 'processing' display doesn't appear for a table sort. To break the js thread up a bit
                     * I force an execution break by using setTimeout - but this breaks the expected 
                     * thread continuation for the end-developer's point of view (their code would execute
                     * too early), so we only do it when we absolutely have to.
                     */
                    var fnInnerSorting = function () {
                        var iColumn, iNextSort;

                        /* If the shift key is pressed then we are multiple column sorting */
                        if (e.shiftKey) {
                            /* Are we already doing some kind of sort on this column? */
                            var bFound = false;
                            for (var i = 0; i < oSettings.aaSorting.length; i++) {
                                if (oSettings.aaSorting[i][0] == iDataIndex) {
                                    bFound = true;
                                    iColumn = oSettings.aaSorting[i][0];
                                    iNextSort = oSettings.aaSorting[i][2] + 1;

                                    if (!oSettings.aoColumns[iColumn].asSorting[iNextSort]) {
                                        /* Reached the end of the sorting options, remove from multi-col sort */
                                        oSettings.aaSorting.splice(i, 1);
                                    }
                                    else {
                                        /* Move onto next sorting direction */
                                        oSettings.aaSorting[i][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
                                        oSettings.aaSorting[i][2] = iNextSort;
                                    }
                                    break;
                                }
                            }

                            /* No sort yet - add it in */
                            if (bFound === false) {
                                oSettings.aaSorting.push([ iDataIndex,
                                    oSettings.aoColumns[iDataIndex].asSorting[0], 0 ]);
                            }
                        }
                        else {
                            /* If no shift key then single column sort */
                            if (oSettings.aaSorting.length == 1 && oSettings.aaSorting[0][0] == iDataIndex) {
                                iColumn = oSettings.aaSorting[0][0];
                                iNextSort = oSettings.aaSorting[0][2] + 1;
                                if (!oSettings.aoColumns[iColumn].asSorting[iNextSort]) {
                                    iNextSort = 0;
                                }
                                oSettings.aaSorting[0][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
                                oSettings.aaSorting[0][2] = iNextSort;
                            }
                            else {
                                oSettings.aaSorting.splice(0, oSettings.aaSorting.length);
                                oSettings.aaSorting.push([ iDataIndex,
                                    oSettings.aoColumns[iDataIndex].asSorting[0], 0 ]);
                            }
                        }

                        /* Run the sort */
                        _fnSort(oSettings);
                    };
                    /* /fnInnerSorting */

                    if (!oSettings.oFeatures.bProcessing) {
                        fnInnerSorting();
                    }
                    else {
                        _fnProcessingDisplay(oSettings, true);
                        setTimeout(function () {
                            fnInnerSorting();
                            if (!oSettings.oFeatures.bServerSide) {
                                _fnProcessingDisplay(oSettings, false);
                            }
                        }, 0);
                    }

                    /* Call the user specified callback function - used for async user interaction */
                    if (typeof fnCallback == 'function') {
                        fnCallback(oSettings);
                    }
                });
            }


            /**
             * Set the sorting classes on the header, Note: it is safe to call this function
             * when bSort and bSortClasses are false
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnSortingClasses(oSettings) {
                var i, iLen, j, jLen, iFound;
                var aaSort, sClass;
                var iColumns = oSettings.aoColumns.length;
                var oClasses = oSettings.oClasses;

                for (i = 0; i < iColumns; i++) {
                    if (oSettings.aoColumns[i].bSortable) {
                        $(oSettings.aoColumns[i].nTh).removeClass(oClasses.sSortAsc + " " + oClasses.sSortDesc +
                            " " + oSettings.aoColumns[i].sSortingClass);
                    }
                }

                if (oSettings.aaSortingFixed !== null) {
                    aaSort = oSettings.aaSortingFixed.concat(oSettings.aaSorting);
                }
                else {
                    aaSort = oSettings.aaSorting.slice();
                }

                /* Apply the required classes to the header */
                for (i = 0; i < oSettings.aoColumns.length; i++) {
                    if (oSettings.aoColumns[i].bSortable) {
                        sClass = oSettings.aoColumns[i].sSortingClass;
                        iFound = -1;
                        for (j = 0; j < aaSort.length; j++) {
                            if (aaSort[j][0] == i) {
                                sClass = ( aaSort[j][1] == "asc" ) ?
                                    oClasses.sSortAsc : oClasses.sSortDesc;
                                iFound = j;
                                break;
                            }
                        }
                        $(oSettings.aoColumns[i].nTh).addClass(sClass);

                        if (oSettings.bJUI) {
                            /* jQuery UI uses extra markup */
                            var jqSpan = $("span." + oClasses.sSortIcon, oSettings.aoColumns[i].nTh);
                            jqSpan.removeClass(oClasses.sSortJUIAsc + " " + oClasses.sSortJUIDesc + " " +
                                oClasses.sSortJUI + " " + oClasses.sSortJUIAscAllowed + " " + oClasses.sSortJUIDescAllowed);

                            var sSpanClass;
                            if (iFound == -1) {
                                sSpanClass = oSettings.aoColumns[i].sSortingClassJUI;
                            }
                            else if (aaSort[iFound][1] == "asc") {
                                sSpanClass = oClasses.sSortJUIAsc;
                            }
                            else {
                                sSpanClass = oClasses.sSortJUIDesc;
                            }

                            jqSpan.addClass(sSpanClass);
                        }
                    }
                    else {
                        /* No sorting on this column, so add the base class. This will have been assigned by
                         * _fnAddColumn
                         */
                        $(oSettings.aoColumns[i].nTh).addClass(oSettings.aoColumns[i].sSortingClass);
                    }
                }

                /* 
                 * Apply the required classes to the table body
                 * Note that this is given as a feature switch since it can significantly slow down a sort
                 * on large data sets (adding and removing of classes is always slow at the best of times..)
                 * Further to this, note that this code is admittedly fairly ugly. It could be made a lot 
                 * simpler using jQuery selectors and add/removeClass, but that is significantly slower
                 * (on the order of 5 times slower) - hence the direct DOM manipulation here.
                 * Note that for deferred drawing we do use jQuery - the reason being that taking the first
                 * row found to see if the whole column needs processed can miss classes since the first
                 * column might be new.
                 */
                sClass = oClasses.sSortColumn;

                if (oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses) {
                    var nTds = _fnGetTdNodes(oSettings);

                    /* Determine what the sorting class for each column should be */
                    var iClass, iTargetCol;
                    var asClasses = [];
                    for (i = 0; i < iColumns; i++) {
                        asClasses.push("");
                    }
                    for (i = 0, iClass = 1; i < aaSort.length; i++) {
                        iTargetCol = parseInt(aaSort[i][0], 10);
                        asClasses[iTargetCol] = sClass + iClass;

                        if (iClass < 3) {
                            iClass++;
                        }
                    }

                    /* Make changes to the classes for each cell as needed */
                    var reClass = new RegExp(sClass + "[123]");
                    var sTmpClass, sCurrentClass, sNewClass;
                    for (i = 0, iLen = nTds.length; i < iLen; i++) {
                        /* Determine which column we're looking at */
                        iTargetCol = i % iColumns;

                        /* What is the full list of classes now */
                        sCurrentClass = nTds[i].className;
                        /* What sorting class should be applied? */
                        sNewClass = asClasses[iTargetCol];
                        /* What would the new full list be if we did a replacement? */
                        sTmpClass = sCurrentClass.replace(reClass, sNewClass);

                        if (sTmpClass != sCurrentClass) {
                            /* We changed something */
                            nTds[i].className = $.trim(sTmpClass);
                        }
                        else if (sNewClass.length > 0 && sCurrentClass.indexOf(sNewClass) == -1) {
                            /* We need to add a class */
                            nTds[i].className = sCurrentClass + " " + sNewClass;
                        }
                    }
                }
            }


            /**
             * Save the state of a table in a cookie such that the page can be reloaded
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnSaveState(oSettings) {
                if (!oSettings.oFeatures.bStateSave || oSettings.bDestroying) {
                    return;
                }

                /* Store the interesting variables */
                var i, iLen, bInfinite = oSettings.oScroll.bInfinite;
                var oState = {
                    "iCreate": new Date().getTime(),
                    "iStart": (bInfinite ? 0 : oSettings._iDisplayStart),
                    "iEnd": (bInfinite ? oSettings._iDisplayLength : oSettings._iDisplayEnd),
                    "iLength": oSettings._iDisplayLength,
                    "aaSorting": $.extend(true, [], oSettings.aaSorting),
                    "oSearch": $.extend(true, {}, oSettings.oPreviousSearch),
                    "aoSearchCols": $.extend(true, [], oSettings.aoPreSearchCols),
                    "abVisCols": []
                };

                for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                    oState.abVisCols.push(oSettings.aoColumns[i].bVisible);
                }

                _fnCallbackFire(oSettings, "aoStateSaveParams", 'stateSaveParams', [oSettings, oState]);

                oSettings.fnStateSave.call(oSettings.oInstance, oSettings, oState);
            }


            /**
             * Attempt to load a saved table state from a cookie
             *  @param {object} oSettings dataTables settings object
             *  @param {object} oInit DataTables init object so we can override settings
             *  @memberof DataTable#oApi
             */
            function _fnLoadState(oSettings, oInit) {
                if (!oSettings.oFeatures.bStateSave) {
                    return;
                }

                var oData = oSettings.fnStateLoad.call(oSettings.oInstance, oSettings);
                if (!oData) {
                    return;
                }

                /* Allow custom and plug-in manipulation functions to alter the saved data set and
                 * cancelling of loading by returning false
                 */
                var abStateLoad = _fnCallbackFire(oSettings, 'aoStateLoadParams', 'stateLoadParams', [oSettings, oData]);
                if ($.inArray(false, abStateLoad) !== -1) {
                    return;
                }

                /* Store the saved state so it might be accessed at any time */
                oSettings.oLoadedState = $.extend(true, {}, oData);

                /* Restore key features */
                oSettings._iDisplayStart = oData.iStart;
                oSettings.iInitDisplayStart = oData.iStart;
                oSettings._iDisplayEnd = oData.iEnd;
                oSettings._iDisplayLength = oData.iLength;
                oSettings.aaSorting = oData.aaSorting.slice();
                oSettings.saved_aaSorting = oData.aaSorting.slice();

                /* Search filtering  */
                $.extend(oSettings.oPreviousSearch, oData.oSearch);
                $.extend(true, oSettings.aoPreSearchCols, oData.aoSearchCols);

                /* Column visibility state
                 * Pass back visibility settings to the init handler, but to do not here override
                 * the init object that the user might have passed in
                 */
                oInit.saved_aoColumns = [];
                for (var i = 0; i < oData.abVisCols.length; i++) {
                    oInit.saved_aoColumns[i] = {};
                    oInit.saved_aoColumns[i].bVisible = oData.abVisCols[i];
                }

                _fnCallbackFire(oSettings, 'aoStateLoaded', 'stateLoaded', [oSettings, oData]);
            }


            /**
             * Create a new cookie with a value to store the state of a table
             *  @param {string} sName name of the cookie to create
             *  @param {string} sValue the value the cookie should take
             *  @param {int} iSecs duration of the cookie
             *  @param {string} sBaseName sName is made up of the base + file name - this is the base
             *  @param {function} fnCallback User definable function to modify the cookie
             *  @memberof DataTable#oApi
             */
            function _fnCreateCookie(sName, sValue, iSecs, sBaseName, fnCallback) {
                var date = new Date();
                date.setTime(date.getTime() + (iSecs * 1000));

                /* 
                 * Shocking but true - it would appear IE has major issues with having the path not having
                 * a trailing slash on it. We need the cookie to be available based on the path, so we
                 * have to append the file name to the cookie name. Appalling. Thanks to vex for adding the
                 * patch to use at least some of the path
                 */
                var aParts = window.location.pathname.split('/');
                var sNameFile = sName + '_' + aParts.pop().replace(/[\/:]/g, "").toLowerCase();
                var sFullCookie, oData;

                if (fnCallback !== null) {
                    oData = (typeof $.parseJSON === 'function') ?
                        $.parseJSON(sValue) : eval('(' + sValue + ')');
                    sFullCookie = fnCallback(sNameFile, oData, date.toGMTString(),
                        aParts.join('/') + "/");
                }
                else {
                    sFullCookie = sNameFile + "=" + encodeURIComponent(sValue) +
                        "; expires=" + date.toGMTString() + "; path=" + aParts.join('/') + "/";
                }

                /* Are we going to go over the cookie limit of 4KiB? If so, try to delete a cookies
                 * belonging to DataTables.
                 */
                var
                    aCookies = document.cookie.split(';'),
                    iNewCookieLen = sFullCookie.split(';')[0].length,
                    aOldCookies = [];

                if (iNewCookieLen + document.cookie.length + 10 > 4096) /* Magic 10 for padding */
                {
                    for (var i = 0, iLen = aCookies.length; i < iLen; i++) {
                        if (aCookies[i].indexOf(sBaseName) != -1) {
                            /* It's a DataTables cookie, so eval it and check the time stamp */
                            var aSplitCookie = aCookies[i].split('=');
                            try {
                                oData = eval('(' + decodeURIComponent(aSplitCookie[1]) + ')');

                                if (oData && oData.iCreate) {
                                    aOldCookies.push({
                                        "name": aSplitCookie[0],
                                        "time": oData.iCreate
                                    });
                                }
                            }
                            catch (e) {
                            }
                        }
                    }

                    // Make sure we delete the oldest ones first
                    aOldCookies.sort(function (a, b) {
                        return b.time - a.time;
                    });

                    // Eliminate as many old DataTables cookies as we need to
                    while (iNewCookieLen + document.cookie.length + 10 > 4096) {
                        if (aOldCookies.length === 0) {
                            // Deleted all DT cookies and still not enough space. Can't state save
                            return;
                        }

                        var old = aOldCookies.pop();
                        document.cookie = old.name + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" +
                            aParts.join('/') + "/";
                    }
                }

                document.cookie = sFullCookie;
            }


            /**
             * Read an old cookie to get a cookie with an old table state
             *  @param {string} sName name of the cookie to read
             *  @returns {string} contents of the cookie - or null if no cookie with that name found
             *  @memberof DataTable#oApi
             */
            function _fnReadCookie(sName) {
                var
                    aParts = window.location.pathname.split('/'),
                    sNameEQ = sName + '_' + aParts[aParts.length - 1].replace(/[\/:]/g, "").toLowerCase() + '=',
                    sCookieContents = document.cookie.split(';');

                for (var i = 0; i < sCookieContents.length; i++) {
                    var c = sCookieContents[i];

                    while (c.charAt(0) == ' ') {
                        c = c.substring(1, c.length);
                    }

                    if (c.indexOf(sNameEQ) === 0) {
                        return decodeURIComponent(c.substring(sNameEQ.length, c.length));
                    }
                }
                return null;
            }


            /**
             * Return the settings object for a particular table
             *  @param {node} nTable table we are using as a dataTable
             *  @returns {object} Settings object - or null if not found
             *  @memberof DataTable#oApi
             */
            function _fnSettingsFromNode(nTable) {
                for (var i = 0; i < DataTable.settings.length; i++) {
                    if (DataTable.settings[i].nTable === nTable) {
                        return DataTable.settings[i];
                    }
                }

                return null;
            }


            /**
             * Return an array with the TR nodes for the table
             *  @param {object} oSettings dataTables settings object
             *  @returns {array} TR array
             *  @memberof DataTable#oApi
             */
            function _fnGetTrNodes(oSettings) {
                var aNodes = [];
                var aoData = oSettings.aoData;
                for (var i = 0, iLen = aoData.length; i < iLen; i++) {
                    if (aoData[i].nTr !== null) {
                        aNodes.push(aoData[i].nTr);
                    }
                }
                return aNodes;
            }


            /**
             * Return an flat array with all TD nodes for the table, or row
             *  @param {object} oSettings dataTables settings object
             *  @param {int} [iIndividualRow] aoData index to get the nodes for - optional
             *    if not given then the return array will contain all nodes for the table
             *  @returns {array} TD array
             *  @memberof DataTable#oApi
             */
            function _fnGetTdNodes(oSettings, iIndividualRow) {
                var anReturn = [];
                var iCorrector;
                var anTds, nTd;
                var iRow, iRows = oSettings.aoData.length,
                    iColumn, iColumns, oData, sNodeName, iStart = 0, iEnd = iRows;

                /* Allow the collection to be limited to just one row */
                if (iIndividualRow !== undefined) {
                    iStart = iIndividualRow;
                    iEnd = iIndividualRow + 1;
                }

                for (iRow = iStart; iRow < iEnd; iRow++) {
                    oData = oSettings.aoData[iRow];
                    if (oData.nTr !== null) {
                        /* get the TD child nodes - taking into account text etc nodes */
                        anTds = [];
                        nTd = oData.nTr.firstChild;
                        while (nTd) {
                            sNodeName = nTd.nodeName.toLowerCase();
                            if (sNodeName == 'td' || sNodeName == 'th') {
                                anTds.push(nTd);
                            }
                            nTd = nTd.nextSibling;
                        }

                        iCorrector = 0;
                        for (iColumn = 0, iColumns = oSettings.aoColumns.length; iColumn < iColumns; iColumn++) {
                            if (oSettings.aoColumns[iColumn].bVisible) {
                                anReturn.push(anTds[iColumn - iCorrector]);
                            }
                            else {
                                anReturn.push(oData._anHidden[iColumn]);
                                iCorrector++;
                            }
                        }
                    }
                }

                return anReturn;
            }


            /**
             * Log an error message
             *  @param {object} oSettings dataTables settings object
             *  @param {int} iLevel log error messages, or display them to the user
             *  @param {string} sMesg error message
             *  @memberof DataTable#oApi
             */
            function _fnLog(oSettings, iLevel, sMesg) {
                var sAlert = (oSettings === null) ?
                    "DataTables warning: " + sMesg :
                    "DataTables warning (table id = '" + oSettings.sTableId + "'): " + sMesg;

                if (iLevel === 0) {
                    if (DataTable.ext.sErrMode == 'alert') {
                        alert(sAlert);
                    }
                    else {
                        throw new Error(sAlert);
                    }
                    return;
                }
                else if (window.console && console.log) {
                    console.log(sAlert);
                }
            }


            /**
             * See if a property is defined on one object, if so assign it to the other object
             *  @param {object} oRet target object
             *  @param {object} oSrc source object
             *  @param {string} sName property
             *  @param {string} [sMappedName] name to map too - optional, sName used if not given
             *  @memberof DataTable#oApi
             */
            function _fnMap(oRet, oSrc, sName, sMappedName) {
                if (sMappedName === undefined) {
                    sMappedName = sName;
                }
                if (oSrc[sName] !== undefined) {
                    oRet[sMappedName] = oSrc[sName];
                }
            }


            /**
             * Extend objects - very similar to jQuery.extend, but deep copy objects, and shallow
             * copy arrays. The reason we need to do this, is that we don't want to deep copy array
             * init values (such as aaSorting) since the dev wouldn't be able to override them, but
             * we do want to deep copy arrays.
             *  @param {object} oOut Object to extend
             *  @param {object} oExtender Object from which the properties will be applied to oOut
             *  @returns {object} oOut Reference, just for convenience - oOut === the return.
             *  @memberof DataTable#oApi
             *  @todo This doesn't take account of arrays inside the deep copied objects.
             */
            function _fnExtend(oOut, oExtender) {
                var val;

                for (var prop in oExtender) {
                    if (oExtender.hasOwnProperty(prop)) {
                        val = oExtender[prop];

                        if (typeof oInit[prop] === 'object' && val !== null && $.isArray(val) === false) {
                            $.extend(true, oOut[prop], val);
                        }
                        else {
                            oOut[prop] = val;
                        }
                    }
                }

                return oOut;
            }


            /**
             * Bind an event handers to allow a click or return key to activate the callback.
             * This is good for accessibility since a return on the keyboard will have the
             * same effect as a click, if the element has focus.
             *  @param {element} n Element to bind the action to
             *  @param {object} oData Data object to pass to the triggered function
             *  @param {function} fn Callback function for when the event is triggered
             *  @memberof DataTable#oApi
             */
            function _fnBindAction(n, oData, fn) {
                $(n)
                    .bind('click.DT', oData, function (e) {
                        n.blur(); // Remove focus outline for mouse users
                        fn(e);
                    })
                    .bind('keypress.DT', oData, function (e) {
                        if (e.which === 13) {
                            fn(e);
                        }
                    })
                    .bind('selectstart.DT', function () {
                        /* Take the brutal approach to cancelling text selection */
                        return false;
                    });
            }


            /**
             * Register a callback function. Easily allows a callback function to be added to
             * an array store of callback functions that can then all be called together.
             *  @param {object} oSettings dataTables settings object
             *  @param {string} sStore Name of the array storage for the callbacks in oSettings
             *  @param {function} fn Function to be called back
             *  @param {string} sName Identifying name for the callback (i.e. a label)
             *  @memberof DataTable#oApi
             */
            function _fnCallbackReg(oSettings, sStore, fn, sName) {
                if (fn) {
                    oSettings[sStore].push({
                        "fn": fn,
                        "sName": sName
                    });
                }
            }


            /**
             * Fire callback functions and trigger events. Note that the loop over the callback
             * array store is done backwards! Further note that you do not want to fire off triggers
             * in time sensitive applications (for example cell creation) as its slow.
             *  @param {object} oSettings dataTables settings object
             *  @param {string} sStore Name of the array storage for the callbacks in oSettings
             *  @param {string} sTrigger Name of the jQuery custom event to trigger. If null no trigger
             *    is fired
             *  @param {array} aArgs Array of arguments to pass to the callback function / trigger
             *  @memberof DataTable#oApi
             */
            function _fnCallbackFire(oSettings, sStore, sTrigger, aArgs) {
                var aoStore = oSettings[sStore];
                var aRet = [];

                for (var i = aoStore.length - 1; i >= 0; i--) {
                    aRet.push(aoStore[i].fn.apply(oSettings.oInstance, aArgs));
                }

                if (sTrigger !== null) {
                    $(oSettings.oInstance).trigger(sTrigger, aArgs);
                }

                return aRet;
            }


            /**
             * JSON stringify. If JSON.stringify it provided by the browser, json2.js or any other
             * library, then we use that as it is fast, safe and accurate. If the function isn't
             * available then we need to built it ourselves - the inspiration for this function comes
             * from Craig Buckler ( http://www.sitepoint.com/javascript-json-serialization/ ). It is
             * not perfect and absolutely should not be used as a replacement to json2.js - but it does
             * do what we need, without requiring a dependency for DataTables.
             *  @param {object} o JSON object to be converted
             *  @returns {string} JSON string
             *  @memberof DataTable#oApi
             */
            var _fnJsonString = (window.JSON) ? JSON.stringify : function (o) {
                /* Not an object or array */
                var sType = typeof o;
                if (sType !== "object" || o === null) {
                    // simple data type
                    if (sType === "string") {
                        o = '"' + o + '"';
                    }
                    return o + "";
                }

                /* If object or array, need to recurse over it */
                var
                    sProp, mValue,
                    json = [],
                    bArr = $.isArray(o);

                for (sProp in o) {
                    mValue = o[sProp];
                    sType = typeof mValue;

                    if (sType === "string") {
                        mValue = '"' + mValue + '"';
                    }
                    else if (sType === "object" && mValue !== null) {
                        mValue = _fnJsonString(mValue);
                    }

                    json.push((bArr ? "" : '"' + sProp + '":') + mValue);
                }

                return (bArr ? "[" : "{") + json + (bArr ? "]" : "}");
            };


            /**
             * From some browsers (specifically IE6/7) we need special handling to work around browser
             * bugs - this function is used to detect when these workarounds are needed.
             *  @param {object} oSettings dataTables settings object
             *  @memberof DataTable#oApi
             */
            function _fnBrowserDetect(oSettings) {
                /* IE6/7 will oversize a width 100% element inside a scrolling element, to include the
                 * width of the scrollbar, while other browsers ensure the inner element is contained
                 * without forcing scrolling
                 */
                var n = $(
                    '<div style="position:absolute; top:0; left:0; height:1px; width:1px; overflow:hidden">' +
                        '<div style="position:absolute; top:1px; left:1px; width:100px; overflow:scroll;">' +
                        '<div id="DT_BrowserTest" style="width:100%; height:10px;"></div>' +
                        '</div>' +
                        '</div>')[0];

                document.body.appendChild(n);
                oSettings.oBrowser.bScrollOversize = $('#DT_BrowserTest', n)[0].offsetWidth === 100 ? true : false;
                document.body.removeChild(n);
            }


            /**
             * Perform a jQuery selector action on the table's TR elements (from the tbody) and
             * return the resulting jQuery object.
             *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
             *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
             *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
             *    criterion ("applied") or all TR elements (i.e. no filter).
             *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
             *    Can be either 'current', whereby the current sorting of the table is used, or
             *    'original' whereby the original order the data was read into the table is used.
             *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
             *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
             *    'current' and filter is 'applied', regardless of what they might be given as.
             *  @returns {object} jQuery object, filtered by the given selector.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"filter": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
             */
            this.$ = function (sSelector, oOpts) {
                var i, iLen, a = [], tr;
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var aoData = oSettings.aoData;
                var aiDisplay = oSettings.aiDisplay;
                var aiDisplayMaster = oSettings.aiDisplayMaster;

                if (!oOpts) {
                    oOpts = {};
                }

                oOpts = $.extend({}, {
                    "filter": "none", // applied
                    "order": "current", // "original"
                    "page": "all" // current
                }, oOpts);

                // Current page implies that order=current and fitler=applied, since it is fairly
                // senseless otherwise
                if (oOpts.page == 'current') {
                    for (i = oSettings._iDisplayStart, iLen = oSettings.fnDisplayEnd(); i < iLen; i++) {
                        tr = aoData[ aiDisplay[i] ].nTr;
                        if (tr) {
                            a.push(tr);
                        }
                    }
                }
                else if (oOpts.order == "current" && oOpts.filter == "none") {
                    for (i = 0, iLen = aiDisplayMaster.length; i < iLen; i++) {
                        tr = aoData[ aiDisplayMaster[i] ].nTr;
                        if (tr) {
                            a.push(tr);
                        }
                    }
                }
                else if (oOpts.order == "current" && oOpts.filter == "applied") {
                    for (i = 0, iLen = aiDisplay.length; i < iLen; i++) {
                        tr = aoData[ aiDisplay[i] ].nTr;
                        if (tr) {
                            a.push(tr);
                        }
                    }
                }
                else if (oOpts.order == "original" && oOpts.filter == "none") {
                    for (i = 0, iLen = aoData.length; i < iLen; i++) {
                        tr = aoData[ i ].nTr;
                        if (tr) {
                            a.push(tr);
                        }
                    }
                }
                else if (oOpts.order == "original" && oOpts.filter == "applied") {
                    for (i = 0, iLen = aoData.length; i < iLen; i++) {
                        tr = aoData[ i ].nTr;
                        if ($.inArray(i, aiDisplay) !== -1 && tr) {
                            a.push(tr);
                        }
                    }
                }
                else {
                    _fnLog(oSettings, 1, "Unknown selection options");
                }

                /* We need to filter on the TR elements and also 'find' in their descendants
                 * to make the selector act like it would in a full table - so we need
                 * to build both results and then combine them together
                 */
                var jqA = $(a);
                var jqTRs = jqA.filter(sSelector);
                var jqDescendants = jqA.find(sSelector);

                return $([].concat($.makeArray(jqTRs), $.makeArray(jqDescendants)));
            };


            /**
             * Almost identical to $ in operation, but in this case returns the data for the matched
             * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
             * rather than any descendants, so the data can be obtained for the row/cell. If matching
             * rows are found, the data returned is the original data array/object that was used to
             * create the row (or a generated array if from a DOM source).
             *
             * This method is often useful in-combination with $ where both functions are given the
             * same parameters and the array indexes will match identically.
             *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
             *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
             *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
             *    criterion ("applied") or all elements (i.e. no filter).
             *  @param {string} [oOpts.order=current] Order of the data in the processed array.
             *    Can be either 'current', whereby the current sorting of the table is used, or
             *    'original' whereby the original order the data was read into the table is used.
             *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
             *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
             *    'current' and filter is 'applied', regardless of what they might be given as.
             *  @returns {array} Data for the matched elements. If any elements, as a result of the
             *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
             *    entry in the array.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for 
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"filter": "applied"});
		 *      
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the filter" );
		 *    } );
             */
            this._ = function (sSelector, oOpts) {
                var aOut = [];
                var i, iLen, iIndex;
                var aTrs = this.$(sSelector, oOpts);

                for (i = 0, iLen = aTrs.length; i < iLen; i++) {
                    aOut.push(this.fnGetData(aTrs[i]));
                }

                return aOut;
            };


            /**
             * Add a single new row or multiple rows of data to the table. Please note
             * that this is suitable for client-side processing only - if you are using
             * server-side processing (i.e. "bServerSide": true), then to add data, you
             * must add it to the data source, i.e. the server-side, through an Ajax call.
             *  @param {array|object} mData The data to be added to the table. This can be:
             *    <ul>
             *      <li>1D array of data - add a single row with the data provided</li>
             *      <li>2D array of arrays - add multiple rows in a single call</li>
             *      <li>object - data object when using <i>mData</i></li>
             *      <li>array of objects - multiple data objects when using <i>mData</i></li>
             *    </ul>
             *  @param {bool} [bRedraw=true] redraw the table or not
             *  @returns {array} An array of integers, representing the list of indexes in
             *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
             *    the table.
             *  @dtopt API
             *
             *  @example
             *    // Global var for counter
             *    var giCount = 2;
             *
             *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
             *
             *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *        
		 *      giCount++;
		 *    }
             */
            this.fnAddData = function (mData, bRedraw) {
                if (mData.length === 0) {
                    return [];
                }

                var aiReturn = [];
                var iTest;

                /* Find settings from table node */
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                /* Check if we want to add multiple rows or not */
                if (typeof mData[0] === "object" && mData[0] !== null) {
                    for (var i = 0; i < mData.length; i++) {
                        iTest = _fnAddData(oSettings, mData[i]);
                        if (iTest == -1) {
                            return aiReturn;
                        }
                        aiReturn.push(iTest);
                    }
                }
                else {
                    iTest = _fnAddData(oSettings, mData);
                    if (iTest == -1) {
                        return aiReturn;
                    }
                    aiReturn.push(iTest);
                }

                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

                if (bRedraw === undefined || bRedraw) {
                    _fnReDraw(oSettings);
                }
                return aiReturn;
            };


            /**
             * This function will make DataTables recalculate the column sizes, based on the data
             * contained in the table and the sizes applied to the columns (in the DOM, CSS or
             * through the sWidth parameter). This can be useful when the width of the table's
             * parent element changes (for example a window resize).
             *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *      
		 *      $(window).bind('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
             */
            this.fnAdjustColumnSizing = function (bRedraw) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                _fnAdjustColumnSizing(oSettings);

                if (bRedraw === undefined || bRedraw) {
                    this.fnDraw(false);
                }
                else if (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") {
                    /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
                    this.oApi._fnScrollDraw(oSettings);
                }
            };


            /**
             * Quickly and simply clear a table
             *  @param {bool} [bRedraw=true] redraw the table or not
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
             */
            this.fnClearTable = function (bRedraw) {
                /* Find settings from table node */
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                _fnClearTable(oSettings);

                if (bRedraw === undefined || bRedraw) {
                    _fnDraw(oSettings);
                }
            };


            /**
             * The exact opposite of 'opening' a row, this function will close any rows which
             * are currently 'open'.
             *  @param {node} nTr the table row to 'close'
             *  @returns {int} 0 on success, or 1 if failed (can't find the row)
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable;
		 *      
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *      
		 *      oTable = $('#example').dataTable();
		 *    } );
             */
            this.fnClose = function (nTr) {
                /* Find settings from table node */
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                for (var i = 0; i < oSettings.aoOpenRows.length; i++) {
                    if (oSettings.aoOpenRows[i].nParent == nTr) {
                        var nTrParent = oSettings.aoOpenRows[i].nTr.parentNode;
                        if (nTrParent) {
                            /* Remove it if it is currently on display */
                            nTrParent.removeChild(oSettings.aoOpenRows[i].nTr);
                        }
                        oSettings.aoOpenRows.splice(i, 1);
                        return 0;
                    }
                }
                return 1;
            };


            /**
             * Remove a row for the table
             *  @param {mixed} mTarget The index of the row from aoData to be deleted, or
             *    the TR element you want to delete
             *  @param {function|null} [fnCallBack] Callback function
             *  @param {bool} [bRedraw=true] Redraw the table or not
             *  @returns {array} The row that was deleted
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
             */
            this.fnDeleteRow = function (mTarget, fnCallBack, bRedraw) {
                /* Find settings from table node */
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var i, iLen, iAODataIndex;

                iAODataIndex = (typeof mTarget === 'object') ?
                    _fnNodeToDataIndex(oSettings, mTarget) : mTarget;

                /* Return the data array from this row */
                var oData = oSettings.aoData.splice(iAODataIndex, 1);

                /* Update the _DT_RowIndex parameter */
                for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
                    if (oSettings.aoData[i].nTr !== null) {
                        oSettings.aoData[i].nTr._DT_RowIndex = i;
                    }
                }

                /* Remove the target row from the search array */
                var iDisplayIndex = $.inArray(iAODataIndex, oSettings.aiDisplay);
                oSettings.asDataSearch.splice(iDisplayIndex, 1);

                /* Delete from the display arrays */
                _fnDeleteIndex(oSettings.aiDisplayMaster, iAODataIndex);
                _fnDeleteIndex(oSettings.aiDisplay, iAODataIndex);

                /* If there is a user callback function - call it */
                if (typeof fnCallBack === "function") {
                    fnCallBack.call(this, oSettings, oData);
                }

                /* Check for an 'overflow' they case for displaying the table */
                if (oSettings._iDisplayStart >= oSettings.fnRecordsDisplay()) {
                    oSettings._iDisplayStart -= oSettings._iDisplayLength;
                    if (oSettings._iDisplayStart < 0) {
                        oSettings._iDisplayStart = 0;
                    }
                }

                if (bRedraw === undefined || bRedraw) {
                    _fnCalculateEnd(oSettings);
                    _fnDraw(oSettings);
                }

                return oData;
            };


            /**
             * Restore the table to it's original state in the DOM by removing all of DataTables
             * enhancements, alterations to the DOM structure of the table and event listeners.
             *  @param {boolean} [bRemove=false] Completely remove the table from the DOM
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
             */
            this.fnDestroy = function (bRemove) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var nOrig = oSettings.nTableWrapper.parentNode;
                var nBody = oSettings.nTBody;
                var i, iLen;

                bRemove = (bRemove === undefined) ? false : bRemove;

                /* Flag to note that the table is currently being destroyed - no action should be taken */
                oSettings.bDestroying = true;

                /* Fire off the destroy callbacks for plug-ins etc */
                _fnCallbackFire(oSettings, "aoDestroyCallback", "destroy", [oSettings]);

                /* If the table is not being removed, restore the hidden columns */
                if (!bRemove) {
                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        if (oSettings.aoColumns[i].bVisible === false) {
                            this.fnSetColumnVis(i, true);
                        }
                    }
                }

                /* Blitz all DT events */
                $(oSettings.nTableWrapper).find('*').andSelf().unbind('.DT');

                /* If there is an 'empty' indicator row, remove it */
                $('tbody>tr>td.' + oSettings.oClasses.sRowEmpty, oSettings.nTable).parent().remove();

                /* When scrolling we had to break the table up - restore it */
                if (oSettings.nTable != oSettings.nTHead.parentNode) {
                    $(oSettings.nTable).children('thead').remove();
                    oSettings.nTable.appendChild(oSettings.nTHead);
                }

                if (oSettings.nTFoot && oSettings.nTable != oSettings.nTFoot.parentNode) {
                    $(oSettings.nTable).children('tfoot').remove();
                    oSettings.nTable.appendChild(oSettings.nTFoot);
                }

                /* Remove the DataTables generated nodes, events and classes */
                oSettings.nTable.parentNode.removeChild(oSettings.nTable);
                $(oSettings.nTableWrapper).remove();

                oSettings.aaSorting = [];
                oSettings.aaSortingFixed = [];
                _fnSortingClasses(oSettings);

                $(_fnGetTrNodes(oSettings)).removeClass(oSettings.asStripeClasses.join(' '));

                $('th, td', oSettings.nTHead).removeClass([
                    oSettings.oClasses.sSortable,
                    oSettings.oClasses.sSortableAsc,
                    oSettings.oClasses.sSortableDesc,
                    oSettings.oClasses.sSortableNone ].join(' ')
                );
                if (oSettings.bJUI) {
                    $('th span.' + oSettings.oClasses.sSortIcon
                        + ', td span.' + oSettings.oClasses.sSortIcon, oSettings.nTHead).remove();

                    $('th, td', oSettings.nTHead).each(function () {
                        var jqWrapper = $('div.' + oSettings.oClasses.sSortJUIWrapper, this);
                        var kids = jqWrapper.contents();
                        $(this).append(kids);
                        jqWrapper.remove();
                    });
                }

                /* Add the TR elements back into the table in their original order */
                if (!bRemove && oSettings.nTableReinsertBefore) {
                    nOrig.insertBefore(oSettings.nTable, oSettings.nTableReinsertBefore);
                }
                else if (!bRemove) {
                    nOrig.appendChild(oSettings.nTable);
                }

                for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
                    if (oSettings.aoData[i].nTr !== null) {
                        nBody.appendChild(oSettings.aoData[i].nTr);
                    }
                }

                /* Restore the width of the original table */
                if (oSettings.oFeatures.bAutoWidth === true) {
                    oSettings.nTable.style.width = _fnStringToCss(oSettings.sDestroyWidth);
                }

                /* If the were originally stripe classes - then we add them back here. Note
                 * this is not fool proof (for example if not all rows had stripe classes - but
                 * it's a good effort without getting carried away
                 */
                iLen = oSettings.asDestroyStripes.length;
                if (iLen) {
                    var anRows = $(nBody).children('tr');
                    for (i = 0; i < iLen; i++) {
                        anRows.filter(':nth-child(' + iLen + 'n + ' + i + ')').addClass(oSettings.asDestroyStripes[i]);
                    }
                }

                /* Remove the settings object from the settings array */
                for (i = 0, iLen = DataTable.settings.length; i < iLen; i++) {
                    if (DataTable.settings[i] == oSettings) {
                        DataTable.settings.splice(i, 1);
                    }
                }

                /* End it all */
                oSettings = null;
                oInit = null;
            };


            /**
             * Redraw the table
             *  @param {bool} [bComplete=true] Re-filter and resort (if enabled) the table before the draw.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
             */
            this.fnDraw = function (bComplete) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                if (bComplete === false) {
                    _fnCalculateEnd(oSettings);
                    _fnDraw(oSettings);
                }
                else {
                    _fnReDraw(oSettings);
                }
            };


            /**
             * Filter the input based on data
             *  @param {string} sInput String to filter the table on
             *  @param {int|null} [iColumn] Column to limit filtering to
             *  @param {bool} [bRegex=false] Treat as regular expression or not
             *  @param {bool} [bSmart=true] Perform smart filtering or not
             *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
             *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
             */
            this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                if (!oSettings.oFeatures.bFilter) {
                    return;
                }

                if (bRegex === undefined || bRegex === null) {
                    bRegex = false;
                }

                if (bSmart === undefined || bSmart === null) {
                    bSmart = true;
                }

                if (bShowGlobal === undefined || bShowGlobal === null) {
                    bShowGlobal = true;
                }

                if (bCaseInsensitive === undefined || bCaseInsensitive === null) {
                    bCaseInsensitive = true;
                }

                if (iColumn === undefined || iColumn === null) {
                    /* Global filter */
                    _fnFilterComplete(oSettings, {
                        "sSearch": sInput + "",
                        "bRegex": bRegex,
                        "bSmart": bSmart,
                        "bCaseInsensitive": bCaseInsensitive
                    }, 1);

                    if (bShowGlobal && oSettings.aanFeatures.f) {
                        var n = oSettings.aanFeatures.f;
                        for (var i = 0, iLen = n.length; i < iLen; i++) {
                            // IE9 throws an 'unknown error' if document.activeElement is used
                            // inside an iframe or frame...
                            try {
                                if (n[i]._DT_Input != document.activeElement) {
                                    $(n[i]._DT_Input).val(sInput);
                                }
                            }
                            catch (e) {
                                $(n[i]._DT_Input).val(sInput);
                            }
                        }
                    }
                }
                else {
                    /* Single column filter */
                    $.extend(oSettings.aoPreSearchCols[ iColumn ], {
                        "sSearch": sInput + "",
                        "bRegex": bRegex,
                        "bSmart": bSmart,
                        "bCaseInsensitive": bCaseInsensitive
                    });
                    _fnFilterComplete(oSettings, oSettings.oPreviousSearch, 1);
                }
            };


            /**
             * Get the data for the whole table, an individual row or an individual cell based on the
             * provided parameters.
             *  @param {int|node} [mRow] A TR row node, TD/TH cell node or an integer. If given as
             *    a TR node then the data source for the whole row will be returned. If given as a
             *    TD/TH cell node then iCol will be automatically calculated and the data for the
             *    cell returned. If given as an integer, then this is treated as the aoData internal
             *    data index for the row (see fnGetPosition) and the data for that row used.
             *  @param {int} [iCol] Optional column index that you want the data of.
             *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
             *    returned. If mRow is defined, just data for that row, and is iCol is
             *    defined, only data for the designated cell is returned.
             *  @dtopt API
             *
             *  @example
             *    // Row data
             *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
             *
             *  @example
             *    // Individual cell data
             *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
             */
            this.fnGetData = function (mRow, iCol) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                if (mRow !== undefined) {
                    var iRow = mRow;
                    if (typeof mRow === 'object') {
                        var sNode = mRow.nodeName.toLowerCase();
                        if (sNode === "tr") {
                            iRow = _fnNodeToDataIndex(oSettings, mRow);
                        }
                        else if (sNode === "td") {
                            iRow = _fnNodeToDataIndex(oSettings, mRow.parentNode);
                            iCol = _fnNodeToColumnIndex(oSettings, iRow, mRow);
                        }
                    }

                    if (iCol !== undefined) {
                        return _fnGetCellData(oSettings, iRow, iCol, '');
                    }
                    return (oSettings.aoData[iRow] !== undefined) ?
                        oSettings.aoData[iRow]._aData : null;
                }
                return _fnGetDataMaster(oSettings);
            };


            /**
             * Get an array of the TR nodes that are used in the table's body. Note that you will
             * typically want to use the '$' API method in preference to this as it is more
             * flexible.
             *  @param {int} [iRow] Optional row index for the TR element you want
             *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
             *    in the table's body, or iRow is defined, just the TR element requested.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
             */
            this.fnGetNodes = function (iRow) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                if (iRow !== undefined) {
                    return (oSettings.aoData[iRow] !== undefined) ?
                        oSettings.aoData[iRow].nTr : null;
                }
                return _fnGetTrNodes(oSettings);
            };


            /**
             * Get the array indexes of a particular cell from it's DOM element
             * and column index including hidden columns
             *  @param {node} nNode this can either be a TR, TD or TH in the table's body
             *  @returns {int} If nNode is given as a TR, then a single index is returned, or
             *    if given as a cell, an array of [row index, column index (visible),
             *    column index (all)] is given.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *        
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *        
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *      
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
             */
            this.fnGetPosition = function (nNode) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var sNodeName = nNode.nodeName.toUpperCase();

                if (sNodeName == "TR") {
                    return _fnNodeToDataIndex(oSettings, nNode);
                }
                else if (sNodeName == "TD" || sNodeName == "TH") {
                    var iDataIndex = _fnNodeToDataIndex(oSettings, nNode.parentNode);
                    var iColumnIndex = _fnNodeToColumnIndex(oSettings, iDataIndex, nNode);
                    return [ iDataIndex, _fnColumnIndexToVisible(oSettings, iColumnIndex), iColumnIndex ];
                }
                return null;
            };


            /**
             * Check to see if a row is 'open' or not.
             *  @param {node} nTr the table row to check
             *  @returns {boolean} true if the row is currently open, false otherwise
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable;
		 *      
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *      
		 *      oTable = $('#example').dataTable();
		 *    } );
             */
            this.fnIsOpen = function (nTr) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var aoOpenRows = oSettings.aoOpenRows;

                for (var i = 0; i < oSettings.aoOpenRows.length; i++) {
                    if (oSettings.aoOpenRows[i].nParent == nTr) {
                        return true;
                    }
                }
                return false;
            };


            /**
             * This function will place a new row directly after a row which is currently
             * on display on the page, with the HTML contents that is passed into the
             * function. This can be used, for example, to ask for confirmation that a
             * particular record should be deleted.
             *  @param {node} nTr The table row to 'open'
             *  @param {string|node|jQuery} mHtml The HTML to put into the row
             *  @param {string} sClass Class to give the new TD cell
             *  @returns {node} The row opened. Note that if the table row passed in as the
             *    first parameter, is not found in the table, this method will silently
             *    return.
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable;
		 *      
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *      
		 *      oTable = $('#example').dataTable();
		 *    } );
             */
            this.fnOpen = function (nTr, mHtml, sClass) {
                /* Find settings from table node */
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);

                /* Check that the row given is in the table */
                var nTableRows = _fnGetTrNodes(oSettings);
                if ($.inArray(nTr, nTableRows) === -1) {
                    return;
                }

                /* the old open one if there is one */
                this.fnClose(nTr);

                var nNewRow = document.createElement("tr");
                var nNewCell = document.createElement("td");
                nNewRow.appendChild(nNewCell);
                nNewCell.className = sClass;
                nNewCell.colSpan = _fnVisbleColumns(oSettings);

                if (typeof mHtml === "string") {
                    nNewCell.innerHTML = mHtml;
                }
                else {
                    $(nNewCell).html(mHtml);
                }

                /* If the nTr isn't on the page at the moment - then we don't insert at the moment */
                var nTrs = $('tr', oSettings.nTBody);
                if ($.inArray(nTr, nTrs) != -1) {
                    $(nNewRow).insertAfter(nTr);
                }

                oSettings.aoOpenRows.push({
                    "nTr": nNewRow,
                    "nParent": nTr
                });

                return nNewRow;
            };


            /**
             * Change the pagination - provides the internal logic for pagination in a simple API
             * function. With this function you can have a DataTables table go to the next,
             * previous, first or last pages.
             *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
             *    or page number to jump to (integer), note that page 0 is the first page.
             *  @param {bool} [bRedraw=true] Redraw the table or not
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
             */
            this.fnPageChange = function (mAction, bRedraw) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                _fnPageChange(oSettings, mAction);
                _fnCalculateEnd(oSettings);

                if (bRedraw === undefined || bRedraw) {
                    _fnDraw(oSettings);
                }
            };


            /**
             * Show a particular column
             *  @param {int} iCol The column whose display should be changed
             *  @param {bool} bShow Show (true) or hide (false) the column
             *  @param {bool} [bRedraw=true] Redraw the table or not
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
             */
            this.fnSetColumnVis = function (iCol, bShow, bRedraw) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var i, iLen;
                var aoColumns = oSettings.aoColumns;
                var aoData = oSettings.aoData;
                var nTd, bAppend, iBefore;

                /* No point in doing anything if we are requesting what is already true */
                if (aoColumns[iCol].bVisible == bShow) {
                    return;
                }

                /* Show the column */
                if (bShow) {
                    var iInsert = 0;
                    for (i = 0; i < iCol; i++) {
                        if (aoColumns[i].bVisible) {
                            iInsert++;
                        }
                    }

                    /* Need to decide if we should use appendChild or insertBefore */
                    bAppend = (iInsert >= _fnVisbleColumns(oSettings));

                    /* Which coloumn should we be inserting before? */
                    if (!bAppend) {
                        for (i = iCol; i < aoColumns.length; i++) {
                            if (aoColumns[i].bVisible) {
                                iBefore = i;
                                break;
                            }
                        }
                    }

                    for (i = 0, iLen = aoData.length; i < iLen; i++) {
                        if (aoData[i].nTr !== null) {
                            if (bAppend) {
                                aoData[i].nTr.appendChild(
                                    aoData[i]._anHidden[iCol]
                                );
                            }
                            else {
                                aoData[i].nTr.insertBefore(
                                    aoData[i]._anHidden[iCol],
                                    _fnGetTdNodes(oSettings, i)[iBefore]);
                            }
                        }
                    }
                }
                else {
                    /* Remove a column from display */
                    for (i = 0, iLen = aoData.length; i < iLen; i++) {
                        if (aoData[i].nTr !== null) {
                            nTd = _fnGetTdNodes(oSettings, i)[iCol];
                            aoData[i]._anHidden[iCol] = nTd;
                            nTd.parentNode.removeChild(nTd);
                        }
                    }
                }

                /* Clear to set the visible flag */
                aoColumns[iCol].bVisible = bShow;

                /* Redraw the header and footer based on the new column visibility */
                _fnDrawHead(oSettings, oSettings.aoHeader);
                if (oSettings.nTFoot) {
                    _fnDrawHead(oSettings, oSettings.aoFooter);
                }

                /* If there are any 'open' rows, then we need to alter the colspan for this col change */
                for (i = 0, iLen = oSettings.aoOpenRows.length; i < iLen; i++) {
                    oSettings.aoOpenRows[i].nTr.colSpan = _fnVisbleColumns(oSettings);
                }

                /* Do a redraw incase anything depending on the table columns needs it 
                 * (built-in: scrolling) 
                 */
                if (bRedraw === undefined || bRedraw) {
                    _fnAdjustColumnSizing(oSettings);
                    _fnDraw(oSettings);
                }

                _fnSaveState(oSettings);
            };


            /**
             * Get the settings for a particular table for external manipulation
             *  @returns {object} DataTables settings object. See
             *    {@link DataTable.models.oSettings}
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *      
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
             */
            this.fnSettings = function () {
                return _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
            };


            /**
             * Sort the table by a particular column
             *  @param {int} iCol the data index to sort on. Note that this will not match the
             *    'display index' if you have hidden data entries
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
             */
            this.fnSort = function (aaSort) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                oSettings.aaSorting = aaSort;
                _fnSort(oSettings);
            };


            /**
             * Attach a sort listener to an element for a given column
             *  @param {node} nNode the element to attach the sort listener to
             *  @param {int} iColumn the column that a click on this node will sort on
             *  @param {function} [fnCallback] callback function when sort is run
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
             */
            this.fnSortListener = function (nNode, iColumn, fnCallback) {
                _fnSortAttachListener(_fnSettingsFromNode(this[DataTable.ext.iApiIndex]), nNode, iColumn,
                    fnCallback);
            };


            /**
             * Update a table cell or row - this method will accept either a single value to
             * update the cell with, an array of values with one element for each column or
             * an object in the same format as the original data source. The function is
             * self-referencing in order to make the multi column updates easier.
             *  @param {object|array|string} mData Data to update the cell/row with
             *  @param {node|int} mRow TR element you want to update or the aoData index
             *  @param {int} [iColumn] The column to update (not used of mData is an array or object)
             *  @param {bool} [bRedraw=true] Redraw the table or not
             *  @param {bool} [bAction=true] Perform pre-draw actions or not
             *  @returns {int} 0 on success, 1 on error
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], 1, 0 ); // Row
		 *    } );
             */
            this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {
                var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
                var i, iLen, sDisplay;
                var iRow = (typeof mRow === 'object') ?
                    _fnNodeToDataIndex(oSettings, mRow) : mRow;

                if ($.isArray(mData) && iColumn === undefined) {
                    /* Array update - update the whole row */
                    oSettings.aoData[iRow]._aData = mData.slice();

                    /* Flag to the function that we are recursing */
                    for (i = 0; i < oSettings.aoColumns.length; i++) {
                        this.fnUpdate(_fnGetCellData(oSettings, iRow, i), iRow, i, false, false);
                    }
                }
                else if ($.isPlainObject(mData) && iColumn === undefined) {
                    /* Object update - update the whole row - assume the developer gets the object right */
                    oSettings.aoData[iRow]._aData = $.extend(true, {}, mData);

                    for (i = 0; i < oSettings.aoColumns.length; i++) {
                        this.fnUpdate(_fnGetCellData(oSettings, iRow, i), iRow, i, false, false);
                    }
                }
                else {
                    /* Individual cell update */
                    _fnSetCellData(oSettings, iRow, iColumn, mData);
                    sDisplay = _fnGetCellData(oSettings, iRow, iColumn, 'display');

                    var oCol = oSettings.aoColumns[iColumn];
                    if (oCol.fnRender !== null) {
                        sDisplay = _fnRender(oSettings, iRow, iColumn);
                        if (oCol.bUseRendered) {
                            _fnSetCellData(oSettings, iRow, iColumn, sDisplay);
                        }
                    }

                    if (oSettings.aoData[iRow].nTr !== null) {
                        /* Do the actual HTML update */
                        _fnGetTdNodes(oSettings, iRow)[iColumn].innerHTML = sDisplay;
                    }
                }

                /* Modify the search index for this row (strictly this is likely not needed, since fnReDraw
                 * will rebuild the search array - however, the redraw might be disabled by the user)
                 */
                var iDisplayIndex = $.inArray(iRow, oSettings.aiDisplay);
                oSettings.asDataSearch[iDisplayIndex] = _fnBuildSearchRow(
                    oSettings,
                    _fnGetRowData(oSettings, iRow, 'filter', _fnGetColumns(oSettings, 'bSearchable'))
                );

                /* Perform pre-draw actions */
                if (bAction === undefined || bAction) {
                    _fnAdjustColumnSizing(oSettings);
                }

                /* Redraw the table */
                if (bRedraw === undefined || bRedraw) {
                    _fnReDraw(oSettings);
                }
                return 0;
            };


            /**
             * Provide a common method for plug-ins to check the version of DataTables being used, in order
             * to ensure compatibility.
             *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
             *    formats "X" and "X.Y" are also acceptable.
             *  @returns {boolean} true if this version of DataTables is greater or equal to the required
             *    version, or false if this version of DataTales is not suitable
             *  @method
             *  @dtopt API
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
             */
            this.fnVersionCheck = DataTable.ext.fnVersionCheck;


            /*
             * This is really a good bit rubbish this method of exposing the internal methods
             * publicly... - To be fixed in 2.0 using methods on the prototype
             */


            /**
             * Create a wrapper function for exporting an internal functions to an external API.
             *  @param {string} sFunc API function name
             *  @returns {function} wrapped function
             *  @memberof DataTable#oApi
             */
            function _fnExternApiFunc(sFunc) {
                return function () {
                    var aArgs = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(
                        Array.prototype.slice.call(arguments));
                    return DataTable.ext.oApi[sFunc].apply(this, aArgs);
                };
            }


            /**
             * Reference to internal functions for use by plug-in developers. Note that these
             * methods are references to internal functions and are considered to be private.
             * If you use these methods, be aware that they are liable to change between versions
             * (check the upgrade notes).
             *  @namespace
             */
            this.oApi = {
                "_fnExternApiFunc": _fnExternApiFunc,
                "_fnInitialise": _fnInitialise,
                "_fnInitComplete": _fnInitComplete,
                "_fnLanguageCompat": _fnLanguageCompat,
                "_fnAddColumn": _fnAddColumn,
                "_fnColumnOptions": _fnColumnOptions,
                "_fnAddData": _fnAddData,
                "_fnCreateTr": _fnCreateTr,
                "_fnGatherData": _fnGatherData,
                "_fnBuildHead": _fnBuildHead,
                "_fnDrawHead": _fnDrawHead,
                "_fnDraw": _fnDraw,
                "_fnReDraw": _fnReDraw,
                "_fnAjaxUpdate": _fnAjaxUpdate,
                "_fnAjaxParameters": _fnAjaxParameters,
                "_fnAjaxUpdateDraw": _fnAjaxUpdateDraw,
                "_fnServerParams": _fnServerParams,
                "_fnAddOptionsHtml": _fnAddOptionsHtml,
                "_fnFeatureHtmlTable": _fnFeatureHtmlTable,
                "_fnScrollDraw": _fnScrollDraw,
                "_fnAdjustColumnSizing": _fnAdjustColumnSizing,
                "_fnFeatureHtmlFilter": _fnFeatureHtmlFilter,
                "_fnFilterComplete": _fnFilterComplete,
                "_fnFilterCustom": _fnFilterCustom,
                "_fnFilterColumn": _fnFilterColumn,
                "_fnFilter": _fnFilter,
                "_fnBuildSearchArray": _fnBuildSearchArray,
                "_fnBuildSearchRow": _fnBuildSearchRow,
                "_fnFilterCreateSearch": _fnFilterCreateSearch,
                "_fnDataToSearch": _fnDataToSearch,
                "_fnSort": _fnSort,
                "_fnSortAttachListener": _fnSortAttachListener,
                "_fnSortingClasses": _fnSortingClasses,
                "_fnFeatureHtmlPaginate": _fnFeatureHtmlPaginate,
                "_fnPageChange": _fnPageChange,
                "_fnFeatureHtmlInfo": _fnFeatureHtmlInfo,
                "_fnUpdateInfo": _fnUpdateInfo,
                "_fnFeatureHtmlLength": _fnFeatureHtmlLength,
                "_fnFeatureHtmlProcessing": _fnFeatureHtmlProcessing,
                "_fnProcessingDisplay": _fnProcessingDisplay,
                "_fnVisibleToColumnIndex": _fnVisibleToColumnIndex,
                "_fnColumnIndexToVisible": _fnColumnIndexToVisible,
                "_fnNodeToDataIndex": _fnNodeToDataIndex,
                "_fnVisbleColumns": _fnVisbleColumns,
                "_fnCalculateEnd": _fnCalculateEnd,
                "_fnConvertToWidth": _fnConvertToWidth,
                "_fnCalculateColumnWidths": _fnCalculateColumnWidths,
                "_fnScrollingWidthAdjust": _fnScrollingWidthAdjust,
                "_fnGetWidestNode": _fnGetWidestNode,
                "_fnGetMaxLenString": _fnGetMaxLenString,
                "_fnStringToCss": _fnStringToCss,
                "_fnDetectType": _fnDetectType,
                "_fnSettingsFromNode": _fnSettingsFromNode,
                "_fnGetDataMaster": _fnGetDataMaster,
                "_fnGetTrNodes": _fnGetTrNodes,
                "_fnGetTdNodes": _fnGetTdNodes,
                "_fnEscapeRegex": _fnEscapeRegex,
                "_fnDeleteIndex": _fnDeleteIndex,
                "_fnReOrderIndex": _fnReOrderIndex,
                "_fnColumnOrdering": _fnColumnOrdering,
                "_fnLog": _fnLog,
                "_fnClearTable": _fnClearTable,
                "_fnSaveState": _fnSaveState,
                "_fnLoadState": _fnLoadState,
                "_fnCreateCookie": _fnCreateCookie,
                "_fnReadCookie": _fnReadCookie,
                "_fnDetectHeader": _fnDetectHeader,
                "_fnGetUniqueThs": _fnGetUniqueThs,
                "_fnScrollBarWidth": _fnScrollBarWidth,
                "_fnApplyToChildren": _fnApplyToChildren,
                "_fnMap": _fnMap,
                "_fnGetRowData": _fnGetRowData,
                "_fnGetCellData": _fnGetCellData,
                "_fnSetCellData": _fnSetCellData,
                "_fnGetObjectDataFn": _fnGetObjectDataFn,
                "_fnSetObjectDataFn": _fnSetObjectDataFn,
                "_fnApplyColumnDefs": _fnApplyColumnDefs,
                "_fnBindAction": _fnBindAction,
                "_fnExtend": _fnExtend,
                "_fnCallbackReg": _fnCallbackReg,
                "_fnCallbackFire": _fnCallbackFire,
                "_fnJsonString": _fnJsonString,
                "_fnRender": _fnRender,
                "_fnNodeToColumnIndex": _fnNodeToColumnIndex,
                "_fnInfoMacros": _fnInfoMacros,
                "_fnBrowserDetect": _fnBrowserDetect,
                "_fnGetColumns": _fnGetColumns
            };

            $.extend(DataTable.ext.oApi, this.oApi);

            for (var sFunc in DataTable.ext.oApi) {
                if (sFunc) {
                    this[sFunc] = _fnExternApiFunc(sFunc);
                }
            }


            var _that = this;
            this.each(function () {
                var i = 0, iLen, j, jLen, k, kLen;
                var sId = this.getAttribute('id');
                var bInitHandedOff = false;
                var bUsePassedData = false;


                /* Sanity check */
                if (this.nodeName.toLowerCase() != 'table') {
                    _fnLog(null, 0, "Attempted to initialise DataTables on a node which is not a " +
                        "table: " + this.nodeName);
                    return;
                }

                /* Check to see if we are re-initialising a table */
                for (i = 0, iLen = DataTable.settings.length; i < iLen; i++) {
                    /* Base check on table node */
                    if (DataTable.settings[i].nTable == this) {
                        if (oInit === undefined || oInit.bRetrieve) {
                            return DataTable.settings[i].oInstance;
                        }
                        else if (oInit.bDestroy) {
                            DataTable.settings[i].oInstance.fnDestroy();
                            break;
                        }
                        else {
                            _fnLog(DataTable.settings[i], 0, "Cannot reinitialise DataTable.\n\n" +
                                "To retrieve the DataTables object for this table, pass no arguments or see " +
                                "the docs for bRetrieve and bDestroy");
                            return;
                        }
                    }

                    /* If the element we are initialising has the same ID as a table which was previously
                     * initialised, but the table nodes don't match (from before) then we destroy the old
                     * instance by simply deleting it. This is under the assumption that the table has been
                     * destroyed by other methods. Anyone using non-id selectors will need to do this manually
                     */
                    if (DataTable.settings[i].sTableId == this.id) {
                        DataTable.settings.splice(i, 1);
                        break;
                    }
                }

                /* Ensure the table has an ID - required for accessibility */
                if (sId === null || sId === "") {
                    sId = "DataTables_Table_" + (DataTable.ext._oExternConfig.iNextUnique++);
                    this.id = sId;
                }

                /* Create the settings object for this table and set some of the default parameters */
                var oSettings = $.extend(true, {}, DataTable.models.oSettings, {
                    "nTable": this,
                    "oApi": _that.oApi,
                    "oInit": oInit,
                    "sDestroyWidth": $(this).width(),
                    "sInstance": sId,
                    "sTableId": sId
                });
                DataTable.settings.push(oSettings);

                // Need to add the instance after the instance after the settings object has been added
                // to the settings array, so we can self reference the table instance if more than one
                oSettings.oInstance = (_that.length === 1) ? _that : $(this).dataTable();

                /* Setting up the initialisation object */
                if (!oInit) {
                    oInit = {};
                }

                // Backwards compatibility, before we apply all the defaults
                if (oInit.oLanguage) {
                    _fnLanguageCompat(oInit.oLanguage);
                }

                oInit = _fnExtend($.extend(true, {}, DataTable.defaults), oInit);

                // Map the initialisation options onto the settings object
                _fnMap(oSettings.oFeatures, oInit, "bPaginate");
                _fnMap(oSettings.oFeatures, oInit, "bLengthChange");
                _fnMap(oSettings.oFeatures, oInit, "bFilter");
                _fnMap(oSettings.oFeatures, oInit, "bSort");
                _fnMap(oSettings.oFeatures, oInit, "bInfo");
                _fnMap(oSettings.oFeatures, oInit, "bProcessing");
                _fnMap(oSettings.oFeatures, oInit, "bAutoWidth");
                _fnMap(oSettings.oFeatures, oInit, "bSortClasses");
                _fnMap(oSettings.oFeatures, oInit, "bServerSide");
                _fnMap(oSettings.oFeatures, oInit, "bDeferRender");
                _fnMap(oSettings.oScroll, oInit, "sScrollX", "sX");
                _fnMap(oSettings.oScroll, oInit, "sScrollXInner", "sXInner");
                _fnMap(oSettings.oScroll, oInit, "sScrollY", "sY");
                _fnMap(oSettings.oScroll, oInit, "bScrollCollapse", "bCollapse");
                _fnMap(oSettings.oScroll, oInit, "bScrollInfinite", "bInfinite");
                _fnMap(oSettings.oScroll, oInit, "iScrollLoadGap", "iLoadGap");
                _fnMap(oSettings.oScroll, oInit, "bScrollAutoCss", "bAutoCss");
                _fnMap(oSettings, oInit, "asStripeClasses");
                _fnMap(oSettings, oInit, "asStripClasses", "asStripeClasses"); // legacy
                _fnMap(oSettings, oInit, "fnServerData");
                _fnMap(oSettings, oInit, "fnFormatNumber");
                _fnMap(oSettings, oInit, "sServerMethod");
                _fnMap(oSettings, oInit, "aaSorting");
                _fnMap(oSettings, oInit, "aaSortingFixed");
                _fnMap(oSettings, oInit, "aLengthMenu");
                _fnMap(oSettings, oInit, "sPaginationType");
                _fnMap(oSettings, oInit, "sAjaxSource");
                _fnMap(oSettings, oInit, "sAjaxDataProp");
                _fnMap(oSettings, oInit, "iCookieDuration");
                _fnMap(oSettings, oInit, "sCookiePrefix");
                _fnMap(oSettings, oInit, "sDom");
                _fnMap(oSettings, oInit, "bSortCellsTop");
                _fnMap(oSettings, oInit, "iTabIndex");
                _fnMap(oSettings, oInit, "oSearch", "oPreviousSearch");
                _fnMap(oSettings, oInit, "aoSearchCols", "aoPreSearchCols");
                _fnMap(oSettings, oInit, "iDisplayLength", "_iDisplayLength");
                _fnMap(oSettings, oInit, "bJQueryUI", "bJUI");
                _fnMap(oSettings, oInit, "fnCookieCallback");
                _fnMap(oSettings, oInit, "fnStateLoad");
                _fnMap(oSettings, oInit, "fnStateSave");
                _fnMap(oSettings.oLanguage, oInit, "fnInfoCallback");

                /* Callback functions which are array driven */
                _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');
                _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');
                _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');
                _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');
                _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');
                _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');
                _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');
                _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');
                _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');
                _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');
                _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');

                if (oSettings.oFeatures.bServerSide && oSettings.oFeatures.bSort &&
                    oSettings.oFeatures.bSortClasses) {
                    /* Enable sort classes for server-side processing. Safe to do it here, since server-side
                     * processing must be enabled by the developer
                     */
                    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSortingClasses, 'server_side_sort_classes');
                }
                else if (oSettings.oFeatures.bDeferRender) {
                    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSortingClasses, 'defer_sort_classes');
                }

                if (oInit.bJQueryUI) {
                    /* Use the JUI classes object for display. You could clone the oStdClasses object if 
                     * you want to have multiple tables with multiple independent classes 
                     */
                    $.extend(oSettings.oClasses, DataTable.ext.oJUIClasses);

                    if (oInit.sDom === DataTable.defaults.sDom && DataTable.defaults.sDom === "lfrtip") {
                        /* Set the DOM to use a layout suitable for jQuery UI's theming */
                        oSettings.sDom = '<"H"lfr>t<"F"ip>';
                    }
                }
                else {
                    $.extend(oSettings.oClasses, DataTable.ext.oStdClasses);
                }
                $(this).addClass(oSettings.oClasses.sTable);

                /* Calculate the scroll bar width and cache it for use later on */
                if (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") {
                    oSettings.oScroll.iBarWidth = _fnScrollBarWidth();
                }

                if (oSettings.iInitDisplayStart === undefined) {
                    /* Display start point, taking into account the save saving */
                    oSettings.iInitDisplayStart = oInit.iDisplayStart;
                    oSettings._iDisplayStart = oInit.iDisplayStart;
                }

                /* Must be done after everything which can be overridden by a cookie! */
                if (oInit.bStateSave) {
                    oSettings.oFeatures.bStateSave = true;
                    _fnLoadState(oSettings, oInit);
                    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');
                }

                if (oInit.iDeferLoading !== null) {
                    oSettings.bDeferLoading = true;
                    var tmp = $.isArray(oInit.iDeferLoading);
                    oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
                    oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
                }

                if (oInit.aaData !== null) {
                    bUsePassedData = true;
                }

                /* Language definitions */
                if (oInit.oLanguage.sUrl !== "") {
                    /* Get the language definitions from a file - because this Ajax call makes the language
                     * get async to the remainder of this function we use bInitHandedOff to indicate that 
                     * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
                     */
                    oSettings.oLanguage.sUrl = oInit.oLanguage.sUrl;
                    $.getJSON(oSettings.oLanguage.sUrl, null, function (json) {
                        _fnLanguageCompat(json);
                        $.extend(true, oSettings.oLanguage, oInit.oLanguage, json);
                        _fnInitialise(oSettings);
                    });
                    bInitHandedOff = true;
                }
                else {
                    $.extend(true, oSettings.oLanguage, oInit.oLanguage);
                }


                /*
                 * Stripes
                 */
                if (oInit.asStripeClasses === null) {
                    oSettings.asStripeClasses = [
                        oSettings.oClasses.sStripeOdd,
                        oSettings.oClasses.sStripeEven
                    ];
                }

                /* Remove row stripe classes if they are already on the table row */
                iLen = oSettings.asStripeClasses.length;
                oSettings.asDestroyStripes = [];
                if (iLen) {
                    var bStripeRemove = false;
                    var anRows = $(this).children('tbody').children('tr:lt(' + iLen + ')');
                    for (i = 0; i < iLen; i++) {
                        if (anRows.hasClass(oSettings.asStripeClasses[i])) {
                            bStripeRemove = true;

                            /* Store the classes which we are about to remove so they can be re-added on destroy */
                            oSettings.asDestroyStripes.push(oSettings.asStripeClasses[i]);
                        }
                    }

                    if (bStripeRemove) {
                        anRows.removeClass(oSettings.asStripeClasses.join(' '));
                    }
                }

                /*
                 * Columns
                 * See if we should load columns automatically or use defined ones
                 */
                var anThs = [];
                var aoColumnsInit;
                var nThead = this.getElementsByTagName('thead');
                if (nThead.length !== 0) {
                    _fnDetectHeader(oSettings.aoHeader, nThead[0]);
                    anThs = _fnGetUniqueThs(oSettings);
                }

                /* If not given a column array, generate one with nulls */
                if (oInit.aoColumns === null) {
                    aoColumnsInit = [];
                    for (i = 0, iLen = anThs.length; i < iLen; i++) {
                        aoColumnsInit.push(null);
                    }
                }
                else {
                    aoColumnsInit = oInit.aoColumns;
                }

                /* Add the columns */
                for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {
                    /* Short cut - use the loop to check if we have column visibility state to restore */
                    if (oInit.saved_aoColumns !== undefined && oInit.saved_aoColumns.length == iLen) {
                        if (aoColumnsInit[i] === null) {
                            aoColumnsInit[i] = {};
                        }
                        aoColumnsInit[i].bVisible = oInit.saved_aoColumns[i].bVisible;
                    }

                    _fnAddColumn(oSettings, anThs ? anThs[i] : null);
                }

                /* Apply the column definitions */
                _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
                    _fnColumnOptions(oSettings, iCol, oDef);
                });


                /*
                 * Sorting
                 * Check the aaSorting array
                 */
                for (i = 0, iLen = oSettings.aaSorting.length; i < iLen; i++) {
                    if (oSettings.aaSorting[i][0] >= oSettings.aoColumns.length) {
                        oSettings.aaSorting[i][0] = 0;
                    }
                    var oColumn = oSettings.aoColumns[ oSettings.aaSorting[i][0] ];

                    /* Add a default sorting index */
                    if (oSettings.aaSorting[i][2] === undefined) {
                        oSettings.aaSorting[i][2] = 0;
                    }

                    /* If aaSorting is not defined, then we use the first indicator in asSorting */
                    if (oInit.aaSorting === undefined && oSettings.saved_aaSorting === undefined) {
                        oSettings.aaSorting[i][1] = oColumn.asSorting[0];
                    }

                    /* Set the current sorting index based on aoColumns.asSorting */
                    for (j = 0, jLen = oColumn.asSorting.length; j < jLen; j++) {
                        if (oSettings.aaSorting[i][1] == oColumn.asSorting[j]) {
                            oSettings.aaSorting[i][2] = j;
                            break;
                        }
                    }
                }

                /* Do a first pass on the sorting classes (allows any size changes to be taken into
                 * account, and also will apply sorting disabled classes if disabled
                 */
                _fnSortingClasses(oSettings);


                /*
                 * Final init
                 * Cache the header, body and footer as required, creating them if needed
                 */

                /* Browser support detection */
                _fnBrowserDetect(oSettings);

                // Work around for Webkit bug 83867 - store the caption-side before removing from doc
                var captions = $(this).children('caption').each(function () {
                    this._captionSide = $(this).css('caption-side');
                });

                var thead = $(this).children('thead');
                if (thead.length === 0) {
                    thead = [ document.createElement('thead') ];
                    this.appendChild(thead[0]);
                }
                oSettings.nTHead = thead[0];

                var tbody = $(this).children('tbody');
                if (tbody.length === 0) {
                    tbody = [ document.createElement('tbody') ];
                    this.appendChild(tbody[0]);
                }
                oSettings.nTBody = tbody[0];
                oSettings.nTBody.setAttribute("role", "alert");
                oSettings.nTBody.setAttribute("aria-live", "polite");
                oSettings.nTBody.setAttribute("aria-relevant", "all");

                var tfoot = $(this).children('tfoot');
                if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "")) {
                    // If we are a scrolling table, and no footer has been given, then we need to create
                    // a tfoot element for the caption element to be appended to
                    tfoot = [ document.createElement('tfoot') ];
                    this.appendChild(tfoot[0]);
                }

                if (tfoot.length > 0) {
                    oSettings.nTFoot = tfoot[0];
                    _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);
                }

                /* Check if there is data passing into the constructor */
                if (bUsePassedData) {
                    for (i = 0; i < oInit.aaData.length; i++) {
                        _fnAddData(oSettings, oInit.aaData[ i ]);
                    }
                }
                else {
                    /* Grab the data from the page */
                    _fnGatherData(oSettings);
                }

                /* Copy the data index array */
                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

                /* Initialisation complete - table can be drawn */
                oSettings.bInitialised = true;

                /* Check if we need to initialise the table (it might not have been handed off to the
                 * language processor)
                 */
                if (bInitHandedOff === false) {
                    _fnInitialise(oSettings);
                }
            });
            _that = null;
            return this;
        };


        /**
         * Provide a common method for plug-ins to check the version of DataTables being used, in order
         * to ensure compatibility.
         *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
         *    formats "X" and "X.Y" are also acceptable.
         *  @returns {boolean} true if this version of DataTables is greater or equal to the required
         *    version, or false if this version of DataTales is not suitable
         *  @static
         *  @dtopt API-Static
         *
         *  @example
         *    alert( $.fn.dataTable.fnVersionCheck( '1.9.0' ) );
         */
        DataTable.fnVersionCheck = function (sVersion) {
            /* This is cheap, but effective */
            var fnZPad = function (Zpad, count) {
                while (Zpad.length < count) {
                    Zpad += '0';
                }
                return Zpad;
            };
            var aThis = DataTable.ext.sVersion.split('.');
            var aThat = sVersion.split('.');
            var sThis = '', sThat = '';

            for (var i = 0, iLen = aThat.length; i < iLen; i++) {
                sThis += fnZPad(aThis[i], 3);
                sThat += fnZPad(aThat[i], 3);
            }

            return parseInt(sThis, 10) >= parseInt(sThat, 10);
        };


        /**
         * Check if a TABLE node is a DataTable table already or not.
         *  @param {node} nTable The TABLE node to check if it is a DataTable or not (note that other
         *    node types can be passed in, but will always return false).
         *  @returns {boolean} true the table given is a DataTable, or false otherwise
         *  @static
         *  @dtopt API-Static
         *
         *  @example
         *    var ex = document.getElementById('example');
         *    if ( ! $.fn.DataTable.fnIsDataTable( ex ) ) {
	 *      $(ex).dataTable();
	 *    }
         */
        DataTable.fnIsDataTable = function (nTable) {
            var o = DataTable.settings;

            for (var i = 0; i < o.length; i++) {
                if (o[i].nTable === nTable || o[i].nScrollHead === nTable || o[i].nScrollFoot === nTable) {
                    return true;
                }
            }

            return false;
        };


        /**
         * Get all DataTable tables that have been initialised - optionally you can select to
         * get only currently visible tables.
         *  @param {boolean} [bVisible=false] Flag to indicate if you want all (default) or
         *    visible tables only.
         *  @returns {array} Array of TABLE nodes (not DataTable instances) which are DataTables
         *  @static
         *  @dtopt API-Static
         *
         *  @example
         *    var table = $.fn.dataTable.fnTables(true);
         *    if ( table.length > 0 ) {
	 *      $(table).dataTable().fnAdjustColumnSizing();
	 *    }
         */
        DataTable.fnTables = function (bVisible) {
            var out = [];

            jQuery.each(DataTable.settings, function (i, o) {
                if (!bVisible || (bVisible === true && $(o.nTable).is(':visible'))) {
                    out.push(o.nTable);
                }
            });

            return out;
        };


        /**
         * Version string for plug-ins to check compatibility. Allowed format is
         * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and
         * e are optional
         *  @member
         *  @type string
         *  @default Version number
         */
        DataTable.version = "1.9.4";

        /**
         * Private data store, containing all of the settings objects that are created for the
         * tables on a given page.
         *
         * Note that the <i>DataTable.settings</i> object is aliased to <i>jQuery.fn.dataTableExt</i>
         * through which it may be accessed and manipulated, or <i>jQuery.fn.dataTable.settings</i>.
         *  @member
         *  @type array
         *  @default []
         *  @private
         */
        DataTable.settings = [];

        /**
         * Object models container, for the various models that DataTables has available
         * to it. These models define the objects that are used to hold the active state
         * and configuration of the table.
         *  @namespace
         */
        DataTable.models = {};


        /**
         * DataTables extension options and plug-ins. This namespace acts as a collection "area"
         * for plug-ins that can be used to extend the default DataTables behaviour - indeed many
         * of the build in methods use this method to provide their own capabilities (sorting methods
         * for example).
         *
         * Note that this namespace is aliased to jQuery.fn.dataTableExt so it can be readily accessed
         * and modified by plug-ins.
         *  @namespace
         */
        DataTable.models.ext = {
            /**
             * Plug-in filtering functions - this method of filtering is complimentary to the default
             * type based filtering, and a lot more comprehensive as it allows you complete control
             * over the filtering logic. Each element in this array is a function (parameters
             * described below) that is called for every row in the table, and your logic decides if
             * it should be included in the filtered data set or not.
             *   <ul>
             *     <li>
             *       Function input parameters:
             *       <ul>
             *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
             *         <li>{array|object} Data for the row to be processed (same as the original format
             *           that was passed in as the data source, or an array from a DOM data source</li>
             *         <li>{int} Row index in aoData ({@link DataTable.models.oSettings.aoData}), which can
             *           be useful to retrieve the TR element if you need DOM interaction.</li>
             *       </ul>
             *     </li>
             *     <li>
             *       Function return:
             *       <ul>
             *         <li>{boolean} Include the row in the filtered result set (true) or not (false)</li>
             *       </ul>
             *     </il>
             *   </ul>
             *  @type array
             *  @default []
             *
             *  @example
             *    // The following example shows custom filtering being applied to the fourth column (i.e.
             *    // the aData[3] index) based on two input values from the end-user, matching the data in
             *    // a certain range.
             *    $.fn.dataTableExt.afnFiltering.push(
             *      function( oSettings, aData, iDataIndex ) {
		 *        var iMin = document.getElementById('min').value * 1;
		 *        var iMax = document.getElementById('max').value * 1;
		 *        var iVersion = aData[3] == "-" ? 0 : aData[3]*1;
		 *        if ( iMin == "" && iMax == "" ) {
		 *          return true;
		 *        }
		 *        else if ( iMin == "" && iVersion < iMax ) {
		 *          return true;
		 *        }
		 *        else if ( iMin < iVersion && "" == iMax ) {
		 *          return true;
		 *        }
		 *        else if ( iMin < iVersion && iVersion < iMax ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
             *    );
             */
            "afnFiltering": [],


            /**
             * Plug-in sorting functions - this method of sorting is complimentary to the default type
             * based sorting that DataTables does automatically, allowing much greater control over the
             * the data that is being used to sort a column. This is useful if you want to do sorting
             * based on live data (for example the contents of an 'input' element) rather than just the
             * static string that DataTables knows of. The way these plug-ins work is that you create
             * an array of the values you wish to be sorted for the column in question and then return
             * that array. Which pre-sorting function is run here depends on the sSortDataType parameter
             * that is used for the column (if any). This is the corollary of <i>ofnSearch</i> for sort
             * data.
             *   <ul>
             *     <li>
             *       Function input parameters:
             *       <ul>
             *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
             *         <li>{int} Target column index</li>
             *       </ul>
             *     </li>
             *     <li>
             *       Function return:
             *       <ul>
             *         <li>{array} Data for the column to be sorted upon</li>
             *       </ul>
             *     </il>
             *   </ul>
             *
             * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for
             * the different uses that DataTables can put the data to. Specifically <i>mData</i> when
             * used as a function will give you a 'type' (sorting, filtering etc) that you can use to
             * prepare the data as required for the different types. As such, this method is deprecated.
             *  @type array
             *  @default []
             *  @deprecated
             *
             *  @example
             *    // Updating the cached sorting information with user entered values in HTML input elements
             *    jQuery.fn.dataTableExt.afnSortData['dom-text'] = function ( oSettings, iColumn )
             *    {
		 *      var aData = [];
		 *      $( 'td:eq('+iColumn+') input', oSettings.oApi._fnGetTrNodes(oSettings) ).each( function () {
		 *        aData.push( this.value );
		 *      } );
		 *      return aData;
		 *    }
             */
            "afnSortData": [],


            /**
             * Feature plug-ins - This is an array of objects which describe the feature plug-ins that are
             * available to DataTables. These feature plug-ins are accessible through the sDom initialisation
             * option. As such, each feature plug-in must describe a function that is used to initialise
             * itself (fnInit), a character so the feature can be enabled by sDom (cFeature) and the name
             * of the feature (sFeature). Thus the objects attached to this method must provide:
             *   <ul>
             *     <li>{function} fnInit Initialisation of the plug-in
             *       <ul>
             *         <li>
             *           Function input parameters:
             *           <ul>
             *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
             *           </ul>
             *         </li>
             *         <li>
             *           Function return:
             *           <ul>
             *             <li>{node|null} The element which contains your feature. Note that the return
             *                may also be void if your plug-in does not require to inject any DOM elements
             *                into DataTables control (sDom) - for example this might be useful when
             *                developing a plug-in which allows table control via keyboard entry.</li>
             *           </ul>
             *         </il>
             *       </ul>
             *     </li>
             *     <li>{character} cFeature Character that will be matched in sDom - case sensitive</li>
             *     <li>{string} sFeature Feature name</li>
             *   </ul>
             *  @type array
             *  @default []
             *
             *  @example
             *    // How TableTools initialises itself.
             *    $.fn.dataTableExt.aoFeatures.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T",
		 *      "sFeature": "TableTools"
		 *    } );
             */
            "aoFeatures": [],


            /**
             * Type detection plug-in functions - DataTables utilises types to define how sorting and
             * filtering behave, and types can be either  be defined by the developer (sType for the
             * column) or they can be automatically detected by the methods in this array. The functions
             * defined in the array are quite simple, taking a single parameter (the data to analyse)
             * and returning the type if it is a known type, or null otherwise.
             *   <ul>
             *     <li>
             *       Function input parameters:
             *       <ul>
             *         <li>{*} Data from the column cell to be analysed</li>
             *       </ul>
             *     </li>
             *     <li>
             *       Function return:
             *       <ul>
             *         <li>{string|null} Data type detected, or null if unknown (and thus pass it
             *           on to the other type detection functions.</li>
             *       </ul>
             *     </il>
             *   </ul>
             *  @type array
             *  @default []
             *
             *  @example
             *    // Currency type detection plug-in:
             *    jQuery.fn.dataTableExt.aTypes.push(
             *      function ( sData ) {
		 *        var sValidChars = "0123456789.-";
		 *        var Char;
		 *        
		 *        // Check the numeric part
		 *        for ( i=1 ; i<sData.length ; i++ ) {
		 *          Char = sData.charAt(i); 
		 *          if (sValidChars.indexOf(Char) == -1) {
		 *            return null;
		 *          }
		 *        }
		 *        
		 *        // Check prefixed by currency
		 *        if ( sData.charAt(0) == '$' || sData.charAt(0) == '&pound;' ) {
		 *          return 'currency';
		 *        }
		 *        return null;
		 *      }
             *    );
             */
            "aTypes": [],


            /**
             * Provide a common method for plug-ins to check the version of DataTables being used,
             * in order to ensure compatibility.
             *  @type function
             *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note
             *    that the formats "X" and "X.Y" are also acceptable.
             *  @returns {boolean} true if this version of DataTables is greater or equal to the
             *    required version, or false if this version of DataTales is not suitable
             *
             *  @example
             *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
             */
            "fnVersionCheck": DataTable.fnVersionCheck,


            /**
             * Index for what 'this' index API functions should use
             *  @type int
             *  @default 0
             */
            "iApiIndex": 0,


            /**
             * Pre-processing of filtering data plug-ins - When you assign the sType for a column
             * (or have it automatically detected for you by DataTables or a type detection plug-in),
             * you will typically be using this for custom sorting, but it can also be used to provide
             * custom filtering by allowing you to pre-processing the data and returning the data in
             * the format that should be filtered upon. This is done by adding functions this object
             * with a parameter name which matches the sType for that target column. This is the
             * corollary of <i>afnSortData</i> for filtering data.
             *   <ul>
             *     <li>
             *       Function input parameters:
             *       <ul>
             *         <li>{*} Data from the column cell to be prepared for filtering</li>
             *       </ul>
             *     </li>
             *     <li>
             *       Function return:
             *       <ul>
             *         <li>{string|null} Formatted string that will be used for the filtering.</li>
             *       </ul>
             *     </il>
             *   </ul>
             *
             * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for
             * the different uses that DataTables can put the data to. Specifically <i>mData</i> when
             * used as a function will give you a 'type' (sorting, filtering etc) that you can use to
             * prepare the data as required for the different types. As such, this method is deprecated.
             *  @type object
             *  @default {}
             *  @deprecated
             *
             *  @example
             *    $.fn.dataTableExt.ofnSearch['title-numeric'] = function ( sData ) {
		 *      return sData.replace(/\n/g," ").replace( /<.*?>/g, "" );
		 *    }
             */
            "ofnSearch": {},


            /**
             * Container for all private functions in DataTables so they can be exposed externally
             *  @type object
             *  @default {}
             */
            "oApi": {},


            /**
             * Storage for the various classes that DataTables uses
             *  @type object
             *  @default {}
             */
            "oStdClasses": {},


            /**
             * Storage for the various classes that DataTables uses - jQuery UI suitable
             *  @type object
             *  @default {}
             */
            "oJUIClasses": {},


            /**
             * Pagination plug-in methods - The style and controls of the pagination can significantly
             * impact on how the end user interacts with the data in your table, and DataTables allows
             * the addition of pagination controls by extending this object, which can then be enabled
             * through the <i>sPaginationType</i> initialisation parameter. Each pagination type that
             * is added is an object (the property name of which is what <i>sPaginationType</i> refers
             * to) that has two properties, both methods that are used by DataTables to update the
             * control's state.
             *   <ul>
             *     <li>
             *       fnInit -  Initialisation of the paging controls. Called only during initialisation
             *         of the table. It is expected that this function will add the required DOM elements
             *         to the page for the paging controls to work. The element pointer
             *         'oSettings.aanFeatures.p' array is provided by DataTables to contain the paging
             *         controls (note that this is a 2D array to allow for multiple instances of each
             *         DataTables DOM element). It is suggested that you add the controls to this element
             *         as children
             *       <ul>
             *         <li>
             *           Function input parameters:
             *           <ul>
             *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
             *             <li>{node} Container into which the pagination controls must be inserted</li>
             *             <li>{function} Draw callback function - whenever the controls cause a page
             *               change, this method must be called to redraw the table.</li>
             *           </ul>
             *         </li>
             *         <li>
             *           Function return:
             *           <ul>
             *             <li>No return required</li>
             *           </ul>
             *         </il>
             *       </ul>
             *     </il>
             *     <li>
             *       fnInit -  This function is called whenever the paging status of the table changes and is
             *         typically used to update classes and/or text of the paging controls to reflex the new
             *         status.
             *       <ul>
             *         <li>
             *           Function input parameters:
             *           <ul>
             *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
             *             <li>{function} Draw callback function - in case you need to redraw the table again
             *               or attach new event listeners</li>
             *           </ul>
             *         </li>
             *         <li>
             *           Function return:
             *           <ul>
             *             <li>No return required</li>
             *           </ul>
             *         </il>
             *       </ul>
             *     </il>
             *   </ul>
             *  @type object
             *  @default {}
             *
             *  @example
             *    $.fn.dataTableExt.oPagination.four_button = {
		 *      "fnInit": function ( oSettings, nPaging, fnCallbackDraw ) {
		 *        nFirst = document.createElement( 'span' );
		 *        nPrevious = document.createElement( 'span' );
		 *        nNext = document.createElement( 'span' );
		 *        nLast = document.createElement( 'span' );
		 *        
		 *        nFirst.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sFirst ) );
		 *        nPrevious.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sPrevious ) );
		 *        nNext.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sNext ) );
		 *        nLast.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sLast ) );
		 *        
		 *        nFirst.className = "paginate_button first";
		 *        nPrevious.className = "paginate_button previous";
		 *        nNext.className="paginate_button next";
		 *        nLast.className = "paginate_button last";
		 *        
		 *        nPaging.appendChild( nFirst );
		 *        nPaging.appendChild( nPrevious );
		 *        nPaging.appendChild( nNext );
		 *        nPaging.appendChild( nLast );
		 *        
		 *        $(nFirst).click( function () {
		 *          oSettings.oApi._fnPageChange( oSettings, "first" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *        
		 *        $(nPrevious).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "previous" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *        
		 *        $(nNext).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "next" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *        
		 *        $(nLast).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "last" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *        
		 *        $(nFirst).bind( 'selectstart', function () { return false; } );
		 *        $(nPrevious).bind( 'selectstart', function () { return false; } );
		 *        $(nNext).bind( 'selectstart', function () { return false; } );
		 *        $(nLast).bind( 'selectstart', function () { return false; } );
		 *      },
		 *      
		 *      "fnUpdate": function ( oSettings, fnCallbackDraw ) {
		 *        if ( !oSettings.aanFeatures.p ) {
		 *          return;
		 *        }
		 *        
		 *        // Loop over each instance of the pager
		 *        var an = oSettings.aanFeatures.p;
		 *        for ( var i=0, iLen=an.length ; i<iLen ; i++ ) {
		 *          var buttons = an[i].getElementsByTagName('span');
		 *          if ( oSettings._iDisplayStart === 0 ) {
		 *            buttons[0].className = "paginate_disabled_previous";
		 *            buttons[1].className = "paginate_disabled_previous";
		 *          }
		 *          else {
		 *            buttons[0].className = "paginate_enabled_previous";
		 *            buttons[1].className = "paginate_enabled_previous";
		 *          }
		 *          
		 *          if ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) {
		 *            buttons[2].className = "paginate_disabled_next";
		 *            buttons[3].className = "paginate_disabled_next";
		 *          }
		 *          else {
		 *            buttons[2].className = "paginate_enabled_next";
		 *            buttons[3].className = "paginate_enabled_next";
		 *          }
		 *        }
		 *      }
		 *    };
             */
            "oPagination": {},


            /**
             * Sorting plug-in methods - Sorting in DataTables is based on the detected type of the
             * data column (you can add your own type detection functions, or override automatic
             * detection using sType). With this specific type given to the column, DataTables will
             * apply the required sort from the functions in the object. Each sort type must provide
             * two mandatory methods, one each for ascending and descending sorting, and can optionally
             * provide a pre-formatting method that will help speed up sorting by allowing DataTables
             * to pre-format the sort data only once (rather than every time the actual sort functions
             * are run). The two sorting functions are typical Javascript sort methods:
             *   <ul>
             *     <li>
             *       Function input parameters:
             *       <ul>
             *         <li>{*} Data to compare to the second parameter</li>
             *         <li>{*} Data to compare to the first parameter</li>
             *       </ul>
             *     </li>
             *     <li>
             *       Function return:
             *       <ul>
             *         <li>{int} Sorting match: <0 if first parameter should be sorted lower than
             *           the second parameter, ===0 if the two parameters are equal and >0 if
             *           the first parameter should be sorted height than the second parameter.</li>
             *       </ul>
             *     </il>
             *   </ul>
             *  @type object
             *  @default {}
             *
             *  @example
             *    // Case-sensitive string sorting, with no pre-formatting method
             *    $.extend( $.fn.dataTableExt.oSort, {
		 *      "string-case-asc": function(x,y) {
		 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		 *      },
		 *      "string-case-desc": function(x,y) {
		 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		 *      }
		 *    } );
             *
             *  @example
             *    // Case-insensitive string sorting, with pre-formatting
             *    $.extend( $.fn.dataTableExt.oSort, {
		 *      "string-pre": function(x) {
		 *        return x.toLowerCase();
		 *      },
		 *      "string-asc": function(x,y) {
		 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		 *      },
		 *      "string-desc": function(x,y) {
		 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		 *      }
		 *    } );
             */
            "oSort": {},


            /**
             * Version string for plug-ins to check compatibility. Allowed format is
             * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and
             * e are optional
             *  @type string
             *  @default Version number
             */
            "sVersion": DataTable.version,


            /**
             * How should DataTables report an error. Can take the value 'alert' or 'throw'
             *  @type string
             *  @default alert
             */
            "sErrMode": "alert",


            /**
             * Store information for DataTables to access globally about other instances
             *  @namespace
             *  @private
             */
            "_oExternConfig": {
                /* int:iNextUnique - next unique number for an instance */
                "iNextUnique": 0
            }
        };


        /**
         * Template object for the way in which DataTables holds information about
         * search information for the global filter and individual column filters.
         *  @namespace
         */
        DataTable.models.oSearch = {
            /**
             * Flag to indicate if the filtering should be case insensitive or not
             *  @type boolean
             *  @default true
             */
            "bCaseInsensitive": true,

            /**
             * Applied search term
             *  @type string
             *  @default <i>Empty string</i>
             */
            "sSearch": "",

            /**
             * Flag to indicate if the search term should be interpreted as a
             * regular expression (true) or not (false) and therefore and special
             * regex characters escaped.
             *  @type boolean
             *  @default false
             */
            "bRegex": false,

            /**
             * Flag to indicate if DataTables is to use its smart filtering or not.
             *  @type boolean
             *  @default true
             */
            "bSmart": true
        };


        /**
         * Template object for the way in which DataTables holds information about
         * each individual row. This is the object format used for the settings
         * aoData array.
         *  @namespace
         */
        DataTable.models.oRow = {
            /**
             * TR element for the row
             *  @type node
             *  @default null
             */
            "nTr": null,

            /**
             * Data object from the original data source for the row. This is either
             * an array if using the traditional form of DataTables, or an object if
             * using mData options. The exact type will depend on the passed in
             * data from the data source, or will be an array if using DOM a data
             * source.
             *  @type array|object
             *  @default []
             */
            "_aData": [],

            /**
             * Sorting data cache - this array is ostensibly the same length as the
             * number of columns (although each index is generated only as it is
             * needed), and holds the data that is used for sorting each column in the
             * row. We do this cache generation at the start of the sort in order that
             * the formatting of the sort data need be done only once for each cell
             * per sort. This array should not be read from or written to by anything
             * other than the master sorting methods.
             *  @type array
             *  @default []
             *  @private
             */
            "_aSortData": [],

            /**
             * Array of TD elements that are cached for hidden rows, so they can be
             * reinserted into the table if a column is made visible again (or to act
             * as a store if a column is made hidden). Only hidden columns have a
             * reference in the array. For non-hidden columns the value is either
             * undefined or null.
             *  @type array nodes
             *  @default []
             *  @private
             */
            "_anHidden": [],

            /**
             * Cache of the class name that DataTables has applied to the row, so we
             * can quickly look at this variable rather than needing to do a DOM check
             * on className for the nTr property.
             *  @type string
             *  @default <i>Empty string</i>
             *  @private
             */
            "_sRowStripe": ""
        };


        /**
         * Template object for the column information object in DataTables. This object
         * is held in the settings aoColumns array and contains all the information that
         * DataTables needs about each individual column.
         *
         * Note that this object is related to {@link DataTable.defaults.columns}
         * but this one is the internal data store for DataTables's cache of columns.
         * It should NOT be manipulated outside of DataTables. Any configuration should
         * be done through the initialisation options.
         *  @namespace
         */
        DataTable.models.oColumn = {
            /**
             * A list of the columns that sorting should occur on when this column
             * is sorted. That this property is an array allows multi-column sorting
             * to be defined for a column (for example first name / last name columns
             * would benefit from this). The values are integers pointing to the
             * columns to be sorted on (typically it will be a single integer pointing
             * at itself, but that doesn't need to be the case).
             *  @type array
             */
            "aDataSort": null,

            /**
             * Define the sorting directions that are applied to the column, in sequence
             * as the column is repeatedly sorted upon - i.e. the first value is used
             * as the sorting direction when the column if first sorted (clicked on).
             * Sort it again (click again) and it will move on to the next index.
             * Repeat until loop.
             *  @type array
             */
            "asSorting": null,

            /**
             * Flag to indicate if the column is searchable, and thus should be included
             * in the filtering or not.
             *  @type boolean
             */
            "bSearchable": null,

            /**
             * Flag to indicate if the column is sortable or not.
             *  @type boolean
             */
            "bSortable": null,

            /**
             * <code>Deprecated</code> When using fnRender, you have two options for what
             * to do with the data, and this property serves as the switch. Firstly, you
             * can have the sorting and filtering use the rendered value (true - default),
             * or you can have the sorting and filtering us the original value (false).
             *
             * Please note that this option has now been deprecated and will be removed
             * in the next version of DataTables. Please use mRender / mData rather than
             * fnRender.
             *  @type boolean
             *  @deprecated
             */
            "bUseRendered": null,

            /**
             * Flag to indicate if the column is currently visible in the table or not
             *  @type boolean
             */
            "bVisible": null,

            /**
             * Flag to indicate to the type detection method if the automatic type
             * detection should be used, or if a column type (sType) has been specified
             *  @type boolean
             *  @default true
             *  @private
             */
            "_bAutoType": true,

            /**
             * Developer definable function that is called whenever a cell is created (Ajax source,
             * etc) or processed for input (DOM source). This can be used as a compliment to mRender
             * allowing you to modify the DOM element (add background colour for example) when the
             * element is available.
             *  @type function
             *  @param {element} nTd The TD node that has been created
             *  @param {*} sData The Data for the cell
             *  @param {array|object} oData The data for the whole row
             *  @param {int} iRow The row index for the aoData data store
             *  @default null
             */
            "fnCreatedCell": null,

            /**
             * Function to get data from a cell in a column. You should <b>never</b>
             * access data directly through _aData internally in DataTables - always use
             * the method attached to this property. It allows mData to function as
             * required. This function is automatically assigned by the column
             * initialisation method
             *  @type function
             *  @param {array|object} oData The data array/object for the array
             *    (i.e. aoData[]._aData)
             *  @param {string} sSpecific The specific data type you want to get -
             *    'display', 'type' 'filter' 'sort'
             *  @returns {*} The data for the cell from the given row's data
             *  @default null
             */
            "fnGetData": null,

            /**
             * <code>Deprecated</code> Custom display function that will be called for the
             * display of each cell in this column.
             *
             * Please note that this option has now been deprecated and will be removed
             * in the next version of DataTables. Please use mRender / mData rather than
             * fnRender.
             *  @type function
             *  @param {object} o Object with the following parameters:
             *  @param {int}    o.iDataRow The row in aoData
             *  @param {int}    o.iDataColumn The column in question
             *  @param {array}  o.aData The data for the row in question
             *  @param {object} o.oSettings The settings object for this DataTables instance
             *  @returns {string} The string you which to use in the display
             *  @default null
             *  @deprecated
             */
            "fnRender": null,

            /**
             * Function to set data for a cell in the column. You should <b>never</b>
             * set the data directly to _aData internally in DataTables - always use
             * this method. It allows mData to function as required. This function
             * is automatically assigned by the column initialisation method
             *  @type function
             *  @param {array|object} oData The data array/object for the array
             *    (i.e. aoData[]._aData)
             *  @param {*} sValue Value to set
             *  @default null
             */
            "fnSetData": null,

            /**
             * Property to read the value for the cells in the column from the data
             * source array / object. If null, then the default content is used, if a
             * function is given then the return from the function is used.
             *  @type function|int|string|null
             *  @default null
             */
            "mData": null,

            /**
             * Partner property to mData which is used (only when defined) to get
             * the data - i.e. it is basically the same as mData, but without the
             * 'set' option, and also the data fed to it is the result from mData.
             * This is the rendering method to match the data method of mData.
             *  @type function|int|string|null
             *  @default null
             */
            "mRender": null,

            /**
             * Unique header TH/TD element for this column - this is what the sorting
             * listener is attached to (if sorting is enabled.)
             *  @type node
             *  @default null
             */
            "nTh": null,

            /**
             * Unique footer TH/TD element for this column (if there is one). Not used
             * in DataTables as such, but can be used for plug-ins to reference the
             * footer for each column.
             *  @type node
             *  @default null
             */
            "nTf": null,

            /**
             * The class to apply to all TD elements in the table's TBODY for the column
             *  @type string
             *  @default null
             */
            "sClass": null,

            /**
             * When DataTables calculates the column widths to assign to each column,
             * it finds the longest string in each column and then constructs a
             * temporary table and reads the widths from that. The problem with this
             * is that "mmm" is much wider then "iiii", but the latter is a longer
             * string - thus the calculation can go wrong (doing it properly and putting
             * it into an DOM object and measuring that is horribly(!) slow). Thus as
             * a "work around" we provide this option. It will append its value to the
             * text that is found to be the longest string for the column - i.e. padding.
             *  @type string
             */
            "sContentPadding": null,

            /**
             * Allows a default value to be given for a column's data, and will be used
             * whenever a null data source is encountered (this can be because mData
             * is set to null, or because the data source itself is null).
             *  @type string
             *  @default null
             */
            "sDefaultContent": null,

            /**
             * Name for the column, allowing reference to the column by name as well as
             * by index (needs a lookup to work by name).
             *  @type string
             */
            "sName": null,

            /**
             * Custom sorting data type - defines which of the available plug-ins in
             * afnSortData the custom sorting will use - if any is defined.
             *  @type string
             *  @default std
             */
            "sSortDataType": 'std',

            /**
             * Class to be applied to the header element when sorting on this column
             *  @type string
             *  @default null
             */
            "sSortingClass": null,

            /**
             * Class to be applied to the header element when sorting on this column -
             * when jQuery UI theming is used.
             *  @type string
             *  @default null
             */
            "sSortingClassJUI": null,

            /**
             * Title of the column - what is seen in the TH element (nTh).
             *  @type string
             */
            "sTitle": null,

            /**
             * Column sorting and filtering type
             *  @type string
             *  @default null
             */
            "sType": null,

            /**
             * Width of the column
             *  @type string
             *  @default null
             */
            "sWidth": null,

            /**
             * Width of the column when it was first "encountered"
             *  @type string
             *  @default null
             */
            "sWidthOrig": null
        };


        /**
         * Initialisation options that can be given to DataTables at initialisation
         * time.
         *  @namespace
         */
        DataTable.defaults = {
            /**
             * An array of data to use for the table, passed in at initialisation which
             * will be used in preference to any data which is already in the DOM. This is
             * particularly useful for constructing tables purely in Javascript, for
             * example with a custom Ajax call.
             *  @type array
             *  @default null
             *  @dtopt Option
             *
             *  @example
             *    // Using a 2D array data source
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "aaData": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "aoColumns": [
		 *          { "sTitle": "Engine" },
		 *          { "sTitle": "Browser" },
		 *          { "sTitle": "Platform" },
		 *          { "sTitle": "Version" },
		 *          { "sTitle": "Grade" }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using an array of objects as a data source (mData)
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "aaData": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "aoColumns": [
		 *          { "sTitle": "Engine",   "mData": "engine" },
		 *          { "sTitle": "Browser",  "mData": "browser" },
		 *          { "sTitle": "Platform", "mData": "platform" },
		 *          { "sTitle": "Version",  "mData": "version" },
		 *          { "sTitle": "Grade",    "mData": "grade" }
		 *        ]
		 *      } );
		 *    } );
             */
            "aaData": null,


            /**
             * If sorting is enabled, then DataTables will perform a first pass sort on
             * initialisation. You can define which column(s) the sort is performed upon,
             * and the sorting direction, with this variable. The aaSorting array should
             * contain an array for each column to be sorted initially containing the
             * column's index and a direction string ('asc' or 'desc').
             *  @type array
             *  @default [[0,'asc']]
             *  @dtopt Option
             *
             *  @example
             *    // Sort by 3rd column first, and then 4th column
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aaSorting": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
             *
             *    // No initial sorting
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aaSorting": []
		 *      } );
		 *    } );
             */
            "aaSorting": [
                [0, 'asc']
            ],


            /**
             * This parameter is basically identical to the aaSorting parameter, but
             * cannot be overridden by user interaction with the table. What this means
             * is that you could have a column (visible or hidden) which the sorting will
             * always be forced on first - any sorting after that (from the user) will
             * then be performed as required. This can be useful for grouping rows
             * together.
             *  @type array
             *  @default null
             *  @dtopt Option
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aaSortingFixed": [[0,'asc']]
		 *      } );
		 *    } )
             */
            "aaSortingFixed": null,


            /**
             * This parameter allows you to readily specify the entries in the length drop
             * down menu that DataTables shows when pagination is enabled. It can be
             * either a 1D array of options which will be used for both the displayed
             * option and the value, or a 2D array which will use the array in the first
             * position as the value, and the array in the second position as the
             * displayed options (useful for language strings such as 'All').
             *  @type array
             *  @default [ 10, 25, 50, 100 ]
             *  @dtopt Option
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aLengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Setting the default display length as well as length menu
             *    // This is likely to be wanted if you remove the '10' option which
             *    // is the iDisplayLength default.
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "iDisplayLength": 25,
		 *        "aLengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]]
		 *      } );
		 *    } );
             */
            "aLengthMenu": [ 10, 25, 50, 100 ],


            /**
             * The aoColumns option in the initialisation parameter allows you to define
             * details about the way individual columns behave. For a full list of
             * column options that can be set, please see
             * {@link DataTable.defaults.columns}. Note that if you use aoColumns to
             * define your columns, you must have an entry in the array for every single
             * column that you have in your table (these can be null if you don't which
             * to specify any options).
             *  @member
             */
            "aoColumns": null,

            /**
             * Very similar to aoColumns, aoColumnDefs allows you to target a specific
             * column, multiple columns, or all columns, using the aTargets property of
             * each object in the array. This allows great flexibility when creating
             * tables, as the aoColumnDefs arrays can be of any length, targeting the
             * columns you specifically want. aoColumnDefs may use any of the column
             * options available: {@link DataTable.defaults.columns}, but it _must_
             * have aTargets defined in each object in the array. Values in the aTargets
             * array may be:
             *   <ul>
             *     <li>a string - class name will be matched on the TH for the column</li>
             *     <li>0 or a positive integer - column index counting from the left</li>
             *     <li>a negative integer - column index counting from the right</li>
             *     <li>the string "_all" - all columns (i.e. assign a default)</li>
             *   </ul>
             *  @member
             */
            "aoColumnDefs": null,


            /**
             * Basically the same as oSearch, this parameter defines the individual column
             * filtering state at initialisation time. The array must be of the same size
             * as the number of columns, and each element be an object with the parameters
             * "sSearch" and "bEscapeRegex" (the latter is optional). 'null' is also
             * accepted and the default will be used.
             *  @type array
             *  @default []
             *  @dtopt Option
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoSearchCols": [
		 *          null,
		 *          { "sSearch": "My filter" },
		 *          null,
		 *          { "sSearch": "^[0-9]", "bEscapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
             */
            "aoSearchCols": [],


            /**
             * An array of CSS classes that should be applied to displayed rows. This
             * array may be of any length, and DataTables will apply each class
             * sequentially, looping when required.
             *  @type array
             *  @default null <i>Will take the values determined by the oClasses.sStripe*
             *    options</i>
             *  @dtopt Option
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "asStripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
             */
            "asStripeClasses": null,


            /**
             * Enable or disable automatic column width calculation. This can be disabled
             * as an optimisation (it takes some time to calculate the widths) if the
             * tables widths are passed in using aoColumns.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bAutoWidth": false
		 *      } );
		 *    } );
             */
            "bAutoWidth": true,


            /**
             * Deferred rendering can provide DataTables with a huge speed boost when you
             * are using an Ajax or JS data source for the table. This option, when set to
             * true, will cause DataTables to defer the creation of the table elements for
             * each row until they are needed for a draw - saving a significant amount of
             * time.
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sAjaxSource": "sources/arrays.txt",
		 *        "bDeferRender": true
		 *      } );
		 *    } );
             */
            "bDeferRender": false,


            /**
             * Replace a DataTable which matches the given selector and replace it with
             * one which has the properties of the new initialisation object passed. If no
             * table matches the selector, then the new DataTable will be constructed as
             * per normal.
             *  @type boolean
             *  @default false
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *      
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "bFilter": false,
		 *        "bDestroy": true
		 *      } );
		 *    } );
             */
            "bDestroy": false,


            /**
             * Enable or disable filtering of data. Filtering in DataTables is "smart" in
             * that it allows the end user to input multiple words (space separated) and
             * will match a row containing those words, even if not in the order that was
             * specified (this allow matching across multiple columns). Note that if you
             * wish to use filtering in DataTables this must remain 'true' - to remove the
             * default filtering input box and retain filtering abilities, please use
             * {@link DataTable.defaults.sDom}.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bFilter": false
		 *      } );
		 *    } );
             */
            "bFilter": true,


            /**
             * Enable or disable the table information display. This shows information
             * about the data that is currently visible on the page, including information
             * about filtered data if that action is being performed.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bInfo": false
		 *      } );
		 *    } );
             */
            "bInfo": true,


            /**
             * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
             * slightly different and additional mark-up from what DataTables has
             * traditionally used).
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bJQueryUI": true
		 *      } );
		 *    } );
             */
            "bJQueryUI": false,


            /**
             * Allows the end user to select the size of a formatted page from a select
             * menu (sizes are 10, 25, 50 and 100). Requires pagination (bPaginate).
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bLengthChange": false
		 *      } );
		 *    } );
             */
            "bLengthChange": true,


            /**
             * Enable or disable pagination.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bPaginate": false
		 *      } );
		 *    } );
             */
            "bPaginate": true,


            /**
             * Enable or disable the display of a 'processing' indicator when the table is
             * being processed (e.g. a sort). This is particularly useful for tables with
             * large amounts of data where it can take a noticeable amount of time to sort
             * the entries.
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bProcessing": true
		 *      } );
		 *    } );
             */
            "bProcessing": false,


            /**
             * Retrieve the DataTables object for the given selector. Note that if the
             * table has already been initialised, this parameter will cause DataTables
             * to simply return the object that has already been set up - it will not take
             * account of any changes you might have made to the initialisation object
             * passed to DataTables (setting this parameter to true is an acknowledgement
             * that you understand this). bDestroy can be used to reinitialise a table if
             * you need.
             *  @type boolean
             *  @default false
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
             *
             *    function initTable ()
             *    {
		 *      return $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false,
		 *        "bRetrieve": true
		 *      } );
		 *    }
             *
             *    function tableActions ()
             *    {
		 *      var oTable = initTable();
		 *      // perform API operations with oTable 
		 *    }
             */
            "bRetrieve": false,


            /**
             * Indicate if DataTables should be allowed to set the padding / margin
             * etc for the scrolling header elements or not. Typically you will want
             * this.
             *  @type boolean
             *  @default true
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bScrollAutoCss": false,
		 *        "sScrollY": "200px"
		 *      } );
		 *    } );
             */
            "bScrollAutoCss": true,


            /**
             * When vertical (y) scrolling is enabled, DataTables will force the height of
             * the table's viewport to the given height at all times (useful for layout).
             * However, this can look odd when filtering data down to a small data set,
             * and the footer is left "floating" further down. This parameter (when
             * enabled) will cause DataTables to collapse the table's viewport down when
             * the result set will fit within the given Y height.
             *  @type boolean
             *  @default false
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sScrollY": "200",
		 *        "bScrollCollapse": true
		 *      } );
		 *    } );
             */
            "bScrollCollapse": false,


            /**
             * Enable infinite scrolling for DataTables (to be used in combination with
             * sScrollY). Infinite scrolling means that DataTables will continually load
             * data as a user scrolls through a table, which is very useful for large
             * dataset. This cannot be used with pagination, which is automatically
             * disabled. Note - the Scroller extra for DataTables is recommended in
             * in preference to this option.
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bScrollInfinite": true,
		 *        "bScrollCollapse": true,
		 *        "sScrollY": "200px"
		 *      } );
		 *    } );
             */
            "bScrollInfinite": false,


            /**
             * Configure DataTables to use server-side processing. Note that the
             * sAjaxSource parameter must also be given in order to give DataTables a
             * source to obtain the required data for each draw.
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *  @dtopt Server-side
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bServerSide": true,
		 *        "sAjaxSource": "xhr.php"
		 *      } );
		 *    } );
             */
            "bServerSide": false,


            /**
             * Enable or disable sorting of columns. Sorting of individual columns can be
             * disabled by the "bSortable" option for each column.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bSort": false
		 *      } );
		 *    } );
             */
            "bSort": true,


            /**
             * Allows control over whether DataTables should use the top (true) unique
             * cell that is found for a single column, or the bottom (false - default).
             * This is useful when using complex headers.
             *  @type boolean
             *  @default false
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bSortCellsTop": true
		 *      } );
		 *    } );
             */
            "bSortCellsTop": false,


            /**
             * Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and
             * 'sorting_3' to the columns which are currently being sorted on. This is
             * presented as a feature switch as it can increase processing time (while
             * classes are removed and added) so for large data sets you might want to
             * turn this off.
             *  @type boolean
             *  @default true
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bSortClasses": false
		 *      } );
		 *    } );
             */
            "bSortClasses": true,


            /**
             * Enable or disable state saving. When enabled a cookie will be used to save
             * table display information such as pagination information, display length,
             * filtering and sorting. As such when the end user reloads the page the
             * display display will match what thy had previously set up.
             *  @type boolean
             *  @default false
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true
		 *      } );
		 *    } );
             */
            "bStateSave": false,


            /**
             * Customise the cookie and / or the parameters being stored when using
             * DataTables with state saving enabled. This function is called whenever
             * the cookie is modified, and it expects a fully formed cookie string to be
             * returned. Note that the data object passed in is a Javascript object which
             * must be converted to a string (JSON.stringify for example).
             *  @type function
             *  @param {string} sName Name of the cookie defined by DataTables
             *  @param {object} oData Data to be stored in the cookie
             *  @param {string} sExpires Cookie expires string
             *  @param {string} sPath Path of the cookie to set
             *  @returns {string} Cookie formatted string (which should be encoded by
             *    using encodeURIComponent())
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "fnCookieCallback": function (sName, oData, sExpires, sPath) {
		 *          // Customise oData or sName or whatever else here
		 *          return sName + "="+JSON.stringify(oData)+"; expires=" + sExpires +"; path=" + sPath;
		 *        }
		 *      } );
		 *    } );
             */
            "fnCookieCallback": null,


            /**
             * This function is called when a TR element is created (and all TD child
             * elements have been inserted), or registered if using a DOM source, allowing
             * manipulation of the TR element (adding classes etc).
             *  @type function
             *  @param {node} nRow "TR" element for the current row
             *  @param {array} aData Raw data array for this row
             *  @param {int} iDataIndex The index of this row in aoData
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnCreatedRow": function( nRow, aData, iDataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( aData[4] == "A" )
		 *          {
		 *            $('td:eq(4)', nRow).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
             */
            "fnCreatedRow": null,


            /**
             * This function is called on every 'draw' event, and allows you to
             * dynamically modify any aspect you want about the created DOM.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnDrawCallback": function( oSettings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
             */
            "fnDrawCallback": null,


            /**
             * Identical to fnHeaderCallback() but for the table footer this function
             * allows you to modify the table footer on every 'draw' even.
             *  @type function
             *  @param {node} nFoot "TR" element for the footer
             *  @param {array} aData Full table data (as derived from the original HTML)
             *  @param {int} iStart Index for the current display starting point in the
             *    display array
             *  @param {int} iEnd Index for the current display ending point in the
             *    display array
             *  @param {array int} aiDisplay Index array to translate the visual position
             *    to the full data array
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnFooterCallback": function( nFoot, aData, iStart, iEnd, aiDisplay ) {
		 *          nFoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+iStart;
		 *        }
		 *      } );
		 *    } )
             */
            "fnFooterCallback": null,


            /**
             * When rendering large numbers in the information element for the table
             * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
             * to have a comma separator for the 'thousands' units (e.g. 1 million is
             * rendered as "1,000,000") to help readability for the end user. This
             * function will override the default method DataTables uses.
             *  @type function
             *  @member
             *  @param {int} iIn number to be formatted
             *  @returns {string} formatted string for DataTables to show the number
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnFormatNumber": function ( iIn ) {
		 *          if ( iIn &lt; 1000 ) {
		 *            return iIn;
		 *          } else {
		 *            var 
		 *              s=(iIn+""), 
		 *              a=s.split(""), out="", 
		 *              iLen=s.length;
		 *            
		 *            for ( var i=0 ; i&lt;iLen ; i++ ) {
		 *              if ( i%3 === 0 &amp;&amp; i !== 0 ) {
		 *                out = "'"+out;
		 *              }
		 *              out = a[iLen-i-1]+out;
		 *            }
		 *          }
		 *          return out;
		 *        };
		 *      } );
		 *    } );
             */
            "fnFormatNumber": function (iIn) {
                if (iIn < 1000) {
                    // A small optimisation for what is likely to be the majority of use cases
                    return iIn;
                }

                var s = (iIn + ""), a = s.split(""), out = "", iLen = s.length;

                for (var i = 0; i < iLen; i++) {
                    if (i % 3 === 0 && i !== 0) {
                        out = this.oLanguage.sInfoThousands + out;
                    }
                    out = a[iLen - i - 1] + out;
                }
                return out;
            },


            /**
             * This function is called on every 'draw' event, and allows you to
             * dynamically modify the header row. This can be used to calculate and
             * display useful information about the table.
             *  @type function
             *  @param {node} nHead "TR" element for the header
             *  @param {array} aData Full table data (as derived from the original HTML)
             *  @param {int} iStart Index for the current display starting point in the
             *    display array
             *  @param {int} iEnd Index for the current display ending point in the
             *    display array
             *  @param {array int} aiDisplay Index array to translate the visual position
             *    to the full data array
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnHeaderCallback": function( nHead, aData, iStart, iEnd, aiDisplay ) {
		 *          nHead.getElementsByTagName('th')[0].innerHTML = "Displaying "+(iEnd-iStart)+" records";
		 *        }
		 *      } );
		 *    } )
             */
            "fnHeaderCallback": null,


            /**
             * The information element can be used to convey information about the current
             * state of the table. Although the internationalisation options presented by
             * DataTables are quite capable of dealing with most customisations, there may
             * be times where you wish to customise the string further. This callback
             * allows you to do exactly that.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @param {int} iStart Starting position in data for the draw
             *  @param {int} iEnd End position in data for the draw
             *  @param {int} iMax Total number of rows in the table (regardless of
             *    filtering)
             *  @param {int} iTotal Total number of rows in the data set, after filtering
             *  @param {string} sPre The string that DataTables has formatted using it's
             *    own rules
             *  @returns {string} The string to be displayed in the information element.
             *  @dtopt Callbacks
             *
             *  @example
             *    $('#example').dataTable( {
		 *      "fnInfoCallback": function( oSettings, iStart, iEnd, iMax, iTotal, sPre ) {
		 *        return iStart +" to "+ iEnd;
		 *      }
		 *    } );
             */
            "fnInfoCallback": null,


            /**
             * Called when the table has been initialised. Normally DataTables will
             * initialise sequentially and there will be no need for this function,
             * however, this does not hold true when using external language information
             * since that is obtained using an async XHR call.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @param {object} json The JSON object request from the server - only
             *    present if client-side Ajax sourced data is used
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnInitComplete": function(oSettings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
             */
            "fnInitComplete": null,


            /**
             * Called at the very start of each table draw and can be used to cancel the
             * draw by returning false, any other return (including undefined) results in
             * the full draw occurring).
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @returns {boolean} False will cancel the draw, anything else (including no
             *    return) will allow it to complete.
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnPreDrawCallback": function( oSettings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
             */
            "fnPreDrawCallback": null,


            /**
             * This function allows you to 'post process' each row after it have been
             * generated for each table draw, but before it is rendered on screen. This
             * function might be used for setting the row class name etc.
             *  @type function
             *  @param {node} nRow "TR" element for the current row
             *  @param {array} aData Raw data array for this row
             *  @param {int} iDisplayIndex The display index for the current table draw
             *  @param {int} iDisplayIndexFull The index of the data in the full list of
             *    rows (after filtering)
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( aData[4] == "A" )
		 *          {
		 *            $('td:eq(4)', nRow).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
             */
            "fnRowCallback": null,


            /**
             * This parameter allows you to override the default function which obtains
             * the data from the server ($.getJSON) so something more suitable for your
             * application. For example you could use POST data, or pull information from
             * a Gears or AIR database.
             *  @type function
             *  @member
             *  @param {string} sSource HTTP source to obtain the data from (sAjaxSource)
             *  @param {array} aoData A key/value pair object containing the data to send
             *    to the server
             *  @param {function} fnCallback to be called on completion of the data get
             *    process that will draw the data on the page.
             *  @param {object} oSettings DataTables settings object
             *  @dtopt Callbacks
             *  @dtopt Server-side
             *
             *  @example
             *    // POST data to server
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bProcessing": true,
		 *        "bServerSide": true,
		 *        "sAjaxSource": "xhr.php",
		 *        "fnServerData": function ( sSource, aoData, fnCallback, oSettings ) {
		 *          oSettings.jqXHR = $.ajax( {
		 *            "dataType": 'json', 
		 *            "type": "POST", 
		 *            "url": sSource, 
		 *            "data": aoData, 
		 *            "success": fnCallback
		 *          } );
		 *        }
		 *      } );
		 *    } );
             */
            "fnServerData": function (sUrl, aoData, fnCallback, oSettings) {
                oSettings.jqXHR = $.ajax({
                    "url": sUrl,
                    "data": aoData,
                    "success": function (json) {
                        if (json.sError) {
                            oSettings.oApi._fnLog(oSettings, 0, json.sError);
                        }

                        $(oSettings.oInstance).trigger('xhr', [oSettings, json]);
                        fnCallback(json);
                    },
                    "dataType": "json",
                    "cache": false,
                    "type": oSettings.sServerMethod,
                    "error": function (xhr, error, thrown) {
                        if (error == "parsererror") {
                            oSettings.oApi._fnLog(oSettings, 0, "DataTables warning: JSON data from " +
                                "server could not be parsed. This is caused by a JSON formatting error.");
                        }
                    }
                });
            },


            /**
             * It is often useful to send extra data to the server when making an Ajax
             * request - for example custom filtering information, and this callback
             * function makes it trivial to send extra information to the server. The
             * passed in parameter is the data set that has been constructed by
             * DataTables, and you can add to this or modify it as you require.
             *  @type function
             *  @param {array} aoData Data array (array of objects which are name/value
             *    pairs) that has been constructed by DataTables and will be sent to the
             *    server. In the case of Ajax sourced data with server-side processing
             *    this will be an empty array, for server-side processing there will be a
             *    significant number of parameters!
             *  @returns {undefined} Ensure that you modify the aoData array passed in,
             *    as this is passed by reference.
             *  @dtopt Callbacks
             *  @dtopt Server-side
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bProcessing": true,
		 *        "bServerSide": true,
		 *        "sAjaxSource": "scripts/server_processing.php",
		 *        "fnServerParams": function ( aoData ) {
		 *          aoData.push( { "name": "more_data", "value": "my_value" } );
		 *        }
		 *      } );
		 *    } );
             */
            "fnServerParams": null,


            /**
             * Load the table state. With this function you can define from where, and how, the
             * state of a table is loaded. By default DataTables will load from its state saving
             * cookie, but you might wish to use local storage (HTML5) or a server-side database.
             *  @type function
             *  @member
             *  @param {object} oSettings DataTables settings object
             *  @return {object} The DataTables state object to be loaded
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateLoad": function (oSettings) {
		 *          var o;
		 *          
		 *          // Send an Ajax request to the server to get the data. Note that
		 *          // this is a synchronous request.
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "async": false,
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              o = json;
		 *            }
		 *          } );
		 *          
		 *          return o;
		 *        }
		 *      } );
		 *    } );
             */
            "fnStateLoad": function (oSettings) {
                var sData = this.oApi._fnReadCookie(oSettings.sCookiePrefix + oSettings.sInstance);
                var oData;

                try {
                    oData = (typeof $.parseJSON === 'function') ?
                        $.parseJSON(sData) : eval('(' + sData + ')');
                } catch (e) {
                    oData = null;
                }

                return oData;
            },


            /**
             * Callback which allows modification of the saved state prior to loading that state.
             * This callback is called when the table is loading state from the stored data, but
             * prior to the settings object being modified by the saved state. Note that for
             * plug-in authors, you should use the 'stateLoadParams' event to load parameters for
             * a plug-in.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @param {object} oData The state object that is to be loaded
             *  @dtopt Callbacks
             *
             *  @example
             *    // Remove a saved filter, so filtering is never loaded
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateLoadParams": function (oSettings, oData) {
		 *          oData.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
             *
             *  @example
             *    // Disallow state loading by returning false
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateLoadParams": function (oSettings, oData) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
             */
            "fnStateLoadParams": null,


            /**
             * Callback that is called when the state has been loaded from the state saving method
             * and the DataTables settings object has been modified as a result of the loaded state.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @param {object} oData The state object that was loaded
             *  @dtopt Callbacks
             *
             *  @example
             *    // Show an alert with the filtering value that was saved
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateLoaded": function (oSettings, oData) {
		 *          alert( 'Saved filter was: '+oData.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
             */
            "fnStateLoaded": null,


            /**
             * Save the table state. This function allows you to define where and how the state
             * information for the table is stored - by default it will use a cookie, but you
             * might want to use local storage (HTML5) or a server-side database.
             *  @type function
             *  @member
             *  @param {object} oSettings DataTables settings object
             *  @param {object} oData The state object to be saved
             *  @dtopt Callbacks
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateSave": function (oSettings, oData) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": oData,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
             */
            "fnStateSave": function (oSettings, oData) {
                this.oApi._fnCreateCookie(
                    oSettings.sCookiePrefix + oSettings.sInstance,
                    this.oApi._fnJsonString(oData),
                    oSettings.iCookieDuration,
                    oSettings.sCookiePrefix,
                    oSettings.fnCookieCallback
                );
            },


            /**
             * Callback which allows modification of the state to be saved. Called when the table
             * has changed state a new state save is required. This method allows modification of
             * the state saving object prior to actually doing the save, including addition or
             * other state properties or modification. Note that for plug-in authors, you should
             * use the 'stateSaveParams' event to save parameters for a plug-in.
             *  @type function
             *  @param {object} oSettings DataTables settings object
             *  @param {object} oData The state object to be saved
             *  @dtopt Callbacks
             *
             *  @example
             *    // Remove a saved filter, so filtering is never saved
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bStateSave": true,
		 *        "fnStateSaveParams": function (oSettings, oData) {
		 *          oData.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
             */
            "fnStateSaveParams": null,


            /**
             * Duration of the cookie which is used for storing session information. This
             * value is given in seconds.
             *  @type int
             *  @default 7200 <i>(2 hours)</i>
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "iCookieDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
             */
            "iCookieDuration": 7200,


            /**
             * When enabled DataTables will not make a request to the server for the first
             * page draw - rather it will use the data already on the page (no sorting etc
             * will be applied to it), thus saving on an XHR at load time. iDeferLoading
             * is used to indicate that deferred loading is required, but it is also used
             * to tell DataTables how many records there are in the full table (allowing
             * the information element and pagination to be displayed correctly). In the case
             * where a filtering is applied to the table on initial load, this can be
             * indicated by giving the parameter as an array, where the first element is
             * the number of records available after filtering and the second element is the
             * number of records without filtering (allowing the table information element
             * to be shown correctly).
             *  @type int | array
             *  @default null
             *  @dtopt Options
             *
             *  @example
             *    // 57 records available in the table, no filtering applied
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bServerSide": true,
		 *        "sAjaxSource": "scripts/server_processing.php",
		 *        "iDeferLoading": 57
		 *      } );
		 *    } );
             *
             *  @example
             *    // 57 records after filtering, 100 without filtering (an initial filter applied)
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bServerSide": true,
		 *        "sAjaxSource": "scripts/server_processing.php",
		 *        "iDeferLoading": [ 57, 100 ],
		 *        "oSearch": {
		 *          "sSearch": "my_filter"
		 *        }
		 *      } );
		 *    } );
             */
            "iDeferLoading": null,


            /**
             * Number of rows to display on a single page when using pagination. If
             * feature enabled (bLengthChange) then the end user will be able to override
             * this to a custom setting using a pop-up menu.
             *  @type int
             *  @default 10
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "iDisplayLength": 50
		 *      } );
		 *    } )
             */
            "iDisplayLength": 10,


            /**
             * Define the starting point for data display when using DataTables with
             * pagination. Note that this parameter is the number of records, rather than
             * the page number, so if you have 10 records per page and want to start on
             * the third page, it should be "20".
             *  @type int
             *  @default 0
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "iDisplayStart": 20
		 *      } );
		 *    } )
             */
            "iDisplayStart": 0,


            /**
             * The scroll gap is the amount of scrolling that is left to go before
             * DataTables will load the next 'page' of data automatically. You typically
             * want a gap which is big enough that the scrolling will be smooth for the
             * user, while not so large that it will load more data than need.
             *  @type int
             *  @default 100
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bScrollInfinite": true,
		 *        "bScrollCollapse": true,
		 *        "sScrollY": "200px",
		 *        "iScrollLoadGap": 50
		 *      } );
		 *    } );
             */
            "iScrollLoadGap": 100,


            /**
             * By default DataTables allows keyboard navigation of the table (sorting, paging,
             * and filtering) by adding a tabindex attribute to the required elements. This
             * allows you to tab through the controls and press the enter key to activate them.
             * The tabindex is default 0, meaning that the tab follows the flow of the document.
             * You can overrule this using this parameter if you wish. Use a value of -1 to
             * disable built-in keyboard navigation.
             *  @type int
             *  @default 0
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "iTabIndex": 1
		 *      } );
		 *    } );
             */
            "iTabIndex": 0,


            /**
             * All strings that DataTables uses in the user interface that it creates
             * are defined in this object, allowing you to modified them individually or
             * completely replace them all as required.
             *  @namespace
             */
            "oLanguage": {
                /**
                 * Strings that are used for WAI-ARIA labels and controls only (these are not
                 * actually visible on the page, but will be read by screenreaders, and thus
                 * must be internationalised as well).
                 *  @namespace
                 */
                "oAria": {
                    /**
                     * ARIA label that is added to the table headers when the column may be
                     * sorted ascending by activing the column (click or return when focused).
                     * Note that the column header is prefixed to this string.
                     *  @type string
                     *  @default : activate to sort column ascending
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oAria": {
				 *            "sSortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sSortAscending": ": activate to sort column ascending",

                    /**
                     * ARIA label that is added to the table headers when the column may be
                     * sorted descending by activing the column (click or return when focused).
                     * Note that the column header is prefixed to this string.
                     *  @type string
                     *  @default : activate to sort column ascending
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oAria": {
				 *            "sSortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sSortDescending": ": activate to sort column descending"
                },

                /**
                 * Pagination string used by DataTables for the two built-in pagination
                 * control types ("two_button" and "full_numbers")
                 *  @namespace
                 */
                "oPaginate": {
                    /**
                     * Text to use when using the 'full_numbers' type of pagination for the
                     * button to take the user to the first page.
                     *  @type string
                     *  @default First
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oPaginate": {
				 *            "sFirst": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sFirst": "First",


                    /**
                     * Text to use when using the 'full_numbers' type of pagination for the
                     * button to take the user to the last page.
                     *  @type string
                     *  @default Last
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oPaginate": {
				 *            "sLast": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sLast": "Last",


                    /**
                     * Text to use for the 'next' pagination button (to take the user to the
                     * next page).
                     *  @type string
                     *  @default Next
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oPaginate": {
				 *            "sNext": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sNext": "Next",


                    /**
                     * Text to use for the 'previous' pagination button (to take the user to
                     * the previous page).
                     *  @type string
                     *  @default Previous
                     *  @dtopt Language
                     *
                     *  @example
                     *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "oLanguage": {
				 *          "oPaginate": {
				 *            "sPrevious": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
                     */
                    "sPrevious": "Previous"
                },

                /**
                 * This string is shown in preference to sZeroRecords when the table is
                 * empty of data (regardless of filtering). Note that this is an optional
                 * parameter - if it is not given, the value of sZeroRecords will be used
                 * instead (either the default or given value).
                 *  @type string
                 *  @default No data available in table
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sEmptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
                 */
                "sEmptyTable": "No data available in table",


                /**
                 * This string gives information to the end user about the information that
                 * is current on display on the page. The _START_, _END_ and _TOTAL_
                 * variables are all dynamically replaced as the table display updates, and
                 * can be freely moved or removed as the language requirements change.
                 *  @type string
                 *  @default Showing _START_ to _END_ of _TOTAL_ entries
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sInfo": "Got a total of _TOTAL_ entries to show (_START_ to _END_)"
			 *        }
			 *      } );
			 *    } );
                 */
                "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",


                /**
                 * Display information string for when the table is empty. Typically the
                 * format of this string should match sInfo.
                 *  @type string
                 *  @default Showing 0 to 0 of 0 entries
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sInfoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
                 */
                "sInfoEmpty": "Showing 0 to 0 of 0 entries",


                /**
                 * When a user filters the information in a table, this string is appended
                 * to the information (sInfo) to give an idea of how strong the filtering
                 * is. The variable _MAX_ is dynamically updated.
                 *  @type string
                 *  @default (filtered from _MAX_ total entries)
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sInfoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
                 */
                "sInfoFiltered": "(filtered from _MAX_ total entries)",


                /**
                 * If can be useful to append extra information to the info string at times,
                 * and this variable does exactly that. This information will be appended to
                 * the sInfo (sInfoEmpty and sInfoFiltered in whatever combination they are
                 * being used) at all times.
                 *  @type string
                 *  @default <i>Empty string</i>
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sInfoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
                 */
                "sInfoPostFix": "",


                /**
                 * DataTables has a build in number formatter (fnFormatNumber) which is used
                 * to format large numbers that are used in the table information. By
                 * default a comma is used, but this can be trivially changed to any
                 * character you wish with this parameter.
                 *  @type string
                 *  @default ,
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sInfoThousands": "'"
			 *        }
			 *      } );
			 *    } );
                 */
                "sInfoThousands": ",",


                /**
                 * Detail the action that will be taken when the drop down menu for the
                 * pagination length option is changed. The '_MENU_' variable is replaced
                 * with a default select list of 10, 25, 50 and 100, and can be replaced
                 * with a custom select box if required.
                 *  @type string
                 *  @default Show _MENU_ entries
                 *  @dtopt Language
                 *
                 *  @example
                 *    // Language change only
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sLengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
                 *
                 *  @example
                 *    // Language and options change
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sLengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
                 */
                "sLengthMenu": "Show _MENU_ entries",


                /**
                 * When using Ajax sourced data and during the first draw when DataTables is
                 * gathering the data, this message is shown in an empty row in the table to
                 * indicate to the end user the the data is being loaded. Note that this
                 * parameter is not used when loading data by server-side processing, just
                 * Ajax sourced data with client-side processing.
                 *  @type string
                 *  @default Loading...
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sLoadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
                 */
                "sLoadingRecords": "Loading...",


                /**
                 * Text which is displayed when the table is processing a user action
                 * (usually a sort command or similar).
                 *  @type string
                 *  @default Processing...
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sProcessing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
                 */
                "sProcessing": "Processing...",


                /**
                 * Details the actions that will be taken when the user types into the
                 * filtering input text box. The variable "_INPUT_", if used in the string,
                 * is replaced with the HTML text box for the filtering input allowing
                 * control over where it appears in the string. If "_INPUT_" is not given
                 * then the input box is appended to the string automatically.
                 *  @type string
                 *  @default Search:
                 *  @dtopt Language
                 *
                 *  @example
                 *    // Input text box will be appended at the end automatically
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sSearch": "Filter records:"
			 *        }
			 *      } );
			 *    } );
                 *
                 *  @example
                 *    // Specify where the filter should appear
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sSearch": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
                 */
                "sSearch": "Search:",


                /**
                 * All of the language information can be stored in a file on the
                 * server-side, which DataTables will look up if this parameter is passed.
                 * It must store the URL of the language file, which is in a JSON format,
                 * and the object has the same properties as the oLanguage object in the
                 * initialiser object (i.e. the above parameters). Please refer to one of
                 * the example language files to see how this works in action.
                 *  @type string
                 *  @default <i>Empty string - i.e. disabled</i>
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sUrl": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
                 */
                "sUrl": "",


                /**
                 * Text shown inside the table records when the is no information to be
                 * displayed after filtering. sEmptyTable is shown when there is simply no
                 * information in the table at all (regardless of filtering).
                 *  @type string
                 *  @default No matching records found
                 *  @dtopt Language
                 *
                 *  @example
                 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "oLanguage": {
			 *          "sZeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
                 */
                "sZeroRecords": "No matching records found"
            },


            /**
             * This parameter allows you to have define the global filtering state at
             * initialisation time. As an object the "sSearch" parameter must be
             * defined, but all other parameters are optional. When "bRegex" is true,
             * the search string will be treated as a regular expression, when false
             * (default) it will be treated as a straight string. When "bSmart"
             * DataTables will use it's smart filtering methods (to word match at
             * any point in the data), when false this will not be done.
             *  @namespace
             *  @extends DataTable.models.oSearch
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "oSearch": {"sSearch": "Initial search"}
		 *      } );
		 *    } )
             */
            "oSearch": $.extend({}, DataTable.models.oSearch),


            /**
             * By default DataTables will look for the property 'aaData' when obtaining
             * data from an Ajax source or for server-side processing - this parameter
             * allows that property to be changed. You can use Javascript dotted object
             * notation to get a data source for multiple levels of nesting.
             *  @type string
             *  @default aaData
             *  @dtopt Options
             *  @dtopt Server-side
             *
             *  @example
             *    // Get data from { "data": [...] }
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sAjaxSource": "sources/data.txt",
		 *        "sAjaxDataProp": "data"
		 *      } );
		 *    } );
             *
             *  @example
             *    // Get data from { "data": { "inner": [...] } }
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sAjaxSource": "sources/data.txt",
		 *        "sAjaxDataProp": "data.inner"
		 *      } );
		 *    } );
             */
            "sAjaxDataProp": "aaData",


            /**
             * You can instruct DataTables to load data from an external source using this
             * parameter (use aData if you want to pass data in you already have). Simply
             * provide a url a JSON object can be obtained from. This object must include
             * the parameter 'aaData' which is the data source for the table.
             *  @type string
             *  @default null
             *  @dtopt Options
             *  @dtopt Server-side
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sAjaxSource": "http://www.sprymedia.co.uk/dataTables/json.php"
		 *      } );
		 *    } )
             */
            "sAjaxSource": null,


            /**
             * This parameter can be used to override the default prefix that DataTables
             * assigns to a cookie when state saving is enabled.
             *  @type string
             *  @default SpryMedia_DataTables_
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sCookiePrefix": "my_datatable_",
		 *      } );
		 *    } );
             */
            "sCookiePrefix": "SpryMedia_DataTables_",


            /**
             * This initialisation variable allows you to specify exactly where in the
             * DOM you want DataTables to inject the various controls it adds to the page
             * (for example you might want the pagination controls at the top of the
             * table). DIV elements (with or without a custom class) can also be added to
             * aid styling. The follow syntax is used:
             *   <ul>
             *     <li>The following options are allowed:
             *       <ul>
             *         <li>'l' - Length changing</li
             *         <li>'f' - Filtering input</li>
             *         <li>'t' - The table!</li>
             *         <li>'i' - Information</li>
             *         <li>'p' - Pagination</li>
             *         <li>'r' - pRocessing</li>
             *       </ul>
             *     </li>
             *     <li>The following constants are allowed:
             *       <ul>
             *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
             *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
             *       </ul>
             *     </li>
             *     <li>The following syntax is expected:
             *       <ul>
             *         <li>'&lt;' and '&gt;' - div elements</li>
             *         <li>'&lt;"class" and '&gt;' - div with a class</li>
             *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
             *       </ul>
             *     </li>
             *     <li>Examples:
             *       <ul>
             *         <li>'&lt;"wrapper"flipt&gt;'</li>
             *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
             *       </ul>
             *     </li>
             *   </ul>
             *  @type string
             *  @default lfrtip <i>(when bJQueryUI is false)</i> <b>or</b>
             *    <"H"lfr>t<"F"ip> <i>(when bJQueryUI is true)</i>
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sDom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
             */
            "sDom": "lfrtip",


            /**
             * DataTables features two different built-in pagination interaction methods
             * ('two_button' or 'full_numbers') which present different page controls to
             * the end user. Further methods can be added using the API (see below).
             *  @type string
             *  @default two_button
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sPaginationType": "full_numbers"
		 *      } );
		 *    } )
             */
            "sPaginationType": "two_button",


            /**
             * Enable horizontal scrolling. When a table is too wide to fit into a certain
             * layout, or you have a large number of columns in the table, you can enable
             * x-scrolling to show the table in a viewport, which can be scrolled. This
             * property can be any CSS unit, or a number (in which case it will be treated
             * as a pixel measurement).
             *  @type string
             *  @default <i>blank string - i.e. disabled</i>
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sScrollX": "100%",
		 *        "bScrollCollapse": true
		 *      } );
		 *    } );
             */
            "sScrollX": "",


            /**
             * This property can be used to force a DataTable to use more width than it
             * might otherwise do when x-scrolling is enabled. For example if you have a
             * table which requires to be well spaced, this parameter is useful for
             * "over-sizing" the table, and thus forcing scrolling. This property can by
             * any CSS unit, or a number (in which case it will be treated as a pixel
             * measurement).
             *  @type string
             *  @default <i>blank string - i.e. disabled</i>
             *  @dtopt Options
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sScrollX": "100%",
		 *        "sScrollXInner": "110%"
		 *      } );
		 *    } );
             */
            "sScrollXInner": "",


            /**
             * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
             * to the given height, and enable scrolling for any data which overflows the
             * current viewport. This can be used as an alternative to paging to display
             * a lot of data in a small area (although paging and scrolling can both be
             * enabled at the same time). This property can be any CSS unit, or a number
             * (in which case it will be treated as a pixel measurement).
             *  @type string
             *  @default <i>blank string - i.e. disabled</i>
             *  @dtopt Features
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *    } );
             */
            "sScrollY": "",


            /**
             * Set the HTTP method that is used to make the Ajax call for server-side
             * processing or Ajax sourced data.
             *  @type string
             *  @default GET
             *  @dtopt Options
             *  @dtopt Server-side
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "bServerSide": true,
		 *        "sAjaxSource": "scripts/post.php",
		 *        "sServerMethod": "POST"
		 *      } );
		 *    } );
             */
            "sServerMethod": "GET"
        };


        /**
         * Column options that can be given to DataTables at initialisation time.
         *  @namespace
         */
        DataTable.defaults.columns = {
            /**
             * Allows a column's sorting to take multiple columns into account when
             * doing a sort. For example first name / last name columns make sense to
             * do a multi-column sort over the two columns.
             *  @type array
             *  @default null <i>Takes the value of the column index automatically</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [
		 *          { "aDataSort": [ 0, 1 ], "aTargets": [ 0 ] },
		 *          { "aDataSort": [ 1, 0 ], "aTargets": [ 1 ] },
		 *          { "aDataSort": [ 2, 3, 4 ], "aTargets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [
		 *          { "aDataSort": [ 0, 1 ] },
		 *          { "aDataSort": [ 1, 0 ] },
		 *          { "aDataSort": [ 2, 3, 4 ] },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "aDataSort": null,


            /**
             * You can control the default sorting direction, and even alter the behaviour
             * of the sort handler (i.e. only allow ascending sorting etc) using this
             * parameter.
             *  @type array
             *  @default [ 'asc', 'desc' ]
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [
		 *          { "asSorting": [ "asc" ], "aTargets": [ 1 ] },
		 *          { "asSorting": [ "desc", "asc", "asc" ], "aTargets": [ 2 ] },
		 *          { "asSorting": [ "desc" ], "aTargets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [
		 *          null,
		 *          { "asSorting": [ "asc" ] },
		 *          { "asSorting": [ "desc", "asc", "asc" ] },
		 *          { "asSorting": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "asSorting": [ 'asc', 'desc' ],


            /**
             * Enable or disable filtering on the data in this column.
             *  @type boolean
             *  @default true
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "bSearchable": false, "aTargets": [ 0 ] }
		 *        ] } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "bSearchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
             */
            "bSearchable": true,


            /**
             * Enable or disable sorting on this column.
             *  @type boolean
             *  @default true
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "bSortable": false, "aTargets": [ 0 ] }
		 *        ] } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "bSortable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
             */
            "bSortable": true,


            /**
             * <code>Deprecated</code> When using fnRender() for a column, you may wish
             * to use the original data (before rendering) for sorting and filtering
             * (the default is to used the rendered data that the user can see). This
             * may be useful for dates etc.
             *
             * Please note that this option has now been deprecated and will be removed
             * in the next version of DataTables. Please use mRender / mData rather than
             * fnRender.
             *  @type boolean
             *  @default true
             *  @dtopt Columns
             *  @deprecated
             */
            "bUseRendered": true,


            /**
             * Enable or disable the display of this column.
             *  @type boolean
             *  @default true
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "bVisible": false, "aTargets": [ 0 ] }
		 *        ] } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "bVisible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
             */
            "bVisible": true,


            /**
             * Developer definable function that is called whenever a cell is created (Ajax source,
             * etc) or processed for input (DOM source). This can be used as a compliment to mRender
             * allowing you to modify the DOM element (add background colour for example) when the
             * element is available.
             *  @type function
             *  @param {element} nTd The TD node that has been created
             *  @param {*} sData The Data for the cell
             *  @param {array|object} oData The data for the whole row
             *  @param {int} iRow The row index for the aoData data store
             *  @param {int} iCol The column index for aoColumns
             *  @dtopt Columns
             *
             *  @example
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ {
		 *          "aTargets": [3],
		 *          "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
		 *            if ( sData == "1.7" ) {
		 *              $(nTd).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
             */
            "fnCreatedCell": null,


            /**
             * <code>Deprecated</code> Custom display function that will be called for the
             * display of each cell in this column.
             *
             * Please note that this option has now been deprecated and will be removed
             * in the next version of DataTables. Please use mRender / mData rather than
             * fnRender.
             *  @type function
             *  @param {object} o Object with the following parameters:
             *  @param {int}    o.iDataRow The row in aoData
             *  @param {int}    o.iDataColumn The column in question
             *  @param {array}  o.aData The data for the row in question
             *  @param {object} o.oSettings The settings object for this DataTables instance
             *  @param {object} o.mDataProp The data property used for this column
             *  @param {*}      val The current cell value
             *  @returns {string} The string you which to use in the display
             *  @dtopt Columns
             *  @deprecated
             */
            "fnRender": null,


            /**
             * The column index (starting from 0!) that you wish a sort to be performed
             * upon when this column is selected for sorting. This can be used for sorting
             * on hidden columns for example.
             *  @type int
             *  @default -1 <i>Use automatically calculated column index</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "iDataSort": 1, "aTargets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "iDataSort": 1 },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "iDataSort": -1,


            /**
             * This parameter has been replaced by mData in DataTables to ensure naming
             * consistency. mDataProp can still be used, as there is backwards compatibility
             * in DataTables for this option, but it is strongly recommended that you use
             * mData in preference to mDataProp.
             *  @name DataTable.defaults.columns.mDataProp
             */


            /**
             * This property can be used to read data from any JSON data source property,
             * including deeply nested objects / properties. mData can be given in a
             * number of different ways which effect its behaviour:
             *   <ul>
             *     <li>integer - treated as an array index for the data source. This is the
             *       default that DataTables uses (incrementally increased for each column).</li>
             *     <li>string - read an object property from the data source. Note that you can
             *       use Javascript dotted notation to read deep properties / arrays from the
             *       data source.</li>
             *     <li>null - the sDefaultContent option will be used for the cell (null
             *       by default, so you will need to specify the default content you want -
             *       typically an empty string). This can be useful on generated columns such
             *       as edit / delete action columns.</li>
             *     <li>function - the function given will be executed whenever DataTables
             *       needs to set or get the data for a cell in the column. The function
             *       takes three parameters:
             *       <ul>
             *         <li>{array|object} The data source for the row</li>
             *         <li>{string} The type call data requested - this will be 'set' when
             *           setting data or 'filter', 'display', 'type', 'sort' or undefined when
             *           gathering data. Note that when <i>undefined</i> is given for the type
             *           DataTables expects to get the raw data for the object back</li>
             *         <li>{*} Data to set when the second parameter is 'set'.</li>
             *       </ul>
             *       The return value from the function is not required when 'set' is the type
             *       of call, but otherwise the return is what will be used for the data
             *       requested.</li>
             *    </ul>
             *
             * Note that prior to DataTables 1.9.2 mData was called mDataProp. The name change
             * reflects the flexibility of this property and is consistent with the naming of
             * mRender. If 'mDataProp' is given, then it will still be used by DataTables, as
             * it automatically maps the old name to the new if required.
             *  @type string|int|function|null
             *  @default null <i>Use automatically calculated column index</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Read table data from objects
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sAjaxSource": "sources/deep.txt",
		 *        "aoColumns": [
		 *          { "mData": "engine" },
		 *          { "mData": "browser" },
		 *          { "mData": "platform.inner" },
		 *          { "mData": "platform.details.0" },
		 *          { "mData": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using mData as a function to provide different information for
             *    // sorting, filtering and display. In this case, currency (price)
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "aoColumnDefs": [ {
		 *          "aTargets": [ 0 ],
		 *          "mData": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
             */
            "mData": null,


            /**
             * This property is the rendering partner to mData and it is suggested that
             * when you want to manipulate data for display (including filtering, sorting etc)
             * but not altering the underlying data for the table, use this property. mData
             * can actually do everything this property can and more, but this parameter is
             * easier to use since there is no 'set' option. Like mData is can be given
             * in a number of different ways to effect its behaviour, with the addition of
             * supporting array syntax for easy outputting of arrays (including arrays of
             * objects):
             *   <ul>
             *     <li>integer - treated as an array index for the data source. This is the
             *       default that DataTables uses (incrementally increased for each column).</li>
             *     <li>string - read an object property from the data source. Note that you can
             *       use Javascript dotted notation to read deep properties / arrays from the
             *       data source and also array brackets to indicate that the data reader should
             *       loop over the data source array. When characters are given between the array
             *       brackets, these characters are used to join the data source array together.
             *       For example: "accounts[, ].name" would result in a comma separated list with
             *       the 'name' value from the 'accounts' array of objects.</li>
             *     <li>function - the function given will be executed whenever DataTables
             *       needs to set or get the data for a cell in the column. The function
             *       takes three parameters:
             *       <ul>
             *         <li>{array|object} The data source for the row (based on mData)</li>
             *         <li>{string} The type call data requested - this will be 'filter', 'display',
             *           'type' or 'sort'.</li>
             *         <li>{array|object} The full data source for the row (not based on mData)</li>
             *       </ul>
             *       The return value from the function is what will be used for the data
             *       requested.</li>
             *    </ul>
             *  @type string|int|function|null
             *  @default null <i>Use mData</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Create a comma separated list from an array of objects
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sAjaxSource": "sources/deep.txt",
		 *        "aoColumns": [
		 *          { "mData": "engine" },
		 *          { "mData": "browser" },
		 *          {
		 *            "mData": "platform",
		 *            "mRender": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Use as a function to create a link from the data source
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "aoColumnDefs": [
		 *        {
		 *          "aTargets": [ 0 ],
		 *          "mData": "download_link",
		 *          "mRender": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
            "mRender": null,


            /**
             * Change the cell type created for the column - either TD cells or TH cells. This
             * can be useful as TH cells have semantic meaning in the table body, allowing them
             * to act as a header for a row (you may wish to add scope='row' to the TH elements).
             *  @type string
             *  @default td
             *  @dtopt Columns
             *
             *  @example
             *    // Make the first column use TH cells
             *    $(document).ready( function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "aoColumnDefs": [ {
		 *          "aTargets": [ 0 ],
		 *          "sCellType": "th"
		 *        } ]
		 *      } );
		 *    } );
             */
            "sCellType": "td",


            /**
             * Class to give to each cell in this column.
             *  @type string
             *  @default <i>Empty string</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "sClass": "my_class", "aTargets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "sClass": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "sClass": "",

            /**
             * When DataTables calculates the column widths to assign to each column,
             * it finds the longest string in each column and then constructs a
             * temporary table and reads the widths from that. The problem with this
             * is that "mmm" is much wider then "iiii", but the latter is a longer
             * string - thus the calculation can go wrong (doing it properly and putting
             * it into an DOM object and measuring that is horribly(!) slow). Thus as
             * a "work around" we provide this option. It will append its value to the
             * text that is found to be the longest string for the column - i.e. padding.
             * Generally you shouldn't need this, and it is not documented on the
             * general DataTables.net documentation
             *  @type string
             *  @default <i>Empty string<i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "sContentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
             */
            "sContentPadding": "",


            /**
             * Allows a default value to be given for a column's data, and will be used
             * whenever a null data source is encountered (this can be because mData
             * is set to null, or because the data source itself is null).
             *  @type string
             *  @default null
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          {
		 *            "mData": null,
		 *            "sDefaultContent": "Edit",
		 *            "aTargets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "mData": null,
		 *            "sDefaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
             */
            "sDefaultContent": null,


            /**
             * This parameter is only used in DataTables' server-side processing. It can
             * be exceptionally useful to know what columns are being displayed on the
             * client side, and to map these to database fields. When defined, the names
             * also allow DataTables to reorder information from the server if it comes
             * back in an unexpected order (i.e. if you switch your columns around on the
             * client-side, your server-side code does not also need updating).
             *  @type string
             *  @default <i>Empty string</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "sName": "engine", "aTargets": [ 0 ] },
		 *          { "sName": "browser", "aTargets": [ 1 ] },
		 *          { "sName": "platform", "aTargets": [ 2 ] },
		 *          { "sName": "version", "aTargets": [ 3 ] },
		 *          { "sName": "grade", "aTargets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "sName": "engine" },
		 *          { "sName": "browser" },
		 *          { "sName": "platform" },
		 *          { "sName": "version" },
		 *          { "sName": "grade" }
		 *        ]
		 *      } );
		 *    } );
             */
            "sName": "",


            /**
             * Defines a data source type for the sorting which can be used to read
             * real-time information from the table (updating the internally cached
             * version) prior to sorting. This allows sorting to occur on user editable
             * elements such as form inputs.
             *  @type string
             *  @default std
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [
		 *          { "sSortDataType": "dom-text", "aTargets": [ 2, 3 ] },
		 *          { "sType": "numeric", "aTargets": [ 3 ] },
		 *          { "sSortDataType": "dom-select", "aTargets": [ 4 ] },
		 *          { "sSortDataType": "dom-checkbox", "aTargets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [
		 *          null,
		 *          null,
		 *          { "sSortDataType": "dom-text" },
		 *          { "sSortDataType": "dom-text", "sType": "numeric" },
		 *          { "sSortDataType": "dom-select" },
		 *          { "sSortDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
             */
            "sSortDataType": "std",


            /**
             * The title of this column.
             *  @type string
             *  @default null <i>Derived from the 'TH' value for this column in the
             *    original HTML table.</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "sTitle": "My column title", "aTargets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "sTitle": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "sTitle": null,


            /**
             * The type allows you to specify how the data for this column will be sorted.
             * Four types (string, numeric, date and html (which will strip HTML tags
             * before sorting)) are currently available. Note that only date formats
             * understood by Javascript's Date() object will be accepted as type date. For
             * example: "Mar 26, 2008 5:03 PM". May take the values: 'string', 'numeric',
             * 'date' or 'html' (by default). Further types can be adding through
             * plug-ins.
             *  @type string
             *  @default null <i>Auto-detected from raw data</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "sType": "html", "aTargets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "sType": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "sType": null,


            /**
             * Defining the width of the column, this parameter may take any CSS value
             * (3em, 20px etc). DataTables apples 'smart' widths to columns which have not
             * been given a specific width through this interface ensuring that the table
             * remains readable.
             *  @type string
             *  @default null <i>Automatic</i>
             *  @dtopt Columns
             *
             *  @example
             *    // Using aoColumnDefs
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumnDefs": [ 
		 *          { "sWidth": "20%", "aTargets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
             *
             *  @example
             *    // Using aoColumns
             *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "aoColumns": [ 
		 *          { "sWidth": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
             */
            "sWidth": null
        };


        /**
         * DataTables settings object - this holds all the information needed for a
         * given table, including configuration, data and current application of the
         * table options. DataTables does not have a single instance for each DataTable
         * with the settings attached to that instance, but rather instances of the
         * DataTable "class" are created on-the-fly as needed (typically by a
         * $().dataTable() call) and the settings object is then applied to that
         * instance.
         *
         * Note that this object is related to {@link DataTable.defaults} but this
         * one is the internal data store for DataTables's cache of columns. It should
         * NOT be manipulated outside of DataTables. Any configuration should be done
         * through the initialisation options.
         *  @namespace
         *  @todo Really should attach the settings object to individual instances so we
         *    don't need to create new instances on each $().dataTable() call (if the
         *    table already exists). It would also save passing oSettings around and
         *    into every single function. However, this is a very significant
         *    architecture change for DataTables and will almost certainly break
         *    backwards compatibility with older installations. This is something that
         *    will be done in 2.0.
         */
        DataTable.models.oSettings = {
            /**
             * Primary features of DataTables and their enablement state.
             *  @namespace
             */
            "oFeatures": {

                /**
                 * Flag to say if DataTables should automatically try to calculate the
                 * optimum table and columns widths (true) or not (false).
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bAutoWidth": null,

                /**
                 * Delay the creation of TR and TD elements until they are actually
                 * needed by a driven page draw. This can give a significant speed
                 * increase for Ajax source and Javascript source data, but makes no
                 * difference at all fro DOM and server-side processing tables.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bDeferRender": null,

                /**
                 * Enable filtering on the table or not. Note that if this is disabled
                 * then there is no filtering at all on the table, including fnFilter.
                 * To just remove the filtering input use sDom and remove the 'f' option.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bFilter": null,

                /**
                 * Table information element (the 'Showing x of y records' div) enable
                 * flag.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bInfo": null,

                /**
                 * Present a user control allowing the end user to change the page size
                 * when pagination is enabled.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bLengthChange": null,

                /**
                 * Pagination enabled or not. Note that if this is disabled then length
                 * changing must also be disabled.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bPaginate": null,

                /**
                 * Processing indicator enable flag whenever DataTables is enacting a
                 * user request - typically an Ajax request for server-side processing.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bProcessing": null,

                /**
                 * Server-side processing enabled flag - when enabled DataTables will
                 * get all data from the server for every draw - there is no filtering,
                 * sorting or paging done on the client-side.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bServerSide": null,

                /**
                 * Sorting enablement flag.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bSort": null,

                /**
                 * Apply a class to the columns which are being sorted to provide a
                 * visual highlight or not. This can slow things down when enabled since
                 * there is a lot of DOM interaction.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bSortClasses": null,

                /**
                 * State saving enablement flag.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bStateSave": null
            },


            /**
             * Scrolling settings for a table.
             *  @namespace
             */
            "oScroll": {
                /**
                 * Indicate if DataTables should be allowed to set the padding / margin
                 * etc for the scrolling header elements or not. Typically you will want
                 * this.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bAutoCss": null,

                /**
                 * When the table is shorter in height than sScrollY, collapse the
                 * table container down to the height of the table (when true).
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bCollapse": null,

                /**
                 * Infinite scrolling enablement flag. Now deprecated in favour of
                 * using the Scroller plug-in.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type boolean
                 */
                "bInfinite": null,

                /**
                 * Width of the scrollbar for the web-browser's platform. Calculated
                 * during table initialisation.
                 *  @type int
                 *  @default 0
                 */
                "iBarWidth": 0,

                /**
                 * Space (in pixels) between the bottom of the scrolling container and
                 * the bottom of the scrolling viewport before the next page is loaded
                 * when using infinite scrolling.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type int
                 */
                "iLoadGap": null,

                /**
                 * Viewport width for horizontal scrolling. Horizontal scrolling is
                 * disabled if an empty string.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type string
                 */
                "sX": null,

                /**
                 * Width to expand the table to when using x-scrolling. Typically you
                 * should not need to use this.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type string
                 *  @deprecated
                 */
                "sXInner": null,

                /**
                 * Viewport height for vertical scrolling. Vertical scrolling is disabled
                 * if an empty string.
                 * Note that this parameter will be set by the initialisation routine. To
                 * set a default use {@link DataTable.defaults}.
                 *  @type string
                 */
                "sY": null
            },

            /**
             * Language information for the table.
             *  @namespace
             *  @extends DataTable.defaults.oLanguage
             */
            "oLanguage": {
                /**
                 * Information callback function. See
                 * {@link DataTable.defaults.fnInfoCallback}
                 *  @type function
                 *  @default null
                 */
                "fnInfoCallback": null
            },

            /**
             * Browser support parameters
             *  @namespace
             */
            "oBrowser": {
                /**
                 * Indicate if the browser incorrectly calculates width:100% inside a
                 * scrolling element (IE6/7)
                 *  @type boolean
                 *  @default false
                 */
                "bScrollOversize": false
            },

            /**
             * Array referencing the nodes which are used for the features. The
             * parameters of this object match what is allowed by sDom - i.e.
             *   <ul>
             *     <li>'l' - Length changing</li>
             *     <li>'f' - Filtering input</li>
             *     <li>'t' - The table!</li>
             *     <li>'i' - Information</li>
             *     <li>'p' - Pagination</li>
             *     <li>'r' - pRocessing</li>
             *   </ul>
             *  @type array
             *  @default []
             */
            "aanFeatures": [],

            /**
             * Store data information - see {@link DataTable.models.oRow} for detailed
             * information.
             *  @type array
             *  @default []
             */
            "aoData": [],

            /**
             * Array of indexes which are in the current display (after filtering etc)
             *  @type array
             *  @default []
             */
            "aiDisplay": [],

            /**
             * Array of indexes for display - no filtering
             *  @type array
             *  @default []
             */
            "aiDisplayMaster": [],

            /**
             * Store information about each column that is in use
             *  @type array
             *  @default []
             */
            "aoColumns": [],

            /**
             * Store information about the table's header
             *  @type array
             *  @default []
             */
            "aoHeader": [],

            /**
             * Store information about the table's footer
             *  @type array
             *  @default []
             */
            "aoFooter": [],

            /**
             * Search data array for regular expression searching
             *  @type array
             *  @default []
             */
            "asDataSearch": [],

            /**
             * Store the applied global search information in case we want to force a
             * research or compare the old search to a new one.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @namespace
             *  @extends DataTable.models.oSearch
             */
            "oPreviousSearch": {},

            /**
             * Store the applied search for each column - see
             * {@link DataTable.models.oSearch} for the format that is used for the
             * filtering information for each column.
             *  @type array
             *  @default []
             */
            "aoPreSearchCols": [],

            /**
             * Sorting that is applied to the table. Note that the inner arrays are
             * used in the following manner:
             * <ul>
             *   <li>Index 0 - column number</li>
             *   <li>Index 1 - current sorting direction</li>
             *   <li>Index 2 - index of asSorting for this column</li>
             * </ul>
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type array
             *  @todo These inner arrays should really be objects
             */
            "aaSorting": null,

            /**
             * Sorting that is always applied to the table (i.e. prefixed in front of
             * aaSorting).
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type array|null
             *  @default null
             */
            "aaSortingFixed": null,

            /**
             * Classes to use for the striping of a table.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type array
             *  @default []
             */
            "asStripeClasses": null,

            /**
             * If restoring a table - we should restore its striping classes as well
             *  @type array
             *  @default []
             */
            "asDestroyStripes": [],

            /**
             * If restoring a table - we should restore its width
             *  @type int
             *  @default 0
             */
            "sDestroyWidth": 0,

            /**
             * Callback functions array for every time a row is inserted (i.e. on a draw).
             *  @type array
             *  @default []
             */
            "aoRowCallback": [],

            /**
             * Callback functions for the header on each draw.
             *  @type array
             *  @default []
             */
            "aoHeaderCallback": [],

            /**
             * Callback function for the footer on each draw.
             *  @type array
             *  @default []
             */
            "aoFooterCallback": [],

            /**
             * Array of callback functions for draw callback functions
             *  @type array
             *  @default []
             */
            "aoDrawCallback": [],

            /**
             * Array of callback functions for row created function
             *  @type array
             *  @default []
             */
            "aoRowCreatedCallback": [],

            /**
             * Callback functions for just before the table is redrawn. A return of
             * false will be used to cancel the draw.
             *  @type array
             *  @default []
             */
            "aoPreDrawCallback": [],

            /**
             * Callback functions for when the table has been initialised.
             *  @type array
             *  @default []
             */
            "aoInitComplete": [],


            /**
             * Callbacks for modifying the settings to be stored for state saving, prior to
             * saving state.
             *  @type array
             *  @default []
             */
            "aoStateSaveParams": [],

            /**
             * Callbacks for modifying the settings that have been stored for state saving
             * prior to using the stored values to restore the state.
             *  @type array
             *  @default []
             */
            "aoStateLoadParams": [],

            /**
             * Callbacks for operating on the settings object once the saved state has been
             * loaded
             *  @type array
             *  @default []
             */
            "aoStateLoaded": [],

            /**
             * Cache the table ID for quick access
             *  @type string
             *  @default <i>Empty string</i>
             */
            "sTableId": "",

            /**
             * The TABLE node for the main table
             *  @type node
             *  @default null
             */
            "nTable": null,

            /**
             * Permanent ref to the thead element
             *  @type node
             *  @default null
             */
            "nTHead": null,

            /**
             * Permanent ref to the tfoot element - if it exists
             *  @type node
             *  @default null
             */
            "nTFoot": null,

            /**
             * Permanent ref to the tbody element
             *  @type node
             *  @default null
             */
            "nTBody": null,

            /**
             * Cache the wrapper node (contains all DataTables controlled elements)
             *  @type node
             *  @default null
             */
            "nTableWrapper": null,

            /**
             * Indicate if when using server-side processing the loading of data
             * should be deferred until the second draw.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type boolean
             *  @default false
             */
            "bDeferLoading": false,

            /**
             * Indicate if all required information has been read in
             *  @type boolean
             *  @default false
             */
            "bInitialised": false,

            /**
             * Information about open rows. Each object in the array has the parameters
             * 'nTr' and 'nParent'
             *  @type array
             *  @default []
             */
            "aoOpenRows": [],

            /**
             * Dictate the positioning of DataTables' control elements - see
             * {@link DataTable.model.oInit.sDom}.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             *  @default null
             */
            "sDom": null,

            /**
             * Which type of pagination should be used.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             *  @default two_button
             */
            "sPaginationType": "two_button",

            /**
             * The cookie duration (for bStateSave) in seconds.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type int
             *  @default 0
             */
            "iCookieDuration": 0,

            /**
             * The cookie name prefix.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             *  @default <i>Empty string</i>
             */
            "sCookiePrefix": "",

            /**
             * Callback function for cookie creation.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type function
             *  @default null
             */
            "fnCookieCallback": null,

            /**
             * Array of callback functions for state saving. Each array element is an
             * object with the following parameters:
             *   <ul>
             *     <li>function:fn - function to call. Takes two parameters, oSettings
             *       and the JSON string to save that has been thus far created. Returns
             *       a JSON string to be inserted into a json object
             *       (i.e. '"param": [ 0, 1, 2]')</li>
             *     <li>string:sName - name of callback</li>
             *   </ul>
             *  @type array
             *  @default []
             */
            "aoStateSave": [],

            /**
             * Array of callback functions for state loading. Each array element is an
             * object with the following parameters:
             *   <ul>
             *     <li>function:fn - function to call. Takes two parameters, oSettings
             *       and the object stored. May return false to cancel state loading</li>
             *     <li>string:sName - name of callback</li>
             *   </ul>
             *  @type array
             *  @default []
             */
            "aoStateLoad": [],

            /**
             * State that was loaded from the cookie. Useful for back reference
             *  @type object
             *  @default null
             */
            "oLoadedState": null,

            /**
             * Source url for AJAX data for the table.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             *  @default null
             */
            "sAjaxSource": null,

            /**
             * Property from a given object from which to read the table data from. This
             * can be an empty string (when not server-side processing), in which case
             * it is  assumed an an array is given directly.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             */
            "sAjaxDataProp": null,

            /**
             * Note if draw should be blocked while getting data
             *  @type boolean
             *  @default true
             */
            "bAjaxDataGet": true,

            /**
             * The last jQuery XHR object that was used for server-side data gathering.
             * This can be used for working with the XHR information in one of the
             * callbacks
             *  @type object
             *  @default null
             */
            "jqXHR": null,

            /**
             * Function to get the server-side data.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type function
             */
            "fnServerData": null,

            /**
             * Functions which are called prior to sending an Ajax request so extra
             * parameters can easily be sent to the server
             *  @type array
             *  @default []
             */
            "aoServerParams": [],

            /**
             * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
             * required).
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type string
             */
            "sServerMethod": null,

            /**
             * Format numbers for display.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type function
             */
            "fnFormatNumber": null,

            /**
             * List of options that can be used for the user selectable length menu.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type array
             *  @default []
             */
            "aLengthMenu": null,

            /**
             * Counter for the draws that the table does. Also used as a tracker for
             * server-side processing
             *  @type int
             *  @default 0
             */
            "iDraw": 0,

            /**
             * Indicate if a redraw is being done - useful for Ajax
             *  @type boolean
             *  @default false
             */
            "bDrawing": false,

            /**
             * Draw index (iDraw) of the last error when parsing the returned data
             *  @type int
             *  @default -1
             */
            "iDrawError": -1,

            /**
             * Paging display length
             *  @type int
             *  @default 10
             */
            "_iDisplayLength": 10,

            /**
             * Paging start point - aiDisplay index
             *  @type int
             *  @default 0
             */
            "_iDisplayStart": 0,

            /**
             * Paging end point - aiDisplay index. Use fnDisplayEnd rather than
             * this property to get the end point
             *  @type int
             *  @default 10
             *  @private
             */
            "_iDisplayEnd": 10,

            /**
             * Server-side processing - number of records in the result set
             * (i.e. before filtering), Use fnRecordsTotal rather than
             * this property to get the value of the number of records, regardless of
             * the server-side processing setting.
             *  @type int
             *  @default 0
             *  @private
             */
            "_iRecordsTotal": 0,

            /**
             * Server-side processing - number of records in the current display set
             * (i.e. after filtering). Use fnRecordsDisplay rather than
             * this property to get the value of the number of records, regardless of
             * the server-side processing setting.
             *  @type boolean
             *  @default 0
             *  @private
             */
            "_iRecordsDisplay": 0,

            /**
             * Flag to indicate if jQuery UI marking and classes should be used.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type boolean
             */
            "bJUI": null,

            /**
             * The classes to use for the table
             *  @type object
             *  @default {}
             */
            "oClasses": {},

            /**
             * Flag attached to the settings object so you can check in the draw
             * callback if filtering has been done in the draw. Deprecated in favour of
             * events.
             *  @type boolean
             *  @default false
             *  @deprecated
             */
            "bFiltered": false,

            /**
             * Flag attached to the settings object so you can check in the draw
             * callback if sorting has been done in the draw. Deprecated in favour of
             * events.
             *  @type boolean
             *  @default false
             *  @deprecated
             */
            "bSorted": false,

            /**
             * Indicate that if multiple rows are in the header and there is more than
             * one unique cell per column, if the top one (true) or bottom one (false)
             * should be used for sorting / title by DataTables.
             * Note that this parameter will be set by the initialisation routine. To
             * set a default use {@link DataTable.defaults}.
             *  @type boolean
             */
            "bSortCellsTop": null,

            /**
             * Initialisation object that is used for the table
             *  @type object
             *  @default null
             */
            "oInit": null,

            /**
             * Destroy callback functions - for plug-ins to attach themselves to the
             * destroy so they can clean up markup and events.
             *  @type array
             *  @default []
             */
            "aoDestroyCallback": [],


            /**
             * Get the number of records in the current record set, before filtering
             *  @type function
             */
            "fnRecordsTotal": function () {
                if (this.oFeatures.bServerSide) {
                    return parseInt(this._iRecordsTotal, 10);
                } else {
                    return this.aiDisplayMaster.length;
                }
            },

            /**
             * Get the number of records in the current record set, after filtering
             *  @type function
             */
            "fnRecordsDisplay": function () {
                if (this.oFeatures.bServerSide) {
                    return parseInt(this._iRecordsDisplay, 10);
                } else {
                    return this.aiDisplay.length;
                }
            },

            /**
             * Set the display end point - aiDisplay index
             *  @type function
             *  @todo Should do away with _iDisplayEnd and calculate it on-the-fly here
             */
            "fnDisplayEnd": function () {
                if (this.oFeatures.bServerSide) {
                    if (this.oFeatures.bPaginate === false || this._iDisplayLength == -1) {
                        return this._iDisplayStart + this.aiDisplay.length;
                    } else {
                        return Math.min(this._iDisplayStart + this._iDisplayLength,
                            this._iRecordsDisplay);
                    }
                } else {
                    return this._iDisplayEnd;
                }
            },

            /**
             * The DataTables object for this table
             *  @type object
             *  @default null
             */
            "oInstance": null,

            /**
             * Unique identifier for each instance of the DataTables object. If there
             * is an ID on the table node, then it takes that value, otherwise an
             * incrementing internal counter is used.
             *  @type string
             *  @default null
             */
            "sInstance": null,

            /**
             * tabindex attribute value that is added to DataTables control elements, allowing
             * keyboard navigation of the table and its controls.
             */
            "iTabIndex": 0,

            /**
             * DIV container for the footer scrolling table if scrolling
             */
            "nScrollHead": null,

            /**
             * DIV container for the footer scrolling table if scrolling
             */
            "nScrollFoot": null
        };

        /**
         * Extension object for DataTables that is used to provide all extension options.
         *
         * Note that the <i>DataTable.ext</i> object is available through
         * <i>jQuery.fn.dataTable.ext</i> where it may be accessed and manipulated. It is
         * also aliased to <i>jQuery.fn.dataTableExt</i> for historic reasons.
         *  @namespace
         *  @extends DataTable.models.ext
         */
        DataTable.ext = $.extend(true, {}, DataTable.models.ext);

        $.extend(DataTable.ext.oStdClasses, {
            "sTable": "dataTable",

            /* Two buttons buttons */
            "sPagePrevEnabled": "paginate_enabled_previous",
            "sPagePrevDisabled": "paginate_disabled_previous",
            "sPageNextEnabled": "paginate_enabled_next",
            "sPageNextDisabled": "paginate_disabled_next",
            "sPageJUINext": "",
            "sPageJUIPrev": "",

            /* Full numbers paging buttons */
            "sPageButton": "paginate_button",
            "sPageButtonActive": "paginate_active",
            "sPageButtonStaticDisabled": "paginate_button paginate_button_disabled",
            "sPageFirst": "first",
            "sPagePrevious": "previous",
            "sPageNext": "next",
            "sPageLast": "last",

            /* Striping classes */
            "sStripeOdd": "odd",
            "sStripeEven": "even",

            /* Empty row */
            "sRowEmpty": "dataTables_empty",

            /* Features */
            "sWrapper": "dataTables_wrapper",
            "sFilter": "dataTables_filter",
            "sInfo": "dataTables_info",
            "sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
            "sLength": "dataTables_length",
            "sProcessing": "dataTables_processing",

            /* Sorting */
            "sSortAsc": "sorting_asc",
            "sSortDesc": "sorting_desc",
            "sSortable": "sorting", /* Sortable in both directions */
            "sSortableAsc": "sorting_asc_disabled",
            "sSortableDesc": "sorting_desc_disabled",
            "sSortableNone": "sorting_disabled",
            "sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
            "sSortJUIAsc": "",
            "sSortJUIDesc": "",
            "sSortJUI": "",
            "sSortJUIAscAllowed": "",
            "sSortJUIDescAllowed": "",
            "sSortJUIWrapper": "",
            "sSortIcon": "",

            /* Scrolling */
            "sScrollWrapper": "dataTables_scroll",
            "sScrollHead": "dataTables_scrollHead",
            "sScrollHeadInner": "dataTables_scrollHeadInner",
            "sScrollBody": "dataTables_scrollBody",
            "sScrollFoot": "dataTables_scrollFoot",
            "sScrollFootInner": "dataTables_scrollFootInner",

            /* Misc */
            "sFooterTH": "",
            "sJUIHeader": "",
            "sJUIFooter": ""
        });


        $.extend(DataTable.ext.oJUIClasses, DataTable.ext.oStdClasses, {
            /* Two buttons buttons */
            "sPagePrevEnabled": "fg-button ui-button ui-state-default ui-corner-left",
            "sPagePrevDisabled": "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
            "sPageNextEnabled": "fg-button ui-button ui-state-default ui-corner-right",
            "sPageNextDisabled": "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
            "sPageJUINext": "ui-icon ui-icon-circle-arrow-e",
            "sPageJUIPrev": "ui-icon ui-icon-circle-arrow-w",

            /* Full numbers paging buttons */
            "sPageButton": "fg-button ui-button ui-state-default",
            "sPageButtonActive": "fg-button ui-button ui-state-default ui-state-disabled",
            "sPageButtonStaticDisabled": "fg-button ui-button ui-state-default ui-state-disabled",
            "sPageFirst": "first ui-corner-tl ui-corner-bl",
            "sPageLast": "last ui-corner-tr ui-corner-br",

            /* Features */
            "sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi " +
                "ui-buttonset-multi paging_", /* Note that the type is postfixed */

            /* Sorting */
            "sSortAsc": "ui-state-default",
            "sSortDesc": "ui-state-default",
            "sSortable": "ui-state-default",
            "sSortableAsc": "ui-state-default",
            "sSortableDesc": "ui-state-default",
            "sSortableNone": "ui-state-default",
            "sSortJUIAsc": "css_right ui-icon ui-icon-triangle-1-n",
            "sSortJUIDesc": "css_right ui-icon ui-icon-triangle-1-s",
            "sSortJUI": "css_right ui-icon ui-icon-carat-2-n-s",
            "sSortJUIAscAllowed": "css_right ui-icon ui-icon-carat-1-n",
            "sSortJUIDescAllowed": "css_right ui-icon ui-icon-carat-1-s",
            "sSortJUIWrapper": "DataTables_sort_wrapper",
            "sSortIcon": "DataTables_sort_icon",

            /* Scrolling */
            "sScrollHead": "dataTables_scrollHead ui-state-default",
            "sScrollFoot": "dataTables_scrollFoot ui-state-default",

            /* Misc */
            "sFooterTH": "ui-state-default",
            "sJUIHeader": "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix",
            "sJUIFooter": "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"
        });

        /*
         * Variable: oPagination
         * Purpose:  
         * Scope:    jQuery.fn.dataTableExt
         */
        $.extend(DataTable.ext.oPagination, {
            /*
             * Variable: two_button
             * Purpose:  Standard two button (forward/back) pagination
             * Scope:    jQuery.fn.dataTableExt.oPagination
             */
            "two_button": {
                /*
                 * Function: oPagination.two_button.fnInit
                 * Purpose:  Initialise dom elements required for pagination with forward/back buttons only
                 * Returns:  -
                 * Inputs:   object:oSettings - dataTables settings object
                 *           node:nPaging - the DIV which contains this pagination control
                 *           function:fnCallbackDraw - draw function which must be called on update
                 */
                "fnInit": function (oSettings, nPaging, fnCallbackDraw) {
                    var oLang = oSettings.oLanguage.oPaginate;
                    var oClasses = oSettings.oClasses;
                    var fnClickHandler = function (e) {
                        if (oSettings.oApi._fnPageChange(oSettings, e.data.action)) {
                            fnCallbackDraw(oSettings);
                        }
                    };

                    var sAppend = (!oSettings.bJUI) ?
                        '<a class="' + oSettings.oClasses.sPagePrevDisabled + '" tabindex="' + oSettings.iTabIndex + '" role="button">' + oLang.sPrevious + '</a>' +
                            '<a class="' + oSettings.oClasses.sPageNextDisabled + '" tabindex="' + oSettings.iTabIndex + '" role="button">' + oLang.sNext + '</a>'
                        :
                        '<a class="' + oSettings.oClasses.sPagePrevDisabled + '" tabindex="' + oSettings.iTabIndex + '" role="button"><span class="' + oSettings.oClasses.sPageJUIPrev + '"></span></a>' +
                            '<a class="' + oSettings.oClasses.sPageNextDisabled + '" tabindex="' + oSettings.iTabIndex + '" role="button"><span class="' + oSettings.oClasses.sPageJUINext + '"></span></a>';
                    $(nPaging).append(sAppend);

                    var els = $('a', nPaging);
                    var nPrevious = els[0],
                        nNext = els[1];

                    oSettings.oApi._fnBindAction(nPrevious, {action: "previous"}, fnClickHandler);
                    oSettings.oApi._fnBindAction(nNext, {action: "next"}, fnClickHandler);

                    /* ID the first elements only */
                    if (!oSettings.aanFeatures.p) {
                        nPaging.id = oSettings.sTableId + '_paginate';
                        nPrevious.id = oSettings.sTableId + '_previous';
                        nNext.id = oSettings.sTableId + '_next';

                        nPrevious.setAttribute('aria-controls', oSettings.sTableId);
                        nNext.setAttribute('aria-controls', oSettings.sTableId);
                    }
                },

                /*
                 * Function: oPagination.two_button.fnUpdate
                 * Purpose:  Update the two button pagination at the end of the draw
                 * Returns:  -
                 * Inputs:   object:oSettings - dataTables settings object
                 *           function:fnCallbackDraw - draw function to call on page change
                 */
                "fnUpdate": function (oSettings, fnCallbackDraw) {
                    if (!oSettings.aanFeatures.p) {
                        return;
                    }

                    var oClasses = oSettings.oClasses;
                    var an = oSettings.aanFeatures.p;
                    var nNode;

                    /* Loop over each instance of the pager */
                    for (var i = 0, iLen = an.length; i < iLen; i++) {
                        nNode = an[i].firstChild;
                        if (nNode) {
                            /* Previous page */
                            nNode.className = ( oSettings._iDisplayStart === 0 ) ?
                                oClasses.sPagePrevDisabled : oClasses.sPagePrevEnabled;

                            /* Next page */
                            nNode = nNode.nextSibling;
                            nNode.className = ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) ?
                                oClasses.sPageNextDisabled : oClasses.sPageNextEnabled;
                        }
                    }
                }
            },


            /*
             * Variable: iFullNumbersShowPages
             * Purpose:  Change the number of pages which can be seen
             * Scope:    jQuery.fn.dataTableExt.oPagination
             */
            "iFullNumbersShowPages": 5,

            /*
             * Variable: full_numbers
             * Purpose:  Full numbers pagination
             * Scope:    jQuery.fn.dataTableExt.oPagination
             */
            "full_numbers": {
                /*
                 * Function: oPagination.full_numbers.fnInit
                 * Purpose:  Initialise dom elements required for pagination with a list of the pages
                 * Returns:  -
                 * Inputs:   object:oSettings - dataTables settings object
                 *           node:nPaging - the DIV which contains this pagination control
                 *           function:fnCallbackDraw - draw function which must be called on update
                 */
                "fnInit": function (oSettings, nPaging, fnCallbackDraw) {
                    var oLang = oSettings.oLanguage.oPaginate;
                    var oClasses = oSettings.oClasses;
                    var fnClickHandler = function (e) {
                        if (oSettings.oApi._fnPageChange(oSettings, e.data.action)) {
                            fnCallbackDraw(oSettings);
                        }
                    };

                    $(nPaging).append(
                        '<a  tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButton + " " + oClasses.sPageFirst + '">' + oLang.sFirst + '</a>' +
                            '<a  tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButton + " " + oClasses.sPagePrevious + '">' + oLang.sPrevious + '</a>' +
                            '<span></span>' +
                            '<a tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButton + " " + oClasses.sPageNext + '">' + oLang.sNext + '</a>' +
                            '<a tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButton + " " + oClasses.sPageLast + '">' + oLang.sLast + '</a>'
                    );
                    var els = $('a', nPaging);
                    var nFirst = els[0],
                        nPrev = els[1],
                        nNext = els[2],
                        nLast = els[3];

                    oSettings.oApi._fnBindAction(nFirst, {action: "first"}, fnClickHandler);
                    oSettings.oApi._fnBindAction(nPrev, {action: "previous"}, fnClickHandler);
                    oSettings.oApi._fnBindAction(nNext, {action: "next"}, fnClickHandler);
                    oSettings.oApi._fnBindAction(nLast, {action: "last"}, fnClickHandler);

                    /* ID the first elements only */
                    if (!oSettings.aanFeatures.p) {
                        nPaging.id = oSettings.sTableId + '_paginate';
                        nFirst.id = oSettings.sTableId + '_first';
                        nPrev.id = oSettings.sTableId + '_previous';
                        nNext.id = oSettings.sTableId + '_next';
                        nLast.id = oSettings.sTableId + '_last';
                    }
                },

                /*
                 * Function: oPagination.full_numbers.fnUpdate
                 * Purpose:  Update the list of page buttons shows
                 * Returns:  -
                 * Inputs:   object:oSettings - dataTables settings object
                 *           function:fnCallbackDraw - draw function to call on page change
                 */
                "fnUpdate": function (oSettings, fnCallbackDraw) {
                    if (!oSettings.aanFeatures.p) {
                        return;
                    }

                    var iPageCount = DataTable.ext.oPagination.iFullNumbersShowPages;
                    var iPageCountHalf = Math.floor(iPageCount / 2);
                    var iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);
                    var iCurrentPage = Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;
                    var sList = "";
                    var iStartButton, iEndButton, i, iLen;
                    var oClasses = oSettings.oClasses;
                    var anButtons, anStatic, nPaginateList, nNode;
                    var an = oSettings.aanFeatures.p;
                    var fnBind = function (j) {
                        oSettings.oApi._fnBindAction(this, {"page": j + iStartButton - 1}, function (e) {
                            /* Use the information in the element to jump to the required page */
                            oSettings.oApi._fnPageChange(oSettings, e.data.page);
                            fnCallbackDraw(oSettings);
                            e.preventDefault();
                        });
                    };

                    /* Pages calculation */
                    if (oSettings._iDisplayLength === -1) {
                        iStartButton = 1;
                        iEndButton = 1;
                        iCurrentPage = 1;
                    }
                    else if (iPages < iPageCount) {
                        iStartButton = 1;
                        iEndButton = iPages;
                    }
                    else if (iCurrentPage <= iPageCountHalf) {
                        iStartButton = 1;
                        iEndButton = iPageCount;
                    }
                    else if (iCurrentPage >= (iPages - iPageCountHalf)) {
                        iStartButton = iPages - iPageCount + 1;
                        iEndButton = iPages;
                    }
                    else {
                        iStartButton = iCurrentPage - Math.ceil(iPageCount / 2) + 1;
                        iEndButton = iStartButton + iPageCount - 1;
                    }


                    /* Build the dynamic list */
                    for (i = iStartButton; i <= iEndButton; i++) {
                        sList += (iCurrentPage !== i) ?
                            '<a tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButton + '">' + oSettings.fnFormatNumber(i) + '</a>' :
                            '<a tabindex="' + oSettings.iTabIndex + '" class="' + oClasses.sPageButtonActive + '">' + oSettings.fnFormatNumber(i) + '</a>';
                    }

                    /* Loop over each instance of the pager */
                    for (i = 0, iLen = an.length; i < iLen; i++) {
                        nNode = an[i];
                        if (!nNode.hasChildNodes()) {
                            continue;
                        }

                        /* Build up the dynamic list first - html and listeners */
                        $('span:eq(0)', nNode)
                            .html(sList)
                            .children('a').each(fnBind);

                        /* Update the permanent button's classes */
                        anButtons = nNode.getElementsByTagName('a');
                        anStatic = [
                            anButtons[0], anButtons[1],
                            anButtons[anButtons.length - 2], anButtons[anButtons.length - 1]
                        ];

                        $(anStatic).removeClass(oClasses.sPageButton + " " + oClasses.sPageButtonActive + " " + oClasses.sPageButtonStaticDisabled);
                        $([anStatic[0], anStatic[1]]).addClass(
                            (iCurrentPage == 1) ?
                                oClasses.sPageButtonStaticDisabled :
                                oClasses.sPageButton
                        );
                        $([anStatic[2], anStatic[3]]).addClass(
                            (iPages === 0 || iCurrentPage === iPages || oSettings._iDisplayLength === -1) ?
                                oClasses.sPageButtonStaticDisabled :
                                oClasses.sPageButton
                        );
                    }
                }
            }
        });

        $.extend(DataTable.ext.oSort, {
            /*
             * text sorting
             */
            "string-pre": function (a) {
                if (typeof a != 'string') {
                    a = (a !== null && a.toString) ? a.toString() : '';
                }
                return a.toLowerCase();
            },

            "string-asc": function (x, y) {
                return ((x < y) ? -1 : ((x > y) ? 1 : 0));
            },

            "string-desc": function (x, y) {
                return ((x < y) ? 1 : ((x > y) ? -1 : 0));
            },


            /*
             * html sorting (ignore html tags)
             */
            "html-pre": function (a) {
                return a.replace(/<.*?>/g, "").toLowerCase();
            },

            "html-asc": function (x, y) {
                return ((x < y) ? -1 : ((x > y) ? 1 : 0));
            },

            "html-desc": function (x, y) {
                return ((x < y) ? 1 : ((x > y) ? -1 : 0));
            },


            /*
             * date sorting
             */
            "date-pre": function (a) {
                var x = Date.parse(a);

                if (isNaN(x) || x === "") {
                    x = Date.parse("01/01/1970 00:00:00");
                }
                return x;
            },

            "date-asc": function (x, y) {
                return x - y;
            },

            "date-desc": function (x, y) {
                return y - x;
            },


            /*
             * numerical sorting
             */
            "numeric-pre": function (a) {
                return (a == "-" || a === "") ? 0 : a * 1;
            },

            "numeric-asc": function (x, y) {
                return x - y;
            },

            "numeric-desc": function (x, y) {
                return y - x;
            }
        });


        $.extend(DataTable.ext.aTypes, [
            /*
             * Function: -
             * Purpose:  Check to see if a string is numeric
             * Returns:  string:'numeric' or null
             * Inputs:   mixed:sText - string to check
             */
            function (sData) {
                /* Allow zero length strings as a number */
                if (typeof sData === 'number') {
                    return 'numeric';
                }
                else if (typeof sData !== 'string') {
                    return null;
                }

                var sValidFirstChars = "0123456789-";
                var sValidChars = "0123456789.";
                var Char;
                var bDecimal = false;

                /* Check for a valid first char (no period and allow negatives) */
                Char = sData.charAt(0);
                if (sValidFirstChars.indexOf(Char) == -1) {
                    return null;
                }

                /* Check all the other characters are valid */
                for (var i = 1; i < sData.length; i++) {
                    Char = sData.charAt(i);
                    if (sValidChars.indexOf(Char) == -1) {
                        return null;
                    }

                    /* Only allowed one decimal place... */
                    if (Char == ".") {
                        if (bDecimal) {
                            return null;
                        }
                        bDecimal = true;
                    }
                }

                return 'numeric';
            },

            /*
             * Function: -
             * Purpose:  Check to see if a string is actually a formatted date
             * Returns:  string:'date' or null
             * Inputs:   string:sText - string to check
             */
            function (sData) {
                var iParse = Date.parse(sData);
                if ((iParse !== null && !isNaN(iParse)) || (typeof sData === 'string' && sData.length === 0)) {
                    return 'date';
                }
                return null;
            },

            /*
             * Function: -
             * Purpose:  Check to see if a string should be treated as an HTML string
             * Returns:  string:'html' or null
             * Inputs:   string:sText - string to check
             */
            function (sData) {
                if (typeof sData === 'string' && sData.indexOf('<') != -1 && sData.indexOf('>') != -1) {
                    return 'html';
                }
                return null;
            }
        ]);


        // jQuery aliases
        $.fn.DataTable = DataTable;
        $.fn.dataTable = DataTable;
        $.fn.dataTableSettings = DataTable.settings;
        $.fn.dataTableExt = DataTable.ext;


        // Information about events fired by DataTables - for documentation.
        /**
         * Draw event, fired whenever the table is redrawn on the page, at the same point as
         * fnDrawCallback. This may be useful for binding events or performing calculations when
         * the table is altered at all.
         *  @name DataTable#draw
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         */

        /**
         * Filter event, fired when the filtering applied to the table (using the build in global
         * global filter, or column filters) is altered.
         *  @name DataTable#filter
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         */

        /**
         * Page change event, fired when the paging of the table is altered.
         *  @name DataTable#page
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         */

        /**
         * Sort event, fired when the sorting applied to the table is altered.
         *  @name DataTable#sort
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         */

        /**
         * DataTables initialisation complete event, fired when the table is fully drawn,
         * including Ajax data loaded, if Ajax data is required.
         *  @name DataTable#init
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} oSettings DataTables settings object
         *  @param {object} json The JSON object request from the server - only
         *    present if client-side Ajax sourced data is used</li></ol>
         */

        /**
         * State save event, fired when the table has changed state a new state save is required.
         * This method allows modification of the state saving object prior to actually doing the
         * save, including addition or other state properties (for plug-ins) or modification
         * of a DataTables core property.
         *  @name DataTable#stateSaveParams
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} oSettings DataTables settings object
         *  @param {object} json The state information to be saved
         */

        /**
         * State load event, fired when the table is loading state from the stored data, but
         * prior to the settings object being modified by the saved state - allowing modification
         * of the saved state is required or loading of state for a plug-in.
         *  @name DataTable#stateLoadParams
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} oSettings DataTables settings object
         *  @param {object} json The saved state information
         */

        /**
         * State loaded event, fired when state has been loaded from stored data and the settings
         * object has been modified by the loaded data.
         *  @name DataTable#stateLoaded
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} oSettings DataTables settings object
         *  @param {object} json The saved state information
         */

        /**
         * Processing event, fired when DataTables is doing some kind of processing (be it,
         * sort, filter or anything else). Can be used to indicate to the end user that
         * there is something happening, or that something has finished.
         *  @name DataTable#processing
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} oSettings DataTables settings object
         *  @param {boolean} bShow Flag for if DataTables is doing processing or not
         */

        /**
         * Ajax (XHR) event, fired whenever an Ajax request is completed from a request to
         * made to the server for new data (note that this trigger is called in fnServerData,
         * if you override fnServerData and which to use this event, you need to trigger it in
         * you success function).
         *  @name DataTable#xhr
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         *  @param {object} json JSON returned from the server
         */

        /**
         * Destroy event, fired when the DataTable is destroyed by calling fnDestroy or passing
         * the bDestroy:true parameter in the initialisation object. This can be used to remove
         * bound events, added DOM nodes, etc.
         *  @name DataTable#destroy
         *  @event
         *  @param {event} e jQuery event object
         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
         */
    }));

}(window, document));


/* Set the defaults for DataTables initialisation */
$.extend(true, $.fn.dataTable.defaults, {
    "sDom": "<'row'<'col-md-6 col-sm-12'l><'col-md-12 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
    "sPaginationType": "bootstrap",
    "oLanguage": {
        "sLengthMenu": "_MENU_ records"
    }
});


/* Default class modification */
$.extend($.fn.dataTableExt.oStdClasses, {
    "sWrapper": "dataTables_wrapper form-inline"
});


/* API method to get paging information */
$.fn.dataTableExt.oApi.fnPagingInfo = function (oSettings) {
    return {
        "iStart": oSettings._iDisplayStart,
        "iEnd": oSettings.fnDisplayEnd(),
        "iLength": oSettings._iDisplayLength,
        "iTotal": oSettings.fnRecordsTotal(),
        "iFilteredTotal": oSettings.fnRecordsDisplay(),
        "iPage": Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength),
        "iTotalPages": Math.ceil(oSettings.fnRecordsDisplay() / oSettings._iDisplayLength)
    };
};


/* Bootstrap style pagination control */
$.extend($.fn.dataTableExt.oPagination, {
    "bootstrap": {
        "fnInit": function (oSettings, nPaging, fnDraw) {
            var oLang = oSettings.oLanguage.oPaginate;
            var fnClickHandler = function (e) {
                e.preventDefault();
                if (oSettings.oApi._fnPageChange(oSettings, e.data.action)) {
                    fnDraw(oSettings);
                }
            };

            /**
             // pagination with prev, next link captions
             $(nPaging).append(
             '<ul class="pagination">'+
             '<li class="prev disabled"><a href="#"><i class="icon-angle-left"></i>'+oLang.sPrevious+'</a></li>'+
             '<li class="next disabled"><a href="#">'+oLang.sNext+'<i class="icon-angle-right"></i></a></li>'+
             '</ul>'
             );
             **/
                // pagination with prev, next link icons
            $(nPaging).append(
                '<ul class="pagination">' +
                    '<li class="prev disabled"><a href="#" title="' + oLang.sPrevious + '"><i class="fa fa-angle-left"></i></a></li>' +
                    '<li class="next disabled"><a href="#" title="' + oLang.sNext + '"><i class="fa fa-angle-right"></i></a></li>' +
                    '</ul>'
            );

            var els = $('a', nPaging);
            $(els[0]).bind('click.DT', { action: "previous" }, fnClickHandler);
            $(els[1]).bind('click.DT', { action: "next" }, fnClickHandler);
        },

        "fnUpdate": function (oSettings, fnDraw) {
            var iListLength = 5;
            var oPaging = oSettings.oInstance.fnPagingInfo();
            var an = oSettings.aanFeatures.p;
            var i, j, sClass, iStart, iEnd, iHalf = Math.floor(iListLength / 2);

            if (oPaging.iTotalPages < iListLength) {
                iStart = 1;
                iEnd = oPaging.iTotalPages;
            }
            else if (oPaging.iPage <= iHalf) {
                iStart = 1;
                iEnd = iListLength;
            } else if (oPaging.iPage >= (oPaging.iTotalPages - iHalf)) {
                iStart = oPaging.iTotalPages - iListLength + 1;
                iEnd = oPaging.iTotalPages;
            } else {
                iStart = oPaging.iPage - iHalf + 1;
                iEnd = iStart + iListLength - 1;
            }

            for (i = 0, iLen = an.length; i < iLen; i++) {
                // Remove the middle elements
                $('li:gt(0)', an[i]).filter(':not(:last)').remove();

                // Add the new list items and their event handlers
                for (j = iStart; j <= iEnd; j++) {
                    sClass = (j == oPaging.iPage + 1) ? 'class="active"' : '';
                    $('<li ' + sClass + '><a href="#">' + j + '</a></li>')
                        .insertBefore($('li:last', an[i])[0])
                        .bind('click', function (e) {
                            e.preventDefault();
                            oSettings._iDisplayStart = (parseInt($('a', this).text(), 10) - 1) * oPaging.iLength;
                            fnDraw(oSettings);
                        });
                }

                // Add / remove disabled classes from the static elements
                if (oPaging.iPage === 0) {
                    $('li:first', an[i]).addClass('disabled');
                } else {
                    $('li:first', an[i]).removeClass('disabled');
                }

                if (oPaging.iPage === oPaging.iTotalPages - 1 || oPaging.iTotalPages === 0) {
                    $('li:last', an[i]).addClass('disabled');
                } else {
                    $('li:last', an[i]).removeClass('disabled');
                }
            }
        }
    }
});


/*
 * TableTools Bootstrap compatibility
 * Required TableTools 2.1+
 */
if ($.fn.DataTable.TableTools) {
    // Set the classes that TableTools uses to something suitable for Bootstrap
    $.extend(true, $.fn.DataTable.TableTools.classes, {
        "container": "DTTT btn-group",
        "buttons": {
            "normal": "btn default",
            "disabled": "disabled"
        },
        "collection": {
            "container": "DTTT_dropdown dropdown-menu",
            "buttons": {
                "normal": "",
                "disabled": "disabled"
            }
        },
        "print": {
            "info": "DTTT_print_info modal"
        },
        "select": {
            "row": "active"
        }
    });

    // Have the collection use a bootstrap compatible dropdown
    $.extend(true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
        "collection": {
            "container": "ul",
            "button": "li",
            "liner": "a"
        }
    });
}
$.validator.addMethod("uidValid", function(uid, element) {
    return (this.optional(element) || uid.match(/^[a-z][a-z0-9]*$/i));
}, "Please specify a valid user id");

var FormValidation = function () {

    var handleValidation = function () {

        var form1 = $('#supplier-client-form');
        var error1 = $('.alert-danger', form1);
        var success1 = $('.alert-success', form1);

        form1.validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                'bcl_supplierclientbundle_supplierclient[firstName]': {
                    uidValid:true,
                    minlength: 2,
                    required: true
                },
                'bcl_supplierclientbundle_supplierclient[companyName]': {
                    minlength: 2,
                    required: true
                },
                'bcl_supplierclientbundle_supplierclient[email]': {
                    required: true,
                    email: true
                },
                'bcl_supplierclientbundle_supplierclient[phoneNumber]': {
                    required: true,
                    number: true
                },
                'bcl_supplierclientbundle_supplierclient[address]': {
                    minlength: 2,
                    required: true
                }
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                success1.hide();
                error1.show();
                App.scrollTo(error1, -200);
            },

            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip({'container': 'body'});
            },

            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                form.submit();
                //success1.show();
                error1.hide();
            }
        });

    }

    var form2 = $('#user-form');
    var error2 = $('.alert-danger', form2);
    var success2 = $('.alert-success', form2);

    form2.validate({
        errorElement: 'span', //default input error message container
        errorClass: 'help-block', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        ignore: "",
        rules: {
            'bcl_userbundle_user[firstName]': {
                uidValid:true,
                minlength: 2,
                required: true
            },
            'bcl_userbundle_user[username]': {
                minlength: 2,
                required: true,
                uidValid:true
            },
            'bcl_userbundle_user[email]': {
                required: true,
                email: true
            },
            'bcl_userbundle_user[phoneNumber]': {
                required: true,
                number: true
            },
            'bcl_userbundle_user[designation]': {
                minlength: 2,
                required: true
            },
            'bcl_userbundle_user[passwords][Password]': {
                minlength: 5,
                required: true
            },
            'bcl_userbundle_user[passwords][Confirm_Password]': {
                required: true,
                minlength: 5,
                equalTo: '#bcl_userbundle_user_passwords_Password'
            }
        },
        messages: {
            'bcl_userbundle_user[passwords][Confirm_Password]': {
                required: 'Repeat your password',
                equalTo: 'Enter the same password as above'
            }
        },

        invalidHandler: function (event, validator) { //display error alert on form submit
            success2.hide();
            error2.show();
            App.scrollTo(error2, -200);
        },

        errorPlacement: function (error, element) { // render error placement for each input type
            var icon = $(element).parent('.input-icon').children('i');
            icon.removeClass('fa-check').addClass("fa-warning");
            icon.attr("data-original-title", error.text()).tooltip({'container': 'body'});
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight

        },

        success: function (label, element) {
            var icon = $(element).parent('.input-icon').children('i');
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
            icon.removeClass("fa-warning").addClass("fa-check");
        },

        submitHandler: function (form) {
            form.submit();
            //success2.show();
            error2.hide();
        }
    });

//    var form3 = $('#product-form');
//    var error3 = $('.alert-danger', form3);
//    var success3 = $('.alert-success', form3);
//
//    form3.validate({
//        errorElement: 'span', //default input error message container
//        errorClass: 'help-block', // default input error message class
//        focusInvalid: false, // do not focus the last invalid input
//        ignore: "",
//        rules: {
//            'bcl_productbundle_product[productName]': {
//                minlength: 2,
//                required: true
//            },
//            'bcl_productbundle_product[description]': {
//                minlength: 2,
//                required: true
//            },
//            'bcl_productbundle_product[isCategory]': {
//                required: true
//            }
//        },
//
//        invalidHandler: function (event, validator) { //display error alert on form submit
//            success3.hide();
//            error3.show();
//            App.scrollTo(error3, -200);
//        },
//
//        errorPlacement: function (error, element) { // render error placement for each input type
//            var icon = $(element).parent('.input-icon').children('i');
//            icon.removeClass('fa-check').addClass("fa-warning");
//            icon.attr("data-original-title", error.text()).tooltip({'container': 'body'});
//        },
//
//        highlight: function (element) { // hightlight error inputs
//            $(element)
//                .closest('.form-group').addClass('has-error'); // set error class to the control group
//        },
//
//        unhighlight: function (element) { // revert the change done by hightlight
//
//        },
//
//        success: function (label, element) {
//            var icon = $(element).parent('.input-icon').children('i');
//            $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
//            icon.removeClass("fa-warning").addClass("fa-check");
//        },
//
//        submitHandler: function (form) {
//            form.submit();
//            //success3.show();
//            error3.hide();
//        }
//    });

    var form4 = $('#file-form');
    var error4 = $('.alert-danger', form4);
    var success4 = $('.alert-success', form4);

    form4.validate({
        errorElement: 'span', //default input error message container
        errorClass: 'help-block', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        ignore: "",
        rules: {
            'bcl_filebundle_file[title]': {
                minlength: 2,
                required: true
            },
            'bcl_filebundle_file[description]': {
                minlength: 2,
                required: true
            },
            'bcl_filebundle_file[price]': {
                required: true
            },
            'bcl_filebundle_file[commission]': {
                required: true
            },
            'bcl_filebundle_file[quantity]': {
                required: true
            },
            'bcl_filebundle_file[lineTotal]': {
                required: true
            }
        },

        invalidHandler: function (event, validator) { //display error alert on form submit
            success4.hide();
            error4.show();
            App.scrollTo(error4, -200);
        },

        errorPlacement: function (error, element) { // render error placement for each input type
            var icon = $(element).parent('.input-icon').children('i');
            icon.removeClass('fa-check').addClass("fa-warning");
            icon.attr("data-original-title", error.text()).tooltip({'container': 'body'});
        },

        highlight: function (element) { // hightlight error inputs
            $(element)
                .closest('.form-group').addClass('has-error'); // set error class to the control group
        },

        unhighlight: function (element) { // revert the change done by hightlight

        },

        success: function (label, element) {
            var icon = $(element).parent('.input-icon').children('i');
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
            icon.removeClass("fa-warning").addClass("fa-check");
        },

        submitHandler: function (form) {
            form.submit();
            //success2.show();
            error2.hide();
        }
    });

    var handleWysihtml5 = function () {
        if (!jQuery().wysihtml5) {

            return;
        }

        if ($('.wysihtml5').size() > 0) {
            $('.wysihtml5').wysihtml5({
                "stylesheets": ["assets/plugins/bootstrap-wysihtml5/wysiwyg-color.css"]
            });
        }
    }

    return {
        init: function () {
            handleWysihtml5();
            handleValidation();
        }
    };

}();

var TableManaged = function () {

    return {

        //main function to initiate the module
        init: function () {

            if (!jQuery().dataTable) {
                return;
            }

            // begin first table
            $('#sample_1').dataTable({
                "aoColumns": [
                    { "bSortable": false },
                    null,
                    { "bSortable": false },
                    null,
                    { "bSortable": false },
                    { "bSortable": false }
                ],
                "aLengthMenu": [
                    [5, 15, 20, -1],
                    [5, 15, 20, "All"] // change per page values here
                ],
                // set the initial value
                "iDisplayLength": 5,
                "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "Prev",
                        "sNext": "Next"
                    }
                },
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': [0]
                    }
                ]
            });

            jQuery('#sample_1 .group-checkable').change(function () {
                var set = jQuery(this).attr("data-set");
                var checked = jQuery(this).is(":checked");
                jQuery(set).each(function () {
                    if (checked) {
                        $(this).attr("checked", true);
                    } else {
                        $(this).attr("checked", false);
                    }
                    $(this).parents('tr').toggleClass("active");
                });
                jQuery.uniform.update(set);

            });

            jQuery('#sample_1 tbody tr .checkboxes').change(function () {
                $(this).parents('tr').toggleClass("active");
            });

            jQuery('#sample_1_wrapper .dataTables_filter input').addClass("form-control input-medium"); // modify table search input
            jQuery('#sample_1_wrapper .dataTables_length select').addClass("form-control input-xsmall"); // modify table per page dropdown
            //jQuery('#sample_1_wrapper .dataTables_length select').select2(); // initialize select2 dropdown

            // begin second table
            $('#sample_2').dataTable({
                "aLengthMenu": [
                    [5, 15, 20, -1],
                    [5, 15, 20, "All"] // change per page values here
                ],
                // set the initial value
                "iDisplayLength": 5,
                "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "Prev",
                        "sNext": "Next"
                    }
                },
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': [0]
                    }
                ]
            });

            jQuery('#sample_2 .group-checkable').change(function () {
                var set = jQuery(this).attr("data-set");
                var checked = jQuery(this).is(":checked");
                jQuery(set).each(function () {
                    if (checked) {
                        $(this).attr("checked", true);
                    } else {
                        $(this).attr("checked", false);
                    }
                });
                jQuery.uniform.update(set);
            });

            jQuery('#sample_2_wrapper .dataTables_filter input').addClass("form-control input-small"); // modify table search input
            jQuery('#sample_2_wrapper .dataTables_length select').addClass("form-control input-xsmall"); // modify table per page dropdown
            jQuery('#sample_2_wrapper .dataTables_length select').select2(); // initialize select2 dropdown

            // begin: third table
            $('#sample_3').dataTable({
                "aLengthMenu": [
                    [5, 15, 20, -1],
                    [5, 15, 20, "All"] // change per page values here
                ],
                // set the initial value
                "iDisplayLength": 5,
                "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "Prev",
                        "sNext": "Next"
                    }
                },
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': [0]
                    }
                ]
            });

            jQuery('#sample_3 .group-checkable').change(function () {
                var set = jQuery(this).attr("data-set");
                var checked = jQuery(this).is(":checked");
                jQuery(set).each(function () {
                    if (checked) {
                        $(this).attr("checked", true);
                    } else {
                        $(this).attr("checked", false);
                    }
                });
                jQuery.uniform.update(set);
            });

            jQuery('#sample_3_wrapper .dataTables_filter input').addClass("form-control input-small"); // modify table search input
            jQuery('#sample_3_wrapper .dataTables_length select').addClass("form-control input-xsmall"); // modify table per page dropdown
            jQuery('#sample_3_wrapper .dataTables_length select').select2(); // initialize select2 dropdown

        }

    };

}();
/* =============================================================
 * bootstrap-typeahead.js v2.3.2
 * http://twitter.github.com/bootstrap/javascript.html#typeahead
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */
!function (e) {
    "use strict";
    var t = function (t, n) {
        this.$element = e(t), this.options = e.extend({}, e.fn.typeahead.defaults, n), this.matcher = this.options.matcher || this.matcher, this.sorter = this.options.sorter || this.sorter, this.highlighter = this.options.highlighter || this.highlighter, this.updater = this.options.updater || this.updater, this.source = this.options.source, this.$menu = e(this.options.menu), this.shown = !1, this.listen()
    };
    t.prototype = {constructor: t, select: function () {
        var e = this.$menu.find(".active").attr("data-value");
        return this.$element.val(this.updater(e)).change(), this.hide()
    }, updater: function (e) {
        return e
    }, show: function () {
        var t = e.extend({}, this.$element.position(), {height: this.$element[0].offsetHeight});
        return this.$menu.insertAfter(this.$element).css({top: t.top + t.height, left: t.left}).show(), this.shown = !0, this
    }, hide: function () {
        return this.$menu.hide(), this.shown = !1, this
    }, lookup: function () {
        var t;
        return this.query = this.$element.val(), !this.query || this.query.length < this.options.minLength ? this.shown ? this.hide() : this : (t = e.isFunction(this.source) ? this.source(this.query, e.proxy(this.process, this)) : this.source, t ? this.process(t) : this)
    }, process: function (t) {
        var n = this;
        return t = e.grep(t, function (e) {
            return n.matcher(e)
        }), t = this.sorter(t), t.length ? this.render(t.slice(0, this.options.items)).show() : this.shown ? this.hide() : this
    }, matcher: function (e) {
        return~e.toLowerCase().indexOf(this.query.toLowerCase())
    }, sorter: function (e) {
        for (var t, n = [], i = [], r = []; t = e.shift();)t.toLowerCase().indexOf(this.query.toLowerCase()) ? ~t.indexOf(this.query) ? i.push(t) : r.push(t) : n.push(t);
        return n.concat(i, r)
    }, highlighter: function (e) {
        var t = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        return e.replace(new RegExp("(" + t + ")", "ig"), function (e, t) {
            return"<strong>" + t + "</strong>"
        })
    }, render: function (t) {
        var n = this;
        return t = e(t).map(function (t, i) {
            return t = e(n.options.item).attr("data-value", i), t.find("a").html(n.highlighter(i)), t[0]
        }), t.first().addClass("active"), this.$menu.html(t), this
    }, next: function () {
        var t = this.$menu.find(".active").removeClass("active"), n = t.next();
        n.length || (n = e(this.$menu.find("li")[0])), n.addClass("active")
    }, prev: function () {
        var e = this.$menu.find(".active").removeClass("active"), t = e.prev();
        t.length || (t = this.$menu.find("li").last()), t.addClass("active")
    }, listen: function () {
        this.$element.on("focus", e.proxy(this.focus, this)).on("blur", e.proxy(this.blur, this)).on("keypress", e.proxy(this.keypress, this)).on("keyup", e.proxy(this.keyup, this)), this.eventSupported("keydown") && this.$element.on("keydown", e.proxy(this.keydown, this)), this.$menu.on("click", e.proxy(this.click, this)).on("mouseenter", "li", e.proxy(this.mouseenter, this)).on("mouseleave", "li", e.proxy(this.mouseleave, this))
    }, eventSupported: function (e) {
        var t = e in this.$element;
        return t || (this.$element.setAttribute(e, "return;"), t = "function" == typeof this.$element[e]), t
    }, move: function (e) {
        if (this.shown) {
            switch (e.keyCode) {
                case 9:
                case 13:
                case 27:
                    e.preventDefault();
                    break;
                case 38:
                    e.preventDefault(), this.prev();
                    break;
                case 40:
                    e.preventDefault(), this.next()
            }
            e.stopPropagation()
        }
    }, keydown: function (t) {
        this.suppressKeyPressRepeat = ~e.inArray(t.keyCode, [40, 38, 9, 13, 27]), this.move(t)
    }, keypress: function (e) {
        this.suppressKeyPressRepeat || this.move(e)
    }, keyup: function (e) {
        switch (e.keyCode) {
            case 40:
            case 38:
            case 16:
            case 17:
            case 18:
                break;
            case 9:
            case 13:
                if (!this.shown)return;
                this.select();
                break;
            case 27:
                if (!this.shown)return;
                this.hide();
                break;
            default:
                this.lookup()
        }
        e.stopPropagation(), e.preventDefault()
    }, focus: function () {
        this.focused = !0
    }, blur: function () {
        this.focused = !1, !this.mousedover && this.shown && this.hide()
    }, click: function (e) {
        e.stopPropagation(), e.preventDefault(), this.select(), this.$element.focus()
    }, mouseenter: function (t) {
        this.mousedover = !0, this.$menu.find(".active").removeClass("active"), e(t.currentTarget).addClass("active")
    }, mouseleave: function () {
        this.mousedover = !1, !this.focused && this.shown && this.hide()
    }};
    var n = e.fn.typeahead;
    e.fn.typeahead = function (n) {
        return this.each(function () {
            var i = e(this), r = i.data("typeahead"), s = "object" == typeof n && n;
            r || i.data("typeahead", r = new t(this, s)), "string" == typeof n && r[n]()
        })
    }, e.fn.typeahead.defaults = {source: [], items: 8, menu: '<ul class="typeahead dropdown-menu"></ul>', item: '<li><a href="#"></a></li>', minLength: 1}, e.fn.typeahead.Constructor = t, e.fn.typeahead.noConflict = function () {
        return e.fn.typeahead = n, this
    }, e(document).on("focus.typeahead.data-api", '[data-provide="typeahead"]', function () {
        var t = e(this);
        t.data("typeahead") || t.typeahead(t.data())
    })
}(window.jQuery);
/*
 * Fuel UX Spinner
 * https://github.com/ExactTarget/fuelux
 *
 * Copyright (c) 2012 ExactTarget
 * Licensed under the MIT license.
 */

!function (e) {
    var t = function (t, i) {
        this.$element = e(t), this.options = e.extend({}, e.fn.spinner.defaults, i), this.$input = this.$element.find(".spinner-input"), this.$element.on("keyup", this.$input, e.proxy(this.change, this)), this.options.hold ? (this.$element.on("mousedown", ".spinner-up", e.proxy(function () {
            this.startSpin(!0)
        }, this)), this.$element.on("mouseup", ".spinner-up, .spinner-down", e.proxy(this.stopSpin, this)), this.$element.on("mouseout", ".spinner-up, .spinner-down", e.proxy(this.stopSpin, this)), this.$element.on("mousedown", ".spinner-down", e.proxy(function () {
            this.startSpin(!1)
        }, this))) : (this.$element.on("click", ".spinner-up", e.proxy(function () {
            this.step(!0)
        }, this)), this.$element.on("click", ".spinner-down", e.proxy(function () {
            this.step(!1)
        }, this))), this.switches = {count: 1, enabled: !0}, this.switches.speed = "medium" === this.options.speed ? 300 : "fast" === this.options.speed ? 100 : 500, this.lastValue = null, this.render(), this.options.disabled && this.disable()
    };
    t.prototype = {constructor: t, render: function () {
        var e = this.$input.val();
        e ? this.value(e) : this.$input.val(this.options.value), this.$input.attr("maxlength", (this.options.max + "").split("").length)
    }, change: function () {
        var e = this.$input.val();
        e / 1 ? this.options.value = e / 1 : (e = e.replace(/[^0-9]/g, ""), this.$input.val(e), this.options.value = e / 1), this.triggerChangedEvent()
    }, stopSpin: function () {
        clearTimeout(this.switches.timeout), this.switches.count = 1, this.triggerChangedEvent()
    }, triggerChangedEvent: function () {
        var e = this.value();
        e !== this.lastValue && (this.lastValue = e, this.$element.trigger("changed", e), this.$element.trigger("change"))
    }, startSpin: function (t) {
        if (!this.options.disabled) {
            var i = this.switches.count;
            1 === i ? (this.step(t), i = 1) : i = 3 > i ? 1.5 : 8 > i ? 2.5 : 4, this.switches.timeout = setTimeout(e.proxy(function () {
                this.iterator(t)
            }, this), this.switches.speed / i), this.switches.count++
        }
    }, iterator: function (e) {
        this.step(e), this.startSpin(e)
    }, step: function (e) {
        var t = this.options.value, i = e ? this.options.max : this.options.min;
        if (e ? i > t : t > i) {
            var s = t + (e ? 1 : -1) * this.options.step;
            (e ? s > i : i > s) ? this.value(i) : this.value(s)
        } else if (this.options.cycle) {
            var n = e ? this.options.min : this.options.max;
            this.value(n)
        }
    }, value: function (e) {
        return!isNaN(parseFloat(e)) && isFinite(e) ? (e = parseFloat(e), this.options.value = e, this.$input.val(e), this) : this.options.value
    }, disable: function () {
        this.options.disabled = !0, this.$input.attr("disabled", ""), this.$element.find("button").addClass("disabled")
    }, enable: function () {
        this.options.disabled = !1, this.$input.removeAttr("disabled"), this.$element.find("button").removeClass("disabled")
    }}, e.fn.spinner = function (i, s) {
        var n, a = this.each(function () {
            var a = e(this), o = a.data("spinner"), r = "object" == typeof i && i;
            o || a.data("spinner", o = new t(this, r)), "string" == typeof i && (n = o[i](s))
        });
        return void 0 === n ? a : n
    }, e.fn.spinner.defaults = {value: 1, min: 1, max: 999, step: 1, hold: !0, speed: "medium", disabled: !1}, e.fn.spinner.Constructor = t, e(function () {
        e("body").on("mousedown.spinner.data-api", ".spinner", function () {
            var t = e(this);
            t.data("spinner") || t.spinner(t.data())
        })
    })
}(window.jQuery);
/* ===========================================================
 * bootstrap-fileupload.js j2
 * http://jasny.github.com/bootstrap/javascript.html#fileupload
 * ===========================================================
 * Copyright 2012 Jasny BV, Netherlands.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

!function ($) {

    "use strict"; // jshint ;_

    /* FILEUPLOAD PUBLIC CLASS DEFINITION
     * ================================= */

    var Fileupload = function (element, options) {
        this.$element = $(element)
        this.type = this.$element.data('uploadtype') || (this.$element.find('.thumbnail').length > 0 ? "image" : "file")

        this.$input = this.$element.find(':file')
        if (this.$input.length === 0) return

        this.name = this.$input.attr('name') || options.name

        this.$hidden = this.$element.find('input[type=hidden][name="' + this.name + '"]')
        if (this.$hidden.length === 0) {
            this.$hidden = $('<input type="hidden" />')
            this.$element.prepend(this.$hidden)
        }

        this.$preview = this.$element.find('.fileupload-preview')
        var height = this.$preview.css('height')
        if (this.$preview.css('display') != 'inline' && height != '0px' && height != 'none') this.$preview.css('line-height', height)

        this.original = {
            'exists': this.$element.hasClass('fileupload-exists'),
            'preview': this.$preview.html(),
            'hiddenVal': this.$hidden.val()
        }

        this.$remove = this.$element.find('[data-dismiss="fileupload"]')

        this.$element.find('[data-trigger="fileupload"]').on('click.fileupload', $.proxy(this.trigger, this))

        this.listen()
    }

    Fileupload.prototype = {

        listen: function () {
            this.$input.on('change.fileupload', $.proxy(this.change, this))
            $(this.$input[0].form).on('reset.fileupload', $.proxy(this.reset, this))
            if (this.$remove) this.$remove.on('click.fileupload', $.proxy(this.clear, this))
        },

        change: function (e, invoked) {
            var file = e.target.files !== undefined ? e.target.files[0] : (e.target.value ? { name: e.target.value.replace(/^.+\\/, '') } : null)
            if (invoked === 'clear') return

            if (!file) {
                this.clear()
                return
            }

            this.$hidden.val('')
            this.$hidden.attr('name', '')
            this.$input.attr('name', this.name)

            if (this.type === "image" && this.$preview.length > 0 && (typeof file.type !== "undefined" ? file.type.match('image.*') : file.name.match('\\.(gif|png|jpe?g)$')) && typeof FileReader !== "undefined") {
                var reader = new FileReader()
                var preview = this.$preview
                var element = this.$element

                reader.onload = function (e) {
                    preview.html('<img src="' + e.target.result + '" ' + (preview.css('max-height') != 'none' ? 'style="max-height: ' + preview.css('max-height') + ';"' : '') + ' />')
                    element.addClass('fileupload-exists').removeClass('fileupload-new')
                }

                reader.readAsDataURL(file)
            } else {
                this.$preview.text(file.name)
                this.$element.addClass('fileupload-exists').removeClass('fileupload-new')
            }
        },

        clear: function (e) {
            this.$hidden.val('')
            this.$hidden.attr('name', this.name)
            this.$input.attr('name', '')

            //ie8+ doesn't support changing the value of input with type=file so clone instead
            if ($.browser.msie) {
                var inputClone = this.$input.clone(true);
                this.$input.after(inputClone);
                this.$input.remove();
                this.$input = inputClone;
            } else {
                this.$input.val('')
            }

            this.$preview.html('')
            this.$element.addClass('fileupload-new').removeClass('fileupload-exists')

            if (e) {
                this.$input.trigger('change', [ 'clear' ])
                e.preventDefault()
            }
        },

        reset: function (e) {
            this.clear()

            this.$hidden.val(this.original.hiddenVal)
            this.$preview.html(this.original.preview)

            if (this.original.exists) this.$element.addClass('fileupload-exists').removeClass('fileupload-new')
            else this.$element.addClass('fileupload-new').removeClass('fileupload-exists')
        },

        trigger: function (e) {
            this.$input.trigger('click')
            e.preventDefault()
        }
    }


    /* FILEUPLOAD PLUGIN DEFINITION
     * =========================== */

    $.fn.fileupload = function (options) {
        return this.each(function () {
            var $this = $(this)
                , data = $this.data('fileupload')
            if (!data) $this.data('fileupload', (data = new Fileupload(this, options)))
            if (typeof options == 'string') data[options]()
        })
    }

    $.fn.fileupload.Constructor = Fileupload


    /* FILEUPLOAD DATA-API
     * ================== */

    $(function () {
        $('body').on('click.fileupload.data-api', '[data-provides="fileupload"]', function (e) {
            var $this = $(this)
            if ($this.data('fileupload')) return
            $this.fileupload($this.data())

            var $target = $(e.target).is('[data-dismiss=fileupload],[data-trigger=fileupload]') ?
                $(e.target) : $(e.target).parents('[data-dismiss=fileupload],[data-trigger=fileupload]').first()
            if ($target.length > 0) {
                $target.trigger('click.fileupload')
                e.preventDefault()
            }
        })
    })

}(window.jQuery);
/* =========================================================
 * bootstrap-datepicker.js
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 * Improvements by Andrew Rowls
 * Improvements By Keenthemes for Boostrap 3.0 support
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

(function ($) {

    var $window = $(window);

    function UTCDate() {
        return new Date(Date.UTC.apply(Date, arguments));
    }

    function UTCToday() {
        var today = new Date();
        return UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate());
    }


    // Picker object

    var Datepicker = function (element, options) {
        var that = this;

        this._process_options(options);

        this.element = $(element);
        this.isInline = false;
        this.isInput = this.element.is('input');
        this.component = this.element.is('.date') ? this.element.find('.input-group-btn, .btn') : false;
        this.hasInput = this.component && this.element.find('input').length;
        if (this.component && this.component.length === 0)
            this.component = false;

        this.picker = $(DPGlobal.template);
        this._buildEvents();
        this._attachEvents();

        if (this.isInline) {
            this.picker.addClass('datepicker-inline').appendTo(this.element);
        } else {
            this.picker.addClass('datepicker-dropdown dropdown-menu');
        }

        if (this.o.rtl) {
            this.picker.addClass('datepicker-rtl');
            this.picker.find('.prev i, .next i')
                .toggleClass('fa-angle-left fa-angle-right');
        }


        this.viewMode = this.o.startView;

        if (this.o.calendarWeeks)
            this.picker.find('tfoot th.today')
                .attr('colspan', function (i, val) {
                    return parseInt(val) + 1;
                });

        this._allow_update = false;

        this.setStartDate(this._o.startDate);
        this.setEndDate(this._o.endDate);
        this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled);

        this.fillDow();
        this.fillMonths();

        this._allow_update = true;

        this.update();
        this.showMode();

        if (this.isInline) {
            this.show();
        }
    };

    Datepicker.prototype = {
        constructor: Datepicker,

        _process_options: function (opts) {
            // Store raw options for reference
            this._o = $.extend({}, this._o, opts);
            // Processed options
            var o = this.o = $.extend({}, this._o);

            // Check if "de-DE" style date is available, if not language should
            // fallback to 2 letter code eg "de"
            var lang = o.language;
            if (!dates[lang]) {
                lang = lang.split('-')[0];
                if (!dates[lang])
                    lang = defaults.language;
            }
            o.language = lang;

            switch (o.startView) {
                case 2:
                case 'decade':
                    o.startView = 2;
                    break;
                case 1:
                case 'year':
                    o.startView = 1;
                    break;
                default:
                    o.startView = 0;
            }

            switch (o.minViewMode) {
                case 1:
                case 'months':
                    o.minViewMode = 1;
                    break;
                case 2:
                case 'years':
                    o.minViewMode = 2;
                    break;
                default:
                    o.minViewMode = 0;
            }

            o.startView = Math.max(o.startView, o.minViewMode);

            o.weekStart %= 7;
            o.weekEnd = ((o.weekStart + 6) % 7);

            var format = DPGlobal.parseFormat(o.format);
            if (o.startDate !== -Infinity) {
                if (!!o.startDate) {
                    if (o.startDate instanceof Date)
                        o.startDate = this._local_to_utc(this._zero_time(o.startDate));
                    else
                        o.startDate = DPGlobal.parseDate(o.startDate, format, o.language);
                } else {
                    o.startDate = -Infinity;
                }
            }
            if (o.endDate !== Infinity) {
                if (!!o.endDate) {
                    if (o.endDate instanceof Date)
                        o.endDate = this._local_to_utc(this._zero_time(o.endDate));
                    else
                        o.endDate = DPGlobal.parseDate(o.endDate, format, o.language);
                } else {
                    o.endDate = Infinity;
                }
            }

            o.daysOfWeekDisabled = o.daysOfWeekDisabled || [];
            if (!$.isArray(o.daysOfWeekDisabled))
                o.daysOfWeekDisabled = o.daysOfWeekDisabled.split(/[,\s]*/);
            o.daysOfWeekDisabled = $.map(o.daysOfWeekDisabled, function (d) {
                return parseInt(d, 10);
            });

            var plc = String(o.orientation).toLowerCase().split(/\s+/g),
                _plc = o.orientation.toLowerCase();
            plc = $.grep(plc, function (word) {
                return (/^auto|left|right|top|bottom$/).test(word);
            });
            o.orientation = {x: 'auto', y: 'auto'};
            if (!_plc || _plc === 'auto')
                ; // no action
            else if (plc.length === 1) {
                switch (plc[0]) {
                    case 'top':
                    case 'bottom':
                        o.orientation.y = plc[0];
                        break;
                    case 'left':
                    case 'right':
                        o.orientation.x = plc[0];
                        break;
                }
            }
            else {
                _plc = $.grep(plc, function (word) {
                    return (/^left|right$/).test(word);
                });
                o.orientation.x = _plc[0] || 'auto';

                _plc = $.grep(plc, function (word) {
                    return (/^top|bottom$/).test(word);
                });
                o.orientation.y = _plc[0] || 'auto';
            }
        },
        _events: [],
        _secondaryEvents: [],
        _applyEvents: function (evs) {
            for (var i = 0, el, ev; i < evs.length; i++) {
                el = evs[i][0];
                ev = evs[i][1];
                el.on(ev);
            }
        },
        _unapplyEvents: function (evs) {
            for (var i = 0, el, ev; i < evs.length; i++) {
                el = evs[i][0];
                ev = evs[i][1];
                el.off(ev);
            }
        },
        _buildEvents: function () {
            if (this.isInput) { // single input
                this._events = [
                    [this.element, {
                        focus: $.proxy(this.show, this),
                        keyup: $.proxy(this.update, this),
                        keydown: $.proxy(this.keydown, this)
                    }]
                ];
            }
            else if (this.component && this.hasInput) { // component: input + button
                this._events = [
                    // For components that are not readonly, allow keyboard nav
                    [this.element.find('input'), {
                        focus: $.proxy(this.show, this),
                        keyup: $.proxy(this.update, this),
                        keydown: $.proxy(this.keydown, this)
                    }],
                    [this.component, {
                        click: $.proxy(this.show, this)
                    }]
                ];
            }
            else if (this.element.is('div')) {  // inline datepicker
                this.isInline = true;
            }
            else {
                this._events = [
                    [this.element, {
                        click: $.proxy(this.show, this)
                    }]
                ];
            }

            this._secondaryEvents = [
                [this.picker, {
                    click: $.proxy(this.click, this)
                }],
                [$(window), {
                    resize: $.proxy(this.place, this)
                }],
                [$(document), {
                    mousedown: $.proxy(function (e) {
                        // Clicked outside the datepicker, hide it
                        if (!(
                            this.element.is(e.target) ||
                                this.element.find(e.target).length ||
                                this.picker.is(e.target) ||
                                this.picker.find(e.target).length
                            )) {
                            this.hide();
                        }
                    }, this)
                }]
            ];
        },
        _attachEvents: function () {
            this._detachEvents();
            this._applyEvents(this._events);
        },
        _detachEvents: function () {
            this._unapplyEvents(this._events);
        },
        _attachSecondaryEvents: function () {
            this._detachSecondaryEvents();
            this._applyEvents(this._secondaryEvents);
        },
        _detachSecondaryEvents: function () {
            this._unapplyEvents(this._secondaryEvents);
        },
        _trigger: function (event, altdate) {
            var date = altdate || this.date,
                local_date = this._utc_to_local(date);

            this.element.trigger({
                type: event,
                date: local_date,
                format: $.proxy(function (altformat) {
                    var format = altformat || this.o.format;
                    return DPGlobal.formatDate(date, format, this.o.language);
                }, this)
            });
        },

        show: function (e) {
            if (!this.isInline)
                this.picker.appendTo('body');
            this.picker.show();
            this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
            this.place();
            this._attachSecondaryEvents();
            if (e) {
                e.preventDefault();
            }
            this._trigger('show');
        },

        hide: function (e) {
            if (this.isInline) return;
            if (!this.picker.is(':visible')) return;
            this.picker.hide().detach();
            this._detachSecondaryEvents();
            this.viewMode = this.o.startView;
            this.showMode();

            if (
                this.o.forceParse &&
                    (
                        this.isInput && this.element.val() ||
                            this.hasInput && this.element.find('input').val()
                        )
                )
                this.setValue();
            this._trigger('hide');
        },

        remove: function () {
            this.hide();
            this._detachEvents();
            this._detachSecondaryEvents();
            this.picker.remove();
            delete this.element.data().datepicker;
            if (!this.isInput) {
                delete this.element.data().date;
            }
        },

        _utc_to_local: function (utc) {
            return new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));
        },
        _local_to_utc: function (local) {
            return new Date(local.getTime() - (local.getTimezoneOffset() * 60000));
        },
        _zero_time: function (local) {
            return new Date(local.getFullYear(), local.getMonth(), local.getDate());
        },
        _zero_utc_time: function (utc) {
            return new Date(Date.UTC(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate()));
        },

        getDate: function () {
            return this._utc_to_local(this.getUTCDate());
        },

        getUTCDate: function () {
            return this.date;
        },

        setDate: function (d) {
            this.setUTCDate(this._local_to_utc(d));
        },

        setUTCDate: function (d) {
            this.date = d;
            this.setValue();
        },

        setValue: function () {
            var formatted = this.getFormattedDate();
            if (!this.isInput) {
                if (this.component) {
                    this.element.find('input').val(formatted).change();
                }
            } else {
                this.element.val(formatted).change();
            }
        },

        getFormattedDate: function (format) {
            if (format === undefined)
                format = this.o.format;
            return DPGlobal.formatDate(this.date, format, this.o.language);
        },

        setStartDate: function (startDate) {
            this._process_options({startDate: startDate});
            this.update();
            this.updateNavArrows();
        },

        setEndDate: function (endDate) {
            this._process_options({endDate: endDate});
            this.update();
            this.updateNavArrows();
        },

        setDaysOfWeekDisabled: function (daysOfWeekDisabled) {
            this._process_options({daysOfWeekDisabled: daysOfWeekDisabled});
            this.update();
            this.updateNavArrows();
        },

        place: function () {
            if (this.isInline) return;
            var calendarWidth = this.picker.outerWidth(),
                calendarHeight = this.picker.outerHeight(),
                visualPadding = 10,
                windowWidth = $window.width(),
                windowHeight = $window.height(),
                scrollTop = $window.scrollTop();

            var zIndex = parseInt(this.element.parents().filter(function () {
                return $(this).css('z-index') != 'auto';
            }).first().css('z-index')) + 10;
            var offset = this.component ? this.component.parent().offset() : this.element.offset();
            var height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);
            var width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);
            var left = offset.left,
                top = offset.top;

            this.picker.removeClass(
                'datepicker-orient-top datepicker-orient-bottom ' +
                    'datepicker-orient-right datepicker-orient-left'
            );

            if (this.o.orientation.x !== 'auto') {
                this.picker.addClass('datepicker-orient-' + this.o.orientation.x);
                if (this.o.orientation.x === 'right')
                    left -= calendarWidth - width;
            }
            // auto x orientation is best-placement: if it crosses a window
            // edge, fudge it sideways
            else {
                // Default to left
                this.picker.addClass('datepicker-orient-left');
                if (offset.left < 0)
                    left -= offset.left - visualPadding;
                else if (offset.left + calendarWidth > windowWidth)
                    left = windowWidth - calendarWidth - visualPadding;
            }

            // auto y orientation is best-situation: top or bottom, no fudging,
            // decision based on which shows more of the calendar
            var yorient = this.o.orientation.y,
                top_overflow, bottom_overflow;
            if (yorient === 'auto') {
                top_overflow = -scrollTop + offset.top - calendarHeight;
                bottom_overflow = scrollTop + windowHeight - (offset.top + height + calendarHeight);
                if (Math.max(top_overflow, bottom_overflow) === bottom_overflow)
                    yorient = 'top';
                else
                    yorient = 'bottom';
            }
            this.picker.addClass('datepicker-orient-' + yorient);
            if (yorient === 'top')
                top += height;
            else
                top -= calendarHeight + parseInt(this.picker.css('padding-top'));

            this.picker.css({
                top: top,
                left: left,
                zIndex: zIndex
            });
        },

        _allow_update: true,
        update: function () {
            if (!this._allow_update) return;

            var oldDate = new Date(this.date),
                date, fromArgs = false;
            if (arguments && arguments.length && (typeof arguments[0] === 'string' || arguments[0] instanceof Date)) {
                date = arguments[0];
                if (date instanceof Date)
                    date = this._local_to_utc(date);
                fromArgs = true;
            } else {
                date = this.isInput ? this.element.val() : this.element.data('date') || this.element.find('input').val();
                delete this.element.data().date;
            }

            this.date = DPGlobal.parseDate(date, this.o.format, this.o.language);

            if (fromArgs) {
                // setting date by clicking
                this.setValue();
            } else if (date) {
                // setting date by typing
                if (oldDate.getTime() !== this.date.getTime())
                    this._trigger('changeDate');
            } else {
                // clearing date
                this._trigger('clearDate');
            }

            if (this.date < this.o.startDate) {
                this.viewDate = new Date(this.o.startDate);
                this.date = new Date(this.o.startDate);
            } else if (this.date > this.o.endDate) {
                this.viewDate = new Date(this.o.endDate);
                this.date = new Date(this.o.endDate);
            } else {
                this.viewDate = new Date(this.date);
                this.date = new Date(this.date);
            }
            this.fill();
        },

        fillDow: function () {
            var dowCnt = this.o.weekStart,
                html = '<tr>';
            if (this.o.calendarWeeks) {
                var cell = '<th class="cw">&nbsp;</th>';
                html += cell;
                this.picker.find('.datepicker-days thead tr:first-child').prepend(cell);
            }
            while (dowCnt < this.o.weekStart + 7) {
                html += '<th class="dow">' + dates[this.o.language].daysMin[(dowCnt++) % 7] + '</th>';
            }
            html += '</tr>';
            this.picker.find('.datepicker-days thead').append(html);
        },

        fillMonths: function () {
            var html = '',
                i = 0;
            while (i < 12) {
                html += '<span class="month">' + dates[this.o.language].monthsShort[i++] + '</span>';
            }
            this.picker.find('.datepicker-months td').html(html);
        },

        setRange: function (range) {
            if (!range || !range.length)
                delete this.range;
            else
                this.range = $.map(range, function (d) {
                    return d.valueOf();
                });
            this.fill();
        },

        getClassNames: function (date) {
            var cls = [],
                year = this.viewDate.getUTCFullYear(),
                month = this.viewDate.getUTCMonth(),
                currentDate = this.date.valueOf(),
                today = new Date();
            if (date.getUTCFullYear() < year || (date.getUTCFullYear() == year && date.getUTCMonth() < month)) {
                cls.push('old');
            } else if (date.getUTCFullYear() > year || (date.getUTCFullYear() == year && date.getUTCMonth() > month)) {
                cls.push('new');
            }
            // Compare internal UTC date with local today, not UTC today
            if (this.o.todayHighlight &&
                date.getUTCFullYear() == today.getFullYear() &&
                date.getUTCMonth() == today.getMonth() &&
                date.getUTCDate() == today.getDate()) {
                cls.push('today');
            }
            if (currentDate && date.valueOf() == currentDate) {
                cls.push('active');
            }
            if (date.valueOf() < this.o.startDate || date.valueOf() > this.o.endDate ||
                $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1) {
                cls.push('disabled');
            }
            if (this.range) {
                if (date > this.range[0] && date < this.range[this.range.length - 1]) {
                    cls.push('range');
                }
                if ($.inArray(date.valueOf(), this.range) != -1) {
                    cls.push('selected');
                }
            }
            return cls;
        },

        fill: function () {
            var d = new Date(this.viewDate),
                year = d.getUTCFullYear(),
                month = d.getUTCMonth(),
                startYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,
                startMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,
                endYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,
                endMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,
                currentDate = this.date && this.date.valueOf(),
                tooltip;
            this.picker.find('.datepicker-days thead th.datepicker-switch')
                .text(dates[this.o.language].months[month] + ' ' + year);
            this.picker.find('tfoot th.today')
                .text(dates[this.o.language].today)
                .toggle(this.o.todayBtn !== false);
            this.picker.find('tfoot th.clear')
                .text(dates[this.o.language].clear)
                .toggle(this.o.clearBtn !== false);
            this.updateNavArrows();
            this.fillMonths();
            var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),
                day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
            prevMonth.setUTCDate(day);
            prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7) % 7);
            var nextMonth = new Date(prevMonth);
            nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
            nextMonth = nextMonth.valueOf();
            var html = [];
            var clsName;
            while (prevMonth.valueOf() < nextMonth) {
                if (prevMonth.getUTCDay() == this.o.weekStart) {
                    html.push('<tr>');
                    if (this.o.calendarWeeks) {
                        // ISO 8601: First week contains first thursday.
                        // ISO also states week starts on Monday, but we can be more abstract here.
                        var
                        // Start of current week: based on weekstart/current date
                            ws = new Date(+prevMonth + (this.o.weekStart - prevMonth.getUTCDay() - 7) % 7 * 864e5),
                        // Thursday of this week
                            th = new Date(+ws + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),
                        // First Thursday of year, year from thursday
                            yth = new Date(+(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),
                        // Calendar week: ms between thursdays, div ms per day, div 7 days
                            calWeek = (th - yth) / 864e5 / 7 + 1;
                        html.push('<td class="cw">' + calWeek + '</td>');

                    }
                }
                clsName = this.getClassNames(prevMonth);
                clsName.push('day');

                if (this.o.beforeShowDay !== $.noop) {
                    var before = this.o.beforeShowDay(this._utc_to_local(prevMonth));
                    if (before === undefined)
                        before = {};
                    else if (typeof(before) === 'boolean')
                        before = {enabled: before};
                    else if (typeof(before) === 'string')
                        before = {classes: before};
                    if (before.enabled === false)
                        clsName.push('disabled');
                    if (before.classes)
                        clsName = clsName.concat(before.classes.split(/\s+/));
                    if (before.tooltip)
                        tooltip = before.tooltip;
                }

                clsName = $.unique(clsName);
                html.push('<td class="' + clsName.join(' ') + '"' + (tooltip ? ' title="' + tooltip + '"' : '') + '>' + prevMonth.getUTCDate() + '</td>');
                if (prevMonth.getUTCDay() == this.o.weekEnd) {
                    html.push('</tr>');
                }
                prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
            }
            this.picker.find('.datepicker-days tbody').empty().append(html.join(''));
            var currentYear = this.date && this.date.getUTCFullYear();

            var months = this.picker.find('.datepicker-months')
                .find('th:eq(1)')
                .text(year)
                .end()
                .find('span').removeClass('active');
            if (currentYear && currentYear == year) {
                months.eq(this.date.getUTCMonth()).addClass('active');
            }
            if (year < startYear || year > endYear) {
                months.addClass('disabled');
            }
            if (year == startYear) {
                months.slice(0, startMonth).addClass('disabled');
            }
            if (year == endYear) {
                months.slice(endMonth + 1).addClass('disabled');
            }

            html = '';
            year = parseInt(year / 10, 10) * 10;
            var yearCont = this.picker.find('.datepicker-years')
                .find('th:eq(1)')
                .text(year + '-' + (year + 9))
                .end()
                .find('td');
            year -= 1;
            for (var i = -1; i < 11; i++) {
                html += '<span class="year' + (i == -1 ? ' old' : i == 10 ? ' new' : '') + (currentYear == year ? ' active' : '') + (year < startYear || year > endYear ? ' disabled' : '') + '">' + year + '</span>';
                year += 1;
            }
            yearCont.html(html);
        },

        updateNavArrows: function () {
            if (!this._allow_update) return;

            var d = new Date(this.viewDate),
                year = d.getUTCFullYear(),
                month = d.getUTCMonth();
            switch (this.viewMode) {
                case 0:
                    if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear() && month <= this.o.startDate.getUTCMonth()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear() && month >= this.o.endDate.getUTCMonth()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
                case 1:
                case 2:
                    if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
            }
        },

        click: function (e) {
            e.preventDefault();
            var target = $(e.target).closest('span, td, th');
            if (target.length == 1) {
                switch (target[0].nodeName.toLowerCase()) {
                    case 'th':
                        switch (target[0].className) {
                            case 'datepicker-switch':
                                this.showMode(1);
                                break;
                            case 'prev':
                            case 'next':
                                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == 'prev' ? -1 : 1);
                                switch (this.viewMode) {
                                    case 0:
                                        this.viewDate = this.moveMonth(this.viewDate, dir);
                                        this._trigger('changeMonth', this.viewDate);
                                        break;
                                    case 1:
                                    case 2:
                                        this.viewDate = this.moveYear(this.viewDate, dir);
                                        if (this.viewMode === 1)
                                            this._trigger('changeYear', this.viewDate);
                                        break;
                                }
                                this.fill();
                                break;
                            case 'today':
                                var date = new Date();
                                date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);

                                this.showMode(-2);
                                var which = this.o.todayBtn == 'linked' ? null : 'view';
                                this._setDate(date, which);
                                break;
                            case 'clear':
                                var element;
                                if (this.isInput)
                                    element = this.element;
                                else if (this.component)
                                    element = this.element.find('input');
                                if (element)
                                    element.val("").change();
                                this._trigger('changeDate');
                                this.update();
                                if (this.o.autoclose)
                                    this.hide();
                                break;
                        }
                        break;
                    case 'span':
                        if (!target.is('.disabled')) {
                            this.viewDate.setUTCDate(1);
                            if (target.is('.month')) {
                                var day = 1;
                                var month = target.parent().find('span').index(target);
                                var year = this.viewDate.getUTCFullYear();
                                this.viewDate.setUTCMonth(month);
                                this._trigger('changeMonth', this.viewDate);
                                if (this.o.minViewMode === 1) {
                                    this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
                                }
                            } else {
                                var year = parseInt(target.text(), 10) || 0;
                                var day = 1;
                                var month = 0;
                                this.viewDate.setUTCFullYear(year);
                                this._trigger('changeYear', this.viewDate);
                                if (this.o.minViewMode === 2) {
                                    this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
                                }
                            }
                            this.showMode(-1);
                            this.fill();
                        }
                        break;
                    case 'td':
                        if (target.is('.day') && !target.is('.disabled')) {
                            var day = parseInt(target.text(), 10) || 1;
                            var year = this.viewDate.getUTCFullYear(),
                                month = this.viewDate.getUTCMonth();
                            if (target.is('.old')) {
                                if (month === 0) {
                                    month = 11;
                                    year -= 1;
                                } else {
                                    month -= 1;
                                }
                            } else if (target.is('.new')) {
                                if (month == 11) {
                                    month = 0;
                                    year += 1;
                                } else {
                                    month += 1;
                                }
                            }
                            this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
                        }
                        break;
                }
            }
        },

        _setDate: function (date, which) {
            if (!which || which == 'date')
                this.date = new Date(date);
            if (!which || which == 'view')
                this.viewDate = new Date(date);
            this.fill();
            this.setValue();
            this._trigger('changeDate');
            var element;
            if (this.isInput) {
                element = this.element;
            } else if (this.component) {
                element = this.element.find('input');
            }
            if (element) {
                element.change();
            }
            if (this.o.autoclose && (!which || which == 'date')) {
                this.hide();
            }
        },

        moveMonth: function (date, dir) {
            if (!dir) return date;
            var new_date = new Date(date.valueOf()),
                day = new_date.getUTCDate(),
                month = new_date.getUTCMonth(),
                mag = Math.abs(dir),
                new_month, test;
            dir = dir > 0 ? 1 : -1;
            if (mag == 1) {
                test = dir == -1
                    // If going back one month, make sure month is not current month
                    // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
                    ? function () {
                    return new_date.getUTCMonth() == month;
                }
                    // If going forward one month, make sure month is as expected
                    // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
                    : function () {
                    return new_date.getUTCMonth() != new_month;
                };
                new_month = month + dir;
                new_date.setUTCMonth(new_month);
                // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
                if (new_month < 0 || new_month > 11)
                    new_month = (new_month + 12) % 12;
            } else {
                // For magnitudes >1, move one month at a time...
                for (var i = 0; i < mag; i++)
                    // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
                    new_date = this.moveMonth(new_date, dir);
                // ...then reset the day, keeping it in the new month
                new_month = new_date.getUTCMonth();
                new_date.setUTCDate(day);
                test = function () {
                    return new_month != new_date.getUTCMonth();
                };
            }
            // Common date-resetting loop -- if date is beyond end of month, make it
            // end of month
            while (test()) {
                new_date.setUTCDate(--day);
                new_date.setUTCMonth(new_month);
            }
            return new_date;
        },

        moveYear: function (date, dir) {
            return this.moveMonth(date, dir * 12);
        },

        dateWithinRange: function (date) {
            return date >= this.o.startDate && date <= this.o.endDate;
        },

        keydown: function (e) {
            if (this.picker.is(':not(:visible)')) {
                if (e.keyCode == 27) // allow escape to hide and re-show picker
                    this.show();
                return;
            }
            var dateChanged = false,
                dir, day, month,
                newDate, newViewDate;
            switch (e.keyCode) {
                case 27: // escape
                    this.hide();
                    e.preventDefault();
                    break;
                case 37: // left
                case 39: // right
                    if (!this.o.keyboardNavigation) break;
                    dir = e.keyCode == 37 ? -1 : 1;
                    if (e.ctrlKey) {
                        newDate = this.moveYear(this.date, dir);
                        newViewDate = this.moveYear(this.viewDate, dir);
                        this._trigger('changeYear', this.viewDate);
                    } else if (e.shiftKey) {
                        newDate = this.moveMonth(this.date, dir);
                        newViewDate = this.moveMonth(this.viewDate, dir);
                        this._trigger('changeMonth', this.viewDate);
                    } else {
                        newDate = new Date(this.date);
                        newDate.setUTCDate(this.date.getUTCDate() + dir);
                        newViewDate = new Date(this.viewDate);
                        newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir);
                    }
                    if (this.dateWithinRange(newDate)) {
                        this.date = newDate;
                        this.viewDate = newViewDate;
                        this.setValue();
                        this.update();
                        e.preventDefault();
                        dateChanged = true;
                    }
                    break;
                case 38: // up
                case 40: // down
                    if (!this.o.keyboardNavigation) break;
                    dir = e.keyCode == 38 ? -1 : 1;
                    if (e.ctrlKey) {
                        newDate = this.moveYear(this.date, dir);
                        newViewDate = this.moveYear(this.viewDate, dir);
                        this._trigger('changeYear', this.viewDate);
                    } else if (e.shiftKey) {
                        newDate = this.moveMonth(this.date, dir);
                        newViewDate = this.moveMonth(this.viewDate, dir);
                        this._trigger('changeMonth', this.viewDate);
                    } else {
                        newDate = new Date(this.date);
                        newDate.setUTCDate(this.date.getUTCDate() + dir * 7);
                        newViewDate = new Date(this.viewDate);
                        newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir * 7);
                    }
                    if (this.dateWithinRange(newDate)) {
                        this.date = newDate;
                        this.viewDate = newViewDate;
                        this.setValue();
                        this.update();
                        e.preventDefault();
                        dateChanged = true;
                    }
                    break;
                case 13: // enter
                    this.hide();
                    e.preventDefault();
                    break;
                case 9: // tab
                    this.hide();
                    break;
            }
            if (dateChanged) {
                this._trigger('changeDate');
                var element;
                if (this.isInput) {
                    element = this.element;
                } else if (this.component) {
                    element = this.element.find('input');
                }
                if (element) {
                    element.change();
                }
            }
        },

        showMode: function (dir) {
            if (dir) {
                this.viewMode = Math.max(this.o.minViewMode, Math.min(2, this.viewMode + dir));
            }
            /*
             vitalets: fixing bug of very special conditions:
             jquery 1.7.1 + webkit + show inline datepicker in bootstrap popover.
             Method show() does not set display css correctly and datepicker is not shown.
             Changed to .css('display', 'block') solve the problem.
             See https://github.com/vitalets/x-editable/issues/37

             In jquery 1.7.2+ everything works fine.
             */
            //this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
            this.picker.find('>div').hide().filter('.datepicker-' + DPGlobal.modes[this.viewMode].clsName).css('display', 'block');
            this.updateNavArrows();
        }
    };

    var DateRangePicker = function (element, options) {
        this.element = $(element);
        this.inputs = $.map(options.inputs, function (i) {
            return i.jquery ? i[0] : i;
        });
        delete options.inputs;

        $(this.inputs)
            .datepicker(options)
            .bind('changeDate', $.proxy(this.dateUpdated, this));

        this.pickers = $.map(this.inputs, function (i) {
            return $(i).data('datepicker');
        });
        this.updateDates();
    };
    DateRangePicker.prototype = {
        updateDates: function () {
            this.dates = $.map(this.pickers, function (i) {
                return i.date;
            });
            this.updateRanges();
        },
        updateRanges: function () {
            var range = $.map(this.dates, function (d) {
                return d.valueOf();
            });
            $.each(this.pickers, function (i, p) {
                p.setRange(range);
            });
        },
        dateUpdated: function (e) {
            var dp = $(e.target).data('datepicker'),
                new_date = dp.getUTCDate(),
                i = $.inArray(e.target, this.inputs),
                l = this.inputs.length;
            if (i == -1) return;

            if (new_date < this.dates[i]) {
                // Date being moved earlier/left
                while (i >= 0 && new_date < this.dates[i]) {
                    this.pickers[i--].setUTCDate(new_date);
                }
            }
            else if (new_date > this.dates[i]) {
                // Date being moved later/right
                while (i < l && new_date > this.dates[i]) {
                    this.pickers[i++].setUTCDate(new_date);
                }
            }
            this.updateDates();
        },
        remove: function () {
            $.map(this.pickers, function (p) {
                p.remove();
            });
            delete this.element.data().datepicker;
        }
    };

    function opts_from_el(el, prefix) {
        // Derive options from element data-attrs
        var data = $(el).data(),
            out = {}, inkey,
            replace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])'),
            prefix = new RegExp('^' + prefix.toLowerCase());
        for (var key in data)
            if (prefix.test(key)) {
                inkey = key.replace(replace, function (_, a) {
                    return a.toLowerCase();
                });
                out[inkey] = data[key];
            }
        return out;
    }

    function opts_from_locale(lang) {
        // Derive options from locale plugins
        var out = {};
        // Check if "de-DE" style date is available, if not language should
        // fallback to 2 letter code eg "de"
        if (!dates[lang]) {
            lang = lang.split('-')[0]
            if (!dates[lang])
                return;
        }
        var d = dates[lang];
        $.each(locale_opts, function (i, k) {
            if (k in d)
                out[k] = d[k];
        });
        return out;
    }

    var old = $.fn.datepicker;
    $.fn.datepicker = function (option) {
        var args = Array.apply(null, arguments);
        args.shift();
        var internal_return,
            this_return;
        this.each(function () {
            var $this = $(this),
                data = $this.data('datepicker'),
                options = typeof option == 'object' && option;
            if (!data) {
                var elopts = opts_from_el(this, 'date'),
                // Preliminary otions
                    xopts = $.extend({}, defaults, elopts, options),
                    locopts = opts_from_locale(xopts.language),
                // Options priority: js args, data-attrs, locales, defaults
                    opts = $.extend({}, defaults, locopts, elopts, options);
                if ($this.is('.input-daterange') || opts.inputs) {
                    var ropts = {
                        inputs: opts.inputs || $this.find('input').toArray()
                    };
                    $this.data('datepicker', (data = new DateRangePicker(this, $.extend(opts, ropts))));
                }
                else {
                    $this.data('datepicker', (data = new Datepicker(this, opts)));
                }
            }
            if (typeof option == 'string' && typeof data[option] == 'function') {
                internal_return = data[option].apply(data, args);
                if (internal_return !== undefined)
                    return false;
            }
        });
        if (internal_return !== undefined)
            return internal_return;
        else
            return this;
    };

    var defaults = $.fn.datepicker.defaults = {
        autoclose: false,
        beforeShowDay: $.noop,
        calendarWeeks: false,
        clearBtn: false,
        daysOfWeekDisabled: [],
        endDate: Infinity,
        forceParse: true,
        format: 'mm/dd/yyyy',
        keyboardNavigation: true,
        language: 'en',
        minViewMode: 0,
        orientation: "auto",
        rtl: false,
        startDate: -Infinity,
        startView: 0,
        todayBtn: false,
        todayHighlight: false,
        weekStart: 0
    };
    var locale_opts = $.fn.datepicker.locale_opts = [
        'format',
        'rtl',
        'weekStart'
    ];
    $.fn.datepicker.Constructor = Datepicker;
    var dates = $.fn.datepicker.dates = {
        en: {
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
            daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            today: "Today",
            clear: "Clear"
        }
    };

    var DPGlobal = {
        modes: [
            {
                clsName: 'days',
                navFnc: 'Month',
                navStep: 1
            },
            {
                clsName: 'months',
                navFnc: 'FullYear',
                navStep: 1
            },
            {
                clsName: 'years',
                navFnc: 'FullYear',
                navStep: 10
            }
        ],
        isLeapYear: function (year) {
            return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
        },
        getDaysInMonth: function (year, month) {
            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
        },
        validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
        nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g,
        parseFormat: function (format) {
            // IE treats \0 as a string end in inputs (truncating the value),
            // so it's a bad format delimiter, anyway
            var separators = format.replace(this.validParts, '\0').split('\0'),
                parts = format.match(this.validParts);
            if (!separators || !separators.length || !parts || parts.length === 0) {
                throw new Error("Invalid date format.");
            }
            return {separators: separators, parts: parts};
        },
        parseDate: function (date, format, language) {
            if (date instanceof Date) return date;
            if (typeof format === 'string')
                format = DPGlobal.parseFormat(format);
            if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(date)) {
                var part_re = /([\-+]\d+)([dmwy])/,
                    parts = date.match(/([\-+]\d+)([dmwy])/g),
                    part, dir;
                date = new Date();
                for (var i = 0; i < parts.length; i++) {
                    part = part_re.exec(parts[i]);
                    dir = parseInt(part[1]);
                    switch (part[2]) {
                        case 'd':
                            date.setUTCDate(date.getUTCDate() + dir);
                            break;
                        case 'm':
                            date = Datepicker.prototype.moveMonth.call(Datepicker.prototype, date, dir);
                            break;
                        case 'w':
                            date.setUTCDate(date.getUTCDate() + dir * 7);
                            break;
                        case 'y':
                            date = Datepicker.prototype.moveYear.call(Datepicker.prototype, date, dir);
                            break;
                    }
                }
                return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
            }
            var parts = date && date.match(this.nonpunctuation) || [],
                date = new Date(),
                parsed = {},
                setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
                setters_map = {
                    yyyy: function (d, v) {
                        return d.setUTCFullYear(v);
                    },
                    yy: function (d, v) {
                        return d.setUTCFullYear(2000 + v);
                    },
                    m: function (d, v) {
                        if (isNaN(d))
                            return d;
                        v -= 1;
                        while (v < 0) v += 12;
                        v %= 12;
                        d.setUTCMonth(v);
                        while (d.getUTCMonth() != v)
                            d.setUTCDate(d.getUTCDate() - 1);
                        return d;
                    },
                    d: function (d, v) {
                        return d.setUTCDate(v);
                    }
                },
                val, filtered, part;
            setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
            setters_map['dd'] = setters_map['d'];
            date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);
            var fparts = format.parts.slice();
            // Remove noop parts
            if (parts.length != fparts.length) {
                fparts = $(fparts).filter(function (i, p) {
                    return $.inArray(p, setters_order) !== -1;
                }).toArray();
            }
            // Process remainder
            if (parts.length == fparts.length) {
                for (var i = 0, cnt = fparts.length; i < cnt; i++) {
                    val = parseInt(parts[i], 10);
                    part = fparts[i];
                    if (isNaN(val)) {
                        switch (part) {
                            case 'MM':
                                filtered = $(dates[language].months).filter(function () {
                                    var m = this.slice(0, parts[i].length),
                                        p = parts[i].slice(0, m.length);
                                    return m == p;
                                });
                                val = $.inArray(filtered[0], dates[language].months) + 1;
                                break;
                            case 'M':
                                filtered = $(dates[language].monthsShort).filter(function () {
                                    var m = this.slice(0, parts[i].length),
                                        p = parts[i].slice(0, m.length);
                                    return m == p;
                                });
                                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
                                break;
                        }
                    }
                    parsed[part] = val;
                }
                for (var i = 0, _date, s; i < setters_order.length; i++) {
                    s = setters_order[i];
                    if (s in parsed && !isNaN(parsed[s])) {
                        _date = new Date(date);
                        setters_map[s](_date, parsed[s]);
                        if (!isNaN(_date))
                            date = _date;
                    }
                }
            }
            return date;
        },
        formatDate: function (date, format, language) {
            if (typeof format === 'string')
                format = DPGlobal.parseFormat(format);
            var val = {
                d: date.getUTCDate(),
                D: dates[language].daysShort[date.getUTCDay()],
                DD: dates[language].days[date.getUTCDay()],
                m: date.getUTCMonth() + 1,
                M: dates[language].monthsShort[date.getUTCMonth()],
                MM: dates[language].months[date.getUTCMonth()],
                yy: date.getUTCFullYear().toString().substring(2),
                yyyy: date.getUTCFullYear()
            };
            val.dd = (val.d < 10 ? '0' : '') + val.d;
            val.mm = (val.m < 10 ? '0' : '') + val.m;
            var date = [],
                seps = $.extend([], format.separators);
            for (var i = 0, cnt = format.parts.length; i <= cnt; i++) {
                if (seps.length)
                    date.push(seps.shift());
                date.push(val[format.parts[i]]);
            }
            return date.join('');
        },
        headTemplate: '<thead>' +
            '<tr>' +
            '<th class="prev"><i class="fa fa-angle-left"></i></th>' +
            '<th colspan="5" class="datepicker-switch"></th>' +
            '<th class="next"><i class="fa fa-angle-right"></i></th>' +
            '</tr>' +
            '</thead>',
        contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
        footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>'
    };
    DPGlobal.template = '<div class="datepicker">' +
        '<div class="datepicker-days">' +
        '<table class=" table-condensed">' +
        DPGlobal.headTemplate +
        '<tbody></tbody>' +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datepicker-months">' +
        '<table class="table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datepicker-years">' +
        '<table class="table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '</div>';

    $.fn.datepicker.DPGlobal = DPGlobal;


    /* DATEPICKER NO CONFLICT
     * =================== */

    $.fn.datepicker.noConflict = function () {
        $.fn.datepicker = old;
        return this;
    };


    /* DATEPICKER DATA-API
     * ================== */

    $(document).on(
        'focus.datepicker.data-api click.datepicker.data-api',
        '[data-provide="datepicker"]',
        function (e) {
            var $this = $(this);
            if ($this.data('datepicker')) return;
            e.preventDefault();
            // component click requires us to explicitly show it
            $this.datepicker('show');
        }
    );
    $(function () {
        $('[data-provide="datepicker-inline"]').datepicker();
    });

}(window.jQuery));

/*
 Input Mask plugin for jquery
 http://github.com/RobinHerbots/jquery.inputmask
 Copyright (c) 2010 - 2013 Robin Herbots
 Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 Version: 2.2.2
 */
(function (f) {
    void 0 == f.fn.inputmask && (f.inputmask = {defaults: {placeholder: "_", optionalmarker: {start: "[", end: "]"}, escapeChar: "\\", mask: null, oncomplete: f.noop, onincomplete: f.noop, oncleared: f.noop, repeat: 0, greedy: !0, autoUnmask: !1, clearMaskOnLostFocus: !0, insertMode: !0, clearIncomplete: !1, aliases: {}, onKeyUp: f.noop, onKeyDown: f.noop, showMaskOnFocus: !0, showMaskOnHover: !0, onKeyValidation: f.noop, skipOptionalPartCharacter: " ", numericInput: !1, radixPoint: "", rightAlignNumerics: !0, definitions: {9: {validator: "[0-9]",
        cardinality: 1}, a: {validator: "[A-Za-z\u0410-\u044f\u0401\u0451]", cardinality: 1}, "*": {validator: "[A-Za-z\u0410-\u044f\u0401\u04510-9]", cardinality: 1}}, keyCode: {ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32,
        TAB: 9, UP: 38, WINDOWS: 91}, ignorables: [9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], getMaskLength: function (a, d, c) {
        var e = a.length;
        !d && 1 < c && (e += a.length * (c - 1));
        return e
    }}, val: f.fn.val, escapeRegex: function (a) {
        return a.replace(RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)", "gim"), "\\$1")
    }}, f.fn.inputmask = function (a, d) {
        var c, e;

        function b(a, E) {
            var c = h.aliases[a];
            return c ? (c.alias && b(c.alias), f.extend(!0, h, c), f.extend(!0, h, E), !0) : !1
        }

        function j(a) {
            var b =
                !1, c = 0, d = h.greedy, e = h.repeat;
            1 == a.length && !1 == d && (h.placeholder = "");
            for (var a = f.map(a.split(""), function (a) {
                var s = [];
                if (a == h.escapeChar)b = true; else if (a != h.optionalmarker.start && a != h.optionalmarker.end || b) {
                    var d = h.definitions[a];
                    if (d && !b)for (a = 0; a < d.cardinality; a++)s.push(G(c + a)); else {
                        s.push(a);
                        b = false
                    }
                    c = c + s.length;
                    return s
                }
            }), j = a.slice(), y = 1; y < e && d; y++)j = j.concat(a.slice());
            return{mask: j, repeat: e, greedy: d}
        }

        function l(a) {
            var b = !1, c = !1, d = !1;
            return f.map(a.split(""), function (a) {
                var s = [];
                if (a == h.escapeChar)c = !0; else if (a == h.optionalmarker.start && !c)d = b = !0; else if (a == h.optionalmarker.end && !c)b = !1, d = !0; else {
                    var e = h.definitions[a];
                    if (e && !c) {
                        for (var f = e.prevalidator, j = f ? f.length : 0, l = 1; l < e.cardinality; l++) {
                            var g = j >= l ? f[l - 1] : [], k = g.validator, g = g.cardinality;
                            s.push({fn: k ? "string" == typeof k ? RegExp(k) : new function () {
                                this.test = k
                            } : /./, cardinality: g ? g : 1, optionality: b, newBlockMarker: !0 == b ? d : !1, offset: 0, casing: e.casing, def: e.definitionSymbol | a});
                            !0 == b && (d = !1)
                        }
                        s.push({fn: e.validator ? "string" == typeof e.validator ? RegExp(e.validator) :
                            new function () {
                                this.test = e.validator
                            } : /./, cardinality: e.cardinality, optionality: b, newBlockMarker: d, offset: 0, casing: e.casing, def: e.definitionSymbol | a})
                    } else s.push({fn: null, cardinality: 0, optionality: b, newBlockMarker: d, offset: 0, casing: null, def: a}), c = !1;
                    d = !1;
                    return s
                }
            })
        }

        function u() {
            function a(c, d) {
                var e = 0, f = 0, y = d.length;
                for (i = 0; i < y && !(d.charAt(i) == h.optionalmarker.start && e++, d.charAt(i) == h.optionalmarker.end && f++, 0 < e && e == f); i++);
                e = [d.substring(0, i)];
                i < y && e.push(d.substring(i + 1, y));
                var m, f = e[0];
                m = f.length;
                for (i = 0; i < m && f.charAt(i) != h.optionalmarker.start; i++);
                y = [f.substring(0, i)];
                i < m && y.push(f.substring(i + 1, m));
                1 < y.length ? (f = c + y[0] + (h.optionalmarker.start + y[1] + h.optionalmarker.end) + (1 < e.length ? e[1] : ""), m = j(f), b.push({mask: f, _buffer: m.mask, tests: l(f), lastValidPosition: void 0, greedy: m.greedy, repeat: m.repeat}), f = c + y[0] + (1 < e.length ? e[1] : ""), m = j(f), b.push({mask: f, _buffer: m.mask, tests: l(f), lastValidPosition: void 0, greedy: m.greedy, repeat: m.repeat}), 1 < e.length && 1 < e[1].split(h.optionalmarker.start).length &&
                    (a(c + y[0] + (h.optionalmarker.start + y[1] + h.optionalmarker.end), e[1]), a(c + y[0], e[1]))) : (f = c + e, m = j(f), b.push({mask: f, _buffer: m.mask, tests: l(f), lastValidPosition: void 0, greedy: m.greedy, repeat: m.repeat}))
            }

            var b = [];
            f.isArray(h.mask) ? f.each(h.mask, function (b, c) {
                a("", c.toString())
            }) : a("", h.mask.toString());
            return b
        }

        function z() {
            return q[o].tests
        }

        function k() {
            return q[o]._buffer
        }

        function I(a, b, c, e, d) {
            function j(a, g) {
                for (var d = F(a), f = b ? 1 : 0, s = "", l = g.tests[d].cardinality; l > f; l--)s += D(c, d - (l - 1));
                b && (s += b);
                return null !=
                    g.tests[d].fn ? g.tests[d].fn.test(s, c, a, e, h) : !1
            }

            if (e)return j(a, q[o]);
            var l = [], m = !1, k = o;
            f.each(q, function (e) {
                o = e;
                var g = a;
                if (k != o && !B(a)) {
                    if (b == this._buffer[g] || b == h.skipOptionalPartCharacter)return l[e] = {refresh: !0}, this.lastValidPosition = g, !1;
                    g = d ? M(c, a) : A(c, a)
                }
                if ((void 0 == this.lastValidPosition || d || h.numericInput ? this.lastValidPosition <= h.numericInput ? r(c) : A(c, g) : this.lastValidPosition >= M(c, g)) && 0 <= g && g < r(c))l[e] = j(g, this), !1 !== l[e] ? (!0 === l[e] && (l[e] = {pos: g}), this.lastValidPosition = l[e].pos || g) : this.lastValidPosition =
                    d ? a == r(c) ? void 0 : A(c, a) : 0 == a ? void 0 : M(c, a)
            });
            o = k;
            T(c, a, k, d);
            m = l[o] || m;
            setTimeout(function () {
                h.onKeyValidation.call(this, m, h)
            }, 0);
            return m
        }

        function T(a, b, c, e) {
            f.each(q, function (d) {
                if (this.lastValidPosition && (e || h.numericInput) ? this.lastValidPosition <= b : this.lastValidPosition >= b) {
                    o = d;
                    if (o != c) {
                        var d = r(a), f = k();
                        if (e || h.numericInput)a.reverse(), f.reverse();
                        for (var j = a.length = b; j < d; j++) {
                            var l = F(j);
                            J(a, j, D(f, l))
                        }
                        e && a.reverse()
                    }
                    return!1
                }
            })
        }

        function B(a) {
            a = F(a);
            a = z()[a];
            return void 0 != a ? a.fn : !1
        }

        function F(a) {
            return a %
                z().length
        }

        function G(a) {
            return h.placeholder.charAt(a % h.placeholder.length)
        }

        function r(a) {
            return h.getMaskLength(k(), q[o].greedy, q[o].repeat, a, h)
        }

        function A(a, b) {
            var c = r(a);
            if (b >= c)return c;
            for (var e = b; ++e < c && !B(e););
            return e
        }

        function M(a, b) {
            var c = b;
            if (0 >= c)return 0;
            for (; 0 < --c && !B(c););
            return c
        }

        function J(a, b, c) {
            var e = z()[F(b)], d = c;
            if (void 0 != d)switch (e.casing) {
                case "upper":
                    d = c.toUpperCase();
                    break;
                case "lower":
                    d = c.toLowerCase()
            }
            a[b] = d
        }

        function D(a, b, c) {
            c && (b = W(a, b));
            return a[b]
        }

        function W(a, b, c) {
            if (c)for (; 0 >
                             b && a.length < r(a);) {
                c = k().length - 1;
                for (b = k().length; void 0 !== k()[c];)a.unshift(k()[c--])
            } else for (; void 0 == a[b] && a.length < r(a);)for (c = 0; void 0 !== k()[c];)a.push(k()[c++]);
            return b
        }

        function H(a, b, c) {
            a._valueSet(b.join(""));
            void 0 != c && p(a, c)
        }

        function X(a, b, c) {
            for (var e = r(a); b < c && b < e; b++)J(a, b, D(k().slice(), b))
        }

        function O(a, b) {
            var c = F(b);
            J(a, b, D(k(), c))
        }

        function C(a, b, c, e) {
            var d = f(a).data("inputmask").isRTL, j = U(a._valueGet(), d).split(""), l = r(b);
            if (d) {
                var m = j.reverse();
                m.length = l;
                for (var x = 0; x < l; x++) {
                    var t =
                        F(l - (x + 1));
                    null == z()[t].fn && m[x] != D(k(), t) ? (m.splice(x, 0, D(k(), t)), m.length = l) : m[x] = m[x] || D(k(), t)
                }
                j = m.reverse()
            }
            X(b, 0, b.length);
            b.length = k().length;
            for (var g = m = -1, p, C = j.length, t = 0 == C ? l : -1, x = 0; x < C; x++)for (var v = g + 1; v < l; v++)if (B(v)) {
                var u = j[x];
                !1 !== (p = I(v, u, b, !c, d)) ? (!0 !== p && (v = void 0 != p.pos ? p.pos : v, u = void 0 != p.c ? p.c : u), J(b, v, u), m = g = v) : (O(b, v), u == G(v) && (t = g = v));
                break
            } else if (O(b, v), m == g && (m = v), g = v, j[x] == D(b, v))break;
            if (!1 == q[o].greedy) {
                x = U(b.join(""), d).split("");
                j = x.length;
                for (g = 0; g < j; g++)b[g] = x[g];
                b.length = x.length
            }
            c && H(a, b);
            return d ? h.numericInput ? "" != h.radixPoint && -1 != f.inArray(h.radixPoint, b) && !0 !== e ? f.inArray(h.radixPoint, b) : A(b, l) : A(b, t) : A(b, m)
        }

        function R(a) {
            return f.inputmask.escapeRegex.call(this, a)
        }

        function U(a, b) {
            return b ? a.replace(RegExp("^(" + R(k().join("")) + ")*"), "") : a.replace(RegExp("(" + R(k().join("")) + ")*$"), "")
        }

        function Y(a, b) {
            C(a, b, !1);
            var c = b.slice(), e, d;
            if (f(a).data("inputmask").isRTL)for (d = 0; d <= c.length - 1; d++)if (e = F(d), z()[e].optionality)if (!B(d) || !I(d, b[d], b, !0))c.splice(0,
                1); else break; else break; else for (d = c.length - 1; 0 <= d; d--)if (e = F(d), z()[e].optionality)if (!B(d) || !I(d, b[d], b, !0))c.pop(); else break; else break;
            H(a, c)
        }

        function Z(a, b) {
            var c = a[0];
            if (z() && (!0 === b || !a.hasClass("hasDatepicker"))) {
                var d = k().slice();
                C(c, d);
                return f.map(d,function (a, b) {
                    return B(b) && I(b, a, d, !0) ? a : null
                }).join("")
            }
            return c._valueGet()
        }

        function p(a, b, d) {
            var j = a.jquery && 0 < a.length ? a[0] : a;
            if ("number" == typeof b)f(a).is(":visible") && (d = "number" == typeof d ? d : b, !1 == h.insertMode && b == d && d++, j.setSelectionRange ?
                V ? (setTimeout(function () {
                    j.selectionStart = b;
                    j.selectionEnd = V ? b : d
                }, 10), c = b, e = d) : (j.selectionStart = b, j.selectionEnd = d) : j.createTextRange && (range = j.createTextRange(), range.collapse(!0), range.moveEnd("character", d), range.moveStart("character", b), range.select())); else {
                if (!f(a).is(":visible"))return{begin: 0, end: 0};
                j.setSelectionRange ? (b = j.selectionStart, d = j.selectionEnd) : document.selection && document.selection.createRange && (range = document.selection.createRange(), b = 0 - range.duplicate().moveStart("character",
                    -1E5), d = b + range.text.length);
                return{begin: b, end: d}
            }
        }

        function S(a) {
            var b = !1, c = 0, d = o;
            f.each(q, function (d, e) {
                o = d;
                var f = r(a);
                if (e.lastValidPosition && e.lastValidPosition >= c && e.lastValidPosition == f - 1) {
                    for (var j = !0, h = 0; h < f; h++) {
                        var l = B(h);
                        if (l && a[h] == G(h) || !l && a[h] != k()[h]) {
                            j = !1;
                            break
                        }
                    }
                    if (b = b || j)return!1
                }
                c = e.lastValidPosition
            });
            o = d;
            return b
        }

        function P(a) {
            function b(a) {
                a = f._data(a).events;
                f.each(a, function (a, b) {
                    f.each(b, function (a, b) {
                        if ("inputmask" == b.namespace) {
                            var c = b.handler;
                            b.handler = function () {
                                return this.readOnly ||
                                    this.disabled ? !1 : c.apply(this, arguments)
                            }
                        }
                    })
                })
            }

            function d(a) {
                var b;
                Object.getOwnPropertyDescriptor && (b = Object.getOwnPropertyDescriptor(a, "value"));
                if (b && b.get)a._valueGet || (a._valueGet = b.get, a._valueSet = b.set, Object.defineProperty(a, "value", {get: function () {
                    var a = f(this), b = f(this).data("inputmask"), c = b.masksets, d = b.activeMasksetIndex;
                    return b && b.autoUnmask ? a.inputmask("unmaskedvalue") : this._valueGet() != c[d]._buffer.join("") ? this._valueGet() : ""
                }, set: function (a) {
                    this._valueSet(a);
                    f(this).triggerHandler("setvalue.inputmask")
                }}));
                else if (document.__lookupGetter__ && a.__lookupGetter__("value"))a._valueGet || (a._valueGet = a.__lookupGetter__("value"), a._valueSet = a.__lookupSetter__("value"), a.__defineGetter__("value", function () {
                    var a = f(this), b = f(this).data("inputmask"), c = b.masksets, d = b.activeMasksetIndex;
                    return b && b.autoUnmask ? a.inputmask("unmaskedvalue") : this._valueGet() != c[d]._buffer.join("") ? this._valueGet() : ""
                }), a.__defineSetter__("value", function (a) {
                    this._valueSet(a);
                    f(this).triggerHandler("setvalue.inputmask")
                })); else if (a._valueGet ||
                    (a._valueGet = function () {
                        return this.value
                    }, a._valueSet = function (a) {
                        this.value = a
                    }), !0 != f.fn.val.inputmaskpatch)f.fn.val = function () {
                    if (arguments.length == 0) {
                        var a = f(this);
                        if (a.data("inputmask")) {
                            if (a.data("inputmask").autoUnmask)return a.inputmask("unmaskedvalue");
                            var a = f.inputmask.val.apply(a), b = f(this).data("inputmask");
                            return a != b.masksets[b.activeMasksetIndex]._buffer.join("") ? a : ""
                        }
                        return f.inputmask.val.apply(a)
                    }
                    var c = arguments;
                    return this.each(function () {
                        var a = f(this), b = f.inputmask.val.apply(a,
                            c);
                        a.data("inputmask") && a.triggerHandler("setvalue.inputmask");
                        return b
                    })
                }, f.extend(f.fn.val, {inputmaskpatch: !0})
            }

            function j(a, b) {
                if (h.numericInput && "" != h.radixPoint) {
                    var c = a._valueGet().indexOf(h.radixPoint);
                    w = b.begin <= c || b.end <= c || -1 == c
                }
            }

            function l(a, b, c) {
                for (; !B(a) && 0 <= a - 1;)a--;
                for (var d = a; d < b && d < r(g); d++)if (B(d)) {
                    O(g, d);
                    var e = A(g, d), j = D(g, e);
                    if (j != G(e))if (e < r(g) && !1 !== I(d, j, g, !0, w) && z()[F(d)].def == z()[F(e)].def)J(g, d, D(g, e)), O(g, e); else {
                        if (B(d))break
                    } else if (void 0 == c)break
                } else O(g, d);
                void 0 !=
                    c && J(g, w ? b : M(g, b), c);
                g = U(g.join(""), w).split("");
                0 == g.length && (g = k().slice());
                return a
            }

            function u(a, b, c, d) {
                for (; a <= b && a < r(g); a++)if (B(a)) {
                    var e = D(g, a);
                    J(g, a, c);
                    if (e != G(a))if (c = A(g, a), c < r(g))if (!1 !== I(c, e, g, !0, w) && z()[F(a)].def == z()[F(c)].def)c = e; else if (B(c))break; else c = e; else break; else if (!0 !== d)break
                } else O(g, a);
                d = g.length;
                g = U(g.join(""), w).split("");
                0 == g.length && (g = k().slice());
                return b - (d - g.length)
            }

            function y(a) {
                v = !1;
                var b = this, c = a.keyCode, d = p(b);
                j(b, d);
                if (c == h.keyCode.BACKSPACE || c == h.keyCode.DELETE ||
                    aa && 127 == c) {
                    var e = r(g);
                    if (0 == d.begin && d.end == e)o = 0, g = k().slice(), H(b, g), p(b, C(b, g, !1)); else if (1 < d.end - d.begin || 1 == d.end - d.begin && h.insertMode)X(g, d.begin, d.end), T(g, d.begin, o), H(b, g, w ? C(b, g, !1) : d.begin); else {
                        var n = $ ? d.end : d.begin;
                        c == h.keyCode.DELETE ? (n < K && (n = K), n < e && (h.numericInput && "" != h.radixPoint && g[n] == h.radixPoint ? (n = g.length - 1 == n ? n : A(g, n), n = l(n, e)) : w ? (n = u(K, n, G(n), !0), n = A(g, n)) : n = l(n, e), T(g, n, o), H(b, g, n))) : c == h.keyCode.BACKSPACE && n > K && (n -= 1, h.numericInput && "" != h.radixPoint && g[n] == h.radixPoint ?
                            (n = u(K, g.length - 1 == n ? n : n - 1, G(n), !0), n++) : w ? (n = u(K, n, G(n), !0), n = g[n + 1] == h.radixPoint ? n + 1 : A(g, n)) : n = l(n, e), T(g, n, o), H(b, g, n))
                    }
                    b._valueGet() == k().join("") && f(b).trigger("cleared");
                    a.preventDefault()
                } else c == h.keyCode.END || c == h.keyCode.PAGE_DOWN ? setTimeout(function () {
                    var c = C(b, g, !1, !0);
                    !h.insertMode && (c == r(g) && !a.shiftKey) && c--;
                    p(b, a.shiftKey ? d.begin : c, c)
                }, 0) : c == h.keyCode.HOME && !a.shiftKey || c == h.keyCode.PAGE_UP ? p(b, 0, a.shiftKey ? d.begin : 0) : c == h.keyCode.ESCAPE ? (b._valueSet(Q), p(b, 0, C(b, g))) : c == h.keyCode.INSERT ?
                    (h.insertMode = !h.insertMode, p(b, !h.insertMode && d.begin == r(g) ? d.begin - 1 : d.begin)) : a.ctrlKey && 88 == c ? setTimeout(function () {
                    p(b, C(b, g, !0))
                }, 0) : h.insertMode || (c == h.keyCode.RIGHT ? (e = d.begin == d.end ? d.end + 1 : d.end, e = e < r(g) ? e : d.end, p(b, a.shiftKey ? d.begin : e, a.shiftKey ? e + 1 : e)) : c == h.keyCode.LEFT && (e = d.begin - 1, e = 0 < e ? e : 0, p(b, e, a.shiftKey ? d.end : e)));
                h.onKeyDown.call(this, a, g, h);
                P = -1 != f.inArray(c, h.ignorables)
            }

            function m(a) {
                if (v)return!1;
                v = !0;
                var b = f(this), a = a || window.event, d = a.which || a.charCode || a.keyCode, j = String.fromCharCode(d);
                if (h.numericInput && j == h.radixPoint) {
                    var k = this._valueGet().indexOf(h.radixPoint);
                    p(this, A(g, -1 != k ? k : r(g)))
                }
                if (a.metaKey || P)return!0;
                if (d) {
                    var n = p(this), s = r(g), d = !0;
                    X(g, n.begin, n.end);
                    if (w) {
                        var k = M(g, n.end), m;
                        if (!1 !== (m = I(k == s || D(g, k) == h.radixPoint ? M(g, k) : k, j, g, !1, w))) {
                            var E = !1;
                            !0 !== m && (E = m.refresh, k = void 0 != m.pos ? m.pos : k, j = void 0 != m.c ? m.c : j);
                            if (!0 !== E)if (s = r(g), m = K, !0 == h.insertMode) {
                                if (!0 == q[o].greedy)for (E = g.slice(); D(E, m, !0) != G(m) && m <= k;)m = m == s ? s + 1 : A(g, m);
                                m <= k && (q[o].greedy || g.length < s) ? (g[K] !=
                                    G(K) && g.length < s && (E = W(g, -1, w), 0 != n.end && (k += E), s = g.length), l(m, k, j)) : d = !1
                            } else J(g, k, j);
                            d && (H(this, g, h.numericInput ? k + 1 : k), setTimeout(function () {
                                S(g) && b.trigger("complete")
                            }, 0))
                        }
                    } else if (k = A(g, n.begin - 1), W(g, k, w), !1 !== (m = I(k, j, g, !1, w))) {
                        E = !1;
                        !0 !== m && (E = m.refresh, k = void 0 != m.pos ? m.pos : k, j = void 0 != m.c ? m.c : j);
                        if (!0 !== E)if (!0 == h.insertMode) {
                            n = r(g);
                            for (E = g.slice(); D(E, n, !0) != G(n) && n >= k;)n = 0 == n ? -1 : M(g, n);
                            n >= k ? u(k, g.length, j) : d = !1
                        } else J(g, k, j);
                        d && (j = A(g, k), H(this, g, j), setTimeout(function () {
                                S(g) && b.trigger("complete")
                            },
                            0))
                    }
                    V && p(this, c, e);
                    a.preventDefault()
                }
            }

            function x(a) {
                var b = f(this), c = a.keyCode;
                h.onKeyUp.call(this, a, g, h);
                c == h.keyCode.TAB && (b.hasClass("focus.inputmask") && 0 == this._valueGet().length && h.showMaskOnFocus) && (g = k().slice(), H(this, g), w || p(this, 0), Q = this._valueGet())
            }

            var t = f(a);
            if (t.is(":input")) {
                var g = k().slice();
                q[o].greedy = q[o].greedy ? q[o].greedy : 0 == q[o].repeat;
                var L = t.prop("maxLength");
                r(g) > L && -1 < L && (L < k().length && (k().length = L), !1 == q[o].greedy && (q[o].repeat = Math.round(L / k().length)), t.prop("maxLength",
                    2 * r(g)));
                t.data("inputmask", {masksets: q, activeMasksetIndex: o, autoUnmask: h.autoUnmask, definitions: h.definitions, isRTL: !1});
                d(a);
                var g = k().slice(), Q = a._valueGet(), v = !1, P = !1, N = -1, K = A(g, -1);
                M(g, r(g));
                var w = !1;
                if ("rtl" == a.dir || h.numericInput)("rtl" == a.dir || h.numericInput && h.rightAlignNumerics) && t.css("text-align", "right"), a.dir = "ltr", t.removeAttr("dir"), L = t.data("inputmask"), L.isRTL = !0, t.data("inputmask", L), w = !0;
                t.unbind(".inputmask");
                t.removeClass("focus.inputmask");
                t.bind("mouseenter.inputmask",function () {
                    if (!f(this).hasClass("focus.inputmask") &&
                        h.showMaskOnHover) {
                        var a = this._valueGet().length;
                        if (a < g.length) {
                            a == 0 && (g = k().slice());
                            H(this, g)
                        }
                    }
                }).bind("blur.inputmask",function () {
                        var a = f(this), b = this._valueGet();
                        a.removeClass("focus.inputmask");
                        b != Q && a.change();
                        h.clearMaskOnLostFocus && b != "" && (b == k().join("") ? this._valueSet("") : Y(this, g));
                        if (!S(g)) {
                            a.trigger("incomplete");
                            if (h.clearIncomplete)if (h.clearMaskOnLostFocus)this._valueSet(""); else {
                                g = k().slice();
                                H(this, g)
                            }
                        }
                    }).bind("focus.inputmask",function () {
                        var a = f(this), b = this._valueGet();
                        if (h.showMaskOnFocus && !a.hasClass("focus.inputmask") && (!h.showMaskOnHover || h.showMaskOnHover && b == "")) {
                            b = b.length;
                            if (b < g.length) {
                                b == 0 && (g = k().slice());
                                p(this, C(this, g, true))
                            }
                        }
                        a.addClass("focus.inputmask");
                        Q = this._valueGet()
                    }).bind("mouseleave.inputmask",function () {
                        var a = f(this);
                        h.clearMaskOnLostFocus && (a.hasClass("focus.inputmask") || (this._valueGet() == k().join("") || this._valueGet() == "" ? this._valueSet("") : Y(this, g)))
                    }).bind("click.inputmask",function () {
                        var a = this;
                        setTimeout(function () {
                            var b = p(a);
                            if (b.begin == b.end) {
                                var c =
                                    b.begin;
                                N = C(a, g, false);
                                j(a, b);
                                w ? p(a, c > N && (I(c, g[c], g, true, w) !== false || !B(c)) ? c : N) : p(a, c < N && (I(c, g[c], g, true, w) !== false || !B(c)) ? c : N)
                            }
                        }, 0)
                    }).bind("dblclick.inputmask",function () {
                        var a = this;
                        setTimeout(function () {
                            p(a, 0, N)
                        }, 0)
                    }).bind("keydown.inputmask", y).bind("keypress.inputmask", m).bind("keyup.inputmask", x).bind(ba + ".inputmask dragdrop.inputmask drop.inputmask",function () {
                        var a = this;
                        setTimeout(function () {
                            p(a, C(a, g, true));
                            S(g) && t.trigger("complete")
                        }, 0)
                    }).bind("setvalue.inputmask",function () {
                        Q = this._valueGet();
                        C(this, g, true);
                        this._valueGet() == k().join("") && this._valueSet("")
                    }).bind("complete.inputmask", h.oncomplete).bind("incomplete.inputmask", h.onincomplete).bind("cleared.inputmask", h.oncleared);
                var N = C(a, g, !0), R;
                try {
                    R = document.activeElement
                } catch (Z) {
                }
                R === a ? (t.addClass("focus.inputmask"), p(a, N)) : h.clearMaskOnLostFocus && (a._valueGet() == k().join("") ? a._valueSet("") : Y(a, g));
                b(a)
            }
        }

        var h = f.extend(!0, {}, f.inputmask.defaults, d), ba = function (a) {
            var b = document.createElement("input"), a = "on" + a, c = a in b;
            c || (b.setAttribute(a,
                "return;"), c = "function" == typeof b[a]);
            return c
        }("paste") ? "paste" : "input", aa = null != navigator.userAgent.match(/iphone/i), V = null != navigator.userAgent.match(/android.*safari.*/i), $;
        if (V) {
            var ca = navigator.userAgent.match(/safari.*/i);
            $ = 533 >= parseInt(RegExp(/[0-9]+/).exec(ca))
        }
        var q, o = 0;
        if ("string" == typeof a)switch (a) {
            case "mask":
                return b(h.alias, d), q = u(), this.each(function () {
                    P(this)
                });
            case "unmaskedvalue":
                return q = this.data("inputmask").masksets, o = this.data("inputmask").activeMasksetIndex, h.definitions =
                    this.data("inputmask").definitions, Z(this);
            case "remove":
                return this.each(function () {
                    var a = f(this), b = this;
                    setTimeout(function () {
                        if (a.data("inputmask")) {
                            q = a.data("inputmask").masksets;
                            o = a.data("inputmask").activeMasksetIndex;
                            h.definitions = a.data("inputmask").definitions;
                            b._valueSet(Z(a, !0));
                            a.removeData("inputmask");
                            a.unbind(".inputmask");
                            a.removeClass("focus.inputmask");
                            var c;
                            Object.getOwnPropertyDescriptor && (c = Object.getOwnPropertyDescriptor(b, "value"));
                            c && c.get ? b._valueGet && Object.defineProperty(b,
                                "value", {get: b._valueGet, set: b._valueSet}) : document.__lookupGetter__ && b.__lookupGetter__("value") && b._valueGet && (b.__defineGetter__("value", b._valueGet), b.__defineSetter__("value", b._valueSet));
                            delete b._valueGet;
                            delete b._valueSet
                        }
                    }, 0)
                });
            case "getemptymask":
                return this.data("inputmask") ? (q = this.data("inputmask").masksets, o = this.data("inputmask").activeMasksetIndex, q[o]._buffer.join("")) : "";
            case "hasMaskedValue":
                return this.data("inputmask") ? !this.data("inputmask").autoUnmask : !1;
            case "isComplete":
                return q =
                    this.data("inputmask").masksets, o = this.data("inputmask").activeMasksetIndex, h.definitions = this.data("inputmask").definitions, S(this[0].split(""));
            default:
                return b(a, d) || (h.mask = a), q = u(), this.each(function () {
                    P(this)
                })
        } else {
            if ("object" == typeof a)return h = f.extend(!0, {}, f.inputmask.defaults, a), b(h.alias, a), q = u(), this.each(function () {
                P(this)
            });
            if (void 0 == a)return this.each(function () {
                var a = f(this).attr("data-inputmask");
                if (a && "" != a)try {
                    var a = a.replace(RegExp("'", "g"), '"'), c = f.parseJSON("{" + a + "}");
                    h = f.extend(!0,
                        {}, f.inputmask.defaults, c);
                    b(h.alias, c);
                    h.alias = void 0;
                    f(this).inputmask(h)
                } catch (d) {
                }
            })
        }
        return this
    })
})(jQuery);
(function (f) {
    f.extend(f.inputmask.defaults.definitions, {A: {validator: "[A-Za-z]", cardinality: 1, casing: "upper"}, "#": {validator: "[A-Za-z\u0410-\u044f\u0401\u04510-9]", cardinality: 1, casing: "upper"}});
    f.extend(f.inputmask.defaults.aliases, {url: {mask: "ir", placeholder: "", separator: "", defaultPrefix: "http://", regex: {urlpre1: /[fh]/, urlpre2: /(ft|ht)/, urlpre3: /(ftp|htt)/, urlpre4: /(ftp:|http|ftps)/, urlpre5: /(ftp:\/|ftps:|http:|https)/, urlpre6: /(ftp:\/\/|ftps:\/|http:\/|https:)/, urlpre7: /(ftp:\/\/|ftps:\/\/|http:\/\/|https:\/)/,
        urlpre8: /(ftp:\/\/|ftps:\/\/|http:\/\/|https:\/\/)/}, definitions: {i: {validator: function () {
        return!0
    }, cardinality: 8, prevalidator: function () {
        for (var a = [], d = 0; 8 > d; d++)a[d] = function () {
            var a = d;
            return{validator: function (d, b, j, f, u) {
                if (u.regex["urlpre" + (a + 1)]) {
                    var z = d;
                    0 < a + 1 - d.length && (z = b.join("").substring(0, a + 1 - d.length) + "" + z);
                    d = u.regex["urlpre" + (a + 1)].test(z);
                    if (!f && !d) {
                        j -= a;
                        for (f = 0; f < u.defaultPrefix.length; f++)b[j] = u.defaultPrefix[f], j++;
                        for (f = 0; f < z.length - 1; f++)b[j] = z[f], j++;
                        return{pos: j}
                    }
                    return d
                }
                return!1
            },
                cardinality: a}
        }();
        return a
    }()}}, insertMode: !1, autoUnmask: !1}, ip: {mask: "i.i.i.i", definitions: {i: {validator: "25[0-5]|2[0-4][0-9]|[01][0-9][0-9]", cardinality: 3, prevalidator: [
        {validator: "[0-2]", cardinality: 1},
        {validator: "2[0-5]|[01][0-9]", cardinality: 2}
    ]}}}})
})(jQuery);
(function (f) {
    f.extend(f.inputmask.defaults.definitions, {h: {validator: "[01][0-9]|2[0-3]", cardinality: 2, prevalidator: [
        {validator: "[0-2]", cardinality: 1}
    ]}, s: {validator: "[0-5][0-9]", cardinality: 2, prevalidator: [
        {validator: "[0-5]", cardinality: 1}
    ]}, d: {validator: "0[1-9]|[12][0-9]|3[01]", cardinality: 2, prevalidator: [
        {validator: "[0-3]", cardinality: 1}
    ]}, m: {validator: "0[1-9]|1[012]", cardinality: 2, prevalidator: [
        {validator: "[01]", cardinality: 1}
    ]}, y: {validator: "(19|20)\\d{2}", cardinality: 4, prevalidator: [
        {validator: "[12]",
            cardinality: 1},
        {validator: "(19|20)", cardinality: 2},
        {validator: "(19|20)\\d", cardinality: 3}
    ]}});
    f.extend(f.inputmask.defaults.aliases, {"dd/mm/yyyy": {mask: "1/2/y", placeholder: "dd/mm/yyyy", regex: {val1pre: /[0-3]/, val1: /0[1-9]|[12][0-9]|3[01]/, val2pre: function (a) {
        a = f.inputmask.escapeRegex.call(this, a);
        return RegExp("((0[1-9]|[12][0-9]|3[01])" + a + "[01])")
    }, val2: function (a) {
        a = f.inputmask.escapeRegex.call(this, a);
        return RegExp("((0[1-9]|[12][0-9])" + a + "(0[1-9]|1[012]))|(30" + a + "(0[13-9]|1[012]))|(31" + a + "(0[13578]|1[02]))")
    }},
        leapday: "29/02/", separator: "/", yearrange: {minyear: 1900, maxyear: 2099}, isInYearRange: function (a, d, c) {
            var e = parseInt(a.concat(d.toString().slice(a.length))), a = parseInt(a.concat(c.toString().slice(a.length)));
            return(NaN != e ? d <= e && e <= c : !1) || (NaN != a ? d <= a && a <= c : !1)
        }, determinebaseyear: function (a, d) {
            var c = (new Date).getFullYear();
            return a > c ? a : d < c ? d : c
        }, onKeyUp: function (a, d, c) {
            d = f(this);
            a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date, d.val(a.getDate().toString() + (a.getMonth() + 1).toString() + a.getFullYear().toString()))
        },
        definitions: {1: {validator: function (a, d, c, e, b) {
            var j = b.regex.val1.test(a);
            if (!e && !j && (a.charAt(1) == b.separator || -1 != "-./".indexOf(a.charAt(1))))if (j = b.regex.val1.test("0" + a.charAt(0)))return d[c - 1] = "0", {pos: c, c: a.charAt(0)};
            return j
        }, cardinality: 2, prevalidator: [
            {validator: function (a, d, c, e, b) {
                var j = b.regex.val1pre.test(a);
                return!e && !j && (j = b.regex.val1.test("0" + a)) ? (d[c] = "0", c++, {pos: c}) : j
            }, cardinality: 1}
        ]}, 2: {validator: function (a, d, c, e, b) {
            var j = d.join("").substr(0, 3), f = b.regex.val2(b.separator).test(j +
                a);
            if (!e && !f && (a.charAt(1) == b.separator || -1 != "-./".indexOf(a.charAt(1))))if (f = b.regex.val2(b.separator).test(j + "0" + a.charAt(0)))return d[c - 1] = "0", {pos: c, c: a.charAt(0)};
            return f
        }, cardinality: 2, prevalidator: [
            {validator: function (a, d, c, e, b) {
                var j = d.join("").substr(0, 3), f = b.regex.val2pre(b.separator).test(j + a);
                return!e && !f && (f = b.regex.val2(b.separator).test(j + "0" + a)) ? (d[c] = "0", c++, {pos: c}) : f
            }, cardinality: 1}
        ]}, y: {validator: function (a, d, c, e, b) {
            if (b.isInYearRange(a, b.yearrange.minyear, b.yearrange.maxyear)) {
                if (d.join("").substr(0,
                    6) != b.leapday)return!0;
                a = parseInt(a, 10);
                return 0 === a % 4 ? 0 === a % 100 ? 0 === a % 400 ? !0 : !1 : !0 : !1
            }
            return!1
        }, cardinality: 4, prevalidator: [
            {validator: function (a, d, c, e, b) {
                var f = b.isInYearRange(a, b.yearrange.minyear, b.yearrange.maxyear);
                if (!e && !f) {
                    e = b.determinebaseyear(b.yearrange.minyear, b.yearrange.maxyear).toString().slice(0, 1);
                    if (f = b.isInYearRange(e + a, b.yearrange.minyear, b.yearrange.maxyear))return d[c++] = e[0], {pos: c};
                    e = b.determinebaseyear(b.yearrange.minyear, b.yearrange.maxyear).toString().slice(0, 2);
                    if (f = b.isInYearRange(e +
                        a, b.yearrange.minyear, b.yearrange.maxyear))return d[c++] = e[0], d[c++] = e[1], {pos: c}
                }
                return f
            }, cardinality: 1},
            {validator: function (a, d, c, e, b) {
                var f = b.isInYearRange(a, b.yearrange.minyear, b.yearrange.maxyear);
                if (!e && !f) {
                    e = b.determinebaseyear(b.yearrange.minyear, b.yearrange.maxyear).toString().slice(0, 2);
                    if (f = b.isInYearRange(a[0] + e[1] + a[1], b.yearrange.minyear, b.yearrange.maxyear))return d[c++] = e[1], {pos: c};
                    e = b.determinebaseyear(b.yearrange.minyear, b.yearrange.maxyear).toString().slice(0, 2);
                    b.isInYearRange(e +
                        a, b.yearrange.minyear, b.yearrange.maxyear) ? d.join("").substr(0, 6) != b.leapday ? f = !0 : (b = parseInt(a, 10), f = 0 === b % 4 ? 0 === b % 100 ? 0 === b % 400 ? !0 : !1 : !0 : !1) : f = !1;
                    if (f)return d[c - 1] = e[0], d[c++] = e[1], d[c++] = a[0], {pos: c}
                }
                return f
            }, cardinality: 2},
            {validator: function (a, d, c, e, b) {
                return b.isInYearRange(a, b.yearrange.minyear, b.yearrange.maxyear)
            }, cardinality: 3}
        ]}}, insertMode: !1, autoUnmask: !1}, "mm/dd/yyyy": {placeholder: "mm/dd/yyyy", alias: "dd/mm/yyyy", regex: {val2pre: function (a) {
        a = f.inputmask.escapeRegex.call(this, a);
        return RegExp("((0[13-9]|1[012])" +
            a + "[0-3])|(02" + a + "[0-2])")
    }, val2: function (a) {
        a = f.inputmask.escapeRegex.call(this, a);
        return RegExp("((0[1-9]|1[012])" + a + "(0[1-9]|[12][0-9]))|((0[13-9]|1[012])" + a + "30)|((0[13578]|1[02])" + a + "31)")
    }, val1pre: /[01]/, val1: /0[1-9]|1[012]/}, leapday: "02/29/", onKeyUp: function (a, d, c) {
        d = f(this);
        a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date, d.val((a.getMonth() + 1).toString() + a.getDate().toString() + a.getFullYear().toString()))
    }}, "yyyy/mm/dd": {mask: "y/1/2", placeholder: "yyyy/mm/dd", alias: "mm/dd/yyyy", leapday: "/02/29",
        onKeyUp: function (a, d, c) {
            d = f(this);
            a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date, d.val(a.getFullYear().toString() + (a.getMonth() + 1).toString() + a.getDate().toString()))
        }, definitions: {2: {validator: function (a, d, c, e, b) {
            var f = d.join("").substr(5, 3), l = b.regex.val2(b.separator).test(f + a);
            if (!e && !l && (a.charAt(1) == b.separator || -1 != "-./".indexOf(a.charAt(1))))if (l = b.regex.val2(b.separator).test(f + "0" + a.charAt(0)))return d[c - 1] = "0", {pos: c, c: a.charAt(0)};
            if (l) {
                if (d.join("").substr(4, 4) + a != b.leapday)return!0;
                a = parseInt(d.join("").substr(0, 4), 10);
                return 0 === a % 4 ? 0 === a % 100 ? 0 === a % 400 ? !0 : !1 : !0 : !1
            }
            return l
        }, cardinality: 2, prevalidator: [
            {validator: function (a, d, c, e, b) {
                var f = d.join("").substr(5, 3), l = b.regex.val2pre(b.separator).test(f + a);
                return!e && !l && (l = b.regex.val2(b.separator).test(f + "0" + a)) ? (d[c] = "0", c++, {pos: c}) : l
            }, cardinality: 1}
        ]}}}, "dd.mm.yyyy": {mask: "1.2.y", placeholder: "dd.mm.yyyy", leapday: "29.02.", separator: ".", alias: "dd/mm/yyyy"}, "dd-mm-yyyy": {mask: "1-2-y", placeholder: "dd-mm-yyyy", leapday: "29-02-", separator: "-",
        alias: "dd/mm/yyyy"}, "mm.dd.yyyy": {mask: "1.2.y", placeholder: "mm.dd.yyyy", leapday: "02.29.", separator: ".", alias: "mm/dd/yyyy"}, "mm-dd-yyyy": {mask: "1-2-y", placeholder: "mm-dd-yyyy", leapday: "02-29-", separator: "-", alias: "mm/dd/yyyy"}, "yyyy.mm.dd": {mask: "y.1.2", placeholder: "yyyy.mm.dd", leapday: ".02.29", separator: ".", alias: "yyyy/mm/dd"}, "yyyy-mm-dd": {mask: "y-1-2", placeholder: "yyyy-mm-dd", leapday: "-02-29", separator: "-", alias: "yyyy/mm/dd"}, datetime: {mask: "1/2/y h:s", placeholder: "dd/mm/yyyy hh:mm", alias: "dd/mm/yyyy",
        regex: {hrspre: /[012]/, hrs24: /2[0-9]|1[3-9]/, hrs: /[01][0-9]|2[0-3]/, ampmpre: /[apAP]/, ampm: /^[a|p|A|P][m|M]/}, timeseparator: ":", hourFormat: "24", definitions: {h: {validator: function (a, d, c, e, b) {
            var f = b.regex.hrs.test(a);
            if (!e && !f && (a.charAt(1) == b.timeseparator || -1 != "-.:".indexOf(a.charAt(1))))if (f = b.regex.hrs.test("0" + a.charAt(0)))return d[c - 1] = "0", d[c] = a.charAt(0), c++, {pos: c};
            return f && "24" !== b.hourFormat && b.regex.hrs24.test(a) ? (a = parseInt(a, 10), d[c + 5] = 24 == a ? "a" : "p", d[c + 6] = "m", a -= 12, 10 > a ? (d[c] = a.toString(),
                d[c - 1] = "0") : (d[c] = a.toString().charAt(1), d[c - 1] = a.toString().charAt(0)), {pos: c, c: d[c]}) : f
        }, cardinality: 2, prevalidator: [
            {validator: function (a, d, c, e, b) {
                var f = b.regex.hrspre.test(a);
                return!e && !f && (f = b.regex.hrs.test("0" + a)) ? (d[c] = "0", c++, {pos: c}) : f
            }, cardinality: 1}
        ]}, t: {validator: function (a, d, c, e, b) {
            var f = b.regex.ampm.test(a);
            return!e && !f && (f = b.regex.ampm.test(a + "m")) ? (d[c - 1] = a.charAt(0), d[c] = "m", c++, c) : f
        }, casing: "lower", cardinality: 2, prevalidator: [
            {validator: function (a, d, c, e, b) {
                if (e = b.regex.ampmpre.test(a))if (e =
                    b.regex.ampm.test(a + "m"))return d[c] = a, d[c + 1] = "m", c;
                return e
            }, cardinality: 1}
        ]}}, insertMode: !1, autoUnmask: !1}, datetime12: {mask: "1/2/y h:s t", placeholder: "dd/mm/yyyy hh:mm xm", alias: "datetime", hourFormat: "12"}, "hh:mm t": {mask: "h:s t", placeholder: "hh:mm xm", alias: "datetime", hourFormat: "12"}, "h:s t": {mask: "h:s t", placeholder: "hh:mm xm", alias: "datetime", hourFormat: "12"}, "hh:mm:ss": {mask: "h:s:s", autoUnmask: !1}, "hh:mm": {mask: "h:s", autoUnmask: !1}, date: {alias: "dd/mm/yyyy"}})
})(jQuery);
(function (f) {
    f.extend(f.inputmask.defaults.aliases, {decimal: {mask: "~", placeholder: "", repeat: 10, greedy: !1, numericInput: !0, digits: "*", groupSeparator: ",", radixPoint: ".", groupSize: 3, autoGroup: !1, getMaskLength: function (a, d, c, e, b) {
        var j = a.length;
        !d && 1 < c && (j += a.length * (c - 1));
        a = f.inputmask.escapeRegex.call(this, b.groupSeparator);
        b = f.inputmask.escapeRegex.call(this, b.radixPoint);
        e = e.join("");
        b = e.replace(RegExp(a, "g"), "").replace(RegExp(b), "");
        return j + (e.length - b.length)
    }, postFormat: function (a, d, c, e) {
        var b =
            a.slice();
        c || b.splice(d, 0, "?");
        b = b.join("");
        if (e.autoGroup || c && -1 != b.indexOf(e.groupSeparator)) {
            for (var b = b.replace(RegExp("\\" + e.groupSeparator, "g"), ""), j = b.split(e.radixPoint), b = j[0], l = RegExp("([-+]?[\\d?]+)([\\d?]{" + e.groupSize + "})"); l.test(b);)b = b.replace(l, "$1" + e.groupSeparator + "$2"), b = b.replace(e.groupSeparator + e.groupSeparator, e.groupSeparator);
            1 < j.length && (b += e.radixPoint + j[1])
        }
        a.length = b.length;
        e = 0;
        for (j = b.length; e < j; e++)a[e] = b.charAt(e);
        d = c ? d : f.inArray("?", a);
        c || a.splice(d, 1);
        return d
    },
        regex: {number: function (a, d, c, e) {
            a = f.inputmask.escapeRegex.call(this, a);
            c = f.inputmask.escapeRegex.call(this, c);
            e = isNaN(e) ? e : "{0," + e + "}";
            return RegExp("^[+-]?(\\d+|\\d{1," + d + "}((" + a + "\\d{" + d + "})?)+)(" + c + "\\d" + e + ")?$")
        }}, onKeyDown: function (a, d, c) {
            var e = f(this);
            if (a.keyCode == c.keyCode.TAB) {
                if (a = f.inArray(c.radixPoint, d), -1 != a) {
                    for (var b = e.data("inputmask").masksets, e = e.data("inputmask").activeMasksetIndex, j = 1; j <= c.digits && j < c.getMaskLength(b[e]._buffer, b[e].greedy, b[e].repeat, d, c); j++)void 0 == d[a + j] &&
                    (d[a + j] = "0");
                    this._valueSet(d.join(""))
                }
            } else if (a.keyCode == c.keyCode.DELETE || a.keyCode == c.keyCode.BACKSPACE)c.postFormat(d, 0, !0, c), this._valueSet(d.join(""))
        }, definitions: {"~": {validator: function (a, d, c, e, b) {
            if ("" == a)return!1;
            if (1 == c && "0" === d[0] && /[\d-]/.test(a))return d[0] = "", {pos: 0};
            var f = e ? d.slice(0, c) : d.slice();
            f.splice(c + 1, 0, a);
            f = f.join("");
            b.autoGroup && !e && (f = f.replace(RegExp("\\" + b.groupSeparator, "g"), ""));
            var l = b.regex.number(b.groupSeparator, b.groupSize, b.radixPoint, b.digits).test(f);
            if (!l &&
                (f += "0", l = b.regex.number(b.groupSeparator, b.groupSize, b.radixPoint, b.digits).test(f), !l)) {
                l = f.lastIndexOf(b.groupSeparator);
                for (i = f.length - l; 3 >= i; i++)f += "0";
                l = b.regex.number(b.groupSeparator, b.groupSize, b.radixPoint, b.digits).test(f);
                if (!l && !e && a == b.radixPoint && (l = b.regex.number(b.groupSeparator, b.groupSize, b.radixPoint, b.digits).test("0" + f + "0")))return d[c] = "0", c++, {pos: c}
            }
            return!1 != l && !e && a != b.radixPoint ? {pos: b.postFormat(d, c + 1, !1, b)} : l
        }, cardinality: 1, prevalidator: null}}, insertMode: !0, autoUnmask: !1},
        "non-negative-decimal": {regex: {number: function (a, d, c, e) {
            a = f.inputmask.escapeRegex.call(this, a);
            c = f.inputmask.escapeRegex.call(this, c);
            e = isNaN(e) ? e : "{0," + e + "}";
            return RegExp("^[+]?(\\d+|\\d{1," + d + "}((" + a + "\\d{" + d + "})?)+)(" + c + "\\d" + e + ")?$")
        }}, alias: "decimal"}, integer: {regex: {number: function (a, d) {
            var c = f.inputmask.escapeRegex.call(this, a);
            return RegExp("^[+-]?(\\d+|\\d{1," + d + "}((" + c + "\\d{" + d + "})?)+)$")
        }}, alias: "decimal"}})
})(jQuery);

/*!
 * jQuery Input Ip Address Control : v0.1beta (2010/11/09 16:15:43)
 * Copyright (c) 2010 jquery-input-ip-address-control@googlecode.com
 * Licensed under the MIT license and GPL licenses.
 *
 */
eval(function (p, a, c, k, e, d) {
    e = function (c) {
        return(c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
    };
    if (!''.replace(/^/, String)) {
        while (c--) {
            d[e(c)] = k[c] || e(c)
        }
        k = [function (e) {
            return d[e]
        }];
        e = function () {
            return'\\w+'
        };
        c = 1
    }
    ;
    while (c--) {
        if (k[c]) {
            p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c])
        }
    }
    return p
}('(l($){Q.1o.1t=l(){E=/\\b(?:(?:25[0-5]|2[0-4][0-9]|[1m]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[1m]?[0-9][0-9]?)\\b/;h E.1a(p.1i())};Q.1o.1S=l(){E=/\\b([A-16-9]{1,4}:){7}([A-16-9]{1,4})\\b/i;h E.1a(p.1i())};$.1X.1h({y:l(u,c){f(p.z==0)h;f(1k u==\'1f\'){c=(1k c==\'1f\')?c:u;h p.1d(l(){f(p.18){p.1s();p.18(u,c)}w f(p.1e){t C=p.1e();C.1L(S);C.1z(\'10\',c);C.1b(\'10\',u);C.1w()}})}w{f(p[0].18){u=p[0].1u;c=p[0].1C}w f(14.12&&14.12.19){t C=14.12.19();u=0-C.1D().1b(\'10\',-1E);c=u+C.1H.z}h{u:u,c:c}}},1B:l(s){s=$.1h({v:4},s);f(s.v==4){s.W=M I(\'[0-9]\',\'g\');s.r=\'R.R.R.R\'}f(s.v==6){s.W=M I(\'[A-16-9]\',\'1x\');s.r=\'x:x:x:x:x:x:x:x\'}s.D=s.r.K(\'\').Y();s.q=s.r.X(M I(s.D,\'g\'),\'\').K(\'\').Y();s.O=s.r.K(s.q).Y();h $(p).1d(l(){t a={k:T,n:T,o:T,d:T};a.d=$(p);f(a.d.m()==\'\'||!J(a.d.m()))a.d.m(s.r);a.d.1j(\'1Z\',(s.v==4?15:1c)).1j(\'1W\',(s.v==4?15:1c));l J(o){h 24("o.21"+s.v+"()")};l P(){a.k=a.d.y();a.o=J(L(a.d.m()))?L(a.d.m()):a.o;a.n=a.d.m().K(\'\')};l 1n(o){t G=o.K(s.q);1p(t j=0;j<G.z;j++){1M((s.O.z-G[j].z)>0)G[j]+=s.D}h G.H(s.q)};l L(o){t E=M I(s.O,\'g\');t 1g=M I(s.D,\'g\');h o.X(E,\'0\').X(1g,\'\')};l 11(e){1R(e.1Q){U 8:f(a.n[a.k.c-1]!=s.q){a.n[a.k.c-1]=s.D;a.d.m(a.n.H("")).m()}a.d.y(a.k.c-1);h B;V;U 13:U 1T:a.d.17();V;U 1P:f(a.n[a.k.c]!=s.q&&a.k.c<s.r.z){a.n[a.k.c]=s.D;a.d.m(a.n.H(""))}f(a.k.c<s.r.z)a.d.y(a.k.c+1);h B;V}h S};a.d.N(\'1O\',l(e){P();f($.1l.1K||$.1l.1V){h 11(e)}}).N(\'1U\',l(e){P();f(e.23||e.22||e.1Y)h S;w f((e.F>=20&&e.F<=1N)||e.F>1J){f(Q.1q(e.F).1y(s.W)){a.n[a.k.c]=Q.1q(e.F);f(!J(L(a.n.H(\'\')))){f((a.k.c==0||a.n[a.k.c-1]==s.q)){1p(t i=a.k.c+1;i<a.k.c+s.O.z;i++){a.n[i]=s.D}}w h B}a.d.m(a.n.H(\'\'));f(a.n[a.k.c+1]==s.q){a.d.y(a.k.c+2)}w{a.d.y(a.k.c+1)}h B}w f(s.q.1v(0)==e.F){t Z=a.d.m().1A(s.q,a.k.c);f(Z==-1)h B;f(a.n[a.k.c-1]==s.q)h B;a.k.c=Z;a.d.y(a.k.c+1);h B}w h B}h 11(e)}).N(\'17\',l(){f(a.d.m()==s.r)h S;t o=L($.1G(a.d.m()));f(J(o))a.d.m(o);w a.d.m(a.o)}).N(\'1s\',l(){1r(l(){P();f(a.d.m()!=s.r)a.d.m(1n(a.o));a.d.y(0)},0)}).N(\'1I\',l(e){a.d.m(\'\');1r(l(){a.d.17()},0)})})}})})(1F);', 62, 130, '||||||||||ctx||end|input||if||return|||cursor|function|val|buffer|ip|this|separator|label||var|begin||else|____|caret|length||false|range|place|rgx|which|part|join|RegExp|isIp|split|unmask|new|bind|partplace|loadCtx|String|___|true|null|case|break|rgxcase|replace|pop|pos|character|entryNoCharacter|selection||document||F0|blur|setSelectionRange|createRange|test|moveStart|39|each|createTextRange|number|rgx2|extend|toString|attr|typeof|browser|01|mask|prototype|for|fromCharCode|setTimeout|focus|isIpv4|selectionStart|charCodeAt|select|gi|match|moveEnd|indexOf|ipAddress|selectionEnd|duplicate|100000|jQuery|trim|text|paste|186|webkit|collapse|while|125|keydown|46|keyCode|switch|isIpv6|27|keypress|msie|size|fn|metaKey|maxlength|32|isIpv|altKey|ctrlKey|eval|'.split('|'), 0, {}))

/*
 * MultiSelect v0.9.8
 * Copyright (c) 2012 Louis Cuny
 *
 * This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details.
 */

!function ($) {

    "use strict";


    /* MULTISELECT CLASS DEFINITION
     * ====================== */

    var MultiSelect = function (element, options) {
        this.options = options;
        this.$element = $(element);

        this.$container = $('<div/>', { 'class': "ms-container" });
        this.$selectableContainer = $('<div/>', { 'class': 'ms-selectable' });
        this.$selectionContainer = $('<div/>', { 'class': 'ms-selection' });
        this.$selectableUl = $('<ul/>', { 'class': "ms-list", 'tabindex': '-1' });
        this.$selectionUl = $('<ul/>', { 'class': "ms-list", 'tabindex': '-1' });
        this.scrollTo = 0;
        this.sanitizeRegexp = new RegExp("\\W+", 'gi');
        this.elemsSelector = 'li:visible:not(.ms-optgroup-label,.ms-optgroup-container,.' + options.disabledClass + ')';
    };

    MultiSelect.prototype = {
        constructor: MultiSelect,

        init: function () {
            var that = this,
                ms = this.$element;

            if (ms.next('.ms-container').length === 0) {
                ms.css({ position: 'absolute', left: '-9999px' });
                ms.attr('id', ms.attr('id') ? ms.attr('id') : Math.ceil(Math.random() * 1000) + 'multiselect');
                this.$container.attr('id', 'ms-' + ms.attr('id'));

                ms.find('option').each(function () {
                    that.generateLisFromOption(this);
                });

                this.$selectionUl.find('.ms-optgroup-label').hide();

                if (that.options.selectableHeader) {
                    that.$selectableContainer.append(that.options.selectableHeader);
                }
                that.$selectableContainer.append(that.$selectableUl);
                if (that.options.selectableFooter) {
                    that.$selectableContainer.append(that.options.selectableFooter);
                }

                if (that.options.selectionHeader) {
                    that.$selectionContainer.append(that.options.selectionHeader);
                }
                that.$selectionContainer.append(that.$selectionUl);
                if (that.options.selectionFooter) {
                    that.$selectionContainer.append(that.options.selectionFooter);
                }

                that.$container.append(that.$selectableContainer);
                that.$container.append(that.$selectionContainer);
                ms.after(that.$container);

                that.activeMouse(that.$selectableUl);
                that.activeKeyboard(that.$selectableUl);

                var action = that.options.dblClick ? 'dblclick' : 'click';

                that.$selectableUl.on(action, '.ms-elem-selectable', function () {
                    that.select($(this).data('ms-value'));
                });
                that.$selectionUl.on(action, '.ms-elem-selection', function () {
                    that.deselect($(this).data('ms-value'));
                });

                that.activeMouse(that.$selectionUl);
                that.activeKeyboard(that.$selectionUl);

                ms.on('focus', function () {
                    that.$selectableUl.focus();
                })
            }

            var selectedValues = ms.find('option:selected').map(function () {
                return $(this).val();
            }).get();
            that.select(selectedValues, 'init');

            if (typeof that.options.afterInit === 'function') {
                that.options.afterInit.call(this, this.$container);
            }
        },

        'generateLisFromOption': function (option) {
            var that = this,
                ms = that.$element,
                attributes = "",
                $option = $(option);

            for (var cpt = 0; cpt < option.attributes.length; cpt++) {
                var attr = option.attributes[cpt];

                if (attr.name !== 'value' && attr.name !== 'disabled') {
                    attributes += attr.name + '="' + attr.value + '" ';
                }
            }
            var selectableLi = $('<li ' + attributes + '><span>' + $option.text() + '</span></li>'),
                selectedLi = selectableLi.clone(),
                value = $option.val(),
                elementId = that.sanitize(value, that.sanitizeRegexp);

            selectableLi
                .data('ms-value', value)
                .addClass('ms-elem-selectable')
                .attr('id', elementId + '-selectable');

            selectedLi
                .data('ms-value', value)
                .addClass('ms-elem-selection')
                .attr('id', elementId + '-selection')
                .hide();

            if ($option.prop('disabled') || ms.prop('disabled')) {
                selectedLi.addClass(that.options.disabledClass);
                selectableLi.addClass(that.options.disabledClass);
            }

            var $optgroup = $option.parent('optgroup');

            if ($optgroup.length > 0) {
                var optgroupLabel = $optgroup.attr('label'),
                    optgroupId = that.sanitize(optgroupLabel, that.sanitizeRegexp),
                    $selectableOptgroup = that.$selectableUl.find('#optgroup-selectable-' + optgroupId),
                    $selectionOptgroup = that.$selectionUl.find('#optgroup-selection-' + optgroupId);

                if ($selectableOptgroup.length === 0) {
                    var optgroupContainerTpl = '<li class="ms-optgroup-container"></li>',
                        optgroupTpl = '<ul class="ms-optgroup"><li class="ms-optgroup-label"><span>' + optgroupLabel + '</span></li></ul>';

                    $selectableOptgroup = $(optgroupContainerTpl);
                    $selectionOptgroup = $(optgroupContainerTpl);
                    $selectableOptgroup.attr('id', 'optgroup-selectable-' + optgroupId);
                    $selectionOptgroup.attr('id', 'optgroup-selection-' + optgroupId);
                    $selectableOptgroup.append($(optgroupTpl));
                    $selectionOptgroup.append($(optgroupTpl));
                    if (that.options.selectableOptgroup) {
                        $selectableOptgroup.find('.ms-optgroup-label').on('click', function () {
                            var values = $optgroup.children(':not(:selected)').map(function () {
                                return $(this).val()
                            }).get();
                            that.select(values);
                        });
                        $selectionOptgroup.find('.ms-optgroup-label').on('click', function () {
                            var values = $optgroup.children(':selected').map(function () {
                                return $(this).val()
                            }).get();
                            that.deselect(values);
                        });
                    }
                    that.$selectableUl.append($selectableOptgroup);
                    that.$selectionUl.append($selectionOptgroup);
                }
                $selectableOptgroup.children().append(selectableLi);
                $selectionOptgroup.children().append(selectedLi);
            } else {
                that.$selectableUl.append(selectableLi);
                that.$selectionUl.append(selectedLi);
            }
        },

        'activeKeyboard': function ($list) {
            var that = this;

            $list.on('focus', function () {
                $(this).addClass('ms-focus');
            })
                .on('blur', function () {
                    $(this).removeClass('ms-focus');
                })
                .on('keydown', function (e) {
                    switch (e.which) {
                        case 40:
                        case 38:
                            e.preventDefault();
                            e.stopPropagation();
                            that.moveHighlight($(this), (e.which === 38) ? -1 : 1);
                            return;
                        case 32:
                            e.preventDefault();
                            e.stopPropagation();
                            that.selectHighlighted($list);
                            return;
                        case 37:
                        case 39:
                            e.preventDefault();
                            e.stopPropagation();
                            that.switchList($list);
                            return;
                    }
                });
        },

        'moveHighlight': function ($list, direction) {
            var $elems = $list.find(this.elemsSelector),
                $currElem = $elems.filter('.ms-hover'),
                $nextElem = null,
                elemHeight = $elems.first().outerHeight(),
                containerHeight = $list.height(),
                containerSelector = '#' + this.$container.prop('id');

            // Deactive mouseenter event when move is active
            // It fixes a bug when mouse is over the list
            $elems.off('mouseenter');

            $elems.removeClass('ms-hover');
            if (direction === 1) { // DOWN

                $nextElem = $currElem.nextAll(this.elemsSelector).first();
                if ($nextElem.length === 0) {
                    var $optgroupUl = $currElem.parent();

                    if ($optgroupUl.hasClass('ms-optgroup')) {
                        var $optgroupLi = $optgroupUl.parent(),
                            $nextOptgroupLi = $optgroupLi.next(':visible');

                        if ($nextOptgroupLi.length > 0) {
                            $nextElem = $nextOptgroupLi.find(this.elemsSelector).first();
                        } else {
                            $nextElem = $elems.first();
                        }
                    } else {
                        $nextElem = $elems.first();
                    }
                }
            } else if (direction === -1) { // UP

                $nextElem = $currElem.prevAll(this.elemsSelector).first();
                if ($nextElem.length === 0) {
                    var $optgroupUl = $currElem.parent();

                    if ($optgroupUl.hasClass('ms-optgroup')) {
                        var $optgroupLi = $optgroupUl.parent(),
                            $prevOptgroupLi = $optgroupLi.prev(':visible');

                        if ($prevOptgroupLi.length > 0) {
                            $nextElem = $prevOptgroupLi.find(this.elemsSelector).last();
                        } else {
                            $nextElem = $elems.last();
                        }
                    } else {
                        $nextElem = $elems.last();
                    }
                }
            }
            if ($nextElem.length > 0) {
                $nextElem.addClass('ms-hover');
                var scrollTo = $list.scrollTop() + $nextElem.position().top -
                    containerHeight / 2 + elemHeight / 2;

                $list.scrollTop(scrollTo);
            }
        },

        'selectHighlighted': function ($list) {
            var $elems = $list.find(this.elemsSelector),
                $highlightedElem = $elems.filter('.ms-hover').first();

            if ($highlightedElem.length > 0) {
                if ($list.parent().hasClass('ms-selectable')) {
                    this.select($highlightedElem.data('ms-value'));
                } else {
                    this.deselect($highlightedElem.data('ms-value'));
                }
                $elems.removeClass('ms-hover');
            }
        },

        'switchList': function ($list) {
            $list.blur();
            if ($list.parent().hasClass('ms-selectable')) {
                this.$selectionUl.focus();
            } else {
                this.$selectableUl.focus();
            }
        },

        'activeMouse': function ($list) {
            var that = this;

            $list.on('mousemove', function () {
                var elems = $list.find(that.elemsSelector);

                elems.on('mouseenter', function () {
                    elems.removeClass('ms-hover');
                    $(this).addClass('ms-hover');
                });
            });
        },

        'refresh': function () {
            this.destroy();
            this.$element.multiSelect(this.options);
        },

        'destroy': function () {
            $("#ms-" + this.$element.attr("id")).remove();
            this.$element.removeData('multiselect');
        },

        'select': function (value, method) {
            if (typeof value === 'string') {
                value = [value];
            }

            var that = this,
                ms = this.$element,
                msIds = $.map(value, function (val) {
                    return(that.sanitize(val, that.sanitizeRegexp));
                }),
                selectables = this.$selectableUl.find('#' + msIds.join('-selectable, #') + '-selectable').filter(':not(.' + that.options.disabledClass + ')'),
                selections = this.$selectionUl.find('#' + msIds.join('-selection, #') + '-selection').filter(':not(.' + that.options.disabledClass + ')'),
                options = ms.find('option:not(:disabled)').filter(function () {
                    return($.inArray(this.value, value) > -1);
                });

            if (selectables.length > 0) {
                selectables.addClass('ms-selected').hide();
                selections.addClass('ms-selected').show();
                options.prop('selected', true);

                var selectableOptgroups = that.$selectableUl.children('.ms-optgroup-container');
                if (selectableOptgroups.length > 0) {
                    selectableOptgroups.each(function () {
                        var selectablesLi = $(this).find('.ms-elem-selectable');
                        if (selectablesLi.length === selectablesLi.filter('.ms-selected').length) {
                            $(this).find('.ms-optgroup-label').hide();
                        }
                    });

                    var selectionOptgroups = that.$selectionUl.children('.ms-optgroup-container');
                    selectionOptgroups.each(function () {
                        var selectionsLi = $(this).find('.ms-elem-selection');
                        if (selectionsLi.filter('.ms-selected').length > 0) {
                            $(this).find('.ms-optgroup-label').show();
                        }
                    });
                } else {
                    if (that.options.keepOrder) {
                        var selectionLiLast = that.$selectionUl.find('.ms-selected');
                        if ((selectionLiLast.length > 1) && (selectionLiLast.last().get(0) != selections.get(0))) {
                            selections.insertAfter(selectionLiLast.last());
                        }
                    }
                }
                if (method !== 'init') {
                    ms.trigger('change');
                    if (typeof that.options.afterSelect === 'function') {
                        that.options.afterSelect.call(this, value);
                    }
                }
            }
        },

        'deselect': function (value) {
            if (typeof value === 'string') {
                value = [value];
            }

            var that = this,
                ms = this.$element,
                msIds = $.map(value, function (val) {
                    return(that.sanitize(val, that.sanitizeRegexp));
                }),
                selectables = this.$selectableUl.find('#' + msIds.join('-selectable, #') + '-selectable'),
                selections = this.$selectionUl.find('#' + msIds.join('-selection, #') + '-selection').filter('.ms-selected'),
                options = ms.find('option').filter(function () {
                    return($.inArray(this.value, value) > -1);
                });

            if (selections.length > 0) {
                selectables.removeClass('ms-selected').show();
                selections.removeClass('ms-selected').hide();
                options.prop('selected', false);

                var selectableOptgroups = that.$selectableUl.children('.ms-optgroup-container');
                if (selectableOptgroups.length > 0) {
                    selectableOptgroups.each(function () {
                        var selectablesLi = $(this).find('.ms-elem-selectable');
                        if (selectablesLi.filter(':not(.ms-selected)').length > 0) {
                            $(this).find('.ms-optgroup-label').show();
                        }
                    });

                    var selectionOptgroups = that.$selectionUl.children('.ms-optgroup-container');
                    selectionOptgroups.each(function () {
                        var selectionsLi = $(this).find('.ms-elem-selection');
                        if (selectionsLi.filter('.ms-selected').length === 0) {
                            $(this).find('.ms-optgroup-label').hide();
                        }
                    });
                }
                ms.trigger('change');
                if (typeof that.options.afterDeselect === 'function') {
                    that.options.afterDeselect.call(this, value);
                }
            }
        },

        'select_all': function () {
            var ms = this.$element,
                values = ms.val();

            ms.find('option:not(":disabled")').prop('selected', true);
            this.$selectableUl.find('.ms-elem-selectable').filter(':not(.' + this.options.disabledClass + ')').addClass('ms-selected').hide();
            this.$selectionUl.find('.ms-optgroup-label').show();
            this.$selectableUl.find('.ms-optgroup-label').hide();
            this.$selectionUl.find('.ms-elem-selection').filter(':not(.' + this.options.disabledClass + ')').addClass('ms-selected').show();
            this.$selectionUl.focus();
            ms.trigger('change');
            if (typeof this.options.afterSelect === 'function') {
                var selectedValues = $.grep(ms.val(), function (item) {
                    return $.inArray(item, values) < 0;
                });
                this.options.afterSelect.call(this, selectedValues);
            }
        },

        'deselect_all': function () {
            var ms = this.$element,
                values = ms.val();

            ms.find('option').prop('selected', false);
            this.$selectableUl.find('.ms-elem-selectable').removeClass('ms-selected').show();
            this.$selectionUl.find('.ms-optgroup-label').hide();
            this.$selectableUl.find('.ms-optgroup-label').show();
            this.$selectionUl.find('.ms-elem-selection').removeClass('ms-selected').hide();
            this.$selectableUl.focus();
            ms.trigger('change');
            if (typeof this.options.afterDeselect === 'function') {
                this.options.afterDeselect.call(this, values);
            }
        },

        sanitize: function (value, reg) {
            return(value.replace(reg, '_'));
        }
    };

    /* MULTISELECT PLUGIN DEFINITION
     * ======================= */

    $.fn.multiSelect = function () {
        var option = arguments[0],
            args = arguments;

        return this.each(function () {
            var $this = $(this),
                data = $this.data('multiselect'),
                options = $.extend({}, $.fn.multiSelect.defaults, $this.data(), typeof option === 'object' && option);

            if (!data) {
                $this.data('multiselect', (data = new MultiSelect(this, options)));
            }

            if (typeof option === 'string') {
                data[option](args[1]);
            } else {
                data.init();
            }
        });
    };

    $.fn.multiSelect.defaults = {
        selectableOptgroup: false,
        disabledClass: 'disabled',
        dblClick: false,
        keepOrder: false
    };

    $.fn.multiSelect.Constructor = MultiSelect;

}(window.jQuery);
(function ($, window, document, undefined) {
    $.fn.quicksearch = function (target, opt) {

        var timeout, cache, rowcache, jq_results, val = '', e = this, options = $.extend({
            delay: 100,
            selector: null,
            stripeRows: null,
            loader: null,
            noResults: '',
            matchedResultsCount: 0,
            bind: 'keyup',
            onBefore: function () {
                return;
            },
            onAfter: function () {
                return;
            },
            show: function () {
                this.style.display = "";
            },
            hide: function () {
                this.style.display = "none";
            },
            prepareQuery: function (val) {
                return val.toLowerCase().split(' ');
            },
            testQuery: function (query, txt, _row) {
                for (var i = 0; i < query.length; i += 1) {
                    if (txt.indexOf(query[i]) === -1) {
                        return false;
                    }
                }
                return true;
            }
        }, opt);

        this.go = function () {

            var i = 0,
                numMatchedRows = 0,
                noresults = true,
                query = options.prepareQuery(val),
                val_empty = (val.replace(' ', '').length === 0);

            for (var i = 0, len = rowcache.length; i < len; i++) {
                if (val_empty || options.testQuery(query, cache[i], rowcache[i])) {
                    options.show.apply(rowcache[i]);
                    noresults = false;
                    numMatchedRows++;
                } else {
                    options.hide.apply(rowcache[i]);
                }
            }

            if (noresults) {
                this.results(false);
            } else {
                this.results(true);
                this.stripe();
            }

            this.matchedResultsCount = numMatchedRows;
            this.loader(false);
            options.onAfter();

            return this;
        };

        /*
         * External API so that users can perform search programatically.
         * */
        this.search = function (submittedVal) {
            val = submittedVal;
            e.trigger();
        };

        /*
         * External API to get the number of matched results as seen in
         * https://github.com/ruiz107/quicksearch/commit/f78dc440b42d95ce9caed1d087174dd4359982d6
         * */
        this.currentMatchedResults = function () {
            return this.matchedResultsCount;
        };

        this.stripe = function () {

            if (typeof options.stripeRows === "object" && options.stripeRows !== null) {
                var joined = options.stripeRows.join(' ');
                var stripeRows_length = options.stripeRows.length;

                jq_results.not(':hidden').each(function (i) {
                    $(this).removeClass(joined).addClass(options.stripeRows[i % stripeRows_length]);
                });
            }

            return this;
        };

        this.strip_html = function (input) {
            var output = input.replace(new RegExp('<[^<]+\>', 'g'), "");
            output = $.trim(output.toLowerCase());
            return output;
        };

        this.results = function (bool) {
            if (typeof options.noResults === "string" && options.noResults !== "") {
                if (bool) {
                    $(options.noResults).hide();
                } else {
                    $(options.noResults).show();
                }
            }
            return this;
        };

        this.loader = function (bool) {
            if (typeof options.loader === "string" && options.loader !== "") {
                (bool) ? $(options.loader).show() : $(options.loader).hide();
            }
            return this;
        };

        this.cache = function () {

            jq_results = $(target);

            if (typeof options.noResults === "string" && options.noResults !== "") {
                jq_results = jq_results.not(options.noResults);
            }

            var t = (typeof options.selector === "string") ? jq_results.find(options.selector) : $(target).not(options.noResults);
            cache = t.map(function () {
                return e.strip_html(this.innerHTML);
            });

            rowcache = jq_results.map(function () {
                return this;
            });

            /*
             * Modified fix for sync-ing "val".
             * Original fix https://github.com/michaellwest/quicksearch/commit/4ace4008d079298a01f97f885ba8fa956a9703d1
             * */
            val = val || this.val() || "";

            return this.go();
        };

        this.trigger = function () {
            this.loader(true);
            options.onBefore();

            window.clearTimeout(timeout);
            timeout = window.setTimeout(function () {
                e.go();
            }, options.delay);

            return this;
        };

        this.cache();
        this.results(true);
        this.stripe();
        this.loader(false);

        return this.each(function () {

            /*
             * Changed from .bind to .on.
             * */
            $(this).on(options.bind, function () {

                val = $(this).val();
                e.trigger();
            });
        });

    };

}(jQuery, this, document));

/*jslint vars: false, browser: true, nomen: true, regexp: true */
/*global jQuery */

/*
 * jQuery Password Strength plugin for Twitter Bootstrap
 *
 * Copyright (c) 2008-2013 Tane Piper
 * Copyright (c) 2013 Alejandro Blanco
 * Modified By Keenthemes for Bootstrap 3.0 compatibility
 *
 * Dual licensed under the MIT and GPL licenses.
 *
 */

(function ($) {
    "use strict";

    var options = {
            errors: [],
            // Options
            minChar: 8,
            errorMessages: {
                password_to_short: "The Password is too short",
                same_as_username: "Your password cannot be the same as your username"
            },
            scores: [17, 26, 40, 50],
            verdicts: ["Weak", "Normal", "Medium", "Strong", "Very Strong"],
            showVerdictInline: true, // show password verdict inside the progress bar
            showVerdicts: true,
            raisePower: 1.4,
            usernameField: "#username",
            onLoad: undefined,
            onKeyUp: undefined,
            viewports: {
                progress: undefined,
                verdict: undefined,
                errors: undefined
            },
            // Rules stuff
            ruleScores: {
                wordNotEmail: -100,
                wordLength: -100,
                wordSimilarToUsername: -100,
                wordLowercase: 1,
                wordUppercase: 3,
                wordOneNumber: 3,
                wordThreeNumbers: 5,
                wordOneSpecialChar: 3,
                wordTwoSpecialChar: 5,
                wordUpperLowerCombo: 2,
                wordLetterNumberCombo: 2,
                wordLetterNumberCharCombo: 2
            },
            rules: {
                wordNotEmail: true,
                wordLength: true,
                wordSimilarToUsername: true,
                wordLowercase: true,
                wordUppercase: true,
                wordOneNumber: true,
                wordThreeNumbers: true,
                wordOneSpecialChar: true,
                wordTwoSpecialChar: true,
                wordUpperLowerCombo: true,
                wordLetterNumberCombo: true,
                wordLetterNumberCharCombo: true
            },
            validationRules: {
                wordNotEmail: function (options, word, score) {
                    return word.match(/^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i) && score;
                },
                wordLength: function (options, word, score) {
                    var wordlen = word.length,
                        lenScore = Math.pow(wordlen, options.raisePower);
                    if (wordlen < options.minChar) {
                        lenScore = (lenScore + score);
                        options.errors.push(options.errorMessages.password_to_short);
                    }
                    return lenScore;
                },
                wordSimilarToUsername: function (options, word, score) {
                    var username = $(options.usernameField).val();
                    if (username && word.toLowerCase().match(username.toLowerCase())) {
                        options.errors.push(options.errorMessages.same_as_username);
                        return score;
                    }
                    return true;
                },
                wordLowercase: function (options, word, score) {
                    return word.match(/[a-z]/) && score;
                },
                wordUppercase: function (options, word, score) {
                    return word.match(/[A-Z]/) && score;
                },
                wordOneNumber: function (options, word, score) {
                    return word.match(/\d+/) && score;
                },
                wordThreeNumbers: function (options, word, score) {
                    return word.match(/(.*[0-9].*[0-9].*[0-9])/) && score;
                },
                wordOneSpecialChar: function (options, word, score) {
                    return word.match(/.[!,@,#,$,%,\^,&,*,?,_,~]/) && score;
                },
                wordTwoSpecialChar: function (options, word, score) {
                    return word.match(/(.*[!,@,#,$,%,\^,&,*,?,_,~].*[!,@,#,$,%,\^,&,*,?,_,~])/) && score;
                },
                wordUpperLowerCombo: function (options, word, score) {
                    return word.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && score;
                },
                wordLetterNumberCombo: function (options, word, score) {
                    return word.match(/([a-zA-Z])/) && word.match(/([0-9])/) && score;
                },
                wordLetterNumberCharCombo: function (options, word, score) {
                    return word.match(/([a-zA-Z0-9].*[!,@,#,$,%,\^,&,*,?,_,~])|([!,@,#,$,%,\^,&,*,?,_,~].*[a-zA-Z0-9])/) && score;
                }
            }
        },

        setProgressBar = function ($el, score) {
            var options = $el.data("pwstrength"),
                progressbar = options.progressbar,
                $verdict;

            if (options.showVerdictInline) {
                $verdict = progressbar.find(".progress-bar");
            } else {
                if (options.showVerdicts) {
                    if (options.viewports.verdict) {
                        $verdict = $(options.viewports.verdict).find(".progress-bar");
                    } else {
                        $verdict = $el.parent().find(".password-verdict");
                        if ($verdict.length === 0) {
                            $verdict = $('<span class="password-verdict"></span>');
                            $verdict.insertAfter($el);
                        }
                    }
                }
            }

            if (score < options.scores[0]) {
                progressbar.find(".progress-bar").css("width", "5%").addClass("progress-bar-danger").removeClass("progress-bar-warning").removeClass("progress-bar-success");
                if (options.showVerdicts) {
                    $verdict.text(options.verdicts[0]);
                }
            } else if (score >= options.scores[0] && score < options.scores[1]) {
                progressbar.find(".progress-bar").css("width", "25%").addClass("progress-bar-danger").removeClass("progress-bar-warning").removeClass("progress-bar-success");
                if (options.showVerdicts) {
                    $verdict.text(options.verdicts[1]);
                }
            } else if (score >= options.scores[1] && score < options.scores[2]) {
                progressbar.find(".progress-bar").css("width", "50%").addClass("progress-bar-warning").removeClass("progress-bar-danger").removeClass("progress-bar-success");
                if (options.showVerdicts) {
                    $verdict.text(options.verdicts[2]);
                }
            } else if (score >= options.scores[2] && score < options.scores[3]) {
                progressbar.find(".progress-bar").css("width", "75%").addClass("progress-bar-warning").removeClass("progress-bar-danger").removeClass("progress-bar-success");
                if (options.showVerdicts) {
                    $verdict.text(options.verdicts[3]);
                }
            } else if (score >= options.scores[3]) {
                progressbar.find(".progress-bar").css("width", "100%").addClass("progress-bar-success").removeClass("progress-bar-warning").removeClass("progress-bar-danger");
                progressbar.find(".bar").css("width", "100%");
                if (options.showVerdicts) {
                    $verdict.text(options.verdicts[4]);
                }
            }
        },

        calculateScore = function ($el) {
            var self = this,
                word = $el.val(),
                totalScore = 0,
                options = $el.data("pwstrength");

            $.each(options.rules, function (rule, active) {
                if (active === true) {
                    var score = options.ruleScores[rule],
                        result = options.validationRules[rule](options, word, score);
                    if (result) {
                        totalScore += result;
                    }
                }
            });
            setProgressBar($el, totalScore);
            return totalScore;
        },

        progressWidget = function () {
            return '<div class="progress"><div class="progress-bar"></div></div>';
        },

        methods = {
            init: function (settings) {
                var self = this,
                    allOptions = $.extend(options, settings);

                return this.each(function (idx, el) {
                    var $el = $(el),
                        progressbar,
                        verdict;

                    $el.data("pwstrength", allOptions);

                    $el.on("keyup", function (event) {
                        var options = $el.data("pwstrength");
                        options.errors = [];
                        calculateScore.call(self, $el);
                        if ($.isFunction(options.onKeyUp)) {
                            options.onKeyUp(event);
                        }
                    });

                    progressbar = $(progressWidget());
                    if (allOptions.viewports.progress) {
                        $(allOptions.viewports.progress).append(progressbar);
                    } else {
                        progressbar.insertAfter($el);
                    }
                    progressbar.find(".progress-bar").css("width", "0%");
                    $el.data("pwstrength").progressbar = progressbar;

                    if (!options.showVerdictInline && allOptions.showVerdicts) {
                        verdict = $('<span class="password-verdict">' + allOptions.verdicts[0] + '</span>');
                        if (allOptions.viewports.verdict) {
                            $(allOptions.viewports.verdict).append(verdict);
                        } else {
                            verdict.insertAfter($el);
                        }
                    }

                    if ($.isFunction(allOptions.onLoad)) {
                        allOptions.onLoad();
                    }
                });
            },

            destroy: function () {
                this.each(function (idx, el) {
                    var $el = $(el);
                    $el.parent().find("span.password-verdict").remove();
                    $el.parent().find("div.progress").remove();
                    $el.parent().find("ul.error-list").remove();
                    $el.removeData("pwstrength");
                });
            },

            forceUpdate: function () {
                var self = this;
                this.each(function (idx, el) {
                    var $el = $(el),
                        options = $el.data("pwstrength");
                    options.errors = [];
                    calculateScore.call(self, $el);
                });
            },

            outputErrorList: function () {
                this.each(function (idx, el) {
                    var output = '<ul class="error-list">',
                        $el = $(el),
                        errors = $el.data("pwstrength").errors,
                        viewports = $el.data("pwstrength").viewports,
                        verdict;
                    $el.parent().find("ul.error-list").remove();

                    if (errors.length > 0) {
                        $.each(errors, function (i, item) {
                            output += '<li>' + item + '</li>';
                        });
                        output += '</ul>';
                        if (viewports.errors) {
                            $(viewports.errors).html(output);
                        } else {
                            output = $(output);
                            verdict = $el.parent().find("span.password-verdict");
                            if (verdict.length > 0) {
                                el = verdict;
                            }
                            output.insertAfter(el);
                        }
                    }
                });
            },

            addRule: function (name, method, score, active) {
                this.each(function (idx, el) {
                    var options = $(el).data("pwstrength");
                    options.rules[name] = active;
                    options.ruleScores[name] = score;
                    options.validationRules[name] = method;
                });
            },

            changeScore: function (rule, score) {
                this.each(function (idx, el) {
                    $(el).data("pwstrength").ruleScores[rule] = score;
                });
            },

            ruleActive: function (rule, active) {
                this.each(function (idx, el) {
                    $(el).data("pwstrength").rules[rule] = active;
                });
            }
        };

    $.fn.pwstrength = function (method) {
        var result;
        if (methods[method]) {
            result = methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === "object" || !method) {
            result = methods.init.apply(this, arguments);
        } else {
            $.error("Method " + method + " does not exist on jQuery.pwstrength");
        }
        return result;
    };
}(jQuery));

/*! ============================================================
 * bootstrapSwitch v1.8 by Larentis Mattia @SpiritualGuru
 * http://www.larentis.eu/
 * 
 * Enhanced for radiobuttons by Stein, Peter @BdMdesigN
 * http://www.bdmdesign.org/
 *
 * Project site:
 * http://www.larentis.eu/switch/
 * ============================================================
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 * ============================================================ */
!function ($) {
    "use strict";
    $.fn['bootstrapSwitch'] = function (method) {
        var inputSelector = 'input[type!="hidden"]';
        var methods = {init: function () {
            return this.each(function () {
                var $element = $(this), $div, $switchLeft, $switchRight, $label, $form = $element.closest('form'), myClasses = "", classes = $element.attr('class'), color, moving, onLabel = "ON", offLabel = "OFF", icon = false, textLabel = false;
                $.each(['switch-mini', 'switch-small', 'switch-large'], function (i, el) {
                    if (classes.indexOf(el) >= 0)myClasses = el
                });
                $element.addClass('has-switch');
                if ($element.data('on') !== undefined)color = "switch-" + $element.data('on');
                if ($element.data('on-label') !== undefined)onLabel = $element.data('on-label');
                if ($element.data('off-label') !== undefined)offLabel = $element.data('off-label');
                if ($element.data('label-icon') !== undefined)icon = $element.data('label-icon');
                if ($element.data('text-label') !== undefined)textLabel = $element.data('text-label');
                $switchLeft = $('<span>').addClass("switch-left").addClass(myClasses).addClass(color).html(onLabel);
                color = '';
                if ($element.data('off') !== undefined)color = "switch-" + $element.data('off');
                $switchRight = $('<span>').addClass("switch-right").addClass(myClasses).addClass(color).html(offLabel);
                $label = $('<label>').html("&nbsp;").addClass(myClasses).attr('for', $element.find(inputSelector).attr('id'));
                if (icon) {
                    $label.html('<i class="icon ' + icon + '"></i>')
                }
                if (textLabel) {
                    $label.html('' + textLabel + '')
                }
                $div = $element.find(inputSelector).wrap($('<div>')).parent().data('animated', false);
                if ($element.data('animated') !== false)$div.addClass('switch-animate').data('animated', true);
                $div.append($switchLeft).append($label).append($switchRight);
                $element.find('>div').addClass($element.find(inputSelector).is(':checked') ? 'switch-on' : 'switch-off');
                if ($element.find(inputSelector).is(':disabled'))$(this).addClass('deactivate');
                var changeStatus = function ($this) {
                    if ($element.parent('label').is('.label-change-switch')) {
                    } else {
                        $this.siblings('label').trigger('mousedown').trigger('mouseup').trigger('click')
                    }
                };
                $element.on('keydown', function (e) {
                    if (e.keyCode === 32) {
                        e.stopImmediatePropagation();
                        e.preventDefault();
                        changeStatus($(e.target).find('span:first'))
                    }
                });
                $switchLeft.on('click', function (e) {
                    changeStatus($(this))
                });
                $switchRight.on('click', function (e) {
                    changeStatus($(this))
                });
                $element.find(inputSelector).on('change', function (e, skipOnChange) {
                    var $this = $(this), $element = $this.parent(), thisState = $this.is(':checked'), state = $element.is('.switch-off');
                    e.preventDefault();
                    $element.css('left', '');
                    if (state === thisState) {
                        if (thisState)$element.removeClass('switch-off').addClass('switch-on'); else $element.removeClass('switch-on').addClass('switch-off');
                        if ($element.data('animated') !== false)$element.addClass("switch-animate");
                        if (typeof skipOnChange === 'boolean' && skipOnChange)return;
                        $element.parent().trigger('switch-change', {'el': $this, 'value': thisState})
                    }
                });
                $element.find('label').on('mousedown touchstart', function (e) {
                    var $this = $(this);
                    moving = false;
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    $this.closest('div').removeClass('switch-animate');
                    if ($this.closest('.has-switch').is('.deactivate')) {
                        $this.unbind('click')
                    } else if ($this.closest('.switch-on').parent().is('.radio-no-uncheck')) {
                        $this.unbind('click')
                    } else {
                        $this.on('mousemove touchmove', function (e) {
                            var $element = $(this).closest('.make-switch'), relativeX = (e.pageX || e.originalEvent.targetTouches[0].pageX) - $element.offset().left, percent = (relativeX / $element.width()) * 100, left = 25, right = 75;
                            moving = true;
                            if (percent < left)percent = left; else if (percent > right)percent = right;
                            $element.find('>div').css('left', (percent - right) + "%")
                        });
                        $this.on('click touchend', function (e) {
                            var $this = $(this), $target = $(e.target), $myRadioCheckBox = $target.siblings('input');
                            e.stopImmediatePropagation();
                            e.preventDefault();
                            $this.unbind('mouseleave');
                            if (moving)$myRadioCheckBox.prop('checked', !(parseInt($this.parent().css('left')) < -25)); else $myRadioCheckBox.prop("checked", !$myRadioCheckBox.is(":checked"));
                            moving = false;
                            $myRadioCheckBox.trigger('change')
                        });
                        $this.on('mouseleave', function (e) {
                            var $this = $(this), $myInputBox = $this.siblings('input');
                            e.preventDefault();
                            e.stopImmediatePropagation();
                            $this.unbind('mouseleave');
                            $this.trigger('mouseup');
                            $myInputBox.prop('checked', !(parseInt($this.parent().css('left')) < -25)).trigger('change')
                        });
                        $this.on('mouseup', function (e) {
                            e.stopImmediatePropagation();
                            e.preventDefault();
                            $(this).unbind('mousemove')
                        })
                    }
                });
                if ($form.data('bootstrapSwitch') !== 'injected') {
                    $form.bind('reset', function () {
                        setTimeout(function () {
                            $form.find('.make-switch').each(function () {
                                var $input = $(this).find(inputSelector);
                                $input.prop('checked', $input.is(':checked')).trigger('change')
                            })
                        }, 1)
                    });
                    $form.data('bootstrapSwitch', 'injected')
                }
            })
        }, toggleActivation: function () {
            var $this = $(this);
            $this.toggleClass('deactivate');
            $this.find(inputSelector).prop('disabled', $this.is('.deactivate'))
        }, isActive: function () {
            return!$(this).hasClass('deactivate')
        }, setActive: function (active) {
            var $this = $(this);
            if (active) {
                $this.removeClass('deactivate');
                $this.find(inputSelector).removeAttr('disabled')
            } else {
                $this.addClass('deactivate');
                $this.find(inputSelector).attr('disabled', 'disabled')
            }
        }, toggleState: function (skipOnChange) {
            var $input = $(this).find(':checkbox');
            $input.prop('checked', !$input.is(':checked')).trigger('change', skipOnChange)
        }, toggleRadioState: function (skipOnChange) {
            var $radioinput = $(this).find(':radio');
            $radioinput.not(':checked').prop('checked', !$radioinput.is(':checked')).trigger('change', skipOnChange)
        }, toggleRadioStateAllowUncheck: function (uncheck, skipOnChange) {
            var $radioinput = $(this).find(':radio');
            if (uncheck) {
                $radioinput.not(':checked').trigger('change', skipOnChange)
            } else {
                $radioinput.not(':checked').prop('checked', !$radioinput.is(':checked')).trigger('change', skipOnChange)
            }
        }, setState: function (value, skipOnChange) {
            $(this).find(inputSelector).prop('checked', value).trigger('change', skipOnChange)
        }, setOnLabel: function (value) {
            var $switchLeft = $(this).find(".switch-left");
            $switchLeft.html(value)
        }, setOffLabel: function (value) {
            var $switchRight = $(this).find(".switch-right");
            $switchRight.html(value)
        }, setOnClass: function (value) {
            var $switchLeft = $(this).find(".switch-left");
            var color = '';
            if (value !== undefined) {
                if ($(this).attr('data-on') !== undefined) {
                    color = "switch-" + $(this).attr('data-on')
                }
                $switchLeft.removeClass(color);
                color = "switch-" + value;
                $switchLeft.addClass(color)
            }
        }, setOffClass: function (value) {
            var $switchRight = $(this).find(".switch-right");
            var color = '';
            if (value !== undefined) {
                if ($(this).attr('data-off') !== undefined) {
                    color = "switch-" + $(this).attr('data-off')
                }
                $switchRight.removeClass(color);
                color = "switch-" + value;
                $switchRight.addClass(color)
            }
        }, setAnimated: function (value) {
            var $element = $(this).find(inputSelector).parent();
            if (value === undefined)value = false;
            $element.data('animated', value);
            $element.attr('data-animated', value);
            if ($element.data('animated') !== false) {
                $element.addClass("switch-animate")
            } else {
                $element.removeClass("switch-animate")
            }
        }, setSizeClass: function (value) {
            var $element = $(this);
            var $switchLeft = $element.find(".switch-left");
            var $switchRight = $element.find(".switch-right");
            var $label = $element.find("label");
            $.each(['switch-mini', 'switch-small', 'switch-large'], function (i, el) {
                if (el !== value) {
                    $switchLeft.removeClass(el);
                    $switchRight.removeClass(el);
                    $label.removeClass(el)
                } else {
                    $switchLeft.addClass(el);
                    $switchRight.addClass(el);
                    $label.addClass(el)
                }
            })
        }, status: function () {
            return $(this).find(inputSelector).is(':checked')
        }, destroy: function () {
            var $element = $(this), $div = $element.find('div'), $form = $element.closest('form'), $inputbox;
            $div.find(':not(input)').remove();
            $inputbox = $div.children();
            $inputbox.unwrap().unwrap();
            $inputbox.unbind('change');
            if ($form) {
                $form.unbind('reset');
                $form.removeData('bootstrapSwitch')
            }
            return $inputbox
        }};
        if (methods[method])return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === 'object' || !method)return methods.init.apply(this, arguments); else $.error('Method ' + method + ' does not exist!')
    }
}(jQuery);
(function ($) {
    $(function () {
        $('.make-switch')['bootstrapSwitch']()
    })
})(jQuery);

(function (a) {
    var b = new Array;
    var c = new Array;
    a.fn.doAutosize = function (b) {
        var c = a(this).data("minwidth"), d = a(this).data("maxwidth"), e = "", f = a(this), g = a("#" + a(this).data("tester_id"));
        if (e === (e = f.val())) {
            return
        }
        var h = e.replace(/&/g, "&").replace(/\s/g, " ").replace(/</g, "<").replace(/>/g, ">");
        g.html(h);
        var i = g.width(), j = i + b.comfortZone >= c ? i + b.comfortZone : c, k = f.width(), l = j < k && j >= c || j > c && j < d;
        if (l) {
            f.width(j)
        }
    };
    a.fn.resetAutosize = function (b) {
        var c = a(this).data("minwidth") || b.minInputWidth || a(this).width(), d = a(this).data("maxwidth") || b.maxInputWidth || a(this).closest(".tagsinput").width() - b.inputPadding, e = "", f = a(this), g = a("<tester/>").css({position: "absolute", top: -9999, left: -9999, width: "auto", fontSize: f.css("fontSize"), fontFamily: f.css("fontFamily"), fontWeight: f.css("fontWeight"), letterSpacing: f.css("letterSpacing"), whiteSpace: "nowrap"}), h = a(this).attr("id") + "_autosize_tester";
        if (!a("#" + h).length > 0) {
            g.attr("id", h);
            g.appendTo("body")
        }
        f.data("minwidth", c);
        f.data("maxwidth", d);
        f.data("tester_id", h);
        f.css("width", c)
    };
    a.fn.addTag = function (d, e) {
        e = jQuery.extend({focus: false, callback: true}, e);
        this.each(function () {
            var f = a(this).attr("id");
            var g = a(this).val().split(b[f]);
            if (g[0] == "") {
                g = new Array
            }
            d = jQuery.trim(d);
            if (e.unique) {
                var h = a(g).tagExist(d);
                if (h == true) {
                    a("#" + f + "_tag").addClass("not_valid")
                }
            } else {
                var h = false
            }
            if (d != "" && h != true) {
                a("<span>").addClass("tag").append(a("<span>").text(d).append("  "), a("<a>", {href: "#", title: "Removing tag", text: "x"}).click(function () {
                    return a("#" + f).removeTag(escape(d))
                })).insertBefore("#" + f + "_addTag");
                g.push(d);
                a("#" + f + "_tag").val("");
                if (e.focus) {
                    a("#" + f + "_tag").focus()
                } else {
                    a("#" + f + "_tag").blur()
                }
                a.fn.tagsInput.updateTagsField(this, g);
                if (e.callback && c[f] && c[f]["onAddTag"]) {
                    var i = c[f]["onAddTag"];
                    i.call(this, d)
                }
                if (c[f] && c[f]["onChange"]) {
                    var j = g.length;
                    var i = c[f]["onChange"];
                    i.call(this, a(this), g[j - 1])
                }
            }
        });
        return false
    };
    a.fn.removeTag = function (d) {
        d = unescape(d);
        this.each(function () {
            var e = a(this).attr("id");
            var f = a(this).val().split(b[e]);
            a("#" + e + "_tagsinput .tag").remove();
            str = "";
            for (i = 0; i < f.length; i++) {
                if (f[i] != d) {
                    str = str + b[e] + f[i]
                }
            }
            a.fn.tagsInput.importTags(this, str);
            if (c[e] && c[e]["onRemoveTag"]) {
                var g = c[e]["onRemoveTag"];
                g.call(this, d)
            }
        });
        return false
    };
    a.fn.tagExist = function (b) {
        return jQuery.inArray(b, a(this)) >= 0
    };
    a.fn.importTags = function (b) {
        id = a(this).attr("id");
        a("#" + id + "_tagsinput .tag").remove();
        a.fn.tagsInput.importTags(this, b)
    };
    a.fn.tagsInput = function (d) {
        var e = jQuery.extend({interactive: true, defaultText: "add a tag", minChars: 0, width: "300px", height: "100px", autocomplete: {selectFirst: false}, hide: true, delimiter: ",", unique: true, removeWithBackspace: true, placeholderColor: "#666666", autosize: true, comfortZone: 20, inputPadding: 6 * 2}, d);
        this.each(function () {
            if (e.hide) {
                a(this).hide()
            }
            var d = a(this).attr("id");
            if (!d || b[a(this).attr("id")]) {
                d = a(this).attr("id", "tags" + (new Date).getTime()).attr("id")
            }
            var f = jQuery.extend({pid: d, real_input: "#" + d, holder: "#" + d + "_tagsinput", input_wrapper: "#" + d + "_addTag", fake_input: "#" + d + "_tag"}, e);
            b[d] = f.delimiter;
            if (e.onAddTag || e.onRemoveTag || e.onChange) {
                c[d] = new Array;
                c[d]["onAddTag"] = e.onAddTag;
                c[d]["onRemoveTag"] = e.onRemoveTag;
                c[d]["onChange"] = e.onChange
            }
            var g = '<div id="' + d + '_tagsinput" class="tagsinput"><div id="' + d + '_addTag">';
            if (e.interactive) {
                g = g + '<input id="' + d + '_tag" value="" data-default="' + e.defaultText + '" />'
            }
            g = g + '</div><div class="tags_clear"></div></div>';
            a(g).insertAfter(this);
            a(f.holder).css("width", e.width);
            a(f.holder).css("height", e.height);
            if (a(f.real_input).val() != "") {
                a.fn.tagsInput.importTags(a(f.real_input), a(f.real_input).val())
            }
            if (e.interactive) {
                a(f.fake_input).val(a(f.fake_input).attr("data-default"));
                a(f.fake_input).css("color", e.placeholderColor);
                a(f.fake_input).resetAutosize(e);
                a(f.holder).bind("click", f, function (b) {
                    a(b.data.fake_input).focus()
                });
                a(f.fake_input).bind("focus", f, function (b) {
                    if (a(b.data.fake_input).val() == a(b.data.fake_input).attr("data-default")) {
                        a(b.data.fake_input).val("")
                    }
                    a(b.data.fake_input).css("color", "#000000")
                });
                if (e.autocomplete_url != undefined) {
                    autocomplete_options = {source: e.autocomplete_url};
                    for (attrname in e.autocomplete) {
                        autocomplete_options[attrname] = e.autocomplete[attrname]
                    }
                    if (jQuery.Autocompleter !== undefined) {
                        a(f.fake_input).autocomplete(e.autocomplete_url, e.autocomplete);
                        a(f.fake_input).bind("result", f, function (b, c, f) {
                            if (c) {
                                a("#" + d).addTag(c[0] + "", {focus: true, unique: e.unique})
                            }
                        })
                    } else if (jQuery.ui.autocomplete !== undefined) {
                        a(f.fake_input).autocomplete(autocomplete_options);
                        a(f.fake_input).bind("autocompleteselect", f, function (b, c) {
                            a(b.data.real_input).addTag(c.item.value, {focus: true, unique: e.unique});
                            return false
                        })
                    }
                } else {
                    a(f.fake_input).bind("blur", f, function (b) {
                        var c = a(this).attr("data-default");
                        if (a(b.data.fake_input).val() != "" && a(b.data.fake_input).val() != c) {
                            if (b.data.minChars <= a(b.data.fake_input).val().length && (!b.data.maxChars || b.data.maxChars >= a(b.data.fake_input).val().length))a(b.data.real_input).addTag(a(b.data.fake_input).val(), {focus: true, unique: e.unique})
                        } else {
                            a(b.data.fake_input).val(a(b.data.fake_input).attr("data-default"));
                            a(b.data.fake_input).css("color", e.placeholderColor)
                        }
                        return false
                    })
                }
                a(f.fake_input).bind("keypress", f, function (b) {
                    if (b.which == b.data.delimiter.charCodeAt(0) || b.which == 13) {
                        b.preventDefault();
                        if (b.data.minChars <= a(b.data.fake_input).val().length && (!b.data.maxChars || b.data.maxChars >= a(b.data.fake_input).val().length))a(b.data.real_input).addTag(a(b.data.fake_input).val(), {focus: true, unique: e.unique});
                        a(b.data.fake_input).resetAutosize(e);
                        return false
                    } else if (b.data.autosize) {
                        a(b.data.fake_input).doAutosize(e)
                    }
                });
                f.removeWithBackspace && a(f.fake_input).bind("keydown", function (b) {
                    if (b.keyCode == 8 && a(this).val() == "") {
                        b.preventDefault();
                        var c = a(this).closest(".tagsinput").find(".tag:last").text();
                        var d = a(this).attr("id").replace(/_tag$/, "");
                        c = c.replace(/[\s]+x$/, "");
                        a("#" + d).removeTag(escape(c));
                        a(this).trigger("focus")
                    }
                });
                a(f.fake_input).blur();
                if (f.unique) {
                    a(f.fake_input).keydown(function (b) {
                        if (b.keyCode == 8 || String.fromCharCode(b.which).match(/\w+|[áéíóúÁÉÍÓÚñÑ,/]+/)) {
                            a(this).removeClass("not_valid")
                        }
                    })
                }
            }
        });
        return this
    };
    a.fn.tagsInput.updateTagsField = function (c, d) {
        var e = a(c).attr("id");
        a(c).val(d.join(b[e]))
    };
    a.fn.tagsInput.importTags = function (d, e) {
        a(d).val("");
        var f = a(d).attr("id");
        var g = e.split(b[f]);
        for (i = 0; i < g.length; i++) {
            a(d).addTag(g[i], {focus: false, callback: false})
        }
        if (c[f] && c[f]["onChange"]) {
            var h = c[f]["onChange"];
            h.call(d, d, g[i])
        }
    }
})(jQuery);
/* ==========================================================
 * bootstrap-maxlength.js v1.4.2
 * 
 * Copyright (c) 2013 Maurizio Napoleoni; 
 *
 * Licensed under the terms of the MIT license.
 * See: https://github.com/mimo84/bootstrap-maxlength/blob/master/LICENSE
 * ========================================================== */
(function (e) {
    e.fn.extend({maxlength: function (d, p) {
        function l(b) {
            var c = b.val().match(/\n/g), c = c ? c.length : 0;
            return b.val().length + c
        }

        function q(b, c) {
            var a = "";
            d.preText && (a += d.preText);
            a = d.showCharsTyped ? a + c : a + (b - l(c));
            d.showMaxLength && (a += d.separator + b);
            d.postText && (a += d.postText);
            return a
        }

        function r(b, c, a, f) {
            f.html(q(a, a - b));
            if (0 < b) {
                b = d.threshold;
                var g = !0;
                !d.alwaysShow && a - l(c) > b && (g = !1);
                g ? f.removeClass(d.limitReachedClass).addClass(d.warningClass).css({display: "block"}) : f.css({display: "none"})
            } else f.removeClass(d.warningClass).addClass(d.limitReachedClass).css({display: "block"})
        }

        function m(b, c) {
            var a;
            a = b[0];
            a = e.extend({}, "function" === typeof a.getBoundingClientRect ? a.getBoundingClientRect() : {width: a.offsetWidth, height: a.offsetHeight}, b.offset());
            var f = b.outerWidth(), g = c.outerWidth(), n = c.width(), h = c.height();
            switch (d.placement) {
                case "bottom":
                    c.css({top: a.top + a.height, left: a.left + a.width / 2 - n / 2});
                    break;
                case "top":
                    c.css({top: a.top - h, left: a.left + a.width / 2 - n / 2});
                    break;
                case "left":
                    c.css({top: a.top + a.height / 2 - h / 2, left: a.left - n});
                    break;
                case "right":
                    c.css({top: a.top + a.height / 2 - h / 2,
                        left: a.left + a.width});
                    break;
                case "bottom-right":
                    c.css({top: a.top + a.height, left: a.left + a.width});
                    break;
                case "top-right":
                    c.css({top: a.top - h, left: a.left + f});
                    break;
                case "top-left":
                    c.css({top: a.top - h, left: a.left - g});
                    break;
                case "bottom-left":
                    c.css({top: a.top + b.outerHeight(), left: a.left - g});
                    break;
                case "centered-right":
                    c.css({top: a.top + h / 2, left: a.left + f - g - 3})
            }
        }

        function k(b) {
            return b.attr("maxlength") || b.attr("size")
        }

        var s = e("body");
        e.isFunction(d) && !p && (p = d, d = {});
        d = e.extend({alwaysShow: !1, threshold: 10, warningClass: "label label-success",
            limitReachedClass: "label label-important", separator: " / ", preText: "", postText: "", showMaxLength: !0, placement: "bottom", showCharsTyped: !0, validate: !1}, d);
        return this.each(function () {
            var b = e(this), c = k(b), a = e("<span></span>").css({display: "none", position: "absolute", whiteSpace: "nowrap", zIndex: 1099}).html(q(c, "0"));
            b.is("textarea") && (b.data("maxlenghtsizex", b.outerWidth()), b.data("maxlenghtsizey", b.outerHeight()), b.mouseup(function () {
                b.outerWidth() === b.data("maxlenghtsizex") && b.outerHeight() === b.data("maxlenghtsizey") ||
                m(b, a);
                b.data("maxlenghtsizex", b.outerWidth());
                b.data("maxlenghtsizey", b.outerHeight())
            }));
            s.append(a);
            b.focus(function () {
                var d;
                d = k(b) - l(b);
                r(d, b, c, a);
                m(b, a)
            });
            e(window).resize(function () {
                m(b, a)
            });
            b.blur(function () {
                a.css("display", "none")
            });
            b.keyup(function (f) {
                var g;
                g = k(b) - l(b);
                var e = !0, h = f.keyCode || f.which;
                0 !== g || (9 !== h || f.shiftKey) || b.attr("maxlength", k(b) + 1).trigger({type: "keypress", which: 9}).attr("maxlength", k(b) - 1);
                d.validate && 0 > g ? e = !1 : r(g, b, c, a);
                return e
            })
        })
    }})
})(jQuery);
/*jshint undef: true, unused:true */
/*global jQuery: true */

/*!=========================================================================
 *  Bootstrap TouchSpin
 *  v1.3.1
 *
 *  A mobile and touch friendly input spinner component for Bootstrap 3.
 *
 *      https://github.com/istvan-meszaros/bootstrap-touchspin
 *      http://www.virtuosoft.eu/code/bootstrap-touchspin/
 *
 *  Copyright 2013 István Ujj-Mészáros
 *
 *  Thanks for the contributors:
 *      Stefan Bauer - https://github.com/sba
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * ====================================================================== */

(function ($) {
    "use strict";

    $.fn.TouchSpin = function (options) {

        return this.each(function () {

            var settings,
                originalinput = $(this),
                container,
                elements, // added by keenthemes to set fixed input groups
                value,
                downSpinTimer,
                upSpinTimer,
                downDelayTimeout,
                upDelayTimeout,
                spincount = 0,
                spinning = false;

            init();

            function init() {
                if (originalinput.data("alreadyinitialized")) {
                    return;
                }

                originalinput.data("alreadyinitialized", true);

                if (!originalinput.is("input")) {
                    console.log("Must be an input.");
                    return;
                }

                _initSettings();
                _checkValue();
                _buildHtml();
                _initElements();
                _bindEvents();
                _bindEventsInterface();
            }

            function _initSettings() {
                settings = $.extend({
                    min: 0,
                    max: 100,
                    step: 1,
                    decimals: 0,
                    stepinterval: 100,
                    stepintervaldelay: 500,
                    prefix: "",
                    postfix: "",
                    booster: true,
                    boostat: 10,
                    maxboostedstep: false,
                    mousewheel: true
                }, options);
            }

            function _buildHtml() {
                originalinput.data("initvalue", originalinput.val()).val(Number(originalinput.val()).toFixed(settings.decimals));

                var html = '<div class="input-group bootstrap-touchspin ' + (settings.inputGroupClass ? settings.inputGroupClass : '') + '" style=""><span class="input-group-btn"><button class="btn ' + (settings.spinDownClass ? settings.spinDownClass : 'btn-default') + ' bootstrap-touchspin-down" type="button">-</button></span><span class="input-group-addon bootstrap-touchspin-prefix">' + settings.prefix + '</span><span class="input-group-addon bootstrap-touchspin-postfix">' + settings.postfix + '</span><span class="input-group-btn"><button class="btn ' + (settings.spinDownClass ? settings.spinDownClass : 'btn-default') + ' bootstrap-touchspin-up" type="button">+</button></span></div>';

                container = $(html).insertBefore(originalinput);

                $(".bootstrap-touchspin-prefix", container).after(originalinput);

                $("<style type='text/css'>.bootstrap-touchspin-prefix:empty,.bootstrap-touchspin-postfix:empty{display:none;}</style>").appendTo("head");

                originalinput.addClass("form-control");
            }

            function _initElements() {
                elements = {
                    down: $(".bootstrap-touchspin-down", container),
                    up: $(".bootstrap-touchspin-up", container),
                    input: $("input", container),
                    prefix: $(".bootstrap-touchspin-prefix", container),
                    postfix: $(".bootstrap-touchspin-postfix", container)
                };
            }

            function _bindEvents() {
                originalinput.on("keydown", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 38) {
                        if (spinning !== "up") {
                            upOnce();
                            startUpSpin();
                        }
                        ev.preventDefault();
                    }
                    else if (code === 40) {
                        if (spinning !== "down") {
                            downOnce();
                            startDownSpin();
                        }
                        ev.preventDefault();
                    }
                });

                originalinput.on("keyup", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 38) {
                        stopSpin();
                    }
                    else if (code === 40) {
                        stopSpin();
                    }
                    else {
                        _checkValue();
                    }
                });

                elements.down.on("keydown", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 32 || code === 13) {
                        if (spinning !== "down") {
                            downOnce();
                            startDownSpin();
                        }
                        ev.preventDefault();
                    }
                });

                elements.down.on("keyup", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 32 || code === 13) {
                        stopSpin();
                    }
                });

                elements.up.on("keydown", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 32 || code === 13) {
                        if (spinning !== "up") {
                            upOnce();
                            startUpSpin();
                        }
                        ev.preventDefault();
                    }
                });

                elements.up.on("keyup", function (ev) {
                    var code = ev.keyCode || ev.which;

                    if (code === 32 || code === 13) {
                        stopSpin();
                    }
                });

                elements.down.on("mousedown touchstart", function (ev) {
                    downOnce();
                    startDownSpin();

                    ev.preventDefault();
                    ev.stopPropagation();
                });

                elements.up.on("mousedown touchstart", function (ev) {
                    upOnce();
                    startUpSpin();

                    ev.preventDefault();
                    ev.stopPropagation();
                });

                elements.up.on("mouseout touchleave touchend touchcancel", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.stopPropagation();
                    stopSpin();
                });

                elements.down.on("mouseout touchleave touchend touchcancel", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.stopPropagation();
                    stopSpin();
                });

                elements.down.on("mousemove touchmove", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.stopPropagation();
                    ev.preventDefault();
                });

                elements.up.on("mousemove touchmove", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.stopPropagation();
                    ev.preventDefault();
                });

                $(document).on("mouseup touchend touchcancel", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.preventDefault();
                    stopSpin();
                });

                $(document).on("mousemove touchmove scroll scrollstart", function (ev) {
                    if (!spinning) {
                        return;
                    }

                    ev.preventDefault();
                    stopSpin();
                });

                if (settings.mousewheel) {
                    originalinput.bind("mousewheel DOMMouseScroll", function (ev) {
                        var delta = ev.originalEvent.wheelDelta || -ev.originalEvent.detail;

                        ev.stopPropagation();
                        ev.preventDefault();

                        if (delta < 0) {
                            downOnce();
                        }
                        else {
                            upOnce();
                        }
                    });
                }
            }

            function _bindEventsInterface() {
                originalinput.on('touchspin.uponce', function () {
                    stopSpin();
                    upOnce();
                });

                originalinput.on('touchspin.downonce', function () {
                    stopSpin();
                    downOnce();
                });

                originalinput.on('touchspin.startupspin', function () {
                    startUpSpin();
                });

                originalinput.on('touchspin.startdownspin', function () {
                    startDownSpin();
                });

                originalinput.on('touchspin.stopspin', function () {
                    stopSpin();
                });
            }

            function _checkValue() {
                var val, parsedval, returnval;

                val = originalinput.val();

                if (settings.decimals > 0 && val === ".") {
                    return;
                }

                parsedval = parseFloat(val);

                if (isNaN(parsedval)) {
                    parsedval = 0;
                }

                returnval = parsedval;

                if (parsedval.toString() !== val) {
                    returnval = parsedval;
                }

                if (parsedval < settings.min) {
                    returnval = settings.min;
                }

                if (parsedval > settings.max) {
                    returnval = settings.max;
                }

                if (Number(val).toString() !== returnval.toString()) {
                    originalinput.val(returnval);
                    originalinput.trigger("change");
                }
            }

            function _getBoostedStep() {
                if (!settings.booster) {
                    return settings.step;
                }
                else {
                    var boosted = Math.pow(2, Math.floor(spincount / settings.boostat)) * settings.step;

                    if (settings.maxboostedstep) {
                        if (boosted > settings.maxboostedstep) {
                            boosted = settings.maxboostedstep;
                            value = Math.round((value / boosted) * boosted);
                        }
                    }

                    return Math.max(settings.step, boosted);
                }
            }

            function upOnce() {
                value = parseFloat(elements.input.val());
                if (isNaN(value)) {
                    value = 0;
                }

                var initvalue = value,
                    boostedstep = _getBoostedStep();

                value = value + boostedstep;

                if (value > settings.max) {
                    stopSpin();
                    value = settings.max;
                    originalinput.trigger("touchspin.max");
                }

                elements.input.val(Number(value).toFixed(settings.decimals));

                if (initvalue !== value) {
                    originalinput.trigger("change");
                }
            }

            function downOnce() {
                value = parseFloat(elements.input.val());
                if (isNaN(value)) {
                    value = 0;
                }

                var initvalue = value,
                    boostedstep = _getBoostedStep();

                value = value - boostedstep;

                if (value < settings.min) {
                    stopSpin();
                    value = settings.min;
                    originalinput.trigger("touchspin.min");
                }

                elements.input.val(value.toFixed(settings.decimals));

                if (initvalue !== value) {
                    originalinput.trigger("change");
                }
            }

            function startDownSpin() {
                stopSpin();

                spincount = 0;
                spinning = "down";

                downDelayTimeout = setTimeout(function () {
                    downSpinTimer = setInterval(function () {
                        spincount++;
                        downOnce();
                    }, settings.stepinterval);
                }, settings.stepintervaldelay);
            }

            function startUpSpin() {
                stopSpin();

                spincount = 0;
                spinning = "up";

                upDelayTimeout = setTimeout(function () {
                    upSpinTimer = setInterval(function () {
                        spincount++;
                        upOnce();
                    }, settings.stepinterval);
                }, settings.stepintervaldelay);
            }

            function stopSpin() {
                clearTimeout(downDelayTimeout);
                clearTimeout(upDelayTimeout);
                clearInterval(downSpinTimer);
                clearInterval(upSpinTimer);

                spincount = 0;
                spinning = false;
            }

        });

    };

})(jQuery);
﻿/* =========================================================
 * bootstrap-datetimepicker.js
 * =========================================================
 * Copyright 2012 Stefan Petre
 * Improvements by Andrew Rowls
 * Improvements by Sébastien Malot
 * Improvements by Yun Lai
 * Improved by Keenthemes for Bootstrap 3.0 Support

 * Project URL : http://www.malot.fr/bootstrap-datetimepicker
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

!function ($) {

    function UTCDate() {
        return new Date(Date.UTC.apply(Date, arguments));
    }

    function UTCToday() {
        var today = new Date();
        return UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate(), today.getUTCHours(), today.getUTCMinutes(), today.getUTCSeconds(), 0);
    }

    // Picker object

    var Datetimepicker = function (element, options) {
        var that = this;

        this.element = $(element);
        this.language = options.language || this.element.data('date-language') || "en";
        this.language = this.language in dates ? this.language : "en";
        this.isRTL = dates[this.language].rtl || ($('body').css("direction") == 'rtl');
        this.formatType = options.formatType || this.element.data('format-type') || 'standard';
        this.format = DPGlobal.parseFormat(options.format || this.element.data('date-format') || dates[this.language].format || DPGlobal.getDefaultFormat(this.formatType, 'input'), this.formatType);
        this.isInline = false;
        this.isVisible = false;
        this.isInput = this.element.is('input');
        this.component = this.element.is('.date') ? this.element.find('.date-set').parent() : false;
        this.componentReset = this.element.is('.date') ? this.element.find('.date-reset').parent() : false;
        this.hasInput = this.component && this.element.find('input').length;
        if (this.component && this.component.length === 0) {
            this.component = false;
        }
        this.linkField = options.linkField || this.element.data('link-field') || false;
        this.linkFormat = DPGlobal.parseFormat(options.linkFormat || this.element.data('link-format') || DPGlobal.getDefaultFormat(this.formatType, 'link'), this.formatType);
        this.minuteStep = options.minuteStep || this.element.data('minute-step') || 5;
        this.pickerPosition = options.pickerPosition || this.element.data('picker-position') || 'bottom-right';
        this.showMeridian = options.showMeridian || this.element.data('show-meridian') || false;
        this.initialDate = options.initialDate || new Date();

        this._attachEvents();

        this.formatViewType = "datetime";
        if ('formatViewType' in options) {
            this.formatViewType = options.formatViewType;
        } else if ('formatViewType' in this.element.data()) {
            this.formatViewType = this.element.data('formatViewType');
        }

        this.minView = 0;
        if ('minView' in options) {
            this.minView = options.minView;
        } else if ('minView' in this.element.data()) {
            this.minView = this.element.data('min-view');
        }
        this.minView = DPGlobal.convertViewMode(this.minView);

        this.maxView = DPGlobal.modes.length - 1;
        if ('maxView' in options) {
            this.maxView = options.maxView;
        } else if ('maxView' in this.element.data()) {
            this.maxView = this.element.data('max-view');
        }
        this.maxView = DPGlobal.convertViewMode(this.maxView);

        this.wheelViewModeNavigation = false;
        if ('wheelViewModeNavigation' in options) {
            this.wheelViewModeNavigation = options.wheelViewModeNavigation;
        } else if ('wheelViewModeNavigation' in this.element.data()) {
            this.wheelViewModeNavigation = this.element.data('view-mode-wheel-navigation');
        }

        this.wheelViewModeNavigationInverseDirection = false;

        if ('wheelViewModeNavigationInverseDirection' in options) {
            this.wheelViewModeNavigationInverseDirection = options.wheelViewModeNavigationInverseDirection;
        } else if ('wheelViewModeNavigationInverseDirection' in this.element.data()) {
            this.wheelViewModeNavigationInverseDirection = this.element.data('view-mode-wheel-navigation-inverse-dir');
        }

        this.wheelViewModeNavigationDelay = 100;
        if ('wheelViewModeNavigationDelay' in options) {
            this.wheelViewModeNavigationDelay = options.wheelViewModeNavigationDelay;
        } else if ('wheelViewModeNavigationDelay' in this.element.data()) {
            this.wheelViewModeNavigationDelay = this.element.data('view-mode-wheel-navigation-delay');
        }

        this.startViewMode = 2;
        if ('startView' in options) {
            this.startViewMode = options.startView;
        } else if ('startView' in this.element.data()) {
            this.startViewMode = this.element.data('start-view');
        }
        this.startViewMode = DPGlobal.convertViewMode(this.startViewMode);
        this.viewMode = this.startViewMode;

        this.viewSelect = this.minView;
        if ('viewSelect' in options) {
            this.viewSelect = options.viewSelect;
        } else if ('viewSelect' in this.element.data()) {
            this.viewSelect = this.element.data('view-select');
        }
        this.viewSelect = DPGlobal.convertViewMode(this.viewSelect);

        this.forceParse = true;
        if ('forceParse' in options) {
            this.forceParse = options.forceParse;
        } else if ('dateForceParse' in this.element.data()) {
            this.forceParse = this.element.data('date-force-parse');
        }

        this.picker = $(DPGlobal.template)
            .appendTo(this.isInline ? this.element : 'body')
            .on({
                click: $.proxy(this.click, this),
                mousedown: $.proxy(this.mousedown, this)
            });

        if (this.wheelViewModeNavigation) {
            if ($.fn.mousewheel) {
                this.picker.on({mousewheel: $.proxy(this.mousewheel, this)});
            } else {
                console.log("Mouse Wheel event is not supported. Please include the jQuery Mouse Wheel plugin before enabling this option");
            }
        }

        if (this.isInline) {
            this.picker.addClass('datetimepicker-inline');
        } else {
            this.picker.addClass('datetimepicker-dropdown-' + this.pickerPosition + ' dropdown-menu');
        }
        if (this.isRTL) {
            this.picker.addClass('datetimepicker-rtl');
            this.picker.find('.prev i, .next i')
                .toggleClass('fa-arrow-left fa-arrow-right');
        }
        $(document).on('mousedown', function (e) {
            // Clicked outside the datetimepicker, hide it
            if ($(e.target).closest('.datetimepicker').length === 0) {
                that.hide();
            }
        });

        this.autoclose = false;
        if ('autoclose' in options) {
            this.autoclose = options.autoclose;
        } else if ('dateAutoclose' in this.element.data()) {
            this.autoclose = this.element.data('date-autoclose');
        }

        this.keyboardNavigation = true;
        if ('keyboardNavigation' in options) {
            this.keyboardNavigation = options.keyboardNavigation;
        } else if ('dateKeyboardNavigation' in this.element.data()) {
            this.keyboardNavigation = this.element.data('date-keyboard-navigation');
        }

        this.todayBtn = (options.todayBtn || this.element.data('date-today-btn') || false);
        this.todayHighlight = (options.todayHighlight || this.element.data('date-today-highlight') || false);

        this.weekStart = ((options.weekStart || this.element.data('date-weekstart') || dates[this.language].weekStart || 0) % 7);
        this.weekEnd = ((this.weekStart + 6) % 7);
        this.startDate = -Infinity;
        this.endDate = Infinity;
        this.daysOfWeekDisabled = [];
        this.setStartDate(options.startDate || this.element.data('date-startdate'));
        this.setEndDate(options.endDate || this.element.data('date-enddate'));
        this.setDaysOfWeekDisabled(options.daysOfWeekDisabled || this.element.data('date-days-of-week-disabled'));
        this.fillDow();
        this.fillMonths();
        this.update();
        this.showMode();

        if (this.isInline) {
            this.show();
        }
    };

    Datetimepicker.prototype = {
        constructor: Datetimepicker,

        _events: [],
        _attachEvents: function () {
            this._detachEvents();
            if (this.isInput) { // single input
                this._events = [
                    [this.element, {
                        focus: $.proxy(this.show, this),
                        keyup: $.proxy(this.update, this),
                        keydown: $.proxy(this.keydown, this)
                    }]
                ];
            }
            else if (this.component && this.hasInput) { // component: input + button
                this._events = [
                    // For components that are not readonly, allow keyboard nav
                    [this.element.find('input'), {
                        focus: $.proxy(this.show, this),
                        keyup: $.proxy(this.update, this),
                        keydown: $.proxy(this.keydown, this)
                    }],
                    [this.component, {
                        click: $.proxy(this.show, this)
                    }]
                ];
                if (this.componentReset) {
                    this._events.push([
                        this.componentReset,
                        {click: $.proxy(this.reset, this)}
                    ]);
                }
            }
            else if (this.element.is('div')) {  // inline datetimepicker
                this.isInline = true;
            }
            else {
                this._events = [
                    [this.element, {
                        click: $.proxy(this.show, this)
                    }]
                ];
            }
            for (var i = 0, el, ev; i < this._events.length; i++) {
                el = this._events[i][0];
                ev = this._events[i][1];
                el.on(ev);
            }
        },

        _detachEvents: function () {
            for (var i = 0, el, ev; i < this._events.length; i++) {
                el = this._events[i][0];
                ev = this._events[i][1];
                el.off(ev);
            }
            this._events = [];
        },

        show: function (e) {
            this.picker.show();
            this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
            if (this.forceParse) {
                this.update();
            }
            this.place();
            $(window).on('resize', $.proxy(this.place, this));
            if (e) {
                e.stopPropagation();
                e.preventDefault();
            }
            this.isVisible = true;
            this.element.trigger({
                type: 'show',
                date: this.date
            });
        },

        hide: function (e) {
            if (!this.isVisible) return;
            if (this.isInline) return;
            this.picker.hide();
            $(window).off('resize', this.place);
            this.viewMode = this.startViewMode;
            this.showMode();
            if (!this.isInput) {
                $(document).off('mousedown', this.hide);
            }

            if (
                this.forceParse &&
                    (
                        this.isInput && this.element.val() ||
                            this.hasInput && this.element.find('input').val()
                        )
                )
                this.setValue();
            this.isVisible = false;
            this.element.trigger({
                type: 'hide',
                date: this.date
            });
        },

        remove: function () {
            this._detachEvents();
            this.picker.remove();
            delete this.picker;
            delete this.element.data().datetimepicker;
        },

        getDate: function () {
            var d = this.getUTCDate();
            return new Date(d.getTime() + (d.getTimezoneOffset() * 60000));
        },

        getUTCDate: function () {
            return this.date;
        },

        setDate: function (d) {
            this.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset() * 60000)));
        },

        setUTCDate: function (d) {
            if (d >= this.startDate && d <= this.endDate) {
                this.date = d;
                this.setValue();
                this.viewDate = this.date;
                this.fill();
            } else {
                this.element.trigger({
                    type: 'outOfRange',
                    date: d,
                    startDate: this.startDate,
                    endDate: this.endDate
                });
            }
        },

        setFormat: function (format) {
            this.format = DPGlobal.parseFormat(format, this.formatType);
            var element;
            if (this.isInput) {
                element = this.element;
            } else if (this.component) {
                element = this.element.find('input');
            }
            if (element && element.val()) {
                this.setValue();
            }
        },

        setValue: function () {
            var formatted = this.getFormattedDate();
            if (!this.isInput) {
                if (this.component) {
                    this.element.find('input').val(formatted);
                }
                this.element.data('date', formatted);
            } else {
                this.element.val(formatted);
            }
            if (this.linkField) {
                $('#' + this.linkField).val(this.getFormattedDate(this.linkFormat));
            }
        },

        getFormattedDate: function (format) {
            if (format == undefined) format = this.format;
            return DPGlobal.formatDate(this.date, format, this.language, this.formatType);
        },

        setStartDate: function (startDate) {
            this.startDate = startDate || -Infinity;
            if (this.startDate !== -Infinity) {
                this.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language, this.formatType);
            }
            this.update();
            this.updateNavArrows();
        },

        setEndDate: function (endDate) {
            this.endDate = endDate || Infinity;
            if (this.endDate !== Infinity) {
                this.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language, this.formatType);
            }
            this.update();
            this.updateNavArrows();
        },

        setDaysOfWeekDisabled: function (daysOfWeekDisabled) {
            this.daysOfWeekDisabled = daysOfWeekDisabled || [];
            if (!$.isArray(this.daysOfWeekDisabled)) {
                this.daysOfWeekDisabled = this.daysOfWeekDisabled.split(/,\s*/);
            }
            this.daysOfWeekDisabled = $.map(this.daysOfWeekDisabled, function (d) {
                return parseInt(d, 10);
            });
            this.update();
            this.updateNavArrows();
        },

        place: function () {
            if (this.isInline) return;
            var zIndex = parseInt(this.element.parents().filter(function () {
                return $(this).css('z-index') != 'auto';
            }).first().css('z-index')) + 10;
            var offset, top, left;
            if (this.component) {
                offset = this.component.offset();
                left = offset.left;
                if (this.pickerPosition == 'bottom-left' || this.pickerPosition == 'top-left') {
                    left += this.component.outerWidth() - this.picker.outerWidth();
                }
            } else {
                offset = this.element.offset();
                left = offset.left;
            }
            if (this.pickerPosition == 'top-left' || this.pickerPosition == 'top-right') {
                top = offset.top - this.picker.outerHeight();
            } else {
                top = offset.top + this.height;
            }
            this.picker.css({
                top: top,
                left: left,
                zIndex: zIndex
            });
        },

        update: function () {
            var date, fromArgs = false;
            if (arguments && arguments.length && (typeof arguments[0] === 'string' || arguments[0] instanceof Date)) {
                date = arguments[0];
                fromArgs = true;
            } else {
                date = this.element.data('date') || (this.isInput ? this.element.val() : this.element.find('input').val()) || this.initialDate;
            }

            if (!date) {
                date = new Date();
                fromArgs = false;
            }

            this.date = DPGlobal.parseDate(date, this.format, this.language, this.formatType);

            if (fromArgs) this.setValue();

            if (this.date < this.startDate) {
                this.viewDate = new Date(this.startDate);
            } else if (this.date > this.endDate) {
                this.viewDate = new Date(this.endDate);
            } else {
                this.viewDate = new Date(this.date);
            }
            this.fill();
        },

        fillDow: function () {
            var dowCnt = this.weekStart,
                html = '<tr>';
            while (dowCnt < this.weekStart + 7) {
                html += '<th class="dow">' + dates[this.language].daysMin[(dowCnt++) % 7] + '</th>';
            }
            html += '</tr>';
            this.picker.find('.datetimepicker-days thead').append(html);
        },

        fillMonths: function () {
            var html = '',
                i = 0;
            while (i < 12) {
                html += '<span class="month">' + dates[this.language].monthsShort[i++] + '</span>';
            }
            this.picker.find('.datetimepicker-months td').html(html);
        },

        fill: function () {
            if (this.date == null || this.viewDate == null) {
                return;
            }
            var d = new Date(this.viewDate),
                year = d.getUTCFullYear(),
                month = d.getUTCMonth(),
                dayMonth = d.getUTCDate(),
                hours = d.getUTCHours(),
                minutes = d.getUTCMinutes(),
                startYear = this.startDate !== -Infinity ? this.startDate.getUTCFullYear() : -Infinity,
                startMonth = this.startDate !== -Infinity ? this.startDate.getUTCMonth() : -Infinity,
                endYear = this.endDate !== Infinity ? this.endDate.getUTCFullYear() : Infinity,
                endMonth = this.endDate !== Infinity ? this.endDate.getUTCMonth() : Infinity,
                currentDate = (new UTCDate(this.date.getUTCFullYear(), this.date.getUTCMonth(), this.date.getUTCDate())).valueOf(),
                today = new Date();
            this.picker.find('.datetimepicker-days thead th:eq(1)')
                .text(dates[this.language].months[month] + ' ' + year);
            if (this.formatViewType == "time") {
                var hourConverted = hours % 12 ? hours % 12 : 12;
                var hoursDisplay = (hourConverted < 10 ? '0' : '') + hourConverted;
                var minutesDisplay = (minutes < 10 ? '0' : '') + minutes;
                var meridianDisplay = dates[this.language].meridiem[hours < 12 ? 0 : 1];
                this.picker.find('.datetimepicker-hours thead th:eq(1)')
                    .text(hoursDisplay + ':' + minutesDisplay + ' ' + meridianDisplay.toUpperCase());
                this.picker.find('.datetimepicker-minutes thead th:eq(1)')
                    .text(hoursDisplay + ':' + minutesDisplay + ' ' + meridianDisplay.toUpperCase());
            } else {
                this.picker.find('.datetimepicker-hours thead th:eq(1)')
                    .text(dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);
                this.picker.find('.datetimepicker-minutes thead th:eq(1)')
                    .text(dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);
            }
            this.picker.find('tfoot th.today')
                .text(dates[this.language].today)
                .toggle(this.todayBtn !== false);
            this.updateNavArrows();
            this.fillMonths();
            /*var prevMonth = UTCDate(year, month, 0,0,0,0,0);
             prevMonth.setUTCDate(prevMonth.getDate() - (prevMonth.getUTCDay() - this.weekStart + 7)%7);*/
            var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),
                day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
            prevMonth.setUTCDate(day);
            prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);
            var nextMonth = new Date(prevMonth);
            nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
            nextMonth = nextMonth.valueOf();
            var html = [];
            var clsName;
            while (prevMonth.valueOf() < nextMonth) {
                if (prevMonth.getUTCDay() == this.weekStart) {
                    html.push('<tr>');
                }
                clsName = '';
                if (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month)) {
                    clsName += ' old';
                } else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month)) {
                    clsName += ' new';
                }
                // Compare internal UTC date with local today, not UTC today
                if (this.todayHighlight &&
                    prevMonth.getUTCFullYear() == today.getFullYear() &&
                    prevMonth.getUTCMonth() == today.getMonth() &&
                    prevMonth.getUTCDate() == today.getDate()) {
                    clsName += ' today';
                }
                if (prevMonth.valueOf() == currentDate) {
                    clsName += ' active';
                }
                if ((prevMonth.valueOf() + 86400000) <= this.startDate || prevMonth.valueOf() > this.endDate ||
                    $.inArray(prevMonth.getUTCDay(), this.daysOfWeekDisabled) !== -1) {
                    clsName += ' disabled';
                }
                html.push('<td class="day' + clsName + '">' + prevMonth.getUTCDate() + '</td>');
                if (prevMonth.getUTCDay() == this.weekEnd) {
                    html.push('</tr>');
                }
                prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
            }
            this.picker.find('.datetimepicker-days tbody').empty().append(html.join(''));

            html = [];
            var txt = '', meridian = '', meridianOld = '';
            for (var i = 0; i < 24; i++) {
                var actual = UTCDate(year, month, dayMonth, i);
                clsName = '';
                // We want the previous hour for the startDate
                if ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate) {
                    clsName += ' disabled';
                } else if (hours == i) {
                    clsName += ' active';
                }
                if (this.showMeridian && dates[this.language].meridiem.length == 2) {
                    meridian = (i < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);
                    if (meridian != meridianOld) {
                        if (meridianOld != '') {
                            html.push('</fieldset>');
                        }
                        html.push('<fieldset class="hour"><legend>' + meridian.toUpperCase() + '</legend>');
                    }
                    meridianOld = meridian;
                    txt = (i % 12 ? i % 12 : 12);
                    html.push('<span class="hour' + clsName + ' hour_' + (i < 12 ? 'am' : 'pm') + '">' + txt + '</span>');
                    if (i == 23) {
                        html.push('</fieldset>');
                    }
                } else {
                    txt = i + ':00';
                    html.push('<span class="hour' + clsName + '">' + txt + '</span>');
                }
            }
            this.picker.find('.datetimepicker-hours td').html(html.join(''));

            html = [];
            txt = '', meridian = '', meridianOld = '';
            for (var i = 0; i < 60; i += this.minuteStep) {
                var actual = UTCDate(year, month, dayMonth, hours, i, 0);
                clsName = '';
                if (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate) {
                    clsName += ' disabled';
                } else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {
                    clsName += ' active';
                }
                if (this.showMeridian && dates[this.language].meridiem.length == 2) {
                    meridian = (hours < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);
                    if (meridian != meridianOld) {
                        if (meridianOld != '') {
                            html.push('</fieldset>');
                        }
                        html.push('<fieldset class="minute"><legend>' + meridian.toUpperCase() + '</legend>');
                    }
                    meridianOld = meridian;
                    txt = (hours % 12 ? hours % 12 : 12);
                    //html.push('<span class="minute'+clsName+' minute_'+(hours<12?'am':'pm')+'">'+txt+'</span>');
                    html.push('<span class="minute' + clsName + '">' + txt + ':' + (i < 10 ? '0' + i : i) + '</span>');
                    if (i == 59) {
                        html.push('</fieldset>');
                    }
                } else {
                    txt = i + ':00';
                    //html.push('<span class="hour'+clsName+'">'+txt+'</span>');
                    html.push('<span class="minute' + clsName + '">' + hours + ':' + (i < 10 ? '0' + i : i) + '</span>');
                }
            }
            this.picker.find('.datetimepicker-minutes td').html(html.join(''));

            var currentYear = this.date.getUTCFullYear();
            var months = this.picker.find('.datetimepicker-months')
                .find('th:eq(1)')
                .text(year)
                .end()
                .find('span').removeClass('active');
            if (currentYear == year) {
                months.eq(this.date.getUTCMonth()).addClass('active');
            }
            if (year < startYear || year > endYear) {
                months.addClass('disabled');
            }
            if (year == startYear) {
                months.slice(0, startMonth).addClass('disabled');
            }
            if (year == endYear) {
                months.slice(endMonth + 1).addClass('disabled');
            }

            html = '';
            year = parseInt(year / 10, 10) * 10;
            var yearCont = this.picker.find('.datetimepicker-years')
                .find('th:eq(1)')
                .text(year + '-' + (year + 9))
                .end()
                .find('td');
            year -= 1;
            for (var i = -1; i < 11; i++) {
                html += '<span class="year' + (i == -1 || i == 10 ? ' old' : '') + (currentYear == year ? ' active' : '') + (year < startYear || year > endYear ? ' disabled' : '') + '">' + year + '</span>';
                year += 1;
            }
            yearCont.html(html);
            this.place();
        },

        updateNavArrows: function () {
            var d = new Date(this.viewDate),
                year = d.getUTCFullYear(),
                month = d.getUTCMonth(),
                day = d.getUTCDate(),
                hour = d.getUTCHours();
            switch (this.viewMode) {
                case 0:
                    if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()
                        && month <= this.startDate.getUTCMonth()
                        && day <= this.startDate.getUTCDate()
                        && hour <= this.startDate.getUTCHours()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()
                        && month >= this.endDate.getUTCMonth()
                        && day >= this.endDate.getUTCDate()
                        && hour >= this.endDate.getUTCHours()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
                case 1:
                    if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()
                        && month <= this.startDate.getUTCMonth()
                        && day <= this.startDate.getUTCDate()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()
                        && month >= this.endDate.getUTCMonth()
                        && day >= this.endDate.getUTCDate()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
                case 2:
                    if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()
                        && month <= this.startDate.getUTCMonth()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()
                        && month >= this.endDate.getUTCMonth()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
                case 3:
                case 4:
                    if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()) {
                        this.picker.find('.prev').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.prev').css({visibility: 'visible'});
                    }
                    if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()) {
                        this.picker.find('.next').css({visibility: 'hidden'});
                    } else {
                        this.picker.find('.next').css({visibility: 'visible'});
                    }
                    break;
            }
        },

        mousewheel: function (e) {

            e.preventDefault();
            e.stopPropagation();

            if (this.wheelPause) {
                return;
            }

            this.wheelPause = true;

            var originalEvent = e.originalEvent;

            var delta = originalEvent.wheelDelta;

            var mode = delta > 0 ? 1 : (delta === 0) ? 0 : -1;

            if (this.wheelViewModeNavigationInverseDirection) {
                mode = -mode;
            }

            this.showMode(mode);

            setTimeout($.proxy(function () {

                this.wheelPause = false

            }, this), this.wheelViewModeNavigationDelay);


        },

        click: function (e) {
            e.stopPropagation();
            e.preventDefault();
            var target = $(e.target).closest('span, td, th, legend');
            if (target.length == 1) {
                if (target.is('.disabled')) {
                    this.element.trigger({
                        type: 'outOfRange',
                        date: this.viewDate,
                        startDate: this.startDate,
                        endDate: this.endDate
                    });
                    return;
                }
                switch (target[0].nodeName.toLowerCase()) {
                    case 'th':
                        switch (target[0].className) {
                            case 'switch':
                                this.showMode(1);
                                break;
                            case 'prev':
                            case 'next':
                                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == 'prev' ? -1 : 1);
                                switch (this.viewMode) {
                                    case 0:
                                        this.viewDate = this.moveHour(this.viewDate, dir);
                                        break;
                                    case 1:
                                        this.viewDate = this.moveDate(this.viewDate, dir);
                                        break;
                                    case 2:
                                        this.viewDate = this.moveMonth(this.viewDate, dir);
                                        break;
                                    case 3:
                                    case 4:
                                        this.viewDate = this.moveYear(this.viewDate, dir);
                                        break;
                                }
                                this.fill();
                                break;
                            case 'today':
                                var date = new Date();
                                date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), 0);

                                this.viewMode = this.startViewMode;
                                this.showMode(0);
                                this._setDate(date);
                                this.fill();
                                if (this.autoclose) {
                                    this.hide();
                                }
                                break;
                        }
                        break;
                    case 'span':
                        if (!target.is('.disabled')) {
                            var year = this.viewDate.getUTCFullYear(),
                                month = this.viewDate.getUTCMonth(),
                                day = this.viewDate.getUTCDate(),
                                hours = this.viewDate.getUTCHours(),
                                minutes = this.viewDate.getUTCMinutes(),
                                seconds = this.viewDate.getUTCSeconds();

                            if (target.is('.month')) {
                                this.viewDate.setUTCDate(1);
                                month = target.parent().find('span').index(target);
                                day = this.viewDate.getUTCDate();
                                this.viewDate.setUTCMonth(month);
                                this.element.trigger({
                                    type: 'changeMonth',
                                    date: this.viewDate
                                });
                                if (this.viewSelect >= 3) {
                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
                                }
                            } else if (target.is('.year')) {
                                this.viewDate.setUTCDate(1);
                                year = parseInt(target.text(), 10) || 0;
                                this.viewDate.setUTCFullYear(year);
                                this.element.trigger({
                                    type: 'changeYear',
                                    date: this.viewDate
                                });
                                if (this.viewSelect >= 4) {
                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
                                }
                            } else if (target.is('.hour')) {
                                hours = parseInt(target.text(), 10) || 0;
                                if (target.hasClass('hour_am') || target.hasClass('hour_pm')) {
                                    if (hours == 12 && target.hasClass('hour_am')) {
                                        hours = 0;
                                    } else if (hours != 12 && target.hasClass('hour_pm')) {
                                        hours += 12;
                                    }
                                }
                                this.viewDate.setUTCHours(hours);
                                this.element.trigger({
                                    type: 'changeHour',
                                    date: this.viewDate
                                });
                                if (this.viewSelect >= 1) {
                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
                                }
                            } else if (target.is('.minute')) {
                                minutes = parseInt(target.text().substr(target.text().indexOf(':') + 1), 10) || 0;
                                this.viewDate.setUTCMinutes(minutes);
                                this.element.trigger({
                                    type: 'changeMinute',
                                    date: this.viewDate
                                });
                                if (this.viewSelect >= 0) {
                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
                                }
                            }
                            if (this.viewMode != 0) {
                                var oldViewMode = this.viewMode;
                                this.showMode(-1);
                                this.fill();
                                if (oldViewMode == this.viewMode && this.autoclose) {
                                    this.hide();
                                }
                            } else {
                                this.fill();
                                if (this.autoclose) {
                                    this.hide();
                                }
                            }
                        }
                        break;
                    case 'td':
                        if (target.is('.day') && !target.is('.disabled')) {
                            var day = parseInt(target.text(), 10) || 1;
                            var year = this.viewDate.getUTCFullYear(),
                                month = this.viewDate.getUTCMonth(),
                                hours = this.viewDate.getUTCHours(),
                                minutes = this.viewDate.getUTCMinutes(),
                                seconds = this.viewDate.getUTCSeconds();
                            if (target.is('.old')) {
                                if (month === 0) {
                                    month = 11;
                                    year -= 1;
                                } else {
                                    month -= 1;
                                }
                            } else if (target.is('.new')) {
                                if (month == 11) {
                                    month = 0;
                                    year += 1;
                                } else {
                                    month += 1;
                                }
                            }
                            this.viewDate.setUTCFullYear(year);
                            this.viewDate.setUTCMonth(month);
                            this.viewDate.setUTCDate(day);
                            this.element.trigger({
                                type: 'changeDay',
                                date: this.viewDate
                            });
                            if (this.viewSelect >= 2) {
                                this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
                            }
                        }
                        var oldViewMode = this.viewMode;
                        this.showMode(-1);
                        this.fill();
                        if (oldViewMode == this.viewMode && this.autoclose) {
                            this.hide();
                        }
                        break;
                }
            }
        },

        _setDate: function (date, which) {
            if (!which || which == 'date')
                this.date = date;
            if (!which || which == 'view')
                this.viewDate = date;
            this.fill();
            this.setValue();
            var element;
            if (this.isInput) {
                element = this.element;
            } else if (this.component) {
                element = this.element.find('input');
            }
            if (element) {
                element.change();
                if (this.autoclose && (!which || which == 'date')) {
                    //this.hide();
                }
            }
            this.element.trigger({
                type: 'changeDate',
                date: this.date
            });
        },

        moveMinute: function (date, dir) {
            if (!dir) return date;
            var new_date = new Date(date.valueOf());
            //dir = dir > 0 ? 1 : -1;
            new_date.setUTCMinutes(new_date.getUTCMinutes() + (dir * this.minuteStep));
            return new_date;
        },

        moveHour: function (date, dir) {
            if (!dir) return date;
            var new_date = new Date(date.valueOf());
            //dir = dir > 0 ? 1 : -1;
            new_date.setUTCHours(new_date.getUTCHours() + dir);
            return new_date;
        },

        moveDate: function (date, dir) {
            if (!dir) return date;
            var new_date = new Date(date.valueOf());
            //dir = dir > 0 ? 1 : -1;
            new_date.setUTCDate(new_date.getUTCDate() + dir);
            return new_date;
        },

        moveMonth: function (date, dir) {
            if (!dir) return date;
            var new_date = new Date(date.valueOf()),
                day = new_date.getUTCDate(),
                month = new_date.getUTCMonth(),
                mag = Math.abs(dir),
                new_month, test;
            dir = dir > 0 ? 1 : -1;
            if (mag == 1) {
                test = dir == -1
                    // If going back one month, make sure month is not current month
                    // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
                    ? function () {
                    return new_date.getUTCMonth() == month;
                }
                    // If going forward one month, make sure month is as expected
                    // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
                    : function () {
                    return new_date.getUTCMonth() != new_month;
                };
                new_month = month + dir;
                new_date.setUTCMonth(new_month);
                // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
                if (new_month < 0 || new_month > 11)
                    new_month = (new_month + 12) % 12;
            } else {
                // For magnitudes >1, move one month at a time...
                for (var i = 0; i < mag; i++)
                    // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
                    new_date = this.moveMonth(new_date, dir);
                // ...then reset the day, keeping it in the new month
                new_month = new_date.getUTCMonth();
                new_date.setUTCDate(day);
                test = function () {
                    return new_month != new_date.getUTCMonth();
                };
            }
            // Common date-resetting loop -- if date is beyond end of month, make it
            // end of month
            while (test()) {
                new_date.setUTCDate(--day);
                new_date.setUTCMonth(new_month);
            }
            return new_date;
        },

        moveYear: function (date, dir) {
            return this.moveMonth(date, dir * 12);
        },

        dateWithinRange: function (date) {
            return date >= this.startDate && date <= this.endDate;
        },

        keydown: function (e) {
            if (this.picker.is(':not(:visible)')) {
                if (e.keyCode == 27) // allow escape to hide and re-show picker
                    this.show();
                return;
            }
            var dateChanged = false,
                dir, day, month,
                newDate, newViewDate;
            switch (e.keyCode) {
                case 27: // escape
                    this.hide();
                    e.preventDefault();
                    break;
                case 37: // left
                case 39: // right
                    if (!this.keyboardNavigation) break;
                    dir = e.keyCode == 37 ? -1 : 1;
                    viewMode = this.viewMode;
                    if (e.ctrlKey) {
                        viewMode += 2;
                    } else if (e.shiftKey) {
                        viewMode += 1;
                    }
                    if (viewMode == 4) {
                        newDate = this.moveYear(this.date, dir);
                        newViewDate = this.moveYear(this.viewDate, dir);
                    } else if (viewMode == 3) {
                        newDate = this.moveMonth(this.date, dir);
                        newViewDate = this.moveMonth(this.viewDate, dir);
                    } else if (viewMode == 2) {
                        newDate = this.moveDate(this.date, dir);
                        newViewDate = this.moveDate(this.viewDate, dir);
                    } else if (viewMode == 1) {
                        newDate = this.moveHour(this.date, dir);
                        newViewDate = this.moveHour(this.viewDate, dir);
                    } else if (viewMode == 0) {
                        newDate = this.moveMinute(this.date, dir);
                        newViewDate = this.moveMinute(this.viewDate, dir);
                    }
                    if (this.dateWithinRange(newDate)) {
                        this.date = newDate;
                        this.viewDate = newViewDate;
                        this.setValue();
                        this.update();
                        e.preventDefault();
                        dateChanged = true;
                    }
                    break;
                case 38: // up
                case 40: // down
                    if (!this.keyboardNavigation) break;
                    dir = e.keyCode == 38 ? -1 : 1;
                    viewMode = this.viewMode;
                    if (e.ctrlKey) {
                        viewMode += 2;
                    } else if (e.shiftKey) {
                        viewMode += 1;
                    }
                    if (viewMode == 4) {
                        newDate = this.moveYear(this.date, dir);
                        newViewDate = this.moveYear(this.viewDate, dir);
                    } else if (viewMode == 3) {
                        newDate = this.moveMonth(this.date, dir);
                        newViewDate = this.moveMonth(this.viewDate, dir);
                    } else if (viewMode == 2) {
                        newDate = this.moveDate(this.date, dir * 7);
                        newViewDate = this.moveDate(this.viewDate, dir * 7);
                    } else if (viewMode == 1) {
                        if (this.showMeridian) {
                            newDate = this.moveHour(this.date, dir * 6);
                            newViewDate = this.moveHour(this.viewDate, dir * 6);
                        } else {
                            newDate = this.moveHour(this.date, dir * 4);
                            newViewDate = this.moveHour(this.viewDate, dir * 4);
                        }
                    } else if (viewMode == 0) {
                        newDate = this.moveMinute(this.date, dir * 4);
                        newViewDate = this.moveMinute(this.viewDate, dir * 4);
                    }
                    if (this.dateWithinRange(newDate)) {
                        this.date = newDate;
                        this.viewDate = newViewDate;
                        this.setValue();
                        this.update();
                        e.preventDefault();
                        dateChanged = true;
                    }
                    break;
                case 13: // enter
                    if (this.viewMode != 0) {
                        var oldViewMode = this.viewMode;
                        this.showMode(-1);
                        this.fill();
                        if (oldViewMode == this.viewMode && this.autoclose) {
                            this.hide();
                        }
                    } else {
                        this.fill();
                        if (this.autoclose) {
                            this.hide();
                        }
                    }
                    e.preventDefault();
                    break;
                case 9: // tab
                    this.hide();
                    break;
            }
            if (dateChanged) {
                var element;
                if (this.isInput) {
                    element = this.element;
                } else if (this.component) {
                    element = this.element.find('input');
                }
                if (element) {
                    element.change();
                }
                this.element.trigger({
                    type: 'changeDate',
                    date: this.date
                });
            }
        },

        showMode: function (dir) {
            if (dir) {
                var newViewMode = Math.max(0, Math.min(DPGlobal.modes.length - 1, this.viewMode + dir));
                if (newViewMode >= this.minView && newViewMode <= this.maxView) {
                    this.element.trigger({
                        type: 'changeMode',
                        date: this.viewDate,
                        oldViewMode: this.viewMode,
                        newViewMode: newViewMode
                    });

                    this.viewMode = newViewMode;
                }
            }
            /*
             vitalets: fixing bug of very special conditions:
             jquery 1.7.1 + webkit + show inline datetimepicker in bootstrap popover.
             Method show() does not set display css correctly and datetimepicker is not shown.
             Changed to .css('display', 'block') solve the problem.
             See https://github.com/vitalets/x-editable/issues/37

             In jquery 1.7.2+ everything works fine.
             */
            //this.picker.find('>div').hide().filter('.datetimepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
            this.picker.find('>div').hide().filter('.datetimepicker-' + DPGlobal.modes[this.viewMode].clsName).css('display', 'block');
            this.updateNavArrows();
        },

        reset: function (e) {
            this._setDate(null, 'date');
        }
    };

    $.fn.datetimepicker = function (option) {
        var args = Array.apply(null, arguments);
        args.shift();
        return this.each(function () {
            var $this = $(this),
                data = $this.data('datetimepicker'),
                options = typeof option == 'object' && option;
            if (!data) {
                $this.data('datetimepicker', (data = new Datetimepicker(this, $.extend({}, $.fn.datetimepicker.defaults, options))));
            }
            if (typeof option == 'string' && typeof data[option] == 'function') {
                data[option].apply(data, args);
            }
        });
    };

    $.fn.datetimepicker.defaults = {
    };
    $.fn.datetimepicker.Constructor = Datetimepicker;
    var dates = $.fn.datetimepicker.dates = {
        en: {
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
            daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            meridiem: ["am", "pm"],
            suffix: ["st", "nd", "rd", "th"],
            today: "Today"
        }
    };

    var DPGlobal = {
        modes: [
            {
                clsName: 'minutes',
                navFnc: 'Hours',
                navStep: 1
            },
            {
                clsName: 'hours',
                navFnc: 'Date',
                navStep: 1
            },
            {
                clsName: 'days',
                navFnc: 'Month',
                navStep: 1
            },
            {
                clsName: 'months',
                navFnc: 'FullYear',
                navStep: 1
            },
            {
                clsName: 'years',
                navFnc: 'FullYear',
                navStep: 10
            }
        ],
        isLeapYear: function (year) {
            return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))
        },
        getDaysInMonth: function (year, month) {
            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
        },
        getDefaultFormat: function (type, field) {
            if (type == "standard") {
                if (field == 'input')
                    return 'yyyy-mm-dd hh:ii';
                else
                    return 'yyyy-mm-dd hh:ii:ss';
            } else if (type == "php") {
                if (field == 'input')
                    return 'Y-m-d H:i';
                else
                    return 'Y-m-d H:i:s';
            } else {
                throw new Error("Invalid format type.");
            }
        },
        validParts: function (type) {
            if (type == "standard") {
                return /hh?|HH?|p|P|ii?|ss?|dd?|DD?|mm?|MM?|yy(?:yy)?/g;
            } else if (type == "php") {
                return /[dDjlNwzFmMnStyYaABgGhHis]/g;
            } else {
                throw new Error("Invalid format type.");
            }
        },
        nonpunctuation: /[^ -\/:-@\[-`{-~\t\n\rTZ]+/g,
        parseFormat: function (format, type) {
            // IE treats \0 as a string end in inputs (truncating the value),
            // so it's a bad format delimiter, anyway
            var separators = format.replace(this.validParts(type), '\0').split('\0'),
                parts = format.match(this.validParts(type));
            if (!separators || !separators.length || !parts || parts.length == 0) {
                throw new Error("Invalid date format.");
            }
            return {separators: separators, parts: parts};
        },
        parseDate: function (date, format, language, type) {
            if (date instanceof Date) {
                var dateUTC = new Date(date.valueOf() - date.getTimezoneOffset() * 60000);
                dateUTC.setMilliseconds(0);
                return dateUTC;
            }
            if (/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(date)) {
                format = this.parseFormat('yyyy-mm-dd', type);
            }
            if (/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}$/.test(date)) {
                format = this.parseFormat('yyyy-mm-dd hh:ii', type);
            }
            if (/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}\:\d{1,2}[Z]{0,1}$/.test(date)) {
                format = this.parseFormat('yyyy-mm-dd hh:ii:ss', type);
            }
            if (/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(date)) {
                var part_re = /([-+]\d+)([dmwy])/,
                    parts = date.match(/([-+]\d+)([dmwy])/g),
                    part, dir;
                date = new Date();
                for (var i = 0; i < parts.length; i++) {
                    part = part_re.exec(parts[i]);
                    dir = parseInt(part[1]);
                    switch (part[2]) {
                        case 'd':
                            date.setUTCDate(date.getUTCDate() + dir);
                            break;
                        case 'm':
                            date = Datetimepicker.prototype.moveMonth.call(Datetimepicker.prototype, date, dir);
                            break;
                        case 'w':
                            date.setUTCDate(date.getUTCDate() + dir * 7);
                            break;
                        case 'y':
                            date = Datetimepicker.prototype.moveYear.call(Datetimepicker.prototype, date, dir);
                            break;
                    }
                }
                return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), 0);
            }
            var parts = date && date.match(this.nonpunctuation) || [],
                date = new Date(0, 0, 0, 0, 0, 0, 0),
                parsed = {},
                setters_order = ['hh', 'h', 'ii', 'i', 'ss', 's', 'yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'D', 'DD', 'd', 'dd', 'H', 'HH', 'p', 'P'],
                setters_map = {
                    hh: function (d, v) {
                        return d.setUTCHours(v);
                    },
                    h: function (d, v) {
                        return d.setUTCHours(v);
                    },
                    HH: function (d, v) {
                        return d.setUTCHours(v == 12 ? 0 : v);
                    },
                    H: function (d, v) {
                        return d.setUTCHours(v == 12 ? 0 : v);
                    },
                    ii: function (d, v) {
                        return d.setUTCMinutes(v);
                    },
                    i: function (d, v) {
                        return d.setUTCMinutes(v);
                    },
                    ss: function (d, v) {
                        return d.setUTCSeconds(v);
                    },
                    s: function (d, v) {
                        return d.setUTCSeconds(v);
                    },
                    yyyy: function (d, v) {
                        return d.setUTCFullYear(v);
                    },
                    yy: function (d, v) {
                        return d.setUTCFullYear(2000 + v);
                    },
                    m: function (d, v) {
                        v -= 1;
                        while (v < 0) v += 12;
                        v %= 12;
                        d.setUTCMonth(v);
                        while (d.getUTCMonth() != v)
                            d.setUTCDate(d.getUTCDate() - 1);
                        return d;
                    },
                    d: function (d, v) {
                        return d.setUTCDate(v);
                    },
                    p: function (d, v) {
                        return d.setUTCHours(v == 1 ? d.getUTCHours() + 12 : d.getUTCHours());
                    }
                },
                val, filtered, part;
            setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
            setters_map['dd'] = setters_map['d'];
            setters_map['P'] = setters_map['p'];
            date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());
            if (parts.length == format.parts.length) {
                for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
                    val = parseInt(parts[i], 10);
                    part = format.parts[i];
                    if (isNaN(val)) {
                        switch (part) {
                            case 'MM':
                                filtered = $(dates[language].months).filter(function () {
                                    var m = this.slice(0, parts[i].length),
                                        p = parts[i].slice(0, m.length);
                                    return m == p;
                                });
                                val = $.inArray(filtered[0], dates[language].months) + 1;
                                break;
                            case 'M':
                                filtered = $(dates[language].monthsShort).filter(function () {
                                    var m = this.slice(0, parts[i].length),
                                        p = parts[i].slice(0, m.length);
                                    return m == p;
                                });
                                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
                                break;
                            case 'p':
                            case 'P':
                                val = $.inArray(parts[i].toLowerCase(), dates[language].meridiem);
                                break;
                        }
                    }
                    parsed[part] = val;
                }
                for (var i = 0, s; i < setters_order.length; i++) {
                    s = setters_order[i];
                    if (s in parsed && !isNaN(parsed[s]))
                        setters_map[s](date, parsed[s])
                }
            }
            return date;
        },
        formatDate: function (date, format, language, type) {
            if (date == null) {
                return '';
            }
            var val;
            if (type == 'standard') {
                val = {
                    // year
                    yy: date.getUTCFullYear().toString().substring(2),
                    yyyy: date.getUTCFullYear(),
                    // month
                    m: date.getUTCMonth() + 1,
                    M: dates[language].monthsShort[date.getUTCMonth()],
                    MM: dates[language].months[date.getUTCMonth()],
                    // day
                    d: date.getUTCDate(),
                    D: dates[language].daysShort[date.getUTCDay()],
                    DD: dates[language].days[date.getUTCDay()],
                    p: (dates[language].meridiem.length == 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),
                    // hour
                    h: date.getUTCHours(),
                    // minute
                    i: date.getUTCMinutes(),
                    // second
                    s: date.getUTCSeconds()
                };
                val.H = (val.h % 12 == 0 ? 12 : val.h % 12);
                val.HH = (val.H < 10 ? '0' : '') + val.H;
                val.P = val.p.toUpperCase();
                val.hh = (val.h < 10 ? '0' : '') + val.h;
                val.ii = (val.i < 10 ? '0' : '') + val.i;
                val.ss = (val.s < 10 ? '0' : '') + val.s;
                val.dd = (val.d < 10 ? '0' : '') + val.d;
                val.mm = (val.m < 10 ? '0' : '') + val.m;
            } else if (type == 'php') {
                // php format
                val = {
                    // year
                    y: date.getUTCFullYear().toString().substring(2),
                    Y: date.getUTCFullYear(),
                    // month
                    F: dates[language].months[date.getUTCMonth()],
                    M: dates[language].monthsShort[date.getUTCMonth()],
                    n: date.getUTCMonth() + 1,
                    t: DPGlobal.getDaysInMonth(date.getUTCFullYear(), date.getUTCMonth()),
                    // day
                    j: date.getUTCDate(),
                    l: dates[language].days[date.getUTCDay()],
                    D: dates[language].daysShort[date.getUTCDay()],
                    w: date.getUTCDay(), // 0 -> 6
                    N: (date.getUTCDay() == 0 ? 7 : date.getUTCDay()),       // 1 -> 7
                    S: (date.getUTCDate() % 10 <= dates[language].suffix.length ? dates[language].suffix[date.getUTCDate() % 10 - 1] : ''),
                    // hour
                    a: (dates[language].meridiem.length == 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),
                    g: (date.getUTCHours() % 12 == 0 ? 12 : date.getUTCHours() % 12),
                    G: date.getUTCHours(),
                    // minute
                    i: date.getUTCMinutes(),
                    // second
                    s: date.getUTCSeconds()
                };
                val.m = (val.n < 10 ? '0' : '') + val.n;
                val.d = (val.j < 10 ? '0' : '') + val.j;
                val.A = val.a.toString().toUpperCase();
                val.h = (val.g < 10 ? '0' : '') + val.g;
                val.H = (val.G < 10 ? '0' : '') + val.G;
                val.i = (val.i < 10 ? '0' : '') + val.i;
                val.s = (val.s < 10 ? '0' : '') + val.s;
            } else {
                throw new Error("Invalid format type.");
            }
            var date = [],
                seps = $.extend([], format.separators);
            for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
                if (seps.length)
                    date.push(seps.shift())
                date.push(val[format.parts[i]]);
            }
            return date.join('');
        },
        convertViewMode: function (viewMode) {
            switch (viewMode) {
                case 4:
                case 'decade':
                    viewMode = 4;
                    break;
                case 3:
                case 'year':
                    viewMode = 3;
                    break;
                case 2:
                case 'month':
                    viewMode = 2;
                    break;
                case 1:
                case 'day':
                    viewMode = 1;
                    break;
                case 0:
                case 'hour':
                    viewMode = 0;
                    break;
            }

            return viewMode;
        },
        headTemplate: '<thead>' +
            '<tr>' +
            '<th class="prev"><i class="fa fa-angle-left"/></th>' +
            '<th colspan="5" class="switch"></th>' +
            '<th class="next"><i class="fa fa-angle-right"/></th>' +
            '</tr>' +
            '</thead>',
        contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
        footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>'
    };
    DPGlobal.template = '<div class="datetimepicker">' +
        '<div class="datetimepicker-minutes">' +
        '<table class=" table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datetimepicker-hours">' +
        '<table class=" table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datetimepicker-days">' +
        '<table class=" table-condensed">' +
        DPGlobal.headTemplate +
        '<tbody></tbody>' +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datetimepicker-months">' +
        '<table class="table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '<div class="datetimepicker-years">' +
        '<table class="table-condensed">' +
        DPGlobal.headTemplate +
        DPGlobal.contTemplate +
        DPGlobal.footTemplate +
        '</table>' +
        '</div>' +
        '</div>';

    $.fn.datetimepicker.DPGlobal = DPGlobal;


    /* DATETIMEPICKER NO CONFLICT
     * =================== */

    $.fn.datetimepicker.noConflict = function () {
        $.fn.datetimepicker = old;
        return this;
    };


    /* DATETIMEPICKER DATA-API
     * ================== */

    $(document).on(
        'focus.datetimepicker.data-api click.datetimepicker.data-api',
        '[data-provide="datetimepicker"]',
        function (e) {
            var $this = $(this);
            if ($this.data('datetimepicker')) return;
            e.preventDefault();
            // component click requires us to explicitly show it
            $this.datetimepicker('show');
        }
    );
    $(function () {
        $('[data-provide="datetimepicker-inline"]').datetimepicker();
    });

}(window.jQuery);

var FormComponents = function () {


    var handleBootstrapTouchSpin = function () {

        $("#touchspin_demo1").TouchSpin({
            inputGroupClass: 'input-medium',
            spinUpClass: 'green',
            spinDownClass: 'green',
            min: -1000000000,
            max: 1000000000,
            stepinterval: 50,
            maxboostedstep: 10000000,
            prefix: '$'
        });

        $("#touchspin_demo2").TouchSpin({
            inputGroupClass: 'input-medium',
            spinUpClass: 'blue',
            spinDownClass: 'blue',
            min: 0,
            max: 100,
            step: 0.1,
            decimals: 2,
            boostat: 5,
            maxboostedstep: 10,
            postfix: '%'
        });
    }

    var handleBootstrapMaxlength = function () {
        $('#maxlength_defaultconfig').maxlength({
            limitReachedClass: "label label-danger",
        })

        $('#maxlength_thresholdconfig').maxlength({
            limitReachedClass: "label label-danger",
            threshold: 20
        });

        $('#maxlength_alloptions').maxlength({
            alwaysShow: true,
            warningClass: "label label-success",
            limitReachedClass: "label label-danger",
            separator: ' out of ',
            preText: 'You typed ',
            postText: ' chars available.',
            validate: true
        });

        $('#maxlength_textarea').maxlength({
            limitReachedClass: "label label-danger",
            alwaysShow: true
        });

        $('#maxlength_placement').maxlength({
            limitReachedClass: "label label-danger",
            alwaysShow: true,
            placement: App.isRTL() ? 'top-right' : 'top-left'
        });
    }

    var handleSpinners = function () {
        $('#spinner1').spinner();
        $('#spinner2').spinner({disabled: true});
        $('#spinner3').spinner({value: 0, min: 0, max: 10});
        $('#spinner4').spinner({value: 0, step: 5, min: 0, max: 200});
    }

    var handleWysihtml5 = function () {
        if (!jQuery().wysihtml5) {
            return;
        }

        if ($('.wysihtml5').size() > 0) {
            $('.wysihtml5').wysihtml5({
                "stylesheets": ["assets/plugins/bootstrap-wysihtml5/wysiwyg-color.css"]
            });
        }
    }

    var handleTagsInput = function () {
        if (!jQuery().tagsInput) {
            return;
        }
        $('#tags_1').tagsInput({
            width: 'auto',
            'onAddTag': function () {
                //alert(1);
            },
        });
        $('#tags_2').tagsInput({
            width: 300
        });
    }

    var handleDatePickers = function () {

        if (jQuery().datepicker) {
            $('.date-picker').datepicker({
                rtl: App.isRTL(),
                autoclose: true
            });
            $('body').removeClass("modal-open"); // fix bug when inline picker is used in modal
        }
    }

    var handleTimePickers = function () {

        if (jQuery().timepicker) {
            $('.timepicker-default').timepicker({
                autoclose: true
            });
            $('.timepicker-24').timepicker({
                autoclose: true,
                minuteStep: 1,
                showSeconds: true,
                showMeridian: false
            });
        }
    }

    var handleDateRangePickers = function () {
        if (!jQuery().daterangepicker) {
            return;
        }

        $('#defaultrange').daterangepicker({
                opens: (App.isRTL() ? 'left' : 'right'),
                format: 'MM/DD/YYYY',
                separator: ' to ',
                startDate: moment().subtract('days', 29),
                endDate: moment(),
                minDate: '01/01/2012',
                maxDate: '12/31/2014',
            },
            function (start, end) {
                console.log("Callback has been called!");
                $('#defaultrange input').val(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }
        );

        $('#reportrange').daterangepicker({
                opens: (App.isRTL() ? 'left' : 'right'),
                startDate: moment().subtract('days', 29),
                endDate: moment(),
                minDate: '01/01/2012',
                maxDate: '12/31/2014',
                dateLimit: {
                    days: 60
                },
                showDropdowns: true,
                showWeekNumbers: true,
                timePicker: false,
                timePickerIncrement: 1,
                timePicker12Hour: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
                    'Last 7 Days': [moment().subtract('days', 6), moment()],
                    'Last 30 Days': [moment().subtract('days', 29), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                },
                buttonClasses: ['btn'],
                applyClass: 'green',
                cancelClass: 'default',
                format: 'MM/DD/YYYY',
                separator: ' to ',
                locale: {
                    applyLabel: 'Apply',
                    fromLabel: 'From',
                    toLabel: 'To',
                    customRangeLabel: 'Custom Range',
                    daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    firstDay: 1
                }
            },
            function (start, end) {
                console.log("Callback has been called!");
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }
        );
        //Set the initial state of the picker label
        $('#reportrange span').html(moment().subtract('days', 29).format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));
    }

    var handleDatetimePicker = function () {

        $(".form_datetime").datetimepicker({
            autoclose: true,
            isRTL: App.isRTL(),
            format: "dd MM yyyy - hh:ii",
            pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left")
        });

        $(".form_advance_datetime").datetimepicker({
            isRTL: App.isRTL(),
            format: "dd MM yyyy - hh:ii",
            autoclose: true,
            todayBtn: true,
            startDate: "2013-02-14 10:00",
            pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left"),
            minuteStep: 10
        });

        $(".form_meridian_datetime").datetimepicker({
            isRTL: App.isRTL(),
            format: "dd MM yyyy - HH:ii P",
            showMeridian: true,
            autoclose: true,
            pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left"),
            todayBtn: true
        });

        $('body').removeClass("modal-open"); // fix bug when inline picker is used in modal
    }

    var handleClockfaceTimePickers = function () {

        if (!jQuery().clockface) {
            return;
        }

        $('.clockface_1').clockface();

        $('#clockface_2').clockface({
            format: 'HH:mm',
            trigger: 'manual'
        });

        $('#clockface_2_toggle').click(function (e) {
            e.stopPropagation();
            $('#clockface_2').clockface('toggle');
        });

        $('#clockface_2_modal').clockface({
            format: 'HH:mm',
            trigger: 'manual'
        });

        $('#clockface_2_modal_toggle').click(function (e) {
            e.stopPropagation();
            $('#clockface_2_modal').clockface('toggle');
        });

        $('.clockface_3').clockface({
            format: 'H:mm'
        }).clockface('show', '14:30');
    }

    var handleColorPicker = function () {
        if (!jQuery().colorpicker) {
            return;
        }
        $('.colorpicker-default').colorpicker({
            format: 'hex'
        });
        $('.colorpicker-rgba').colorpicker();
    }

    var handleSelect2 = function () {

        $('#select2_sample1').select2({
            placeholder: "Select an option",
            allowClear: true
        });

        $('#select2_sample2').select2({
            placeholder: "Select a State",
            allowClear: true
        });

        $("#select2_sample3").select2({
            placeholder: "Select...",
            allowClear: true,
            minimumInputLength: 1,
            query: function (query) {
                var data = {
                    results: []
                }, i, j, s;
                for (i = 1; i < 5; i++) {
                    s = "";
                    for (j = 0; j < i; j++) {
                        s = s + query.term;
                    }
                    data.results.push({
                        id: query.term + i,
                        text: s
                    });
                }
                query.callback(data);
            }
        });

        function format(state) {
            if (!state.id) return state.text; // optgroup
            return "<img class='flag' src='assets/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
        }

        $("#select2_sample4").select2({
            placeholder: "Select a Country",
            allowClear: true,
            formatResult: format,
            formatSelection: format,
            escapeMarkup: function (m) {
                return m;
            }
        });

        $("#select2_sample5").select2({
            tags: ["red", "green", "blue", "yellow", "pink"]
        });


        function movieFormatResult(movie) {
            var markup = "<table class='movie-result'><tr>";
            if (movie.posters !== undefined && movie.posters.thumbnail !== undefined) {
                markup += "<td valign='top'><img src='" + movie.posters.thumbnail + "'/></td>";
            }
            markup += "<td valign='top'><h5>" + movie.title + "</h5>";
            if (movie.critics_consensus !== undefined) {
                markup += "<div class='movie-synopsis'>" + movie.critics_consensus + "</div>";
            } else if (movie.synopsis !== undefined) {
                markup += "<div class='movie-synopsis'>" + movie.synopsis + "</div>";
            }
            markup += "</td></tr></table>"
            return markup;
        }

        function movieFormatSelection(movie) {
            return movie.title;
        }

        $("#select2_sample6").select2({
            placeholder: "Search for a movie",
            minimumInputLength: 1,
            ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
                url: "http://api.rottentomatoes.com/api/public/v1.0/movies.json",
                dataType: 'jsonp',
                data: function (term, page) {
                    return {
                        q: term, // search term
                        page_limit: 10,
                        apikey: "ju6z9mjyajq2djue3gbvv26t" // please do not use so this example keeps working
                    };
                },
                results: function (data, page) { // parse the results into the format expected by Select2.
                    // since we are using custom formatting functions we do not need to alter remote JSON data
                    return {
                        results: data.movies
                    };
                }
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected movie's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the movie name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("http://api.rottentomatoes.com/api/public/v1.0/movies/" + id + ".json", {
                        data: {
                            apikey: "ju6z9mjyajq2djue3gbvv26t"
                        },
                        dataType: "jsonp"
                    }).done(function (data) {
                            callback(data);
                        });
                }
            },
            formatResult: movieFormatResult, // omitted for brevity, see the source of this page
            formatSelection: movieFormatSelection, // omitted for brevity, see the source of this page
            dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
            escapeMarkup: function (m) {
                return m;
            } // we do not want to escape markup since we are displaying html in results
        });
    }

    var handleSelect2Modal = function () {

        $('#select2_sample_modal_1').select2({
            placeholder: "Select an option",
            allowClear: true
        });

        $('#select2_sample_modal_2').select2({
            placeholder: "Select a State",
            allowClear: true
        });

        $("#select2_sample_modal_3").select2({
            allowClear: true,
            minimumInputLength: 1,
            query: function (query) {
                var data = {
                    results: []
                }, i, j, s;
                for (i = 1; i < 5; i++) {
                    s = "";
                    for (j = 0; j < i; j++) {
                        s = s + query.term;
                    }
                    data.results.push({
                        id: query.term + i,
                        text: s
                    });
                }
                query.callback(data);
            }
        });

        function format(state) {
            if (!state.id) return state.text; // optgroup
            return "<img class='flag' src='assets/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
        }

        $("#select2_sample_modal_4").select2({
            allowClear: true,
            formatResult: format,
            formatSelection: format,
            escapeMarkup: function (m) {
                return m;
            }
        });

        $("#select2_sample_modal_5").select2({
            tags: ["red", "green", "blue", "yellow", "pink"]
        });


        function movieFormatResult(movie) {
            var markup = "<table class='movie-result'><tr>";
            if (movie.posters !== undefined && movie.posters.thumbnail !== undefined) {
                markup += "<td valign='top'><img src='" + movie.posters.thumbnail + "'/></td>";
            }
            markup += "<td valign='top'><h5>" + movie.title + "</h5>";
            if (movie.critics_consensus !== undefined) {
                markup += "<div class='movie-synopsis'>" + movie.critics_consensus + "</div>";
            } else if (movie.synopsis !== undefined) {
                markup += "<div class='movie-synopsis'>" + movie.synopsis + "</div>";
            }
            markup += "</td></tr></table>"
            return markup;
        }

        function movieFormatSelection(movie) {
            return movie.title;
        }

        $("#select2_sample_modal_6").select2({
            placeholder: "Search for a movie",
            minimumInputLength: 1,
            ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
                url: "http://api.rottentomatoes.com/api/public/v1.0/movies.json",
                dataType: 'jsonp',
                data: function (term, page) {
                    return {
                        q: term, // search term
                        page_limit: 10,
                        apikey: "ju6z9mjyajq2djue3gbvv26t" // please do not use so this example keeps working
                    };
                },
                results: function (data, page) { // parse the results into the format expected by Select2.
                    // since we are using custom formatting functions we do not need to alter remote JSON data
                    return {
                        results: data.movies
                    };
                }
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected movie's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the movie name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("http://api.rottentomatoes.com/api/public/v1.0/movies/" + id + ".json", {
                        data: {
                            apikey: "ju6z9mjyajq2djue3gbvv26t"
                        },
                        dataType: "jsonp"
                    }).done(function (data) {
                            callback(data);
                        });
                }
            },
            formatResult: movieFormatResult, // omitted for brevity, see the source of this page
            formatSelection: movieFormatSelection, // omitted for brevity, see the source of this page
            dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
            escapeMarkup: function (m) {
                return m;
            } // we do not want to escape markup since we are displaying html in results
        });
    }

    var handleMultiSelect = function () {
        $('#my_multi_select1').multiSelect();
        $('#my_multi_select2').multiSelect({
            selectableOptgroup: true
        });

        $('#my_multi_select3').multiSelect({
            selectableHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
            selectionHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
            afterInit: function (ms) {
                var that = this,
                    $selectableSearch = that.$selectableUl.prev(),
                    $selectionSearch = that.$selectionUl.prev(),
                    selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                    selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                    .on('keydown', function (e) {
                        if (e.which === 40) {
                            that.$selectableUl.focus();
                            return false;
                        }
                    });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                    .on('keydown', function (e) {
                        if (e.which == 40) {
                            that.$selectionUl.focus();
                            return false;
                        }
                    });
            },
            afterSelect: function () {
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function () {
                this.qs1.cache();
                this.qs2.cache();
            }
        });
    }

    var handleInputMasks = function () {
        $.extend($.inputmask.defaults, {
            'autounmask': true
        });

        $("#mask_date").inputmask("d/m/y", {
            autoUnmask: true
        }); //direct mask        
        $("#mask_date1").inputmask("d/m/y", {
            "placeholder": "*"
        }); //change the placeholder
        $("#mask_date2").inputmask("d/m/y", {
            "placeholder": "dd/mm/yyyy"
        }); //multi-char placeholder
        $("#mask_phone").inputmask("mask", {
            "mask": "(999) 999-9999"
        }); //specifying fn & options
        $("#mask_tin").inputmask({
            "mask": "99-9999999"
        }); //specifying options only
        $("#mask_number").inputmask({
            "mask": "9",
            "repeat": 10,
            "greedy": false
        }); // ~ mask "9" or mask "99" or ... mask "9999999999"
        $("#mask_decimal").inputmask('decimal', {
            rightAlignNumerics: false
        }); //disables the right alignment of the decimal input
        $("#mask_currency").inputmask('€ 999.999.999,99', {
            numericInput: true
        }); //123456  =>  € ___.__1.234,56

        $("#mask_currency2").inputmask('€ 999,999,999.99', {
            numericInput: true,
            rightAlignNumerics: false,
            greedy: false
        }); //123456  =>  € ___.__1.234,56
        $("#mask_ssn").inputmask("999-99-9999", {
            placeholder: " ",
            clearMaskOnLostFocus: true
        }); //default
    }

    var handleIPAddressInput = function () {
        $('#input_ipv4').ipAddress();
        $('#input_ipv6').ipAddress({
            v: 6
        });
    }

    var handlePasswordStrengthChecker = function () {
        var initialized = false;
        var input = $("#password_strength");

        input.keydown(function () {
            if (initialized === false) {
                // set base options
                input.pwstrength({
                    raisePower: 1.4,
                    minChar: 8,
                    verdicts: ["Weak", "Normal", "Medium", "Strong", "Very Strong"],
                    scores: [17, 26, 40, 50, 60]
                });

                // add your own rule to calculate the password strength
                input.pwstrength("addRule", "demoRule", function (options, word, score) {
                    return word.match(/[a-z].[0-9]/) && score;
                }, 10, true);

                // set as initialized 
                initialized = true;
            }
        });
    }

    var handleUsernameAvailabilityChecker1 = function () {
        var input = $("#username1_input");

        $("#username1_checker").click(function (e) {
            var pop = $(this);

            if (input.val() === "") {
                input.closest('.form-group').removeClass('has-success').addClass('has-error');

                pop.popover('destroy');
                pop.popover({
                    'placement': (App.isRTL() ? 'left' : 'right'),
                    'html': true,
                    'container': 'body',
                    'content': 'Please enter a username to check its availability.',
                });
                // add error class to the popover
                pop.data('bs.popover').tip().addClass('error');
                // set last poped popover to be closed on click(see App.js => handlePopovers function)     
                App.setLastPopedPopover(pop);
                pop.popover('show');
                e.stopPropagation(); // prevent closing the popover

                return;
            }

            var btn = $(this);

            btn.attr('disabled', true);

            input.attr("readonly", true).
                attr("disabled", true).
                addClass("spinner");

            $.post('demo/username_checker.php', {
                username: input.val()
            }, function (res) {
                btn.attr('disabled', false);

                input.attr("readonly", false).
                    attr("disabled", false).
                    removeClass("spinner");

                if (res.status == 'OK') {
                    input.closest('.form-group').removeClass('has-error').addClass('has-success');

                    pop.popover('destroy');
                    pop.popover({
                        'html': true,
                        'placement': (App.isRTL() ? 'left' : 'right'),
                        'container': 'body',
                        'content': res.message,
                    });
                    pop.popover('show');
                    pop.data('bs.popover').tip().removeClass('error').addClass('success');
                } else {
                    input.closest('.form-group').removeClass('has-success').addClass('has-error');

                    pop.popover('destroy');
                    pop.popover({
                        'html': true,
                        'placement': (App.isRTL() ? 'left' : 'right'),
                        'container': 'body',
                        'content': res.message,
                    });
                    pop.popover('show');
                    pop.data('bs.popover').tip().removeClass('success').addClass('error');
                    App.setLastPopedPopover(pop);
                }

            }, 'json');

        });
    }

    var handleUsernameAvailabilityChecker2 = function () {
        $("#username2_input").change(function () {
            var input = $(this);

            if (input.val() === "") {
                return;
            }

            input.attr("readonly", true).
                attr("disabled", true).
                addClass("spinner");

            $.post('demo/username_checker.php', {
                username: input.val()
            }, function (res) {
                input.attr("readonly", false).
                    attr("disabled", false).
                    removeClass("spinner");

                // change popover font color based on the result
                if (res.status == 'OK') {
                    input.closest('.form-group').removeClass('has-error').addClass('has-success');
                    $('.icon-exclamation-sign', input.closest('.form-group')).remove();
                    input.before('<i class="icon-ok"></i>');
                    input.data('bs.popover').tip().removeClass('error').addClass('success');
                } else {
                    input.closest('.form-group').removeClass('has-success').addClass('has-error');
                    $('.icon-ok', input.closest('.form-group')).remove();
                    input.before('<i class="icon-exclamation-sign"></i>');

                    input.popover('destroy');
                    input.popover({
                        'html': true,
                        'placement': (App.isRTL() ? 'left' : 'right'),
                        'container': 'body',
                        'content': res.message,
                    });
                    input.popover('show');
                    input.data('bs.popover').tip().removeClass('success').addClass('error');

                    App.setLastPopedPopover(input);
                }

            }, 'json');

        });
    }

    return {
        //main function to initiate the module
        init: function () {
            handleBootstrapTouchSpin();
            handleBootstrapMaxlength();
            handleSpinners();
            handleWysihtml5();
            handleTagsInput();
            handleDatePickers();
            handleTimePickers();
            handleDatetimePicker();
            handleDateRangePickers();
            handleClockfaceTimePickers();
            handleColorPicker();
            handleSelect2();
            handleSelect2Modal();
            handleInputMasks();
            handleIPAddressInput();
            handleMultiSelect();
            handlePasswordStrengthChecker();
            handleUsernameAvailabilityChecker1();
            handleUsernameAvailabilityChecker2();
        }
    };

}();